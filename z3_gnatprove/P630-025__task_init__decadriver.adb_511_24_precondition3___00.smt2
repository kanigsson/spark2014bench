(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(declare-sort rx_frame_queue_index 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x01)))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (rx_frame_queue_index rx_frame_queue_index) Bool)

(declare-const dummy1 rx_frame_queue_index)

(declare-datatypes ()
((rx_frame_queue_index__ref
 (rx_frame_queue_index__refqtmk
 (rx_frame_queue_index__content rx_frame_queue_index)))))
(define-fun rx_frame_queue_index__ref_rx_frame_queue_index__content__projection ((a rx_frame_queue_index__ref)) rx_frame_queue_index 
  (rx_frame_queue_index__content a))

(define-fun in_range2 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)

(declare-sort frame_length 0)

(declare-fun frame_lengthqtint (frame_length) Int)

;; frame_length'axiom
  (assert
  (forall ((i frame_length))
  (and (<= 0 (frame_lengthqtint i)) (<= (frame_lengthqtint i) 1024))))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (frame_length frame_length) Bool)

(declare-const dummy2 frame_length)

(declare-datatypes ()
((frame_length__ref
 (frame_length__refqtmk (frame_length__content frame_length)))))
(define-fun frame_length__ref_frame_length__content__projection ((a frame_length__ref)) frame_length 
  (frame_length__content a))

(define-fun to_rep ((x frame_length)) Int (frame_lengthqtint x))

(declare-fun of_rep (Int) frame_length)

;; inversion_axiom
  (assert
  (forall ((x frame_length))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x frame_length)) (! (in_range3
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort rx_errors 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (rx_errors rx_errors) Bool)

(declare-const dummy3 rx_errors)

(declare-datatypes ()
((rx_errors__ref (rx_errors__refqtmk (rx_errors__content rx_errors)))))
(define-fun rx_errors__ref_rx_errors__content__projection ((a rx_errors__ref)) rx_errors 
  (rx_errors__content a))

(declare-fun to_rep1 (rx_errors) Int)

(declare-fun of_rep1 (Int) rx_errors)

;; inversion_axiom
  (assert
  (forall ((x rx_errors))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x rx_errors)) (! (in_range4
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort bits_8 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))

(declare-fun user_eq4 (bits_8 bits_8) Bool)

(declare-const dummy4 bits_8)

(declare-datatypes ()
((bits_8__ref (bits_8__refqtmk (bits_8__content bits_8)))))
(define-fun bits_8__ref_bits_8__content__projection ((a bits_8__ref)) bits_8 
  (bits_8__content a))

(declare-fun to_rep2 (bits_8) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) bits_8)

;; inversion_axiom
  (assert
  (forall ((x bits_8))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int2 ((x bits_8)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_8)) (! (uint_in_range
  (to_int2 x)) :pattern ((to_int2 x)) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int bits_8))))))
(declare-fun slide ((Array Int bits_8) Int Int) (Array Int bits_8))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int bits_8)) (a__first Int) (a__last Int)
  (b (Array Int bits_8)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const dummy5 (Array Int bits_8))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq5 ((Array Int bits_8) (Array Int bits_8)) Bool)

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__decadriver__rx_frame_type__size frame_length)(rec__decadriver__rx_frame_type__frame (Array Int bits_8))(rec__decadriver__rx_frame_type__error rx_errors)(rec__decadriver__rx_frame_type__overrun Bool)))))
(define-fun us_split_fields_rec__decadriver__rx_frame_type__size__projection ((a us_split_fields)) frame_length 
  (rec__decadriver__rx_frame_type__size a))

(define-fun us_split_fields_rec__decadriver__rx_frame_type__frame__projection ((a us_split_fields)) (Array Int bits_8) 
  (rec__decadriver__rx_frame_type__frame a))

(define-fun us_split_fields_rec__decadriver__rx_frame_type__error__projection ((a us_split_fields)) rx_errors 
  (rec__decadriver__rx_frame_type__error a))

(define-fun us_split_fields_rec__decadriver__rx_frame_type__overrun__projection ((a us_split_fields)) Bool 
  (rec__decadriver__rx_frame_type__overrun a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__decadriver__rx_frame_type__size
                           (us_split_fields1 a))) (to_rep
                                                  (rec__decadriver__rx_frame_type__size
                                                  (us_split_fields1 b))))
                        (= (bool_eq
                           (rec__decadriver__rx_frame_type__frame
                           (us_split_fields1 a)) 0 1024
                           (rec__decadriver__rx_frame_type__frame
                           (us_split_fields1 b)) 0 1024) true))
                        (and
                        (= (to_rep1
                           (rec__decadriver__rx_frame_type__error
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__decadriver__rx_frame_type__error
                                                  (us_split_fields1 b))))
                        (= (ite (rec__decadriver__rx_frame_type__overrun
                                (us_split_fields1 a)) 1 0) (ite (rec__decadriver__rx_frame_type__overrun
                                                                (us_split_fields1
                                                                b)) 1 0))))
                   true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const decadriver__rx_frame_type__size__first__bit Int)

(declare-const decadriver__rx_frame_type__size__last__bit Int)

(declare-const decadriver__rx_frame_type__size__position Int)

;; decadriver__rx_frame_type__size__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__size__first__bit))

;; decadriver__rx_frame_type__size__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__size__first__bit decadriver__rx_frame_type__size__last__bit))

;; decadriver__rx_frame_type__size__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__size__position))

(declare-const decadriver__rx_frame_type__frame__first__bit Int)

(declare-const decadriver__rx_frame_type__frame__last__bit Int)

(declare-const decadriver__rx_frame_type__frame__position Int)

;; decadriver__rx_frame_type__frame__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__frame__first__bit))

;; decadriver__rx_frame_type__frame__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__frame__first__bit decadriver__rx_frame_type__frame__last__bit))

;; decadriver__rx_frame_type__frame__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__frame__position))

(declare-const decadriver__rx_frame_type__error__first__bit Int)

(declare-const decadriver__rx_frame_type__error__last__bit Int)

(declare-const decadriver__rx_frame_type__error__position Int)

;; decadriver__rx_frame_type__error__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__error__first__bit))

;; decadriver__rx_frame_type__error__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__error__first__bit decadriver__rx_frame_type__error__last__bit))

;; decadriver__rx_frame_type__error__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__error__position))

(declare-const decadriver__rx_frame_type__overrun__first__bit Int)

(declare-const decadriver__rx_frame_type__overrun__last__bit Int)

(declare-const decadriver__rx_frame_type__overrun__position Int)

;; decadriver__rx_frame_type__overrun__first__bit_axiom
  (assert (<= 0 decadriver__rx_frame_type__overrun__first__bit))

;; decadriver__rx_frame_type__overrun__last__bit_axiom
  (assert
  (< decadriver__rx_frame_type__overrun__first__bit decadriver__rx_frame_type__overrun__last__bit))

;; decadriver__rx_frame_type__overrun__position_axiom
  (assert (<= 0 decadriver__rx_frame_type__overrun__position))

(declare-fun user_eq6 (us_rep us_rep) Bool)

(declare-const dummy6 us_rep)

(declare-datatypes ()
((rx_frame_type__ref
 (rx_frame_type__refqtmk (rx_frame_type__content us_rep)))))
(define-fun rx_frame_type__ref_rx_frame_type__content__projection ((a rx_frame_type__ref)) us_rep 
  (rx_frame_type__content a))

(declare-datatypes ()
((map__ref1 (map__refqtmk1 (map__content1 (Array (_ BitVec 8) us_rep))))))
(declare-fun slide1 ((Array (_ BitVec 8) us_rep) (_ BitVec 8)
  (_ BitVec 8)) (Array (_ BitVec 8) us_rep))

;; slide_eq
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep)))
  (forall ((first (_ BitVec 8)))
  (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep)))
  (forall ((old_first (_ BitVec 8)))
  (forall ((new_first (_ BitVec 8)))
  (forall ((i (_ BitVec 8)))
  (! (= (select (slide1 a old_first new_first) i) (select a (bvsub i (bvsub new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq2 ((a (Array (_ BitVec 8) us_rep)) (a__first (_ BitVec 8))
  (a__last (_ BitVec 8)) (b (Array (_ BitVec 8) us_rep))
  (b__first (_ BitVec 8))
  (b__last (_ BitVec 8))) Bool (ite (and
                                    (ite (bvule a__first a__last)
                                    (and (bvule b__first b__last)
                                    (= (bvsub a__last a__first) (bvsub b__last b__first)))
                                    (bvugt b__first b__last))
                                    (forall ((temp___idx_155 (_ BitVec 8)))
                                    (=>
                                    (and (bvule a__first temp___idx_155)
                                    (bvule temp___idx_155 a__last))
                                    (= (bool_eq1 (select a temp___idx_155)
                                       (select b (bvadd (bvsub b__first a__first) temp___idx_155))) true))))
                               true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array (_ BitVec 8) us_rep)) (b (Array (_ BitVec 8) us_rep)))
  (forall ((a__first (_ BitVec 8)) (a__last (_ BitVec 8))
  (b__first (_ BitVec 8)) (b__last (_ BitVec 8)))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (bvule a__first a__last)
  (and (bvule b__first b__last)
  (= (bvsub a__last a__first) (bvsub b__last b__first)))
  (bvugt b__first b__last))
  (forall ((temp___idx_155 (_ BitVec 8)))
  (=> (and (bvule a__first temp___idx_155) (bvule temp___idx_155 a__last))
  (= (bool_eq1 (select a temp___idx_155)
     (select b (bvadd (bvsub b__first a__first) temp___idx_155))) true))))))))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__decadriver__receiver_type__frame_queue (Array (_ BitVec 8) us_rep))(rec__decadriver__receiver_type__queue_head rx_frame_queue_index)(rec__decadriver__receiver_type__rx_count natural)(rec__decadriver__receiver_type__overrun_occurred Bool)(rec__decadriver__receiver_type__frame_ready Bool)))))
(define-fun us_split_fields_rec__decadriver__receiver_type__frame_queue__projection ((a us_split_fields2)) (Array (_ BitVec 8) us_rep) 
  (rec__decadriver__receiver_type__frame_queue a))

(define-fun us_split_fields_rec__decadriver__receiver_type__queue_head__projection ((a us_split_fields2)) rx_frame_queue_index 
  (rec__decadriver__receiver_type__queue_head a))

(define-fun us_split_fields_rec__decadriver__receiver_type__rx_count__projection ((a us_split_fields2)) natural 
  (rec__decadriver__receiver_type__rx_count a))

(define-fun us_split_fields_rec__decadriver__receiver_type__overrun_occurred__projection ((a us_split_fields2)) Bool 
  (rec__decadriver__receiver_type__overrun_occurred a))

(define-fun us_split_fields_rec__decadriver__receiver_type__frame_ready__projection ((a us_split_fields2)) Bool 
  (rec__decadriver__receiver_type__frame_ready a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const decadriver__receiver_type__frame_queue__first__bit Int)

(declare-const decadriver__receiver_type__frame_queue__last__bit Int)

(declare-const decadriver__receiver_type__frame_queue__position Int)

;; decadriver__receiver_type__frame_queue__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__frame_queue__first__bit))

;; decadriver__receiver_type__frame_queue__last__bit_axiom
  (assert
  (< decadriver__receiver_type__frame_queue__first__bit decadriver__receiver_type__frame_queue__last__bit))

;; decadriver__receiver_type__frame_queue__position_axiom
  (assert (<= 0 decadriver__receiver_type__frame_queue__position))

(declare-const decadriver__receiver_type__queue_head__first__bit Int)

(declare-const decadriver__receiver_type__queue_head__last__bit Int)

(declare-const decadriver__receiver_type__queue_head__position Int)

;; decadriver__receiver_type__queue_head__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__queue_head__first__bit))

;; decadriver__receiver_type__queue_head__last__bit_axiom
  (assert
  (< decadriver__receiver_type__queue_head__first__bit decadriver__receiver_type__queue_head__last__bit))

;; decadriver__receiver_type__queue_head__position_axiom
  (assert (<= 0 decadriver__receiver_type__queue_head__position))

(declare-const decadriver__receiver_type__rx_count__first__bit Int)

(declare-const decadriver__receiver_type__rx_count__last__bit Int)

(declare-const decadriver__receiver_type__rx_count__position Int)

;; decadriver__receiver_type__rx_count__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__rx_count__first__bit))

;; decadriver__receiver_type__rx_count__last__bit_axiom
  (assert
  (< decadriver__receiver_type__rx_count__first__bit decadriver__receiver_type__rx_count__last__bit))

;; decadriver__receiver_type__rx_count__position_axiom
  (assert (<= 0 decadriver__receiver_type__rx_count__position))

(declare-const decadriver__receiver_type__overrun_occurred__first__bit Int)

(declare-const decadriver__receiver_type__overrun_occurred__last__bit Int)

(declare-const decadriver__receiver_type__overrun_occurred__position Int)

;; decadriver__receiver_type__overrun_occurred__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__overrun_occurred__first__bit))

;; decadriver__receiver_type__overrun_occurred__last__bit_axiom
  (assert
  (< decadriver__receiver_type__overrun_occurred__first__bit decadriver__receiver_type__overrun_occurred__last__bit))

;; decadriver__receiver_type__overrun_occurred__position_axiom
  (assert (<= 0 decadriver__receiver_type__overrun_occurred__position))

(declare-const decadriver__receiver_type__frame_ready__first__bit Int)

(declare-const decadriver__receiver_type__frame_ready__last__bit Int)

(declare-const decadriver__receiver_type__frame_ready__position Int)

;; decadriver__receiver_type__frame_ready__first__bit_axiom
  (assert (<= 0 decadriver__receiver_type__frame_ready__first__bit))

;; decadriver__receiver_type__frame_ready__last__bit_axiom
  (assert
  (< decadriver__receiver_type__frame_ready__first__bit decadriver__receiver_type__frame_ready__last__bit))

;; decadriver__receiver_type__frame_ready__position_axiom
  (assert (<= 0 decadriver__receiver_type__frame_ready__position))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-datatypes ()
((receiver_type__ref
 (receiver_type__refqtmk (receiver_type__content us_rep1)))))
(define-fun receiver_type__ref_receiver_type__content__projection ((a receiver_type__ref)) us_rep1 
  (receiver_type__content a))

(define-fun to_rep3 ((x natural)) Int (naturalqtint x))

(declare-fun of_rep3 (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                             (of_rep3 x))) )))

(declare-fun to_rep4 (rx_frame_queue_index) (_ BitVec 8))

(declare-fun of_rep4 ((_ BitVec 8)) rx_frame_queue_index)

;; inversion_axiom
  (assert
  (forall ((x rx_frame_queue_index))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x rx_frame_queue_index)) (! (in_range1
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x02)))
     (=> (in_range1 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4
                                                               (of_rep4 x))) )))

(define-fun to_int3 ((x rx_frame_queue_index)) Int (bv2int (to_rep4 x)))

;; range_int_axiom
  (assert
  (forall ((x rx_frame_queue_index)) (! (in_range_int
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-fun temp_____aggregate_def_403 (us_rep) (Array (_ BitVec 8) us_rep))

(declare-fun temp_____aggregate_def_407 ((_ BitVec 8)) (Array Int bits_8))

(define-fun dynamic_invariant ((temp___expr_397 us_rep1)
  (temp___is_init_393 Bool) (temp___skip_constant_394 Bool)
  (temp___do_toplevel_395 Bool)
  (temp___do_typ_inv_396 Bool)) Bool (forall ((temp___398 (_ BitVec 8)))
                                     (=>
                                     (and (bvule #x00 temp___398)
                                     (bvule temp___398 #x01))
                                     (let ((temp___399 (select (rec__decadriver__receiver_type__frame_queue
                                                               (us_split_fields3
                                                               temp___expr_397)) temp___398)))
                                     (ite (= (to_rep1
                                             (rec__decadriver__rx_frame_type__error
                                             (us_split_fields1 temp___399))) 0)
                                     (< 0 (to_rep
                                          (rec__decadriver__rx_frame_type__size
                                          (us_split_fields1 temp___399))))
                                     (= (to_rep
                                        (rec__decadriver__rx_frame_type__size
                                        (us_split_fields1 temp___399))) 0))))))

(declare-const rliteral frame_length)

;; rliteral_axiom
  (assert (= (frame_lengthqtint rliteral) 0))

(define-fun default_initial_assumption ((temp___expr_401 us_rep1)
  (temp___skip_top_level_402 Bool)) Bool (and
                                         (and
                                         (= (rec__decadriver__receiver_type__frame_queue
                                            (us_split_fields3
                                            temp___expr_401)) (temp_____aggregate_def_403
                                                              (us_repqtmk
                                                              (us_split_fieldsqtmk
                                                              rliteral
                                                              (temp_____aggregate_def_407
                                                              #x00)
                                                              (of_rep1 0)
                                                              (distinct 0 0)))))
                                         (= (to_rep4
                                            (rec__decadriver__receiver_type__queue_head
                                            (us_split_fields3
                                            temp___expr_401))) #x01))
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__decadriver__receiver_type__rx_count
                                            (us_split_fields3
                                            temp___expr_401))) 0)
                                         (= (rec__decadriver__receiver_type__overrun_occurred
                                            (us_split_fields3
                                            temp___expr_401)) (distinct 0 0)))
                                         (= (rec__decadriver__receiver_type__frame_ready
                                            (us_split_fields3
                                            temp___expr_401)) (distinct 0 0)))))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2 (rec__decadriver__transmitter_type__tx_idle Bool)))))
(define-fun us_split_fields_rec__decadriver__transmitter_type__tx_idle__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__transmitter_type__tx_idle a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_fields__4__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const decadriver__transmitter_type__tx_idle__first__bit Int)

(declare-const decadriver__transmitter_type__tx_idle__last__bit Int)

(declare-const decadriver__transmitter_type__tx_idle__position Int)

;; decadriver__transmitter_type__tx_idle__first__bit_axiom
  (assert (<= 0 decadriver__transmitter_type__tx_idle__first__bit))

;; decadriver__transmitter_type__tx_idle__last__bit_axiom
  (assert
  (< decadriver__transmitter_type__tx_idle__first__bit decadriver__transmitter_type__tx_idle__last__bit))

;; decadriver__transmitter_type__tx_idle__position_axiom
  (assert (<= 0 decadriver__transmitter_type__tx_idle__position))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-datatypes ()
((transmitter_type__ref
 (transmitter_type__refqtmk (transmitter_type__content us_rep2)))))
(define-fun transmitter_type__ref_transmitter_type__content__projection ((a transmitter_type__ref)) us_rep2 
  (transmitter_type__content a))

(define-fun default_initial_assumption1 ((temp___expr_426 us_rep2)
  (temp___skip_top_level_427 Bool)) Bool (= (rec__decadriver__transmitter_type__tx_idle
                                            (us_split_fields5
                                            temp___expr_426)) (distinct 1 0)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort bits_5 0)

(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x1F)))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))

(declare-fun user_eq9 (bits_5 bits_5) Bool)

(declare-const dummy7 bits_5)

(declare-datatypes ()
((bits_5__ref (bits_5__refqtmk (bits_5__content bits_5)))))
(define-fun bits_5__ref_bits_5__content__projection ((a bits_5__ref)) bits_5 
  (bits_5__content a))

(declare-fun to_rep5 (bits_5) (_ BitVec 8))

(declare-fun of_rep5 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range5 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x20)))
     (=> (in_range5 y) (= (to_rep5 (of_rep5 x)) y))) :pattern ((to_rep5
                                                               (of_rep5 x))) )))

(define-fun to_int4 ((x bits_5)) Int (bv2int (to_rep5 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int1
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-sort bits_1 0)

(define-fun in_range6 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x01)))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 8))

(declare-fun user_eq10 (bits_1 bits_1) Bool)

(declare-const dummy8 bits_1)

(declare-datatypes ()
((bits_1__ref (bits_1__refqtmk (bits_1__content bits_1)))))
(define-fun bits_1__ref_bits_1__content__projection ((a bits_1__ref)) bits_1 
  (bits_1__content a))

(declare-fun to_rep6 (bits_1) (_ BitVec 8))

(declare-fun of_rep6 ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x02)))
     (=> (in_range6 y) (= (to_rep6 (of_rep6 x)) y))) :pattern ((to_rep6
                                                               (of_rep6 x))) )))

(define-fun to_int5 ((x bits_1)) Int (bv2int (to_rep6 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int2
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_2 0)

(define-fun in_range7 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x03)))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 8))

(declare-fun user_eq11 (bits_2 bits_2) Bool)

(declare-const dummy9 bits_2)

(declare-datatypes ()
((bits_2__ref (bits_2__refqtmk (bits_2__content bits_2)))))
(define-fun bits_2__ref_bits_2__content__projection ((a bits_2__ref)) bits_2 
  (bits_2__content a))

(declare-fun to_rep7 (bits_2) (_ BitVec 8))

(declare-fun of_rep7 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range7 (to_rep7 x)) :pattern ((to_rep7 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x04)))
     (=> (in_range7 y) (= (to_rep7 (of_rep7 x)) y))) :pattern ((to_rep7
                                                               (of_rep7 x))) )))

(define-fun to_int6 ((x bits_2)) Int (bv2int (to_rep7 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int3
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-sort bits_3 0)

(define-fun in_range8 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x07)))

(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 8))

(declare-fun user_eq12 (bits_3 bits_3) Bool)

(declare-const dummy10 bits_3)

(declare-datatypes ()
((bits_3__ref (bits_3__refqtmk (bits_3__content bits_3)))))
(define-fun bits_3__ref_bits_3__content__projection ((a bits_3__ref)) bits_3 
  (bits_3__content a))

(declare-fun to_rep8 (bits_3) (_ BitVec 8))

(declare-fun of_rep8 ((_ BitVec 8)) bits_3)

;; inversion_axiom
  (assert
  (forall ((x bits_3))
  (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_3)) (! (in_range8 (to_rep8 x)) :pattern ((to_rep8 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x08)))
     (=> (in_range8 y) (= (to_rep8 (of_rep8 x)) y))) :pattern ((to_rep8
                                                               (of_rep8 x))) )))

(define-fun to_int7 ((x bits_3)) Int (bv2int (to_rep8 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_3)) (! (in_range_int4
  (to_int7 x)) :pattern ((to_int7 x)) )))

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3
 (rec__ada___dw1000__register_types__sys_cfg_type__ffen bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffbc bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffab bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffad bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffaa bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffam bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffar bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffa4 bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffa5 bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__spi_edge bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_fce bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_phe bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__phr_mode bits_2)(rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxm110k bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxautr bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__autoack bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__aackpend bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 bits_3)(rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffen__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffen a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffbc__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffbc a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffab__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffab a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffad__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffad a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffaa__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffaa a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffam__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffam a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffar__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffar a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffa4__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffa4 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffa5__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffa5 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__spi_edge__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_fce__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_phe__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__phr_mode__projection ((a us_split_fields6)) bits_2 
  (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxm110k__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxautr__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxautr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__autoack__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__autoack a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__aackpend__projection ((a us_split_fields6)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__aackpend a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__reserved_1__projection ((a us_split_fields6)) bits_3 
  (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__reserved_2__projection ((a us_split_fields6)) bits_5 
  (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (us_repqtmk3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun bool_eq3 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffen
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffen
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffbc
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffbc
                                                   (us_split_fields7 b)))))
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffab
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffab
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffad
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffad
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffaa
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffaa
                                                   (us_split_fields7 b)))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffam
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffam
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffar
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffar
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffa4
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffa4
                                                   (us_split_fields7 b))))))
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffa5
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffa5
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge
                                                   (us_split_fields7 b)))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe
                                                   (us_split_fields7 b)))))))
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f
                                                   (us_split_fields7 b)))))
                         (= (to_rep7
                            (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode
                            (us_split_fields7 a))) (to_rep7
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode
                                                   (us_split_fields7 b)))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe
                                                   (us_split_fields7 b))))))
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxautr
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxautr
                                                   (us_split_fields7 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__autoack
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__autoack
                                                   (us_split_fields7 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_cfg_type__aackpend
                            (us_split_fields7 a))) (to_rep6
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__aackpend
                                                   (us_split_fields7 b)))))
                         (and
                         (= (to_rep8
                            (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1
                            (us_split_fields7 a))) (to_rep8
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1
                                                   (us_split_fields7 b))))
                         (= (to_rep5
                            (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2
                            (us_split_fields7 a))) (to_rep5
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2
                                                   (us_split_fields7 b)))))))))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffen__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffen__first__bit ada___dw1000__register_types__sys_cfg_type__ffen__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffen__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffen__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffbc__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffbc__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffab__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffab__first__bit ada___dw1000__register_types__sys_cfg_type__ffab__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffab__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffab__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffad__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffad__first__bit ada___dw1000__register_types__sys_cfg_type__ffad__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffad__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffad__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffaa__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffaa__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffam__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffam__first__bit ada___dw1000__register_types__sys_cfg_type__ffam__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffam__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffam__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffar__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffar__first__bit ada___dw1000__register_types__sys_cfg_type__ffar__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffar__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffar__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa4__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa4__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa5__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa5__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__position Int)

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit 
  ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__hirq_pol__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__position Int)

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit 
  ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__spi_edge__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_fce__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_drxb__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_phe__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_rsde__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position Int)

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit 
  ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__position Int)

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit 
  ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__phr_mode__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_stxp__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit 
  ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxm110k__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxwtoe__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxautr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxautr__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__position Int)

;; ada___dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__autoack__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__autoack__first__bit 
  ada___dw1000__register_types__sys_cfg_type__autoack__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__autoack__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__autoack__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__position Int)

;; ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit 
  ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__aackpend__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__aackpend__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__position Int)

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit 
  ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_1__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__position Int)

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit 
  ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_2__position))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-const dummy11 us_rep3)

(declare-datatypes ()
((sys_cfg_type__ref (sys_cfg_type__refqtmk (sys_cfg_type__content us_rep3)))))
(define-fun sys_cfg_type__ref_sys_cfg_type__content__projection ((a sys_cfg_type__ref)) us_rep3 
  (sys_cfg_type__content a))

(declare-fun nth1 ((_ BitVec 32) Int) Bool)

(declare-fun lsr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int8 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2int x)
                                            (- (- 4294967296 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv1 ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (t__refqtmk1 (t__content1 (_ BitVec 32))))))
(declare-fun power1 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort bits_32 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE10 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) (_ BitVec 32))

(declare-fun user_eq14 (bits_32 bits_32) Bool)

(declare-const dummy12 bits_32)

(declare-datatypes ()
((bits_32__ref (bits_32__refqtmk (bits_32__content bits_32)))))
(define-fun bits_32__ref_bits_32__content__projection ((a bits_32__ref)) bits_32 
  (bits_32__content a))

(declare-fun nth2 ((_ BitVec 16) Int) Bool)

(declare-fun lsr2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right3 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left3 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun to_int9 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16))
                                            (bv2int x)
                                            (- (- 65536 (bv2int x)))))

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv2 ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv2 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub2 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

(declare-datatypes () ((t__ref2 (t__refqtmk2 (t__content2 (_ BitVec 16))))))
(declare-fun power2 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min2 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-sort bits_16 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE11 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) (_ BitVec 16))

(declare-fun user_eq15 (bits_16 bits_16) Bool)

(declare-const dummy13 bits_16)

(declare-datatypes ()
((bits_16__ref (bits_16__refqtmk (bits_16__content bits_16)))))
(define-fun bits_16__ref_bits_16__content__projection ((a bits_16__ref)) bits_16 
  (bits_16__content a))

(declare-fun to_rep9 (bits_32) (_ BitVec 32))

(declare-fun of_rep9 ((_ BitVec 32)) bits_32)

;; inversion_axiom
  (assert
  (forall ((x bits_32))
  (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep9 (of_rep9 x)) x) :pattern ((to_rep9 (of_rep9 x))) )))

(define-fun to_int10 ((x bits_32)) Int (bv2int (to_rep9 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_32)) (! (uint_in_range1
  (to_int10 x)) :pattern ((to_int10 x)) )))

(declare-datatypes ()
((map__ref2 (map__refqtmk2 (map__content2 (Array Int bits_32))))))
(declare-fun slide2 ((Array Int bits_32) Int Int) (Array Int bits_32))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((first Int))
  (! (= (slide2 a first first) a) :pattern ((slide2 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide2 a old_first new_first) i)) ))))))

(define-fun bool_eq4 ((a (Array Int bits_32)) (a__first Int) (a__last Int)
  (b (Array Int bits_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_156 Int))
                           (=>
                           (and (<= a__first temp___idx_156)
                           (<= temp___idx_156 a__last))
                           (= (to_rep9 (select a temp___idx_156)) (to_rep9
                                                                  (select b (+ (- b__first a__first) temp___idx_156)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq4 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_156 Int))
  (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last))
  (= (to_rep9 (select a temp___idx_156)) (to_rep9
                                         (select b (+ (- b__first a__first) temp___idx_156)))))))))))

(declare-datatypes ()
((us_split_fields8
 (us_split_fieldsqtmk4
 (rec__decadriver__driver_type__part_id bits_32)(rec__decadriver__driver_type__lot_id bits_32)(rec__decadriver__driver_type__antenna_delay_prf_64 bits_16)(rec__decadriver__driver_type__antenna_delay_prf_16 bits_16)(rec__decadriver__driver_type__xtal_trim bits_5)(rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32))(rec__decadriver__driver_type__long_frames Bool)(rec__decadriver__driver_type__sys_cfg_reg us_rep3)(rec__decadriver__driver_type__use_otp_xtal_trim Bool)(rec__decadriver__driver_type__use_otp_antenna_delay Bool)(rec__decadriver__driver_type__detect_frame_timeout Bool)(rec__decadriver__driver_type__detect_sfd_timeout Bool)(rec__decadriver__driver_type__detect_phr_error Bool)(rec__decadriver__driver_type__detect_rs_error Bool)(rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_rec__decadriver__driver_type__part_id__projection ((a us_split_fields8)) bits_32 
  (rec__decadriver__driver_type__part_id a))

(define-fun us_split_fields_rec__decadriver__driver_type__lot_id__projection ((a us_split_fields8)) bits_32 
  (rec__decadriver__driver_type__lot_id a))

(define-fun us_split_fields_rec__decadriver__driver_type__antenna_delay_prf_64__projection ((a us_split_fields8)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_64 a))

(define-fun us_split_fields_rec__decadriver__driver_type__antenna_delay_prf_16__projection ((a us_split_fields8)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_16 a))

(define-fun us_split_fields_rec__decadriver__driver_type__xtal_trim__projection ((a us_split_fields8)) bits_5 
  (rec__decadriver__driver_type__xtal_trim a))

(define-fun us_split_fields_rec__decadriver__driver_type__otp_tx_power_levels__projection ((a us_split_fields8)) (Array Int bits_32) 
  (rec__decadriver__driver_type__otp_tx_power_levels a))

(define-fun us_split_fields_rec__decadriver__driver_type__long_frames__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__long_frames a))

(define-fun us_split_fields_rec__decadriver__driver_type__sys_cfg_reg__projection ((a us_split_fields8)) us_rep3 
  (rec__decadriver__driver_type__sys_cfg_reg a))

(define-fun us_split_fields_rec__decadriver__driver_type__use_otp_xtal_trim__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__use_otp_xtal_trim a))

(define-fun us_split_fields_rec__decadriver__driver_type__use_otp_antenna_delay__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__use_otp_antenna_delay a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_frame_timeout__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__detect_frame_timeout a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_sfd_timeout__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__detect_sfd_timeout a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_phr_error__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__detect_phr_error a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_rs_error__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__detect_rs_error a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_fcs_error__projection ((a us_split_fields8)) Bool 
  (rec__decadriver__driver_type__detect_fcs_error a))

(declare-datatypes ()
((us_split_fields__ref4
 (us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (us_repqtmk4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___split_fields__6__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const decadriver__driver_type__part_id__first__bit Int)

(declare-const decadriver__driver_type__part_id__last__bit Int)

(declare-const decadriver__driver_type__part_id__position Int)

;; decadriver__driver_type__part_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__part_id__first__bit))

;; decadriver__driver_type__part_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))

;; decadriver__driver_type__part_id__position_axiom
  (assert (<= 0 decadriver__driver_type__part_id__position))

(declare-const decadriver__driver_type__lot_id__first__bit Int)

(declare-const decadriver__driver_type__lot_id__last__bit Int)

(declare-const decadriver__driver_type__lot_id__position Int)

;; decadriver__driver_type__lot_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__first__bit))

;; decadriver__driver_type__lot_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))

;; decadriver__driver_type__lot_id__position_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__position))

(declare-const decadriver__driver_type__antenna_delay_prf_64__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__position Int)

;; decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))

;; decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))

;; decadriver__driver_type__antenna_delay_prf_64__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))

(declare-const decadriver__driver_type__antenna_delay_prf_16__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__position Int)

;; decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))

;; decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))

;; decadriver__driver_type__antenna_delay_prf_16__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))

(declare-const decadriver__driver_type__xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__xtal_trim__position Int)

;; decadriver__driver_type__xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))

;; decadriver__driver_type__xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))

;; decadriver__driver_type__xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__position))

(declare-const decadriver__driver_type__otp_tx_power_levels__first__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__last__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__position Int)

;; decadriver__driver_type__otp_tx_power_levels__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))

;; decadriver__driver_type__otp_tx_power_levels__last__bit_axiom
  (assert
  (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))

;; decadriver__driver_type__otp_tx_power_levels__position_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))

(declare-const decadriver__driver_type__long_frames__first__bit Int)

(declare-const decadriver__driver_type__long_frames__last__bit Int)

(declare-const decadriver__driver_type__long_frames__position Int)

;; decadriver__driver_type__long_frames__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__first__bit))

;; decadriver__driver_type__long_frames__last__bit_axiom
  (assert
  (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))

;; decadriver__driver_type__long_frames__position_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__position))

(declare-const decadriver__driver_type__sys_cfg_reg__first__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__last__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__position Int)

;; decadriver__driver_type__sys_cfg_reg__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))

;; decadriver__driver_type__sys_cfg_reg__last__bit_axiom
  (assert
  (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))

;; decadriver__driver_type__sys_cfg_reg__position_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))

(declare-const decadriver__driver_type__use_otp_xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__position Int)

;; decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))

;; decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))

;; decadriver__driver_type__use_otp_xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))

(declare-const decadriver__driver_type__use_otp_antenna_delay__first__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__last__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__position Int)

;; decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))

;; decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))

;; decadriver__driver_type__use_otp_antenna_delay__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))

(declare-const decadriver__driver_type__detect_frame_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__position Int)

;; decadriver__driver_type__detect_frame_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))

;; decadriver__driver_type__detect_frame_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))

;; decadriver__driver_type__detect_frame_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))

(declare-const decadriver__driver_type__detect_sfd_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__position Int)

;; decadriver__driver_type__detect_sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))

;; decadriver__driver_type__detect_sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))

;; decadriver__driver_type__detect_sfd_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))

(declare-const decadriver__driver_type__detect_phr_error__first__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__last__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__position Int)

;; decadriver__driver_type__detect_phr_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))

;; decadriver__driver_type__detect_phr_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))

;; decadriver__driver_type__detect_phr_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__position))

(declare-const decadriver__driver_type__detect_rs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__position Int)

;; decadriver__driver_type__detect_rs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))

;; decadriver__driver_type__detect_rs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))

;; decadriver__driver_type__detect_rs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__position))

(declare-const decadriver__driver_type__detect_fcs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__position Int)

;; decadriver__driver_type__detect_fcs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))

;; decadriver__driver_type__detect_fcs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))

;; decadriver__driver_type__detect_fcs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__position))

(declare-fun user_eq16 (us_rep4 us_rep4) Bool)

(declare-datatypes ()
((driver_type__ref (driver_type__refqtmk (driver_type__content us_rep4)))))
(define-fun driver_type__ref_driver_type__content__projection ((a driver_type__ref)) us_rep4 
  (driver_type__content a))

(declare-fun to_rep10 (bits_16) (_ BitVec 16))

(declare-fun of_rep10 ((_ BitVec 16)) bits_16)

;; inversion_axiom
  (assert
  (forall ((x bits_16))
  (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (= (to_rep10 (of_rep10 x)) x) :pattern ((to_rep10 (of_rep10 x))) )))

(define-fun to_int11 ((x bits_16)) Int (bv2int (to_rep10 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_16)) (! (uint_in_range2
  (to_int11 x)) :pattern ((to_int11 x)) )))

(declare-fun temp_____aggregate_def_525 ((_ BitVec 32)) (Array Int bits_32))

(define-fun default_initial_assumption2 ((temp___expr_523 us_rep4)
  (temp___skip_top_level_524 Bool)) Bool (and
                                         (and
                                         (= (to_rep9
                                            (rec__decadriver__driver_type__part_id
                                            (us_split_fields9
                                            temp___expr_523))) #x00000000)
                                         (= (to_rep9
                                            (rec__decadriver__driver_type__lot_id
                                            (us_split_fields9
                                            temp___expr_523))) #x00000000))
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep10
                                            (rec__decadriver__driver_type__antenna_delay_prf_64
                                            (us_split_fields9
                                            temp___expr_523))) #x0000)
                                         (= (to_rep10
                                            (rec__decadriver__driver_type__antenna_delay_prf_16
                                            (us_split_fields9
                                            temp___expr_523))) #x0000))
                                         (and
                                         (= (to_rep5
                                            (rec__decadriver__driver_type__xtal_trim
                                            (us_split_fields9
                                            temp___expr_523))) #x10)
                                         (= (rec__decadriver__driver_type__otp_tx_power_levels
                                            (us_split_fields9
                                            temp___expr_523)) (temp_____aggregate_def_525
                                                              #x00000000))))
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__long_frames
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__sys_cfg_reg
                                            (us_split_fields9
                                            temp___expr_523)) (us_repqtmk3
                                                              (us_split_fieldsqtmk3
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep7 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep6 #x00)
                                                              (of_rep8 #x00)
                                                              (of_rep5 #x00)))))
                                         (= (rec__decadriver__driver_type__use_otp_xtal_trim
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0))))
                                         (and
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__use_otp_antenna_delay
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__detect_frame_timeout
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0)))
                                         (= (rec__decadriver__driver_type__detect_sfd_timeout
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0)))
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__detect_phr_error
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__detect_rs_error
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0)))
                                         (= (rec__decadriver__driver_type__detect_fcs_error
                                            (us_split_fields9
                                            temp___expr_523)) (distinct 0 0)))))))

(declare-datatypes ()
((us_split_fields10
 (us_split_fieldsqtmk5
 (rec__ada___dw1000__register_types__sys_status_type__irqs bits_1)(rec__ada___dw1000__register_types__sys_status_type__cplock bits_1)(rec__ada___dw1000__register_types__sys_status_type__esyncr bits_1)(rec__ada___dw1000__register_types__sys_status_type__aat bits_1)(rec__ada___dw1000__register_types__sys_status_type__txfrb bits_1)(rec__ada___dw1000__register_types__sys_status_type__txprs bits_1)(rec__ada___dw1000__register_types__sys_status_type__txphs bits_1)(rec__ada___dw1000__register_types__sys_status_type__txfrs bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxprd bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxsfdd bits_1)(rec__ada___dw1000__register_types__sys_status_type__ldedone bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxphd bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxphe bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxdfr bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxfcg bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxfce bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxrfsl bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxrfto bits_1)(rec__ada___dw1000__register_types__sys_status_type__ldeerr bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxovrr bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxpto bits_1)(rec__ada___dw1000__register_types__sys_status_type__gpioirq bits_1)(rec__ada___dw1000__register_types__sys_status_type__slp2init bits_1)(rec__ada___dw1000__register_types__sys_status_type__rfpll_ll bits_1)(rec__ada___dw1000__register_types__sys_status_type__clkpll_ll bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxsfdto bits_1)(rec__ada___dw1000__register_types__sys_status_type__hpdwarn bits_1)(rec__ada___dw1000__register_types__sys_status_type__txberr bits_1)(rec__ada___dw1000__register_types__sys_status_type__affrej bits_1)(rec__ada___dw1000__register_types__sys_status_type__hsrbp bits_1)(rec__ada___dw1000__register_types__sys_status_type__icrbp bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxrscs bits_1)(rec__ada___dw1000__register_types__sys_status_type__rxprej bits_1)(rec__ada___dw1000__register_types__sys_status_type__txpute bits_1)(rec__ada___dw1000__register_types__sys_status_type__reserved_1 bits_1)(rec__ada___dw1000__register_types__sys_status_type__reserved_2 bits_5)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__irqs__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__irqs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__cplock__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__cplock a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__esyncr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__esyncr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__aat__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__aat a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txfrb__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txfrb a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txprs__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txprs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txphs__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txphs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txfrs__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txfrs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxprd__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxprd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxsfdd__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxsfdd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__ldedone__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__ldedone a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxphd__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxphd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxphe__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxphe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxdfr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxdfr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxfcg__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxfcg a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxfce__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxfce a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxrfsl__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxrfsl a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxrfto__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxrfto a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__ldeerr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__ldeerr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxovrr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxovrr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxpto__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxpto a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__gpioirq__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__gpioirq a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__slp2init__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__slp2init a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rfpll_ll__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rfpll_ll a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__clkpll_ll__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__clkpll_ll a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxsfdto__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxsfdto a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__hpdwarn__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__hpdwarn a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txberr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txberr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__affrej__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__affrej a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__hsrbp__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__hsrbp a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__icrbp__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__icrbp a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxrscs__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxrscs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__rxprej__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__rxprej a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__txpute__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__txpute a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__reserved_1__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__sys_status_type__reserved_1 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_status_type__reserved_2__projection ((a us_split_fields10)) bits_5 
  (rec__ada___dw1000__register_types__sys_status_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref5
 (us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__13__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ()
((us_rep5 (us_repqtmk5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___split_fields__13__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun bool_eq5 ((a us_rep5)
  (b us_rep5)) Bool (ite (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__irqs
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__irqs
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__cplock
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__cplock
                                                    (us_split_fields11 b)))))
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__esyncr
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__esyncr
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__aat
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__aat
                                                    (us_split_fields11 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txfrb
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txfrb
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txprs
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txprs
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txphs
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txphs
                                                    (us_split_fields11 b))))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txfrs
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txfrs
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxprd
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxprd
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxsfdd
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxsfdd
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__ldedone
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__ldedone
                                                    (us_split_fields11 b)))))))
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxphd
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxphd
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxphe
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxphe
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxdfr
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxdfr
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxfcg
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxfcg
                                                    (us_split_fields11 b))))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxfce
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxfce
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxrfsl
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxrfsl
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxrfto
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxrfto
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__ldeerr
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__ldeerr
                                                    (us_split_fields11 b))))))))
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxovrr
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxovrr
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxpto
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxpto
                                                    (us_split_fields11 b)))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__gpioirq
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__gpioirq
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__slp2init
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__slp2init
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rfpll_ll
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rfpll_ll
                                                    (us_split_fields11 b))))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__clkpll_ll
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__clkpll_ll
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxsfdto
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxsfdto
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__hpdwarn
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__hpdwarn
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txberr
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txberr
                                                    (us_split_fields11 b)))))))
                         (and
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__affrej
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__affrej
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__hsrbp
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__hsrbp
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__icrbp
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__icrbp
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxrscs
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxrscs
                                                    (us_split_fields11 b))))))
                         (and
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__rxprej
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__rxprej
                                                    (us_split_fields11 b))))
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__txpute
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__txpute
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep6
                            (rec__ada___dw1000__register_types__sys_status_type__reserved_1
                            (us_split_fields11 a))) (to_rep6
                                                    (rec__ada___dw1000__register_types__sys_status_type__reserved_1
                                                    (us_split_fields11 b))))
                         (= (to_rep5
                            (rec__ada___dw1000__register_types__sys_status_type__reserved_2
                            (us_split_fields11 a))) (to_rep5
                                                    (rec__ada___dw1000__register_types__sys_status_type__reserved_2
                                                    (us_split_fields11 b))))))))))
                    true false))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const ada___dw1000__register_types__sys_status_type__irqs__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__irqs__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__irqs__position Int)

;; ada___dw1000__register_types__sys_status_type__irqs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__irqs__first__bit))

;; ada___dw1000__register_types__sys_status_type__irqs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__irqs__first__bit 
  ada___dw1000__register_types__sys_status_type__irqs__last__bit))

;; ada___dw1000__register_types__sys_status_type__irqs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__irqs__position))

(declare-const ada___dw1000__register_types__sys_status_type__cplock__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__cplock__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__cplock__position Int)

;; ada___dw1000__register_types__sys_status_type__cplock__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__cplock__first__bit))

;; ada___dw1000__register_types__sys_status_type__cplock__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__cplock__first__bit 
  ada___dw1000__register_types__sys_status_type__cplock__last__bit))

;; ada___dw1000__register_types__sys_status_type__cplock__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__cplock__position))

(declare-const ada___dw1000__register_types__sys_status_type__esyncr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__esyncr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__esyncr__position Int)

;; ada___dw1000__register_types__sys_status_type__esyncr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__esyncr__first__bit))

;; ada___dw1000__register_types__sys_status_type__esyncr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__esyncr__first__bit 
  ada___dw1000__register_types__sys_status_type__esyncr__last__bit))

;; ada___dw1000__register_types__sys_status_type__esyncr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__esyncr__position))

(declare-const ada___dw1000__register_types__sys_status_type__aat__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__aat__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__aat__position Int)

;; ada___dw1000__register_types__sys_status_type__aat__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__aat__first__bit))

;; ada___dw1000__register_types__sys_status_type__aat__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__aat__first__bit ada___dw1000__register_types__sys_status_type__aat__last__bit))

;; ada___dw1000__register_types__sys_status_type__aat__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__aat__position))

(declare-const ada___dw1000__register_types__sys_status_type__txfrb__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txfrb__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txfrb__position Int)

;; ada___dw1000__register_types__sys_status_type__txfrb__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txfrb__first__bit))

;; ada___dw1000__register_types__sys_status_type__txfrb__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txfrb__first__bit 
  ada___dw1000__register_types__sys_status_type__txfrb__last__bit))

;; ada___dw1000__register_types__sys_status_type__txfrb__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txfrb__position))

(declare-const ada___dw1000__register_types__sys_status_type__txprs__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txprs__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txprs__position Int)

;; ada___dw1000__register_types__sys_status_type__txprs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txprs__first__bit))

;; ada___dw1000__register_types__sys_status_type__txprs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txprs__first__bit 
  ada___dw1000__register_types__sys_status_type__txprs__last__bit))

;; ada___dw1000__register_types__sys_status_type__txprs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txprs__position))

(declare-const ada___dw1000__register_types__sys_status_type__txphs__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txphs__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txphs__position Int)

;; ada___dw1000__register_types__sys_status_type__txphs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txphs__first__bit))

;; ada___dw1000__register_types__sys_status_type__txphs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txphs__first__bit 
  ada___dw1000__register_types__sys_status_type__txphs__last__bit))

;; ada___dw1000__register_types__sys_status_type__txphs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txphs__position))

(declare-const ada___dw1000__register_types__sys_status_type__txfrs__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txfrs__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txfrs__position Int)

;; ada___dw1000__register_types__sys_status_type__txfrs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txfrs__first__bit))

;; ada___dw1000__register_types__sys_status_type__txfrs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txfrs__first__bit 
  ada___dw1000__register_types__sys_status_type__txfrs__last__bit))

;; ada___dw1000__register_types__sys_status_type__txfrs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txfrs__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxprd__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxprd__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxprd__position Int)

;; ada___dw1000__register_types__sys_status_type__rxprd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxprd__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxprd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxprd__first__bit 
  ada___dw1000__register_types__sys_status_type__rxprd__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxprd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxprd__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdd__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdd__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdd__position Int)

;; ada___dw1000__register_types__sys_status_type__rxsfdd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxsfdd__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxsfdd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxsfdd__first__bit 
  ada___dw1000__register_types__sys_status_type__rxsfdd__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxsfdd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxsfdd__position))

(declare-const ada___dw1000__register_types__sys_status_type__ldedone__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__ldedone__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__ldedone__position Int)

;; ada___dw1000__register_types__sys_status_type__ldedone__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__ldedone__first__bit))

;; ada___dw1000__register_types__sys_status_type__ldedone__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__ldedone__first__bit 
  ada___dw1000__register_types__sys_status_type__ldedone__last__bit))

;; ada___dw1000__register_types__sys_status_type__ldedone__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__ldedone__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxphd__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxphd__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxphd__position Int)

;; ada___dw1000__register_types__sys_status_type__rxphd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxphd__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxphd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxphd__first__bit 
  ada___dw1000__register_types__sys_status_type__rxphd__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxphd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxphd__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxphe__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxphe__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxphe__position Int)

;; ada___dw1000__register_types__sys_status_type__rxphe__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxphe__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxphe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxphe__first__bit 
  ada___dw1000__register_types__sys_status_type__rxphe__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxphe__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxphe__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxdfr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxdfr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxdfr__position Int)

;; ada___dw1000__register_types__sys_status_type__rxdfr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxdfr__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxdfr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxdfr__first__bit 
  ada___dw1000__register_types__sys_status_type__rxdfr__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxdfr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxdfr__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxfcg__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxfcg__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxfcg__position Int)

;; ada___dw1000__register_types__sys_status_type__rxfcg__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxfcg__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxfcg__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxfcg__first__bit 
  ada___dw1000__register_types__sys_status_type__rxfcg__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxfcg__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxfcg__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxfce__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxfce__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxfce__position Int)

;; ada___dw1000__register_types__sys_status_type__rxfce__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxfce__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxfce__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxfce__first__bit 
  ada___dw1000__register_types__sys_status_type__rxfce__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxfce__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxfce__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxrfsl__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrfsl__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrfsl__position Int)

;; ada___dw1000__register_types__sys_status_type__rxrfsl__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrfsl__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxrfsl__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxrfsl__first__bit 
  ada___dw1000__register_types__sys_status_type__rxrfsl__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxrfsl__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrfsl__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxrfto__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrfto__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrfto__position Int)

;; ada___dw1000__register_types__sys_status_type__rxrfto__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrfto__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxrfto__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxrfto__first__bit 
  ada___dw1000__register_types__sys_status_type__rxrfto__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxrfto__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrfto__position))

(declare-const ada___dw1000__register_types__sys_status_type__ldeerr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__ldeerr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__ldeerr__position Int)

;; ada___dw1000__register_types__sys_status_type__ldeerr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__ldeerr__first__bit))

;; ada___dw1000__register_types__sys_status_type__ldeerr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__ldeerr__first__bit 
  ada___dw1000__register_types__sys_status_type__ldeerr__last__bit))

;; ada___dw1000__register_types__sys_status_type__ldeerr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__ldeerr__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxovrr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxovrr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxovrr__position Int)

;; ada___dw1000__register_types__sys_status_type__rxovrr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxovrr__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxovrr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxovrr__first__bit 
  ada___dw1000__register_types__sys_status_type__rxovrr__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxovrr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxovrr__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxpto__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxpto__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxpto__position Int)

;; ada___dw1000__register_types__sys_status_type__rxpto__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxpto__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxpto__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxpto__first__bit 
  ada___dw1000__register_types__sys_status_type__rxpto__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxpto__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxpto__position))

(declare-const ada___dw1000__register_types__sys_status_type__gpioirq__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__gpioirq__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__gpioirq__position Int)

;; ada___dw1000__register_types__sys_status_type__gpioirq__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__gpioirq__first__bit))

;; ada___dw1000__register_types__sys_status_type__gpioirq__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__gpioirq__first__bit 
  ada___dw1000__register_types__sys_status_type__gpioirq__last__bit))

;; ada___dw1000__register_types__sys_status_type__gpioirq__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__gpioirq__position))

(declare-const ada___dw1000__register_types__sys_status_type__slp2init__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__slp2init__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__slp2init__position Int)

;; ada___dw1000__register_types__sys_status_type__slp2init__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__slp2init__first__bit))

;; ada___dw1000__register_types__sys_status_type__slp2init__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__slp2init__first__bit 
  ada___dw1000__register_types__sys_status_type__slp2init__last__bit))

;; ada___dw1000__register_types__sys_status_type__slp2init__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__slp2init__position))

(declare-const ada___dw1000__register_types__sys_status_type__rfpll_ll__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rfpll_ll__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rfpll_ll__position Int)

;; ada___dw1000__register_types__sys_status_type__rfpll_ll__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rfpll_ll__first__bit))

;; ada___dw1000__register_types__sys_status_type__rfpll_ll__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rfpll_ll__first__bit 
  ada___dw1000__register_types__sys_status_type__rfpll_ll__last__bit))

;; ada___dw1000__register_types__sys_status_type__rfpll_ll__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rfpll_ll__position))

(declare-const ada___dw1000__register_types__sys_status_type__clkpll_ll__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__clkpll_ll__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__clkpll_ll__position Int)

;; ada___dw1000__register_types__sys_status_type__clkpll_ll__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__clkpll_ll__first__bit))

;; ada___dw1000__register_types__sys_status_type__clkpll_ll__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__clkpll_ll__first__bit 
  ada___dw1000__register_types__sys_status_type__clkpll_ll__last__bit))

;; ada___dw1000__register_types__sys_status_type__clkpll_ll__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__clkpll_ll__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdto__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdto__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxsfdto__position Int)

;; ada___dw1000__register_types__sys_status_type__rxsfdto__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxsfdto__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxsfdto__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxsfdto__first__bit 
  ada___dw1000__register_types__sys_status_type__rxsfdto__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxsfdto__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxsfdto__position))

(declare-const ada___dw1000__register_types__sys_status_type__hpdwarn__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__hpdwarn__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__hpdwarn__position Int)

;; ada___dw1000__register_types__sys_status_type__hpdwarn__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__hpdwarn__first__bit))

;; ada___dw1000__register_types__sys_status_type__hpdwarn__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__hpdwarn__first__bit 
  ada___dw1000__register_types__sys_status_type__hpdwarn__last__bit))

;; ada___dw1000__register_types__sys_status_type__hpdwarn__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__hpdwarn__position))

(declare-const ada___dw1000__register_types__sys_status_type__txberr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txberr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txberr__position Int)

;; ada___dw1000__register_types__sys_status_type__txberr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txberr__first__bit))

;; ada___dw1000__register_types__sys_status_type__txberr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txberr__first__bit 
  ada___dw1000__register_types__sys_status_type__txberr__last__bit))

;; ada___dw1000__register_types__sys_status_type__txberr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txberr__position))

(declare-const ada___dw1000__register_types__sys_status_type__affrej__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__affrej__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__affrej__position Int)

;; ada___dw1000__register_types__sys_status_type__affrej__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__affrej__first__bit))

;; ada___dw1000__register_types__sys_status_type__affrej__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__affrej__first__bit 
  ada___dw1000__register_types__sys_status_type__affrej__last__bit))

;; ada___dw1000__register_types__sys_status_type__affrej__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__affrej__position))

(declare-const ada___dw1000__register_types__sys_status_type__hsrbp__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__hsrbp__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__hsrbp__position Int)

;; ada___dw1000__register_types__sys_status_type__hsrbp__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__hsrbp__first__bit))

;; ada___dw1000__register_types__sys_status_type__hsrbp__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__hsrbp__first__bit 
  ada___dw1000__register_types__sys_status_type__hsrbp__last__bit))

;; ada___dw1000__register_types__sys_status_type__hsrbp__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__hsrbp__position))

(declare-const ada___dw1000__register_types__sys_status_type__icrbp__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__icrbp__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__icrbp__position Int)

;; ada___dw1000__register_types__sys_status_type__icrbp__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__icrbp__first__bit))

;; ada___dw1000__register_types__sys_status_type__icrbp__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__icrbp__first__bit 
  ada___dw1000__register_types__sys_status_type__icrbp__last__bit))

;; ada___dw1000__register_types__sys_status_type__icrbp__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__icrbp__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxrscs__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrscs__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxrscs__position Int)

;; ada___dw1000__register_types__sys_status_type__rxrscs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrscs__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxrscs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxrscs__first__bit 
  ada___dw1000__register_types__sys_status_type__rxrscs__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxrscs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxrscs__position))

(declare-const ada___dw1000__register_types__sys_status_type__rxprej__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxprej__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__rxprej__position Int)

;; ada___dw1000__register_types__sys_status_type__rxprej__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxprej__first__bit))

;; ada___dw1000__register_types__sys_status_type__rxprej__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__rxprej__first__bit 
  ada___dw1000__register_types__sys_status_type__rxprej__last__bit))

;; ada___dw1000__register_types__sys_status_type__rxprej__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__rxprej__position))

(declare-const ada___dw1000__register_types__sys_status_type__txpute__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txpute__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__txpute__position Int)

;; ada___dw1000__register_types__sys_status_type__txpute__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txpute__first__bit))

;; ada___dw1000__register_types__sys_status_type__txpute__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__txpute__first__bit 
  ada___dw1000__register_types__sys_status_type__txpute__last__bit))

;; ada___dw1000__register_types__sys_status_type__txpute__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__txpute__position))

(declare-const ada___dw1000__register_types__sys_status_type__reserved_1__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__reserved_1__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__reserved_1__position Int)

;; ada___dw1000__register_types__sys_status_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__reserved_1__first__bit))

;; ada___dw1000__register_types__sys_status_type__reserved_1__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__reserved_1__first__bit 
  ada___dw1000__register_types__sys_status_type__reserved_1__last__bit))

;; ada___dw1000__register_types__sys_status_type__reserved_1__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__reserved_1__position))

(declare-const ada___dw1000__register_types__sys_status_type__reserved_2__first__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__reserved_2__last__bit Int)

(declare-const ada___dw1000__register_types__sys_status_type__reserved_2__position Int)

;; ada___dw1000__register_types__sys_status_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__reserved_2__first__bit))

;; ada___dw1000__register_types__sys_status_type__reserved_2__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_status_type__reserved_2__first__bit 
  ada___dw1000__register_types__sys_status_type__reserved_2__last__bit))

;; ada___dw1000__register_types__sys_status_type__reserved_2__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_status_type__reserved_2__position))

(declare-fun user_eq17 (us_rep5 us_rep5) Bool)

(declare-const dummy14 us_rep5)

(declare-datatypes ()
((sys_status_type__ref
 (sys_status_type__refqtmk (sys_status_type__content us_rep5)))))
(define-fun sys_status_type__ref_sys_status_type__content__projection ((a sys_status_type__ref)) us_rep5 
  (sys_status_type__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-datatypes ()
((register_type__ref
 (register_type__refqtmk (register_type__content us_rep5)))))
(define-fun register_type__ref_register_type__content__8__projection ((a register_type__ref)) us_rep5 
  (register_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range
                                    temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_276 Int)
  (temp___is_init_272 Bool) (temp___skip_constant_273 Bool)
  (temp___do_toplevel_274 Bool)
  (temp___do_typ_inv_275 Bool)) Bool (=>
                                     (or (= temp___is_init_272 true)
                                     (<= 0 1024)) (in_range3
                                     temp___expr_276)))

(define-fun dynamic_invariant3 ((temp___expr_283 Int)
  (temp___is_init_279 Bool) (temp___skip_constant_280 Bool)
  (temp___do_toplevel_281 Bool)
  (temp___do_typ_inv_282 Bool)) Bool (=>
                                     (or (= temp___is_init_279 true)
                                     (<= 0 5)) (in_range4 temp___expr_283)))

(define-fun dynamic_invariant4 ((temp___expr_310 us_rep)
  (temp___is_init_306 Bool) (temp___skip_constant_307 Bool)
  (temp___do_toplevel_308 Bool)
  (temp___do_typ_inv_309 Bool)) Bool (=> (= temp___do_toplevel_308 true)
                                     (=> (= temp___is_init_306 true)
                                     (ite (= (to_rep1
                                             (rec__decadriver__rx_frame_type__error
                                             (us_split_fields1
                                             temp___expr_310))) 0)
                                     (< 0 (to_rep
                                          (rec__decadriver__rx_frame_type__size
                                          (us_split_fields1 temp___expr_310))))
                                     (= (to_rep
                                        (rec__decadriver__rx_frame_type__size
                                        (us_split_fields1 temp___expr_310))) 0)))))

(define-fun dynamic_predicate ((temp___321 us_rep)) Bool (ite (= (to_rep1
                                                                 (rec__decadriver__rx_frame_type__error
                                                                 (us_split_fields1
                                                                 temp___321))) 0)
                                                         (< 0 (to_rep
                                                              (rec__decadriver__rx_frame_type__size
                                                              (us_split_fields1
                                                              temp___321))))
                                                         (= (to_rep
                                                            (rec__decadriver__rx_frame_type__size
                                                            (us_split_fields1
                                                            temp___321))) 0)))

(define-fun dynamic_invariant5 ((temp___expr_327 (_ BitVec 8))
  (temp___is_init_323 Bool) (temp___skip_constant_324 Bool)
  (temp___do_toplevel_325 Bool)
  (temp___do_typ_inv_326 Bool)) Bool (=>
                                     (or (= temp___is_init_323 true)
                                     (bvule #x00 #x01)) (in_range1
                                     temp___expr_327)))

;; def_axiom
  (assert
  (forall ((temp___405 us_rep))
  (=> (dynamic_invariant4 temp___405 true true true true)
  (forall ((temp___406 (_ BitVec 8)))
  (= (select (temp_____aggregate_def_403 temp___405) temp___406) temp___405)))))

(define-fun dynamic_invariant6 ((temp___expr_359 (_ BitVec 32))
  (temp___is_init_355 Bool) (temp___skip_constant_356 Bool)
  (temp___do_toplevel_357 Bool) (temp___do_typ_inv_358 Bool)) Bool true)

;; def_axiom
  (assert
  (forall ((temp___527 (_ BitVec 32)))
  (=> (dynamic_invariant6 temp___527 true true true true)
  (forall ((temp___528 Int))
  (= (to_rep9 (select (temp_____aggregate_def_525 temp___527) temp___528)) temp___527)))))

(define-fun dynamic_invariant7 ((temp___expr_468 (_ BitVec 8))
  (temp___is_init_464 Bool) (temp___skip_constant_465 Bool)
  (temp___do_toplevel_466 Bool)
  (temp___do_typ_inv_467 Bool)) Bool (=>
                                     (or (= temp___is_init_464 true)
                                     (bvule #x00 #x01)) (in_range6
                                     temp___expr_468)))

(define-fun dynamic_invariant8 ((temp___expr_475 (_ BitVec 8))
  (temp___is_init_471 Bool) (temp___skip_constant_472 Bool)
  (temp___do_toplevel_473 Bool)
  (temp___do_typ_inv_474 Bool)) Bool (=>
                                     (or (= temp___is_init_471 true)
                                     (bvule #x00 #x03)) (in_range7
                                     temp___expr_475)))

(define-fun dynamic_invariant9 ((temp___expr_482 (_ BitVec 8))
  (temp___is_init_478 Bool) (temp___skip_constant_479 Bool)
  (temp___do_toplevel_480 Bool)
  (temp___do_typ_inv_481 Bool)) Bool (=>
                                     (or (= temp___is_init_478 true)
                                     (bvule #x00 #x07)) (in_range8
                                     temp___expr_482)))

(define-fun dynamic_invariant10 ((temp___expr_461 (_ BitVec 8))
  (temp___is_init_457 Bool) (temp___skip_constant_458 Bool)
  (temp___do_toplevel_459 Bool)
  (temp___do_typ_inv_460 Bool)) Bool (=>
                                     (or (= temp___is_init_457 true)
                                     (bvule #x00 #x1F)) (in_range5
                                     temp___expr_461)))

(define-fun dynamic_invariant11 ((temp___expr_297 (_ BitVec 8))
  (temp___is_init_293 Bool) (temp___skip_constant_294 Bool)
  (temp___do_toplevel_295 Bool) (temp___do_typ_inv_296 Bool)) Bool true)

(define-fun dynamic_invariant12 ((temp___expr_454 (_ BitVec 16))
  (temp___is_init_450 Bool) (temp___skip_constant_451 Bool)
  (temp___do_toplevel_452 Bool) (temp___do_typ_inv_453 Bool)) Bool true)

;; def_axiom
  (assert
  (forall ((temp___409 (_ BitVec 8)))
  (=> (dynamic_invariant11 temp___409 true true true true)
  (forall ((temp___410 Int))
  (= (to_rep2 (select (temp_____aggregate_def_407 temp___409) temp___410)) temp___409)))))

(declare-const receiver__split_fields us_split_fields2)

(declare-const transmitter__split_fields Bool)

(declare-const sys_status_reg__split_fields us_split_fields10)

(declare-const self__ us_split_fields8)

;; Assume
  (assert (dynamic_invariant (us_repqtmk1 receiver__split_fields) true false
  true true))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

(declare-const o bits_5)

;; Ensures
  (assert (= (to_rep5 o) #x00))

(declare-const o1 bits_1)

;; Ensures
  (assert (= (to_rep6 o1) #x00))

(declare-const o2 bits_1)

;; Ensures
  (assert (= (to_rep6 o2) #x00))

(declare-const o3 bits_1)

;; Ensures
  (assert (= (to_rep6 o3) #x00))

(declare-const o4 bits_1)

;; Ensures
  (assert (= (to_rep6 o4) #x00))

(declare-const o5 bits_1)

;; Ensures
  (assert (= (to_rep6 o5) #x00))

(declare-const o6 bits_1)

;; Ensures
  (assert (= (to_rep6 o6) #x00))

(declare-const o7 bits_1)

;; Ensures
  (assert (= (to_rep6 o7) #x00))

(declare-const o8 bits_1)

;; Ensures
  (assert (= (to_rep6 o8) #x00))

(declare-const o9 bits_1)

;; Ensures
  (assert (= (to_rep6 o9) #x00))

(declare-const o10 bits_1)

;; Ensures
  (assert (= (to_rep6 o10) #x00))

(declare-const o11 bits_1)

;; Ensures
  (assert (= (to_rep6 o11) #x00))

(declare-const o12 bits_1)

;; Ensures
  (assert (= (to_rep6 o12) #x00))

(declare-const o13 bits_1)

;; Ensures
  (assert (= (to_rep6 o13) #x00))

(declare-const o14 bits_1)

;; Ensures
  (assert (= (to_rep6 o14) #x00))

(declare-const o15 bits_1)

;; Ensures
  (assert (= (to_rep6 o15) #x00))

(declare-const o16 bits_1)

;; Ensures
  (assert (= (to_rep6 o16) #x00))

(declare-const o17 bits_1)

;; Ensures
  (assert (= (to_rep6 o17) #x00))

(declare-const o18 bits_1)

;; Ensures
  (assert (= (to_rep6 o18) #x00))

(declare-const o19 bits_1)

;; Ensures
  (assert (= (to_rep6 o19) #x00))

(declare-const o20 bits_1)

;; Ensures
  (assert (= (to_rep6 o20) #x00))

(declare-const o21 bits_1)

;; Ensures
  (assert (= (to_rep6 o21) #x00))

(declare-const o22 bits_1)

;; Ensures
  (assert (= (to_rep6 o22) #x00))

(declare-const o23 bits_1)

;; Ensures
  (assert (= (to_rep6 o23) #x00))

(declare-const o24 bits_1)

;; Ensures
  (assert (= (to_rep6 o24) #x00))

(declare-const o25 bits_1)

;; Ensures
  (assert (= (to_rep6 o25) #x00))

(declare-const o26 bits_1)

;; Ensures
  (assert (= (to_rep6 o26) #x00))

(declare-const o27 bits_1)

;; Ensures
  (assert (= (to_rep6 o27) #x00))

(declare-const o28 bits_1)

;; Ensures
  (assert (= (to_rep6 o28) #x00))

(declare-const o29 bits_1)

;; Ensures
  (assert (= (to_rep6 o29) #x00))

(declare-const o30 bits_1)

;; Ensures
  (assert (= (to_rep6 o30) #x00))

(declare-const o31 bits_1)

;; Ensures
  (assert (= (to_rep6 o31) #x00))

(declare-const o32 bits_1)

;; Ensures
  (assert (= (to_rep6 o32) #x00))

(declare-const o33 bits_1)

;; Ensures
  (assert (= (to_rep6 o33) #x00))

(declare-const o34 bits_1)

;; Ensures
  (assert (= (to_rep6 o34) #x00))

(declare-const o35 bits_1)

;; Ensures
  (assert (= (to_rep6 o35) #x00))

(declare-const sys_status_clear__split_fields us_split_fields10)

;; H
  (assert
  (= sys_status_clear__split_fields (us_split_fieldsqtmk5 o35 o34 o33 
                                    o32 o31 o30 o29 o28 o27 o26 o25 o24 
                                    o23 o22 o21 o20 o19 o18 o17 o16 o15 
                                    o14 o13 o12 o11 o10 o9 o8 o7 o6 o5 
                                    o4 o3 o2 o1 o)))

;; Assume
  (assert true)

(declare-const ada___dw1000__registers__sys_status__read__reg__fields us_split_fields10)

;; Ensures
  (assert true)

(declare-const sys_status_reg__split_fields1 us_split_fields10)

;; H
  (assert
  (= sys_status_reg__split_fields1 ada___dw1000__registers__sys_status__read__reg__fields))

(declare-const o36 (_ BitVec 8))

;; Ensures
  (assert
  (= (to_rep6
     (rec__ada___dw1000__register_types__sys_status_type__rxrfto
     sys_status_reg__split_fields1)) o36))

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (= o36 #x01) true false)))

;; H
  (assert (= spark__branch true))

(declare-const spark__branch1 Bool)

;; H
  (assert
  (= spark__branch1 (rec__decadriver__driver_type__detect_frame_timeout
                    self__)))

;; H
  (assert (= spark__branch1 true))

(declare-const receiver__split_fields1 us_split_fields2)

;; Assume
  (assert (dynamic_invariant (us_repqtmk1 receiver__split_fields1) true true
  true true))

(assert
;; defqtvc
 ;; File "decadriver.ads", line 331, characters 0-0
  (not (not (= 1 0))))
(check-sat)

(exit)
