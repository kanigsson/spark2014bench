(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(define-fun fp.isFinite32 ((x Float32)) Bool (not (or (fp.isInfinite x) (fp.isNaN x))))
(define-fun fp.isIntegral32 ((x Float32)) Bool (or (fp.isZero x) (and (fp.isNormal x) (= x (fp.roundToIntegral RNE x)))))
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ()
((character__ref (character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep (select a temp___idx_91)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep (select a temp___idx_91)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((string____ref (string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq2 (us_rep us_rep) Bool)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((time_span__ref (time_span__refqtmk (time_span__content us_rep)))))
(define-fun time_span__ref_time_span__content__projection ((a time_span__ref)) us_rep 
  (time_span__content a))

(declare-fun milliseconds (Int) us_rep)

(declare-fun milliseconds__function_guard (us_rep Int) Bool)

(declare-fun pow2 (Int) Int)

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                (fp.isPositive x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                 (fp.isNegative x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero x)
                                            (fp.isPositive x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero x)
                                             (fp.isNegative x)))

(declare-fun of_int (RoundingMode Int) Float32)

(declare-const max_int Int)

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isPositive y))
                    (and (fp.isNegative x) (fp.isNegative y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isNegative y))
                    (and (fp.isNegative x) (fp.isPositive y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive z))
                    (=> (diff_sign x y) (fp.isNegative z))))

(define-fun sqr ((x Real)) Real (* x x))

(declare-fun sqrt1 (Real) Real)

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive x) (< 0.0 r))
                 (and (fp.isNegative x) (< r 0.0))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content Float32)))))
(declare-sort monitoring_mode_t 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq5 (monitoring_mode_t monitoring_mode_t) Bool)

(declare-const dummy5 monitoring_mode_t)

(declare-datatypes ()
((monitoring_mode_t__ref
 (monitoring_mode_t__refqtmk (monitoring_mode_t__content monitoring_mode_t)))))
(define-fun monitoring_mode_t__ref_monitoring_mode_t__content__projection ((a monitoring_mode_t__ref)) monitoring_mode_t 
  (monitoring_mode_t__content a))

(declare-fun to_rep2 (monitoring_mode_t) Int)

(declare-fun of_rep2 (Int) monitoring_mode_t)

;; inversion_axiom
  (assert
  (forall ((x monitoring_mode_t))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x monitoring_mode_t)) (! (in_range3
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort float_natural1000 0)

(define-fun in_range4 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) x)
                                         (fp.leq x (fp #b0 #b10001000 #b11110100000000000000000)))))

(declare-fun user_eq6 (float_natural1000 float_natural1000) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE4 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Float32)

(declare-const dummy6 float_natural1000)

(declare-datatypes ()
((float_natural1000__ref
 (float_natural1000__refqtmk (float_natural1000__content float_natural1000)))))
(define-fun float_natural1000__ref_float_natural1000__content__projection ((a float_natural1000__ref)) float_natural1000 
  (float_natural1000__content a))

(declare-fun to_rep3 (float_natural1000) Float32)

(declare-fun of_rep3 (Float32) float_natural1000)

;; inversion_axiom
  (assert
  (forall ((x float_natural1000))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x float_natural1000)) (! (in_range4
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort float_positive10 0)

(define-fun in_range5 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp #b0 #b01111111 #b00000000000000000000000) x)
                                         (fp.leq x (fp #b0 #b10000010 #b01000000000000000000000)))))

(declare-fun user_eq7 (float_positive10 float_positive10) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE5 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Float32)

(declare-const dummy7 float_positive10)

(declare-datatypes ()
((float_positive10__ref
 (float_positive10__refqtmk (float_positive10__content float_positive10)))))
(define-fun float_positive10__ref_float_positive10__content__projection ((a float_positive10__ref)) float_positive10 
  (float_positive10__content a))

(declare-fun to_rep4 (float_positive10) Float32)

(declare-fun of_rep4 (Float32) float_positive10)

;; inversion_axiom
  (assert
  (forall ((x float_positive10))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x float_positive10)) (! (in_range5
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort float_signed1000 0)

(define-fun in_range6 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp.neg (fp #b0 #b10001000 #b11110100000000000000000)) x)
                                         (fp.leq x (fp #b0 #b10001000 #b11110100000000000000000)))))

(declare-fun user_eq8 (float_signed1000 float_signed1000) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE6 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Float32)

(declare-const dummy8 float_signed1000)

(declare-datatypes ()
((float_signed1000__ref
 (float_signed1000__refqtmk (float_signed1000__content float_signed1000)))))
(define-fun float_signed1000__ref_float_signed1000__content__projection ((a float_signed1000__ref)) float_signed1000 
  (float_signed1000__content a))

(declare-fun to_rep5 (float_signed1000) Float32)

(declare-fun of_rep5 (Float32) float_signed1000)

;; inversion_axiom
  (assert
  (forall ((x float_signed1000))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x float_signed1000)) (! (in_range6
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__psu_monitoring__monitor_config_t__monitoring_mode monitoring_mode_t)(rec__psu_monitoring__monitor_config_t__mean float_signed1000)(rec__psu_monitoring__monitor_config_t__maximum_deviation float_natural1000)(rec__psu_monitoring__monitor_config_t__lower_threshold float_signed1000)(rec__psu_monitoring__monitor_config_t__upper_threshold float_signed1000)(rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion float_positive10)(rec__psu_monitoring__monitor_config_t__startup_time us_rep)(rec__psu_monitoring__monitor_config_t__settling_time us_rep)(rec__psu_monitoring__monitor_config_t__violation_time us_rep)(rec__psu_monitoring__monitor_config_t__retry_time us_rep)))))
(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__monitoring_mode__projection ((a us_split_fields)) monitoring_mode_t 
  (rec__psu_monitoring__monitor_config_t__monitoring_mode a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__mean__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__mean a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__maximum_deviation__projection ((a us_split_fields)) float_natural1000 
  (rec__psu_monitoring__monitor_config_t__maximum_deviation a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__lower_threshold__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__lower_threshold a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__upper_threshold__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__upper_threshold a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion__projection ((a us_split_fields)) float_positive10 
  (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__startup_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__startup_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__settling_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__settling_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__violation_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__violation_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__retry_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__retry_time a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep1 (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep2
                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                            (us_split_fields1 a))) (to_rep2
                                                   (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                                   (us_split_fields1 b))))
                         (fp.eq (to_rep5
                                (rec__psu_monitoring__monitor_config_t__mean
                                (us_split_fields1 a))) (to_rep5
                                                       (rec__psu_monitoring__monitor_config_t__mean
                                                       (us_split_fields1 b)))))
                         (and
                         (and
                         (and
                         (fp.eq (to_rep3
                                (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                (us_split_fields1 a))) (to_rep3
                                                       (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                                       (us_split_fields1 b))))
                         (fp.eq (to_rep5
                                (rec__psu_monitoring__monitor_config_t__lower_threshold
                                (us_split_fields1 a))) (to_rep5
                                                       (rec__psu_monitoring__monitor_config_t__lower_threshold
                                                       (us_split_fields1 b)))))
                         (and
                         (fp.eq (to_rep5
                                (rec__psu_monitoring__monitor_config_t__upper_threshold
                                (us_split_fields1 a))) (to_rep5
                                                       (rec__psu_monitoring__monitor_config_t__upper_threshold
                                                       (us_split_fields1 b))))
                         (fp.eq (to_rep4
                                (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                (us_split_fields1 a))) (to_rep4
                                                       (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                                       (us_split_fields1 b))))))
                         (and
                         (and
                         (= (bool_eq2
                            (rec__psu_monitoring__monitor_config_t__startup_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__startup_time
                            (us_split_fields1 b))) true)
                         (= (bool_eq2
                            (rec__psu_monitoring__monitor_config_t__settling_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__settling_time
                            (us_split_fields1 b))) true))
                         (and
                         (= (bool_eq2
                            (rec__psu_monitoring__monitor_config_t__violation_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__violation_time
                            (us_split_fields1 b))) true)
                         (= (bool_eq2
                            (rec__psu_monitoring__monitor_config_t__retry_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__retry_time
                            (us_split_fields1 b))) true)))))
                    true false))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__position Int)

;; psu_monitoring__monitor_config_t__monitoring_mode__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__monitoring_mode__first__bit))

;; psu_monitoring__monitor_config_t__monitoring_mode__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__monitoring_mode__first__bit psu_monitoring__monitor_config_t__monitoring_mode__last__bit))

;; psu_monitoring__monitor_config_t__monitoring_mode__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__monitoring_mode__position))

(declare-const psu_monitoring__monitor_config_t__mean__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__mean__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__mean__position Int)

;; psu_monitoring__monitor_config_t__mean__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__mean__first__bit))

;; psu_monitoring__monitor_config_t__mean__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__mean__first__bit psu_monitoring__monitor_config_t__mean__last__bit))

;; psu_monitoring__monitor_config_t__mean__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__mean__position))

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__position Int)

;; psu_monitoring__monitor_config_t__maximum_deviation__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__maximum_deviation__first__bit))

;; psu_monitoring__monitor_config_t__maximum_deviation__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__maximum_deviation__first__bit 
  psu_monitoring__monitor_config_t__maximum_deviation__last__bit))

;; psu_monitoring__monitor_config_t__maximum_deviation__position_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__maximum_deviation__position))

(declare-const psu_monitoring__monitor_config_t__lower_threshold__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__lower_threshold__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__lower_threshold__position Int)

;; psu_monitoring__monitor_config_t__lower_threshold__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__lower_threshold__first__bit))

;; psu_monitoring__monitor_config_t__lower_threshold__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__lower_threshold__first__bit psu_monitoring__monitor_config_t__lower_threshold__last__bit))

;; psu_monitoring__monitor_config_t__lower_threshold__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__lower_threshold__position))

(declare-const psu_monitoring__monitor_config_t__upper_threshold__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__upper_threshold__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__upper_threshold__position Int)

;; psu_monitoring__monitor_config_t__upper_threshold__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__upper_threshold__first__bit))

;; psu_monitoring__monitor_config_t__upper_threshold__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__upper_threshold__first__bit psu_monitoring__monitor_config_t__upper_threshold__last__bit))

;; psu_monitoring__monitor_config_t__upper_threshold__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__upper_threshold__position))

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__position Int)

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit))

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit 
  psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit))

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__position_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__settling_tolerance_expansion__position))

(declare-const psu_monitoring__monitor_config_t__startup_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__startup_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__startup_time__position Int)

;; psu_monitoring__monitor_config_t__startup_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__startup_time__first__bit))

;; psu_monitoring__monitor_config_t__startup_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__startup_time__first__bit psu_monitoring__monitor_config_t__startup_time__last__bit))

;; psu_monitoring__monitor_config_t__startup_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__startup_time__position))

(declare-const psu_monitoring__monitor_config_t__settling_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_time__position Int)

;; psu_monitoring__monitor_config_t__settling_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__settling_time__first__bit))

;; psu_monitoring__monitor_config_t__settling_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__settling_time__first__bit psu_monitoring__monitor_config_t__settling_time__last__bit))

;; psu_monitoring__monitor_config_t__settling_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__settling_time__position))

(declare-const psu_monitoring__monitor_config_t__violation_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__violation_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__violation_time__position Int)

;; psu_monitoring__monitor_config_t__violation_time__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__violation_time__first__bit))

;; psu_monitoring__monitor_config_t__violation_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__violation_time__first__bit psu_monitoring__monitor_config_t__violation_time__last__bit))

;; psu_monitoring__monitor_config_t__violation_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__violation_time__position))

(declare-const psu_monitoring__monitor_config_t__retry_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__retry_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__retry_time__position Int)

;; psu_monitoring__monitor_config_t__retry_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__retry_time__first__bit))

;; psu_monitoring__monitor_config_t__retry_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__retry_time__first__bit psu_monitoring__monitor_config_t__retry_time__last__bit))

;; psu_monitoring__monitor_config_t__retry_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__retry_time__position))

(declare-fun user_eq9 (us_rep1 us_rep1) Bool)

(declare-const dummy9 us_rep1)

(declare-datatypes ()
((monitor_config_t__ref
 (monitor_config_t__refqtmk (monitor_config_t__content us_rep1)))))
(define-fun monitor_config_t__ref_monitor_config_t__content__projection ((a monitor_config_t__ref)) us_rep1 
  (monitor_config_t__content a))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config us_rep1)(rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set Bool)(rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config us_rep1)(rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set Bool)(rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config us_rep1)(rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set Bool)(rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config us_rep1)(rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config_set Bool)))))
(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__projection ((a us_split_fields2)) us_rep1 
  (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__projection ((a us_split_fields2)) Bool 
  (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set
  a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__projection ((a us_split_fields2)) us_rep1 
  (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__projection ((a us_split_fields2)) Bool 
  (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set
  a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__projection ((a us_split_fields2)) us_rep1 
  (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
  a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__projection ((a us_split_fields2)) Bool 
  (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set
  a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config__projection ((a us_split_fields2)) us_rep1 
  (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
  a))

(define-fun us_split_fields_rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__projection ((a us_split_fields2)) Bool 
  (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config_set
  a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields2 
  (us_split_fields3 a))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_current_config__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_voltage_config__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_current_config__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_output_current_config__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_output_current_config__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_current_config__position))

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__first__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__last__bit Int)

(declare-const psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__position Int)

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__first__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__last__bit_axiom
  (assert
  (< psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__first__bit 
  psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__last__bit))

;; psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__position_axiom
  (assert
  (<= 0 psu_monitoring__monitoring_interface_t__monitor_output_current_config_set__position))

(declare-fun user_eq10 (us_rep2 us_rep2) Bool)

(declare-datatypes ()
((monitoring_interface_t__ref
 (monitoring_interface_t__refqtmk (monitoring_interface_t__content us_rep2)))))
(define-fun monitoring_interface_t__ref_monitoring_interface_t__content__projection ((a monitoring_interface_t__ref)) us_rep2 
  (monitoring_interface_t__content a))

(declare-fun is_all_config_set (us_rep2) Bool)

(declare-fun is_all_config_set__function_guard (Bool us_rep2) Bool)

(define-fun in_range7 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Bool)

(define-fun default_initial_assumption ((temp___expr_265 us_rep2)
  (temp___skip_top_level_266 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                100))))))
                                         (= (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_voltage_config_set
                                            (us_split_fields3
                                            temp___expr_265)) (distinct 0 0)))
                                         (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                100))))))
                                         (= (rec__psu_monitoring__monitoring_interface_t__monitor_pfc_current_config_set
                                            (us_split_fields3
                                            temp___expr_265)) (distinct 0 0)))
                                         (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                100)))))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitoring_interface_t__monitor_output_voltage_config_set
                                            (us_split_fields3
                                            temp___expr_265)) (distinct 0 0))
                                         (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config
                                            (us_split_fields3
                                            temp___expr_265)))) (milliseconds
                                                                100)))))))
                                         (= (rec__psu_monitoring__monitoring_interface_t__monitor_output_current_config_set
                                            (us_split_fields3
                                            temp___expr_265)) (distinct 0 0))))))

;; is_all_config_set__post_axiom
  (assert true)

(declare-fun get_monitor_pfc_voltage_config (us_rep2) us_rep1)

(declare-fun get_monitor_pfc_voltage_config__function_guard (us_rep1
  us_rep2) Bool)

(define-fun default_initial_assumption1 ((temp___expr_229 us_rep1)
  (temp___skip_top_level_230 Bool)) Bool (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            temp___expr_229))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              100)))))))

;; get_monitor_pfc_voltage_config__post_axiom
  (assert true)

(declare-fun get_monitor_pfc_current_config (us_rep2) us_rep1)

(declare-fun get_monitor_pfc_current_config__function_guard (us_rep1
  us_rep2) Bool)

;; get_monitor_pfc_current_config__post_axiom
  (assert true)

(declare-fun get_monitor_output_voltage_config (us_rep2) us_rep1)

(declare-fun get_monitor_output_voltage_config__function_guard (us_rep1
  us_rep2) Bool)

;; get_monitor_output_voltage_config__post_axiom
  (assert true)

(declare-fun get_monitor_output_current_config (us_rep2) us_rep1)

(declare-fun get_monitor_output_current_config__function_guard (us_rep1
  us_rep2) Bool)

;; get_monitor_output_current_config__post_axiom
  (assert true)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const task_period us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort monitor_state_t 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq11 (monitor_state_t monitor_state_t) Bool)

(declare-const dummy10 monitor_state_t)

(declare-datatypes ()
((monitor_state_t__ref
 (monitor_state_t__refqtmk (monitor_state_t__content monitor_state_t)))))
(define-fun monitor_state_t__ref_monitor_state_t__content__projection ((a monitor_state_t__ref)) monitor_state_t 
  (monitor_state_t__content a))

(declare-fun to_rep6 (monitor_state_t) Int)

(declare-fun of_rep6 (Int) monitor_state_t)

;; inversion_axiom
  (assert
  (forall ((x monitor_state_t))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x monitor_state_t)) (! (in_range8
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                              (of_rep6 x))) )))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2
 (rec__psu_monitoring__monitor_t__config us_rep1)(rec__psu_monitoring__monitor_t__timer us_rep)(rec__psu_monitoring__monitor_t__current_state monitor_state_t)(rec__psu_monitoring__monitor_t__next_state monitor_state_t)))))
(define-fun us_split_fields_rec__psu_monitoring__monitor_t__config__projection ((a us_split_fields4)) us_rep1 
  (rec__psu_monitoring__monitor_t__config a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__timer__projection ((a us_split_fields4)) us_rep 
  (rec__psu_monitoring__monitor_t__timer a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__current_state__projection ((a us_split_fields4)) monitor_state_t 
  (rec__psu_monitoring__monitor_t__current_state a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__next_state__projection ((a us_split_fields4)) monitor_state_t 
  (rec__psu_monitoring__monitor_t__next_state a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep3 (us_repqtmk2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep3)) us_split_fields4 
  (us_split_fields5 a))

(define-fun bool_eq4 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (bool_eq3
                            (rec__psu_monitoring__monitor_t__config
                            (us_split_fields5 a))
                            (rec__psu_monitoring__monitor_t__config
                            (us_split_fields5 b))) true)
                         (= (bool_eq2
                            (rec__psu_monitoring__monitor_t__timer
                            (us_split_fields5 a))
                            (rec__psu_monitoring__monitor_t__timer
                            (us_split_fields5 b))) true))
                         (and
                         (= (to_rep6
                            (rec__psu_monitoring__monitor_t__current_state
                            (us_split_fields5 a))) (to_rep6
                                                   (rec__psu_monitoring__monitor_t__current_state
                                                   (us_split_fields5 b))))
                         (= (to_rep6
                            (rec__psu_monitoring__monitor_t__next_state
                            (us_split_fields5 a))) (to_rep6
                                                   (rec__psu_monitoring__monitor_t__next_state
                                                   (us_split_fields5 b))))))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const psu_monitoring__monitor_t__config__first__bit Int)

(declare-const psu_monitoring__monitor_t__config__last__bit Int)

(declare-const psu_monitoring__monitor_t__config__position Int)

;; psu_monitoring__monitor_t__config__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__config__first__bit))

;; psu_monitoring__monitor_t__config__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__config__first__bit psu_monitoring__monitor_t__config__last__bit))

;; psu_monitoring__monitor_t__config__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__config__position))

(declare-const psu_monitoring__monitor_t__timer__first__bit Int)

(declare-const psu_monitoring__monitor_t__timer__last__bit Int)

(declare-const psu_monitoring__monitor_t__timer__position Int)

;; psu_monitoring__monitor_t__timer__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__timer__first__bit))

;; psu_monitoring__monitor_t__timer__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__timer__first__bit psu_monitoring__monitor_t__timer__last__bit))

;; psu_monitoring__monitor_t__timer__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__timer__position))

(declare-const psu_monitoring__monitor_t__current_state__first__bit Int)

(declare-const psu_monitoring__monitor_t__current_state__last__bit Int)

(declare-const psu_monitoring__monitor_t__current_state__position Int)

;; psu_monitoring__monitor_t__current_state__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__current_state__first__bit))

;; psu_monitoring__monitor_t__current_state__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__current_state__first__bit psu_monitoring__monitor_t__current_state__last__bit))

;; psu_monitoring__monitor_t__current_state__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__current_state__position))

(declare-const psu_monitoring__monitor_t__next_state__first__bit Int)

(declare-const psu_monitoring__monitor_t__next_state__last__bit Int)

(declare-const psu_monitoring__monitor_t__next_state__position Int)

;; psu_monitoring__monitor_t__next_state__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__next_state__first__bit))

;; psu_monitoring__monitor_t__next_state__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__next_state__first__bit psu_monitoring__monitor_t__next_state__last__bit))

;; psu_monitoring__monitor_t__next_state__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__next_state__position))

(declare-fun user_eq12 (us_rep3 us_rep3) Bool)

(declare-const dummy11 us_rep3)

(declare-datatypes ()
((monitor_t__ref (monitor_t__refqtmk (monitor_t__content us_rep3)))))
(define-fun monitor_t__ref_monitor_t__content__projection ((a monitor_t__ref)) us_rep3 
  (monitor_t__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun default_initial_assumption2 ((temp___expr_236 us_rep3)
  (temp___skip_top_level_237 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) 0)
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep5
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields5
                                            temp___expr_236)))) (milliseconds
                                                                100))))))
                                         (= (rec__psu_monitoring__monitor_t__timer
                                            (us_split_fields5
                                            temp___expr_236)) (milliseconds
                                                              0)))
                                         (and
                                         (= (to_rep6
                                            (rec__psu_monitoring__monitor_t__current_state
                                            (us_split_fields5
                                            temp___expr_236))) 0)
                                         (= (to_rep6
                                            (rec__psu_monitoring__monitor_t__next_state
                                            (us_split_fields5
                                            temp___expr_236))) 0))))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-sort float__ 0)

(declare-fun user_eq13 (float__ float__) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE9 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Float32)

(declare-const dummy12 float__)

(declare-datatypes ()
((float____ref (float____refqtmk (float____content float__)))))
(define-fun float____ref_float____content__projection ((a float____ref)) float__ 
  (float____content a))

(declare-fun to_rep7 (float__) Float32)

(declare-fun of_rep7 (Float32) float__)

;; inversion_axiom
  (assert
  (forall ((x float__))
  (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; range_axiom
  (assert
  (forall ((x float__))
  (! (fp.isFinite32 (to_rep7 x)) :pattern ((to_rep7 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (fp.isFinite32 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7
                                                                  (of_rep7 x))) )))

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3
 (rec__psu_control__pid_config_t__kp float__)(rec__psu_control__pid_config_t__ki float__)(rec__psu_control__pid_config_t__kd float__)(rec__psu_control__pid_config_t__sp float__)(rec__psu_control__pid_config_t__sn float__)(rec__psu_control__pid_config_t__t float__)))))
(define-fun us_split_fields_rec__psu_control__pid_config_t__kp__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__kp a))

(define-fun us_split_fields_rec__psu_control__pid_config_t__ki__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__ki a))

(define-fun us_split_fields_rec__psu_control__pid_config_t__kd__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__kd a))

(define-fun us_split_fields_rec__psu_control__pid_config_t__sp__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__sp a))

(define-fun us_split_fields_rec__psu_control__pid_config_t__sn__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__sn a))

(define-fun us_split_fields_rec__psu_control__pid_config_t__t__projection ((a us_split_fields6)) float__ 
  (rec__psu_control__pid_config_t__t a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep4 (us_repqtmk3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep4)) us_split_fields6 
  (us_split_fields7 a))

(define-fun bool_eq5 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__kp
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__kp
                                                       (us_split_fields7 b))))
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__ki
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__ki
                                                       (us_split_fields7 b)))))
                         (and
                         (and
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__kd
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__kd
                                                       (us_split_fields7 b))))
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__sp
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__sp
                                                       (us_split_fields7 b)))))
                         (and
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__sn
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__sn
                                                       (us_split_fields7 b))))
                         (fp.eq (to_rep7
                                (rec__psu_control__pid_config_t__t
                                (us_split_fields7 a))) (to_rep7
                                                       (rec__psu_control__pid_config_t__t
                                                       (us_split_fields7 b)))))))
                    true false))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const psu_control__pid_config_t__kp__first__bit Int)

(declare-const psu_control__pid_config_t__kp__last__bit Int)

(declare-const psu_control__pid_config_t__kp__position Int)

;; psu_control__pid_config_t__kp__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__kp__first__bit))

;; psu_control__pid_config_t__kp__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__kp__first__bit psu_control__pid_config_t__kp__last__bit))

;; psu_control__pid_config_t__kp__position_axiom
  (assert (<= 0 psu_control__pid_config_t__kp__position))

(declare-const psu_control__pid_config_t__ki__first__bit Int)

(declare-const psu_control__pid_config_t__ki__last__bit Int)

(declare-const psu_control__pid_config_t__ki__position Int)

;; psu_control__pid_config_t__ki__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__ki__first__bit))

;; psu_control__pid_config_t__ki__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__ki__first__bit psu_control__pid_config_t__ki__last__bit))

;; psu_control__pid_config_t__ki__position_axiom
  (assert (<= 0 psu_control__pid_config_t__ki__position))

(declare-const psu_control__pid_config_t__kd__first__bit Int)

(declare-const psu_control__pid_config_t__kd__last__bit Int)

(declare-const psu_control__pid_config_t__kd__position Int)

;; psu_control__pid_config_t__kd__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__kd__first__bit))

;; psu_control__pid_config_t__kd__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__kd__first__bit psu_control__pid_config_t__kd__last__bit))

;; psu_control__pid_config_t__kd__position_axiom
  (assert (<= 0 psu_control__pid_config_t__kd__position))

(declare-const psu_control__pid_config_t__sp__first__bit Int)

(declare-const psu_control__pid_config_t__sp__last__bit Int)

(declare-const psu_control__pid_config_t__sp__position Int)

;; psu_control__pid_config_t__sp__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__sp__first__bit))

;; psu_control__pid_config_t__sp__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__sp__first__bit psu_control__pid_config_t__sp__last__bit))

;; psu_control__pid_config_t__sp__position_axiom
  (assert (<= 0 psu_control__pid_config_t__sp__position))

(declare-const psu_control__pid_config_t__sn__first__bit Int)

(declare-const psu_control__pid_config_t__sn__last__bit Int)

(declare-const psu_control__pid_config_t__sn__position Int)

;; psu_control__pid_config_t__sn__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__sn__first__bit))

;; psu_control__pid_config_t__sn__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__sn__first__bit psu_control__pid_config_t__sn__last__bit))

;; psu_control__pid_config_t__sn__position_axiom
  (assert (<= 0 psu_control__pid_config_t__sn__position))

(declare-const psu_control__pid_config_t__t__first__bit Int)

(declare-const psu_control__pid_config_t__t__last__bit Int)

(declare-const psu_control__pid_config_t__t__position Int)

;; psu_control__pid_config_t__t__first__bit_axiom
  (assert (<= 0 psu_control__pid_config_t__t__first__bit))

;; psu_control__pid_config_t__t__last__bit_axiom
  (assert
  (< psu_control__pid_config_t__t__first__bit psu_control__pid_config_t__t__last__bit))

;; psu_control__pid_config_t__t__position_axiom
  (assert (<= 0 psu_control__pid_config_t__t__position))

(declare-fun user_eq14 (us_rep4 us_rep4) Bool)

(declare-const dummy13 us_rep4)

(declare-datatypes ()
((pid_config_t__ref (pid_config_t__refqtmk (pid_config_t__content us_rep4)))))
(define-fun pid_config_t__ref_pid_config_t__content__projection ((a pid_config_t__ref)) us_rep4 
  (pid_config_t__content a))

(declare-datatypes ()
((map__ref1 (map__refqtmk1 (map__content1 (Array Int us_rep4))))))
(declare-fun slide1 ((Array Int us_rep4) Int Int) (Array Int us_rep4))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep4)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep4)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq6 ((a (Array Int us_rep4)) (a__first Int) (a__last Int)
  (b (Array Int us_rep4)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_166 Int))
                           (=>
                           (and (<= a__first temp___idx_166)
                           (<= temp___idx_166 a__last))
                           (= (bool_eq5 (select a temp___idx_166)
                              (select b (+ (- b__first a__first) temp___idx_166))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq6 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_166 Int))
  (=> (and (<= a__first temp___idx_166) (<= temp___idx_166 a__last))
  (= (bool_eq5 (select a temp___idx_166)
     (select b (+ (- b__first a__first) temp___idx_166))) true))))))))

(declare-datatypes ()
((map__ref2 (map__refqtmk2 (map__content2 (Array Int Bool))))))
(declare-fun slide2 ((Array Int Bool) Int Int) (Array Int Bool))

;; slide_eq
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((first2 Int))
  (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide2 a old_first new_first) i)) ))))))

(define-fun bool_eq7 ((a (Array Int Bool)) (a__first Int) (a__last Int)
  (b (Array Int Bool)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_167 Int))
                           (=>
                           (and (<= a__first temp___idx_167)
                           (<= temp___idx_167 a__last))
                           (= (ite (select a temp___idx_167) 1 0) (ite (select b (+ (- b__first a__first) temp___idx_167)) 1 0)))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq7 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_167 Int))
  (=> (and (<= a__first temp___idx_167) (<= temp___idx_167 a__last))
  (= (ite (select a temp___idx_167) 1 0) (ite (select b (+ (- b__first a__first) temp___idx_167)) 1 0)))))))))

(declare-datatypes ()
((us_split_fields8
 (us_split_fieldsqtmk4
 (rec__psu_control__control_i_t__w_u_c1 float__)(rec__psu_control__control_i_t__w_u_c2 float__)(rec__psu_control__control_i_t__conf (Array Int us_rep4))(rec__psu_control__control_i_t__conf_all_ok Bool)(rec__psu_control__control_i_t__conf_state (Array Int Bool))(rec__psu_control__control_i_t__safety_state Bool)))))
(define-fun us_split_fields_rec__psu_control__control_i_t__w_u_c1__projection ((a us_split_fields8)) float__ 
  (rec__psu_control__control_i_t__w_u_c1 a))

(define-fun us_split_fields_rec__psu_control__control_i_t__w_u_c2__projection ((a us_split_fields8)) float__ 
  (rec__psu_control__control_i_t__w_u_c2 a))

(define-fun us_split_fields_rec__psu_control__control_i_t__conf__projection ((a us_split_fields8)) (Array Int us_rep4) 
  (rec__psu_control__control_i_t__conf a))

(define-fun us_split_fields_rec__psu_control__control_i_t__conf_all_ok__projection ((a us_split_fields8)) Bool 
  (rec__psu_control__control_i_t__conf_all_ok a))

(define-fun us_split_fields_rec__psu_control__control_i_t__conf_state__projection ((a us_split_fields8)) (Array Int Bool) 
  (rec__psu_control__control_i_t__conf_state a))

(define-fun us_split_fields_rec__psu_control__control_i_t__safety_state__projection ((a us_split_fields8)) Bool 
  (rec__psu_control__control_i_t__safety_state a))

(declare-datatypes ()
((us_split_fields__ref4
 (us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep5 (us_repqtmk4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___split_fields__6__projection ((a us_rep5)) us_split_fields8 
  (us_split_fields9 a))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const psu_control__control_i_t__w_u_c1__first__bit Int)

(declare-const psu_control__control_i_t__w_u_c1__last__bit Int)

(declare-const psu_control__control_i_t__w_u_c1__position Int)

;; psu_control__control_i_t__w_u_c1__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__w_u_c1__first__bit))

;; psu_control__control_i_t__w_u_c1__last__bit_axiom
  (assert
  (< psu_control__control_i_t__w_u_c1__first__bit psu_control__control_i_t__w_u_c1__last__bit))

;; psu_control__control_i_t__w_u_c1__position_axiom
  (assert (<= 0 psu_control__control_i_t__w_u_c1__position))

(declare-const psu_control__control_i_t__w_u_c2__first__bit Int)

(declare-const psu_control__control_i_t__w_u_c2__last__bit Int)

(declare-const psu_control__control_i_t__w_u_c2__position Int)

;; psu_control__control_i_t__w_u_c2__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__w_u_c2__first__bit))

;; psu_control__control_i_t__w_u_c2__last__bit_axiom
  (assert
  (< psu_control__control_i_t__w_u_c2__first__bit psu_control__control_i_t__w_u_c2__last__bit))

;; psu_control__control_i_t__w_u_c2__position_axiom
  (assert (<= 0 psu_control__control_i_t__w_u_c2__position))

(declare-const psu_control__control_i_t__conf__first__bit Int)

(declare-const psu_control__control_i_t__conf__last__bit Int)

(declare-const psu_control__control_i_t__conf__position Int)

;; psu_control__control_i_t__conf__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__conf__first__bit))

;; psu_control__control_i_t__conf__last__bit_axiom
  (assert
  (< psu_control__control_i_t__conf__first__bit psu_control__control_i_t__conf__last__bit))

;; psu_control__control_i_t__conf__position_axiom
  (assert (<= 0 psu_control__control_i_t__conf__position))

(declare-const psu_control__control_i_t__conf_all_ok__first__bit Int)

(declare-const psu_control__control_i_t__conf_all_ok__last__bit Int)

(declare-const psu_control__control_i_t__conf_all_ok__position Int)

;; psu_control__control_i_t__conf_all_ok__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__conf_all_ok__first__bit))

;; psu_control__control_i_t__conf_all_ok__last__bit_axiom
  (assert
  (< psu_control__control_i_t__conf_all_ok__first__bit psu_control__control_i_t__conf_all_ok__last__bit))

;; psu_control__control_i_t__conf_all_ok__position_axiom
  (assert (<= 0 psu_control__control_i_t__conf_all_ok__position))

(declare-const psu_control__control_i_t__conf_state__first__bit Int)

(declare-const psu_control__control_i_t__conf_state__last__bit Int)

(declare-const psu_control__control_i_t__conf_state__position Int)

;; psu_control__control_i_t__conf_state__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__conf_state__first__bit))

;; psu_control__control_i_t__conf_state__last__bit_axiom
  (assert
  (< psu_control__control_i_t__conf_state__first__bit psu_control__control_i_t__conf_state__last__bit))

;; psu_control__control_i_t__conf_state__position_axiom
  (assert (<= 0 psu_control__control_i_t__conf_state__position))

(declare-const psu_control__control_i_t__safety_state__first__bit Int)

(declare-const psu_control__control_i_t__safety_state__last__bit Int)

(declare-const psu_control__control_i_t__safety_state__position Int)

;; psu_control__control_i_t__safety_state__first__bit_axiom
  (assert (<= 0 psu_control__control_i_t__safety_state__first__bit))

;; psu_control__control_i_t__safety_state__last__bit_axiom
  (assert
  (< psu_control__control_i_t__safety_state__first__bit psu_control__control_i_t__safety_state__last__bit))

;; psu_control__control_i_t__safety_state__position_axiom
  (assert (<= 0 psu_control__control_i_t__safety_state__position))

(declare-fun user_eq15 (us_rep5 us_rep5) Bool)

(declare-datatypes ()
((control_i_t__ref (control_i_t__refqtmk (control_i_t__content us_rep5)))))
(define-fun control_i_t__ref_control_i_t__content__projection ((a control_i_t__ref)) us_rep5 
  (control_i_t__content a))

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-sort pid_target_t 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq16 (pid_target_t pid_target_t) Bool)

(declare-const dummy14 pid_target_t)

(declare-datatypes ()
((pid_target_t__ref
 (pid_target_t__refqtmk (pid_target_t__content pid_target_t)))))
(define-fun pid_target_t__ref_pid_target_t__content__projection ((a pid_target_t__ref)) pid_target_t 
  (pid_target_t__content a))

(declare-fun temp_____aggregate_def_341 (Bool) (Array Int Bool))

(define-fun default_initial_assumption3 ((temp___expr_336 us_rep5)
  (temp___skip_top_level_337 Bool)) Bool (and
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__control_i_t__w_u_c1
                                            (us_split_fields9
                                            temp___expr_336))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep7
                                            (rec__psu_control__control_i_t__w_u_c2
                                            (us_split_fields9
                                            temp___expr_336))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (forall ((temp___339 Int))
                                         (=>
                                         (and (<= 0 temp___339)
                                         (<= temp___339 3))
                                         (and
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__kp
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp #b0 #b01111111 #b00000000000000000000000))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__ki
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp #b0 #b01111111 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__kd
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp #b0 #b01111111 #b00000000000000000000000))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__sp
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp #b0 #b11111110 #b11111111111111111111111)))
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__sn
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__t
                                            (us_split_fields7
                                            (select (rec__psu_control__control_i_t__conf
                                                    (us_split_fields9
                                                    temp___expr_336)) temp___339)))) (fp #b0 #b01111111 #b00000000000000000000000)))))))
                                         (= (rec__psu_control__control_i_t__conf_all_ok
                                            (us_split_fields9
                                            temp___expr_336)) (distinct 0 0)))
                                         (and
                                         (= (rec__psu_control__control_i_t__conf_state
                                            (us_split_fields9
                                            temp___expr_336)) (temp_____aggregate_def_341
                                                              (distinct 0 0)))
                                         (= (rec__psu_control__control_i_t__safety_state
                                            (us_split_fields9
                                            temp___expr_336)) (distinct 0 0))))))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-datatypes ()
((us_split_fields10
 (us_split_fieldsqtmk5 (rec__psu_simulation__simulation_i_t us_main_type1)))))
(define-fun us_split_fields_rec__psu_simulation__simulation_i_t__projection ((a us_split_fields10)) us_main_type1 
  (rec__psu_simulation__simulation_i_t a))

(declare-datatypes ()
((us_split_fields__ref5
 (us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__9__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ()
((us_rep6 (us_repqtmk5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___split_fields__9__projection ((a us_rep6)) us_split_fields10 
  (us_split_fields11 a))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-fun user_eq17 (us_rep6 us_rep6) Bool)

(declare-datatypes ()
((simulation_i_t__ref
 (simulation_i_t__refqtmk (simulation_i_t__content us_rep6)))))
(define-fun simulation_i_t__ref_simulation_i_t__content__projection ((a simulation_i_t__ref)) us_rep6 
  (simulation_i_t__content a))

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-sort us_rep7 0)

(declare-fun bool_eq8 (us_rep7 us_rep7) Bool)

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const alignment8 Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (<= 0 object__size8))

;; alignment_axiom
  (assert (<= 0 alignment8))

(declare-fun user_eq18 (us_rep7 us_rep7) Bool)

(declare-const dummy15 us_rep7)

(declare-datatypes () ((time__ref (time__refqtmk (time__content us_rep7)))))
(define-fun time__ref_time__content__projection ((a time__ref)) us_rep7 
  (time__content a))

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-fun line_length (us_private us_private us_private us_private
  us_private us_private us_private) Int)

(declare-fun line_length__function_guard (Int us_private us_private
  us_private us_private us_private us_private us_private) Bool)

(declare-fun page_length (us_private us_private us_private us_private
  us_private us_private us_private) Int)

(declare-fun page_length__function_guard (Int us_private us_private
  us_private us_private us_private us_private us_private) Bool)

(declare-const all_config_is_set Bool)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-fun oadd (us_rep7 us_rep) us_rep7)

(declare-fun oadd__function_guard (us_rep7 us_rep7 us_rep) Bool)

;; oadd__post_axiom
  (assert true)

(declare-sort priority 0)

(declare-fun priorityqtint (priority) Int)

;; priority'axiom
  (assert
  (forall ((i priority))
  (and (<= 0 (priorityqtint i)) (<= (priorityqtint i) 97))))

(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq19 (priority priority) Bool)

(declare-const dummy16 priority)

(declare-datatypes ()
((priority__ref (priority__refqtmk (priority__content priority)))))
(define-fun priority__ref_priority__content__projection ((a priority__ref)) priority 
  (priority__content a))

(declare-fun temp___String_Literal_409 (tuple0) (Array Int character))

;; temp___String_Literal_409__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 1)) 82)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 2)) 117))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 3)) 110)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 4)) 32))
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 5)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 6)) 97)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 7)) 115)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 8)) 107)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 9)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 10)) 109)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 11)) 111))))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 12)) 110)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 13)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 14)) 116)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 15)) 111)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 16)) 114)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 17)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 18)) 110)
     (= (to_rep (select (temp___String_Literal_409 us_void_param) 19)) 103)))))) :pattern (
  (temp___String_Literal_409 us_void_param)) )))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun dynamic_invariant2 ((temp___expr_60 Float32)
  (temp___is_init_56 Bool) (temp___skip_constant_57 Bool)
  (temp___do_toplevel_58 Bool)
  (temp___do_typ_inv_59 Bool)) Bool (=>
                                    (or (= temp___is_init_56 true)
                                    (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111)))
                                    (fp.isFinite32 temp___expr_60)))

(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range2 temp___expr_74)))

(define-fun dynamic_invariant4 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(define-fun dynamic_invariant5 ((temp___expr_186 Int)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (=>
                                     (or (= temp___is_init_182 true)
                                     (<= 0 1)) (in_range3 temp___expr_186)))

(define-fun dynamic_invariant6 ((temp___expr_193 Int)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)
  (temp___do_typ_inv_192 Bool)) Bool (=>
                                     (or (= temp___is_init_189 true)
                                     (<= 0 5)) (in_range8 temp___expr_193)))

(define-fun dynamic_invariant7 ((temp___expr_200 Float32)
  (temp___is_init_196 Bool) (temp___skip_constant_197 Bool)
  (temp___do_toplevel_198 Bool)
  (temp___do_typ_inv_199 Bool)) Bool (=>
                                     (or (= temp___is_init_196 true)
                                     (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b10001000 #b11110100000000000000000)))
                                     (in_range4 temp___expr_200)))

(define-fun dynamic_invariant8 ((temp___expr_207 Float32)
  (temp___is_init_203 Bool) (temp___skip_constant_204 Bool)
  (temp___do_toplevel_205 Bool)
  (temp___do_typ_inv_206 Bool)) Bool (=>
                                     (or (= temp___is_init_203 true)
                                     (fp.leq (fp #b0 #b01111111 #b00000000000000000000000) (fp #b0 #b10000010 #b01000000000000000000000)))
                                     (in_range5 temp___expr_207)))

(define-fun dynamic_invariant9 ((temp___expr_214 Float32)
  (temp___is_init_210 Bool) (temp___skip_constant_211 Bool)
  (temp___do_toplevel_212 Bool)
  (temp___do_typ_inv_213 Bool)) Bool (=>
                                     (or (= temp___is_init_210 true)
                                     (fp.leq (fp.neg (fp #b0 #b10001000 #b11110100000000000000000)) (fp #b0 #b10001000 #b11110100000000000000000)))
                                     (in_range6 temp___expr_214)))

;; task_period__def_axiom
  (assert (= task_period (milliseconds 100)))

;; milliseconds__post_axiom
  (assert true)

(define-fun dynamic_invariant10 ((temp___expr_250 Int)
  (temp___is_init_246 Bool) (temp___skip_constant_247 Bool)
  (temp___do_toplevel_248 Bool)
  (temp___do_typ_inv_249 Bool)) Bool (=>
                                     (or (= temp___is_init_246 true)
                                     (<= 0 97)) (in_range10 temp___expr_250)))

(declare-sort count 0)

(declare-fun countqtint (count) Int)

;; count'axiom
  (assert
  (forall ((i count))
  (and (<= 0 (countqtint i)) (<= (countqtint i) 2147483647))))

(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq20 (count count) Bool)

(declare-const dummy17 count)

(declare-datatypes () ((count__ref (count__refqtmk (count__content count)))))
(define-fun count__ref_count__content__projection ((a count__ref)) count 
  (count__content a))

(define-fun dynamic_invariant11 ((temp___expr_292 Int)
  (temp___is_init_288 Bool) (temp___skip_constant_289 Bool)
  (temp___do_toplevel_290 Bool)
  (temp___do_typ_inv_291 Bool)) Bool (=>
                                     (or (= temp___is_init_288 true)
                                     (<= 0 2147483647)) (in_range11
                                     temp___expr_292)))

;; line_length__post_axiom
  (assert
  (forall ((ada___ada__text_io__standard_in us_private)
  (ada___ada__text_io__file_system us_private)
  (ada___ada__text_io__standard_out us_private)
  (ada___ada__text_io__standard_err us_private)
  (ada___ada__text_io__current_in us_private)
  (ada___ada__text_io__current_out us_private)
  (ada___ada__text_io__current_err us_private)) (! (dynamic_invariant11
  (line_length ada___ada__text_io__standard_in
  ada___ada__text_io__file_system ada___ada__text_io__standard_out
  ada___ada__text_io__standard_err ada___ada__text_io__current_in
  ada___ada__text_io__current_out ada___ada__text_io__current_err) true false
  true
  true) :pattern ((line_length ada___ada__text_io__standard_in
                  ada___ada__text_io__file_system
                  ada___ada__text_io__standard_out
                  ada___ada__text_io__standard_err
                  ada___ada__text_io__current_in
                  ada___ada__text_io__current_out
                  ada___ada__text_io__current_err)) )))

;; page_length__post_axiom
  (assert
  (forall ((ada___ada__text_io__standard_in us_private)
  (ada___ada__text_io__file_system us_private)
  (ada___ada__text_io__standard_out us_private)
  (ada___ada__text_io__standard_err us_private)
  (ada___ada__text_io__current_in us_private)
  (ada___ada__text_io__current_out us_private)
  (ada___ada__text_io__current_err us_private)) (! (dynamic_invariant11
  (page_length ada___ada__text_io__standard_in
  ada___ada__text_io__file_system ada___ada__text_io__standard_out
  ada___ada__text_io__standard_err ada___ada__text_io__current_in
  ada___ada__text_io__current_out ada___ada__text_io__current_err) true false
  true
  true) :pattern ((page_length ada___ada__text_io__standard_in
                  ada___ada__text_io__file_system
                  ada___ada__text_io__standard_out
                  ada___ada__text_io__standard_err
                  ada___ada__text_io__current_in
                  ada___ada__text_io__current_out
                  ada___ada__text_io__current_err)) )))

(define-fun default_initial_assumption4 ((temp___expr_307 us_rep4)
  (temp___skip_top_level_308 Bool)) Bool (and
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__kp
                                            (us_split_fields7
                                            temp___expr_307))) (fp #b0 #b01111111 #b00000000000000000000000))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__ki
                                            (us_split_fields7
                                            temp___expr_307))) (fp #b0 #b01111111 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__kd
                                            (us_split_fields7
                                            temp___expr_307))) (fp #b0 #b01111111 #b00000000000000000000000))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__sp
                                            (us_split_fields7
                                            temp___expr_307))) (fp #b0 #b11111110 #b11111111111111111111111)))
                                         (and
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__sn
                                            (us_split_fields7
                                            temp___expr_307))) (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)))
                                         (= (to_rep7
                                            (rec__psu_control__pid_config_t__t
                                            (us_split_fields7
                                            temp___expr_307))) (fp #b0 #b01111111 #b00000000000000000000000))))))

(define-fun dynamic_invariant12 ((temp___expr_299 Int)
  (temp___is_init_295 Bool) (temp___skip_constant_296 Bool)
  (temp___do_toplevel_297 Bool)
  (temp___do_typ_inv_298 Bool)) Bool (=>
                                     (or (= temp___is_init_295 true)
                                     (<= 0 3)) (in_range9 temp___expr_299)))

;; def_axiom
  (assert
  (forall ((temp___343 Bool))
  (forall ((temp___344 Int))
  (= (select (temp_____aggregate_def_341 temp___343) temp___344) temp___343))))

(declare-const monitoring_interface__split_fields us_split_fields2)

(declare-const monitor_pfc_voltage__split_fields us_split_fields4)

(declare-const monitor_pfc_current__split_fields us_split_fields4)

(declare-const monitor_output_voltage__split_fields us_split_fields4)

(declare-const monitor_output_current__split_fields us_split_fields4)

(declare-const ctrl__split_fields us_split_fields8)

(declare-const sim__split_fields us_main_type1)

;; Assume
  (assert true)

;; Assume
  (assert (= (milliseconds 100) task_period))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert true)

(assert
;; defqtvc
 ;; File "psu_monitoring.ads", line 74, characters 0-0
  (not (<= 0 0)))
(check-sat)

(exit)
