;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(declare-const a Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const b Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes () ((t21b__ref (t21b__refqtmk (t21b__content integer)))))
(define-fun t21b__ref_t21b__content__projection ((a1 t21b__ref)) integer 
  (t21b__content a1))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes () ((t22b__ref (t22b__refqtmk (t22b__content integer)))))
(define-fun t22b__ref_t22b__content__projection ((a1 t22b__ref)) integer 
  (t22b__content a1))

(declare-const r Int)

;; Assume
  (assert (dynamic_invariant a true false true true))

;; Assume
  (assert (dynamic_invariant b true false true true))

;; Assume
  (assert (in_range1 (+ a b)))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant r false false true true))

(declare-const r1 Int)

;; H
  (assert (= r1 a))

(declare-const r2 Int)

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (<= 0 b) true false)))

(declare-const i Int)

(declare-const i1 Int)

;; H
  (assert
  (ite (= spark__branch true)
  (let ((temp___213 b))
  (and (= i1 1)
  (ite (= (and (ite (<= 1 i1) true false) (ite (<= i1 temp___213) true false)) true)
  (exists ((temp___loop_entry_217 Int))
  (and (= temp___loop_entry_217 b)
  (and (not (= r1 2147483647))
  (exists ((r3 Int))
  (and (= r3 (+ r1 1))
  (and (in_range1 (+ a i1))
  (exists ((i2 Int))
  (and (and (= r2 (+ a i2)) (= b temp___loop_entry_217))
  (and
  (= (and (ite (and (dynamic_property 1 b i2) (dynamic_invariant r2 false
               true true true))
          true false) (ite (and (<= 1 i2) (<= i2 b)) true false)) true)
  (= i2 temp___213)))))))))) (= r2 r1))))
  (let ((temp___218 b))
  (and (= i (- 1))
  (ite (= (and (ite (<= temp___218 i) true false) (ite (<= i (- 1)) true
                                                  false)) true)
  (exists ((temp___loop_entry_223 Int))
  (and (= temp___loop_entry_223 b)
  (and (not (= r1 (- 2147483648)))
  (exists ((r3 Int))
  (and (= r3 (- r1 1))
  (and (in_range1 (+ a i))
  (exists ((i2 Int))
  (and (and (= r2 (+ a i2)) (= b temp___loop_entry_223))
  (and
  (= (and (ite (and (dynamic_invariant r2 false true true true)
               (dynamic_property1 b (- 1) i2))
          true false) (ite (and (<= b i2) (<= i2 (- 1))) true false)) true)
  (= i2 temp___218)))))))))) (= r2 r1))))))

(declare-const arithmetic__plus__result Int)

;; H
  (assert (= arithmetic__plus__result r2))

(assert
;; defqtvc
 ;; File "arithmetic.adb", line 75, characters 0-0
  (not (in_range1 (+ a b))))
(check-sat)
