;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 64) Int) Bool)

(declare-fun lsr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun rotate_right1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 64))) Int (ite (bvsge x (_ bv0 64))
                                            (bv2int x)
                                            (- (- 18446744073709551616 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i)
                                         (<= i 18446744073709551615)))

(declare-fun nth_bv ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content (_ BitVec 64))))))
(declare-fun power ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-const capacity (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const requested_capacity (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const value (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort capacity_type 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(define-fun in_range1 ((x (_ BitVec 64))) Bool (and
                                               (bvule #x0000000000000001 x)
                                               (bvule x #x00000000FFFFFFFF)))

(define-fun in_range_int ((x Int)) Bool (and (<= 1 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 64))

(declare-fun user_eq (capacity_type capacity_type) Bool)

(declare-const dummy capacity_type)

(declare-datatypes ()
((capacity_type__ref
 (capacity_type__refqtmk (capacity_type__content capacity_type)))))
(define-fun capacity_type__ref_capacity_type__content__projection ((a capacity_type__ref)) capacity_type 
  (capacity_type__content a))

(define-fun dynamic_invariant ((temp___expr_166 (_ BitVec 64))
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)
  (temp___do_typ_inv_165 Bool)) Bool (=>
                                     (or (= temp___is_init_162 true)
                                     (bvule #x0000000000000001 #x00000000FFFFFFFF))
                                     (in_range1 temp___expr_166)))

(declare-sort request_type 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 64))

(define-fun in_range2 ((x (_ BitVec 64))) Bool (and
                                               (bvule #x0000000000000000 x)
                                               (bvule x #x00000000FFFFFFFF)))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 64))

(declare-fun user_eq1 (request_type request_type) Bool)

(declare-const dummy1 request_type)

(declare-datatypes ()
((request_type__ref
 (request_type__refqtmk (request_type__content request_type)))))
(define-fun request_type__ref_request_type__content__projection ((a request_type__ref)) request_type 
  (request_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_173 (_ BitVec 64))
  (temp___is_init_169 Bool) (temp___skip_constant_170 Bool)
  (temp___do_toplevel_171 Bool)
  (temp___do_typ_inv_172 Bool)) Bool (=>
                                     (or (= temp___is_init_169 true)
                                     (bvule #x0000000000000000 #x00000000FFFFFFFF))
                                     (in_range2 temp___expr_173)))

(declare-sort sum_type 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 64))

(define-fun in_range3 ((x (_ BitVec 64))) Bool (and
                                               (bvule #x0000000000000000 x)
                                               (bvule x #x004189374BC6A7EF)))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x)
                                         (<= x 18446744073709551)))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 64))

(declare-fun user_eq2 (sum_type sum_type) Bool)

(declare-const dummy2 sum_type)

(declare-datatypes ()
((sum_type__ref (sum_type__refqtmk (sum_type__content sum_type)))))
(define-fun sum_type__ref_sum_type__content__projection ((a sum_type__ref)) sum_type 
  (sum_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_180 (_ BitVec 64))
  (temp___is_init_176 Bool) (temp___skip_constant_177 Bool)
  (temp___do_toplevel_178 Bool)
  (temp___do_typ_inv_179 Bool)) Bool (=>
                                     (or (= temp___is_init_176 true)
                                     (bvule #x0000000000000000 #x004189374BC6A7EF))
                                     (in_range3 temp___expr_180)))

(declare-sort pos 0)

(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 64))

(define-fun in_range4 ((x (_ BitVec 64))) Bool (and
                                               (bvule #x0000000000000001 x)
                                               (bvule x #xFFFFFFFFFFFFFFFF)))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 1 x)
                                         (<= x 18446744073709551615)))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 64))

(declare-fun user_eq3 (pos pos) Bool)

(declare-const dummy3 pos)

(declare-datatypes () ((pos__ref (pos__refqtmk (pos__content pos)))))
(define-fun pos__ref_pos__content__projection ((a pos__ref)) pos (pos__content
                                                                 a))

(define-fun dynamic_invariant3 ((temp___expr_201 (_ BitVec 64))
  (temp___is_init_197 Bool) (temp___skip_constant_198 Bool)
  (temp___do_toplevel_199 Bool)
  (temp___do_typ_inv_200 Bool)) Bool (=>
                                     (or (= temp___is_init_197 true)
                                     (bvule #x0000000000000001 #xFFFFFFFFFFFFFFFF))
                                     (in_range4 temp___expr_201)))

;; Assume
  (assert (dynamic_invariant capacity true false true true))

;; Assume
  (assert (dynamic_invariant2 requested_capacity true false true true))

;; Assume
  (assert (dynamic_invariant1 value true false true true))

;; Assume
  (assert (and (bvugt requested_capacity capacity) (bvule value capacity)))

(define-fun o () (_ BitVec 64) requested_capacity)

(define-fun o1 () (_ BitVec 64) (bvudiv (bvmul value capacity) o))

;; Ensures
  (assert (in_range2 o1))

(declare-const res (_ BitVec 64))

;; H
  (assert (= res o1))

;; Assume
  (assert (dynamic_invariant1 res true false true true))

(define-fun o2 () (_ BitVec 64) requested_capacity)

(assert
;; defqtvc
 ;; File "sv.ads", line 12, characters 0-0
  (not (in_range4 o2)))
(check-sat)
