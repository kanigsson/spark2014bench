;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const d Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-const last Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (integer integer) Bool)

(declare-const dummy3 integer)

(declare-datatypes ()
((my_nat__ref (my_nat__refqtmk (my_nat__content integer)))))
(define-fun my_nat__ref_my_nat__content__projection ((a my_nat__ref)) integer 
  (my_nat__content a))

(declare-datatypes ()
((us_split_discrs (us_split_discrsqtmk (rec__dynamic_array__rec__b Bool)))))
(define-fun us_split_discrs_rec__dynamic_array__rec__b__projection ((a us_split_discrs)) Bool 
  (rec__dynamic_array__rec__b a))

(declare-datatypes ()
((us_split_discrs__ref
 (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__dynamic_array__rec__f1 integer)(rec__dynamic_array__rec__f2 integer)))))
(define-fun us_split_fields_rec__dynamic_array__rec__f1__projection ((a us_split_fields)) integer 
  (rec__dynamic_array__rec__f1 a))

(define-fun us_split_fields_rec__dynamic_array__rec__f2__projection ((a us_split_fields)) integer 
  (rec__dynamic_array__rec__f2 a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (us_repqtmk
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun dynamic_array__rec__f1__pred ((a us_rep)) Bool (= (ite (rec__dynamic_array__rec__b
                                                                   (us_split_discrs1
                                                                   a)) 1 0) 1))

(define-fun dynamic_array__rec__f2__pred ((a us_rep)) Bool (= (ite (rec__dynamic_array__rec__b
                                                                   (us_split_discrs1
                                                                   a)) 1 0) 0))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (ite (rec__dynamic_array__rec__b
                                (us_split_discrs1 a)) 1 0) (ite (rec__dynamic_array__rec__b
                                                                (us_split_discrs1
                                                                b)) 1 0))
                        (and
                        (=> (dynamic_array__rec__f1__pred a)
                        (= (to_rep1
                           (rec__dynamic_array__rec__f1 (us_split_fields1 a))) 
                        (to_rep1
                        (rec__dynamic_array__rec__f1 (us_split_fields1 b)))))
                        (=> (dynamic_array__rec__f2__pred a)
                        (= (to_rep1
                           (rec__dynamic_array__rec__f2 (us_split_fields1 a))) 
                        (to_rep1
                        (rec__dynamic_array__rec__f2 (us_split_fields1 b)))))))
                   true false))

(define-fun in_range4 ((rec__dynamic_array__rec__b1 Bool)
  (a us_split_discrs)) Bool (= rec__dynamic_array__rec__b1 (rec__dynamic_array__rec__b
                                                           a)))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const dynamic_array__rec__b__first__bit Int)

(declare-const dynamic_array__rec__b__last__bit Int)

(declare-const dynamic_array__rec__b__position Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit dynamic_array__rec__b__last__bit))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position))

(declare-const dynamic_array__rec__f1__first__bit Int)

(declare-const dynamic_array__rec__f1__last__bit Int)

(declare-const dynamic_array__rec__f1__position Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit dynamic_array__rec__f1__last__bit))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position))

(declare-const dynamic_array__rec__f2__first__bit Int)

(declare-const dynamic_array__rec__f2__last__bit Int)

(declare-const dynamic_array__rec__f2__position Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit dynamic_array__rec__f2__last__bit))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((rec____ref (rec____refqtmk (rec____content us_rep)))))
(define-fun rec____ref_rec____content__projection ((a rec____ref)) us_rep 
  (rec____content a))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (bool_eq (select a temp___idx_154)
                              (select b (+ (- b__first a__first) temp___idx_154))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (bool_eq (select a temp___idx_154)
     (select b (+ (- b__first a__first) temp___idx_154))) true))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last1 (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range3 f)
     (=> (in_range3 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last1 (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range3 low)
                   (and (in_range3 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int us_rep))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))

(define-fun of_array ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last2 ((a us_t)) Int (to_rep1 (last1 (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last2 a))
                                  (+ (- (last2 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last1 (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last1 (rt y)))))

(declare-fun user_eq5 (us_t us_t) Bool)

(declare-const dummy5 us_t)

(declare-datatypes ()
((rec_array__ref (rec_array__refqtmk (rec_array__content us_t)))))
(define-fun rec_array__ref_rec_array__content__projection ((a rec_array__ref)) us_t 
  (rec_array__content a))

(declare-datatypes () ((t4b__ref (t4b__refqtmk (t4b__content us_t)))))
(define-fun t4b__ref_t4b__content__projection ((a t4b__ref)) us_t (t4b__content
                                                                  a))

(declare-datatypes ()
((us_split_discrs2
 (us_split_discrsqtmk1 (rec__dynamic_array__holder__d natural)))))
(define-fun us_split_discrs_rec__dynamic_array__holder__d__projection ((a us_split_discrs2)) natural 
  (rec__dynamic_array__holder__d a))

(declare-datatypes ()
((us_split_discrs__ref1
 (us_split_discrs__refqtmk1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___split_discrs__content__2__projection ((a us_split_discrs__ref1)) us_split_discrs2 
  (us_split_discrs__content1 a))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1 (rec__dynamic_array__holder__content us_t)))))
(define-fun us_split_fields_rec__dynamic_array__holder__content__projection ((a us_split_fields2)) us_t 
  (rec__dynamic_array__holder__content a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (us_repqtmk1
 (us_split_discrs3 us_split_discrs2)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_discrs__2__projection ((a us_rep1)) us_split_discrs2 
  (us_split_discrs3 a))

(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs3 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs3 b))))
                         (= (bool_eq2
                            (rec__dynamic_array__holder__content
                            (us_split_fields3 a))
                            (rec__dynamic_array__holder__content
                            (us_split_fields3 b))) true))
                    true false))

(define-fun in_range5 ((rec__dynamic_array__holder__d1 Int)
  (a us_split_discrs2)) Bool (= rec__dynamic_array__holder__d1 (to_rep
                                                               (rec__dynamic_array__holder__d
                                                               a))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const dynamic_array__holder__d__first__bit Int)

(declare-const dynamic_array__holder__d__last__bit Int)

(declare-const dynamic_array__holder__d__position Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit dynamic_array__holder__d__last__bit))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position))

(declare-const dynamic_array__holder__content__first__bit Int)

(declare-const dynamic_array__holder__content__last__bit Int)

(declare-const dynamic_array__holder__content__position Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit dynamic_array__holder__content__last__bit))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ()
((holder__ref (holder__refqtmk (holder__content us_rep1)))))
(define-fun holder__ref_holder__content__projection ((a holder__ref)) us_rep1 
  (holder__content a))

(declare-const dummy7 (Array Int us_rep))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size1 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-fun user_eq7 ((Array Int us_rep) (Array Int us_rep)) Bool)

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2
 (rec__dynamic_array__holder__content1 (Array Int us_rep))))))
(define-fun us_split_fields_rec__dynamic_array__holder__content__2__projection ((a us_split_fields4)) (Array Int us_rep) 
  (rec__dynamic_array__holder__content1 a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (us_repqtmk2
 (us_split_discrs4 us_split_discrs2)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_discrs__3__projection ((a us_rep2)) us_split_discrs2 
  (us_split_discrs4 a))

(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun to_base ((a us_rep2)) us_rep1 (us_repqtmk1 (us_split_discrs4 a)
                                          (us_split_fieldsqtmk1
                                          (of_array
                                          (rec__dynamic_array__holder__content1
                                          (us_split_fields5 a)) 1 0))))

(define-fun of_base ((r us_rep1)) us_rep2 (us_repqtmk2 (us_split_discrs3 r)
                                          (us_split_fieldsqtmk2
                                          (let ((temp___156 (rec__dynamic_array__holder__content
                                                            (us_split_fields3
                                                            r))))
                                          (to_array temp___156)))))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs4 b))))
                         (= (bool_eq1
                            (rec__dynamic_array__holder__content1
                            (us_split_fields5 a)) 1 0
                            (rec__dynamic_array__holder__content1
                            (us_split_fields5 b)) 1 0) true))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const dynamic_array__holder__d__first__bit1 Int)

(declare-const dynamic_array__holder__d__last__bit1 Int)

(declare-const dynamic_array__holder__d__position1 Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit1))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit1 dynamic_array__holder__d__last__bit1))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position1))

(declare-const dynamic_array__holder__content__first__bit1 Int)

(declare-const dynamic_array__holder__content__last__bit1 Int)

(declare-const dynamic_array__holder__content__position1 Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit1))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit1 dynamic_array__holder__content__last__bit1))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position1))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-const dummy8 us_rep2)

(declare-datatypes () ((t7b__ref (t7b__refqtmk (t7b__content us_rep2)))))
(define-fun t7b__ref_t7b__content__projection ((a t7b__ref)) us_rep2 
  (t7b__content a))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const dynamic_array__rec__b__first__bit1 Int)

(declare-const dynamic_array__rec__b__last__bit1 Int)

(declare-const dynamic_array__rec__b__position1 Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit1))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit1 dynamic_array__rec__b__last__bit1))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position1))

(declare-const dynamic_array__rec__f2__first__bit1 Int)

(declare-const dynamic_array__rec__f2__last__bit1 Int)

(declare-const dynamic_array__rec__f2__position1 Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit1))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit1 dynamic_array__rec__f2__last__bit1))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position1))

(declare-const dynamic_array__rec__f1__first__bit1 Int)

(declare-const dynamic_array__rec__f1__last__bit1 Int)

(declare-const dynamic_array__rec__f1__position1 Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit1))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit1 dynamic_array__rec__f1__last__bit1))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position1))

(declare-fun user_eq9 (us_rep us_rep) Bool)

(declare-const dummy9 us_rep)

(declare-datatypes () ((t9b__ref (t9b__refqtmk (t9b__content us_rep)))))
(define-fun t9b__ref_t9b__content__projection ((a t9b__ref)) us_rep (t9b__content
                                                                    a))

(declare-datatypes () ((t14b__ref (t14b__refqtmk (t14b__content us_t)))))
(define-fun t14b__ref_t14b__content__projection ((a t14b__ref)) us_t 
  (t14b__content a))

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3 (rec__dynamic_array__holder__content2 us_t)))))
(define-fun us_split_fields_rec__dynamic_array__holder__content__3__projection ((a us_split_fields6)) us_t 
  (rec__dynamic_array__holder__content2 a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3
 (us_repqtmk3
 (us_split_discrs5 us_split_discrs2)(us_split_fields7 us_split_fields6)))))
(define-fun us_rep___split_discrs__4__projection ((a us_rep3)) us_split_discrs2 
  (us_split_discrs5 a))

(define-fun us_rep___split_fields__4__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun to_base1 ((a us_rep3)) us_rep1 (us_repqtmk1 (us_split_discrs5 a)
                                           (us_split_fieldsqtmk1
                                           (let ((temp___158 (rec__dynamic_array__holder__content2
                                                             (us_split_fields7
                                                             a))))
                                           (of_array (to_array temp___158)
                                           (first1 temp___158)
                                           (last2 temp___158))))))

(define-fun of_base1 ((r us_rep1)) us_rep3 (us_repqtmk3 (us_split_discrs3 r)
                                           (us_split_fieldsqtmk3
                                           (let ((temp___157 (rec__dynamic_array__holder__content
                                                             (us_split_fields3
                                                             r))))
                                           (of_array (to_array temp___157)
                                           (first1 temp___157)
                                           (last2 temp___157))))))

(define-fun bool_eq5 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs5 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs5 b))))
                         (= (bool_eq2
                            (rec__dynamic_array__holder__content2
                            (us_split_fields7 a))
                            (rec__dynamic_array__holder__content2
                            (us_split_fields7 b))) true))
                    true false))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const dynamic_array__holder__d__first__bit2 Int)

(declare-const dynamic_array__holder__d__last__bit2 Int)

(declare-const dynamic_array__holder__d__position2 Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit2))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit2 dynamic_array__holder__d__last__bit2))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position2))

(declare-const dynamic_array__holder__content__first__bit2 Int)

(declare-const dynamic_array__holder__content__last__bit2 Int)

(declare-const dynamic_array__holder__content__position2 Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit2))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit2 dynamic_array__holder__content__last__bit2))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position2))

(declare-fun user_eq10 (us_rep3 us_rep3) Bool)

(declare-const dummy10 us_rep3)

(declare-datatypes () ((t13b__ref (t13b__refqtmk (t13b__content us_rep3)))))
(define-fun t13b__ref_t13b__content__projection ((a t13b__ref)) us_rep3 
  (t13b__content a))

(declare-datatypes () ((t17b__ref (t17b__refqtmk (t17b__content us_t)))))
(define-fun t17b__ref_t17b__content__projection ((a t17b__ref)) us_t 
  (t17b__content a))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const dynamic_array__rec__b__first__bit2 Int)

(declare-const dynamic_array__rec__b__last__bit2 Int)

(declare-const dynamic_array__rec__b__position2 Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit2))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit2 dynamic_array__rec__b__last__bit2))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position2))

(declare-const dynamic_array__rec__f2__first__bit2 Int)

(declare-const dynamic_array__rec__f2__last__bit2 Int)

(declare-const dynamic_array__rec__f2__position2 Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit2))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit2 dynamic_array__rec__f2__last__bit2))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position2))

(declare-const dynamic_array__rec__f1__first__bit2 Int)

(declare-const dynamic_array__rec__f1__last__bit2 Int)

(declare-const dynamic_array__rec__f1__position2 Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit2))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit2 dynamic_array__rec__f1__last__bit2))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position2))

(declare-fun user_eq11 (us_rep us_rep) Bool)

(declare-const dummy11 us_rep)

(declare-datatypes () ((t15b__ref (t15b__refqtmk (t15b__content us_rep)))))
(define-fun t15b__ref_t15b__content__projection ((a t15b__ref)) us_rep 
  (t15b__content a))

(declare-fun temp_____aggregate_def_263 (us_rep) (Array Int us_rep))

(declare-fun temp_____aggregate_def_267 (us_rep Int Int) us_t)

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range2
                                    temp___expr_46)))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range3 temp___expr_18)))

(define-fun dynamic_invariant3 ((temp___expr_170 Int)
  (temp___is_init_166 Bool) (temp___skip_constant_167 Bool)
  (temp___do_toplevel_168 Bool)
  (temp___do_typ_inv_169 Bool)) Bool (=>
                                     (or (= temp___is_init_166 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last temp___expr_170)))

;; last__def_axiom
  (assert (= last c))

(define-fun dynamic_invariant4 ((temp___expr_177 us_rep)
  (temp___is_init_173 Bool) (temp___skip_constant_174 Bool)
  (temp___do_toplevel_175 Bool)
  (temp___do_typ_inv_176 Bool)) Bool (and
                                     (=> (dynamic_array__rec__f1__pred
                                     temp___expr_177)
                                     (=>
                                     (or (= temp___is_init_173 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f1
                                     (us_split_fields1 temp___expr_177))))))
                                     (=> (dynamic_array__rec__f2__pred
                                     temp___expr_177)
                                     (=>
                                     (or (= temp___is_init_173 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f2
                                     (us_split_fields1 temp___expr_177))))))))

(define-fun default_initial_assumption ((temp___expr_179 us_rep)
  (temp___skip_top_level_180 Bool)) Bool (= (rec__dynamic_array__rec__b
                                            (us_split_discrs1
                                            temp___expr_179)) (distinct 1 0)))

(define-fun dynamic_invariant5 ((temp___expr_188 us_t)
  (temp___is_init_184 Bool) (temp___skip_constant_185 Bool)
  (temp___do_toplevel_186 Bool)
  (temp___do_typ_inv_187 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_185 true))
                                     (dynamic_property1 1 2147483647
                                     (first1 temp___expr_188)
                                     (last2 temp___expr_188)))
                                     (forall ((temp___189 Int))
                                     (=>
                                     (and
                                     (<= (first1 temp___expr_188) temp___189)
                                     (<= temp___189 (last2 temp___expr_188)))
                                     (and
                                     (=> (dynamic_array__rec__f1__pred
                                     (select (to_array temp___expr_188) temp___189))
                                     (=>
                                     (or (= temp___is_init_184 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f1
                                     (us_split_fields1
                                     (select (to_array temp___expr_188) temp___189)))))))
                                     (=> (dynamic_array__rec__f2__pred
                                     (select (to_array temp___expr_188) temp___189))
                                     (=>
                                     (or (= temp___is_init_184 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f2
                                     (us_split_fields1
                                     (select (to_array temp___expr_188) temp___189))))))))))))

(define-fun dynamic_invariant6 ((temp___expr_195 us_rep1)
  (temp___is_init_191 Bool) (temp___skip_constant_192 Bool)
  (temp___do_toplevel_193 Bool)
  (temp___do_typ_inv_194 Bool)) Bool (let ((temp___196 (rec__dynamic_array__holder__d
                                                       (us_split_discrs3
                                                       temp___expr_195))))
                                     (and
                                     (and (dynamic_property1 1
                                     (to_rep temp___196)
                                     (first1
                                     (rec__dynamic_array__holder__content
                                     (us_split_fields3 temp___expr_195)))
                                     (last2
                                     (rec__dynamic_array__holder__content
                                     (us_split_fields3 temp___expr_195))))
                                     (and
                                     (= (first1
                                        (rec__dynamic_array__holder__content
                                        (us_split_fields3 temp___expr_195))) 1)
                                     (= (last2
                                        (rec__dynamic_array__holder__content
                                        (us_split_fields3 temp___expr_195))) 
                                     (to_rep temp___196))))
                                     (forall ((temp___197 Int))
                                     (=>
                                     (and
                                     (<= (first1
                                         (rec__dynamic_array__holder__content
                                         (us_split_fields3 temp___expr_195))) temp___197)
                                     (<= temp___197 (last2
                                                    (rec__dynamic_array__holder__content
                                                    (us_split_fields3
                                                    temp___expr_195)))))
                                     (and
                                     (=> (dynamic_array__rec__f1__pred
                                     (select (to_array
                                             (rec__dynamic_array__holder__content
                                             (us_split_fields3
                                             temp___expr_195))) temp___197))
                                     (=>
                                     (or (= temp___is_init_191 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f1
                                     (us_split_fields1
                                     (select (to_array
                                             (rec__dynamic_array__holder__content
                                             (us_split_fields3
                                             temp___expr_195))) temp___197)))))))
                                     (=> (dynamic_array__rec__f2__pred
                                     (select (to_array
                                             (rec__dynamic_array__holder__content
                                             (us_split_fields3
                                             temp___expr_195))) temp___197))
                                     (=>
                                     (or (= temp___is_init_191 true)
                                     (<= 0 last)) (dynamic_property 0 
                                     last
                                     (to_rep1
                                     (rec__dynamic_array__rec__f2
                                     (us_split_fields1
                                     (select (to_array
                                             (rec__dynamic_array__holder__content
                                             (us_split_fields3
                                             temp___expr_195))) temp___197)))))))))))))

;; def_axiom
  (assert
  (forall ((temp___265 us_rep))
  (=> (dynamic_invariant4 temp___265 true true true true)
  (forall ((temp___266 Int))
  (= (select (temp_____aggregate_def_263 temp___265) temp___266) temp___265)))))

;; def_axiom
  (assert
  (forall ((temp___269 us_rep))
  (forall ((temp___270 Int) (temp___271 Int))
  (let ((temp___268 (temp_____aggregate_def_267 temp___269 temp___270
                    temp___271)))
  (=> (dynamic_invariant4 temp___269 true true true true)
  (and
  (=> (dynamic_property1 1 2147483647 temp___270 temp___271)
  (and (= (first1 temp___268) temp___270) (= (last2 temp___268) temp___271)))
  (forall ((temp___272 Int))
  (= (select (to_array temp___268) temp___272) temp___269))))))))

;; Assume
  (assert (dynamic_invariant c true false true true))

;; Assume
  (assert (dynamic_invariant c true false true true))

;; Assume
  (assert (dynamic_invariant d true false true true))

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (= c 0) true false)))

;; H
  (assert (= spark__branch true))

(assert
;; defqtvc
 ;; File "dynamic_array.adb", line 18, characters 0-0
  (not (dynamic_property 0 last c)))
(check-sat)
