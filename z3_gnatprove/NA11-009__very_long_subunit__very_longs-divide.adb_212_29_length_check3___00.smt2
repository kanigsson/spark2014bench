(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16))
                                            (bv2int x)
                                            (- (- 65536 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (t__refqtmk1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort digit_index_type 0)

(declare-fun digit_index_typeqtint (digit_index_type) Int)

;; digit_index_type'axiom
  (assert
  (forall ((i digit_index_type))
  (and (<= 1 (digit_index_typeqtint i)) (<= (digit_index_typeqtint i) 65536))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (digit_index_type digit_index_type) Bool)

(declare-const dummy digit_index_type)

(declare-datatypes ()
((digit_index_type__ref
 (digit_index_type__refqtmk (digit_index_type__content digit_index_type)))))
(define-fun digit_index_type__ref_digit_index_type__content__projection ((a digit_index_type__ref)) digit_index_type 
  (digit_index_type__content a))

(define-fun to_rep ((x digit_index_type)) Int (digit_index_typeqtint x))

(declare-fun of_rep (Int) digit_index_type)

;; inversion_axiom
  (assert
  (forall ((x digit_index_type))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x digit_index_type)) (! (in_range1
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort tdigit_count_typeB 0)

(declare-fun tdigit_count_typeBqtint (tdigit_count_typeB) Int)

;; tdigit_count_typeB'axiom
  (assert
  (forall ((i tdigit_count_typeB))
  (and (<= (- 2147483648) (tdigit_count_typeBqtint i))
  (<= (tdigit_count_typeBqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-const dummy1 tdigit_count_typeB)

(declare-datatypes ()
((tdigit_count_typeB__ref
 (tdigit_count_typeB__refqtmk
 (tdigit_count_typeB__content tdigit_count_typeB)))))
(define-fun tdigit_count_typeB__ref_tdigit_count_typeB__content__projection ((a tdigit_count_typeB__ref)) tdigit_count_typeB 
  (tdigit_count_typeB__content a))

(define-fun to_rep1 ((x tdigit_count_typeB)) Int (tdigit_count_typeBqtint x))

(declare-fun of_rep1 (Int) tdigit_count_typeB)

;; inversion_axiom
  (assert
  (forall ((x tdigit_count_typeB))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x tdigit_count_typeB)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort octet 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (octet octet) Bool)

(declare-const dummy2 octet)

(declare-datatypes () ((octet__ref (octet__refqtmk (octet__content octet)))))
(define-fun octet__ref_octet__content__projection ((a octet__ref)) octet 
  (octet__content a))

(declare-fun to_rep2 (octet) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) octet)

;; inversion_axiom
  (assert
  (forall ((x octet))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int3 ((x octet)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x octet)) (! (uint_in_range
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int octet))))))
(declare-fun slide ((Array Int octet) Int Int) (Array Int octet))

;; slide_eq
  (assert
  (forall ((a (Array Int octet)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int octet)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int octet)) (a__first Int) (a__last Int)
  (b (Array Int octet)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int octet)) (b (Array Int octet)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-sort t 0)

(declare-fun first (t) tdigit_count_typeB)

(declare-fun last (t) tdigit_count_typeB)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int octet))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int octet) (elts a))

(define-fun of_array ((a (Array Int octet)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((digits_array_type__ref
 (digits_array_type__refqtmk (digits_array_type__content us_t)))))
(define-fun digits_array_type__ref_digits_array_type__content__projection ((a digits_array_type__ref)) us_t 
  (digits_array_type__content a))

(declare-datatypes () ((t18s__ref (t18s__refqtmk (t18s__content us_t)))))
(define-fun t18s__ref_t18s__content__projection ((a t18s__ref)) us_t 
  (t18s__content a))

(declare-datatypes ()
((us_split_discrs
 (us_split_discrsqtmk (rec__very_longs__very_long__length digit_index_type)))))
(define-fun us_split_discrs_rec__very_longs__very_long__length__projection ((a us_split_discrs)) digit_index_type 
  (rec__very_longs__very_long__length a))

(declare-datatypes ()
((us_split_discrs__ref
 (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk (rec__very_longs__very_long__long_digits us_t)))))
(define-fun us_split_fields_rec__very_longs__very_long__long_digits__projection ((a us_split_fields)) us_t 
  (rec__very_longs__very_long__long_digits a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (us_repqtmk
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__very_longs__very_long__length
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__very_longs__very_long__length
                                                  (us_split_discrs1 b))))
                        (= (bool_eq1
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 a))
                           (rec__very_longs__very_long__long_digits
                           (us_split_fields1 b))) true))
                   true false))

(define-fun in_range3 ((rec__very_longs__very_long__length1 Int)
  (a us_split_discrs)) Bool (= rec__very_longs__very_long__length1 (to_rep
                                                                   (rec__very_longs__very_long__length
                                                                   a))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const very_longs__very_long__length__first__bit Int)

(declare-const very_longs__very_long__length__last__bit Int)

(declare-const very_longs__very_long__length__position Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit very_longs__very_long__length__last__bit))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position))

(declare-const very_longs__very_long__long_digits__first__bit Int)

(declare-const very_longs__very_long__long_digits__last__bit Int)

(declare-const very_longs__very_long__long_digits__position Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((very_long__ref (very_long__refqtmk (very_long__content us_rep)))))
(define-fun very_long__ref_very_long__content__projection ((a very_long__ref)) us_rep 
  (very_long__content a))

(define-fun dynamic_invariant ((temp___expr_263 us_rep)
  (temp___is_init_259 Bool) (temp___skip_constant_260 Bool)
  (temp___do_toplevel_261 Bool)
  (temp___do_typ_inv_262 Bool)) Bool (let ((temp___264 (rec__very_longs__very_long__length
                                                       (us_split_discrs1
                                                       temp___expr_263))))
                                     (and (dynamic_property 1
                                     (to_rep temp___264)
                                     (first1
                                     (rec__very_longs__very_long__long_digits
                                     (us_split_fields1 temp___expr_263)))
                                     (last1
                                     (rec__very_longs__very_long__long_digits
                                     (us_split_fields1 temp___expr_263))))
                                     (and
                                     (= (first1
                                        (rec__very_longs__very_long__long_digits
                                        (us_split_fields1 temp___expr_263))) 1)
                                     (= (last1
                                        (rec__very_longs__very_long__long_digits
                                        (us_split_fields1 temp___expr_263))) 
                                     (to_rep temp___264))))))

(declare-fun number_of_digits (us_rep) Int)

(declare-fun number_of_digits__function_guard (Int us_rep) Bool)

(declare-fun number_of_digits1 (us_rep) Int)

(declare-fun number_of_digits__function_guard1 (Int us_rep) Bool)

(declare-sort digit_count_type 0)

(declare-fun digit_count_typeqtint (digit_count_type) Int)

;; digit_count_type'axiom
  (assert
  (forall ((i digit_count_type))
  (and (<= 0 (digit_count_typeqtint i)) (<= (digit_count_typeqtint i) 65536))))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (digit_count_type digit_count_type) Bool)

(declare-const dummy5 digit_count_type)

(declare-datatypes ()
((digit_count_type__ref
 (digit_count_type__refqtmk (digit_count_type__content digit_count_type)))))
(define-fun digit_count_type__ref_digit_count_type__content__projection ((a digit_count_type__ref)) digit_count_type 
  (digit_count_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_236 Int)
  (temp___is_init_232 Bool) (temp___skip_constant_233 Bool)
  (temp___do_toplevel_234 Bool)
  (temp___do_typ_inv_235 Bool)) Bool (=>
                                     (or (= temp___is_init_232 true)
                                     (<= 0 65536)) (in_range4
                                     temp___expr_236)))

;; number_of_digits__post_axiom
  (assert
  (forall ((number us_rep))
  (! (=> (dynamic_invariant number true true true true)
     (let ((result (number_of_digits number)))
     (=> (number_of_digits__function_guard result number) (dynamic_invariant1
     result true false true true)))) :pattern ((number_of_digits number)) )))

;; number_of_digits__post_refine_axiom
  (assert
  (forall ((number us_rep))
  (! (=> (dynamic_invariant number true true true true)
     (let ((result (number_of_digits1 number)))
     (=> (number_of_digits__function_guard1 result number)
     (and
     (and
     (=> (< 0 result)
     (not
     (= (to_rep2
        (let ((temp___315 (rec__very_longs__very_long__long_digits
                          (us_split_fields1 number))))
        (select (to_array temp___315) result))) #x00)))
     (forall ((i Int))
     (=>
     (and (<= (+ result 1) i)
     (<= i (last1
           (rec__very_longs__very_long__long_digits
           (us_split_fields1 number)))))
     (= (to_rep2
        (let ((temp___316 (rec__very_longs__very_long__long_digits
                          (us_split_fields1 number))))
        (select (to_array temp___316) i))) #x00))))
     (dynamic_invariant1 result true false true true))))) :pattern ((number_of_digits1
                                                                    number)) )))

(declare-const dividend us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const divisor us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const quotient__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const remainder__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-datatypes () ((t108b__ref (t108b__refqtmk (t108b__content us_t)))))
(define-fun t108b__ref_t108b__content__projection ((a t108b__ref)) us_t 
  (t108b__content a))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1 (rec__very_longs__very_long__long_digits1 us_t)))))
(define-fun us_split_fields_rec__very_longs__very_long__long_digits__30__projection ((a us_split_fields2)) us_t 
  (rec__very_longs__very_long__long_digits1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__30__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (us_repqtmk1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_discrs__30__projection ((a us_rep1)) us_split_discrs 
  (us_split_discrs2 a))

(define-fun us_rep___split_fields__30__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk (us_split_discrs2 a)
                                         (us_split_fieldsqtmk
                                         (let ((temp___226 (rec__very_longs__very_long__long_digits1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array (to_array temp___226)
                                         (first1 temp___226)
                                         (last1 temp___226))))))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1 (us_split_discrs1 r)
                                         (us_split_fieldsqtmk1
                                         (let ((temp___225 (rec__very_longs__very_long__long_digits
                                                           (us_split_fields1
                                                           r))))
                                         (of_array (to_array temp___225)
                                         (first1 temp___225)
                                         (last1 temp___225))))))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__very_longs__very_long__length
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__very_longs__very_long__length
                                                   (us_split_discrs2 b))))
                         (= (bool_eq1
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 a))
                            (rec__very_longs__very_long__long_digits1
                            (us_split_fields3 b))) true))
                    true false))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const very_longs__very_long__length__first__bit1 Int)

(declare-const very_longs__very_long__length__last__bit1 Int)

(declare-const very_longs__very_long__length__position1 Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit1))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit1 very_longs__very_long__length__last__bit1))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position1))

(declare-const very_longs__very_long__long_digits__first__bit1 Int)

(declare-const very_longs__very_long__long_digits__last__bit1 Int)

(declare-const very_longs__very_long__long_digits__position1 Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit1))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position1))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes () ((tuS__ref (tuS__refqtmk (tuS__content us_rep1)))))
(define-fun tuS__ref_tuS__content__projection ((a tuS__ref)) us_rep1 
  (tuS__content a))

(declare-const u__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(define-fun dynamic_invariant2 ((temp___expr_788 us_rep1)
  (temp___is_init_784 Bool) (temp___skip_constant_785 Bool)
  (temp___do_toplevel_786 Bool)
  (temp___do_typ_inv_787 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_785 true))
                                     (in_range3
                                     (+ (to_rep
                                        (rec__very_longs__very_long__length
                                        (us_split_discrs1 dividend))) 1)
                                     (us_split_discrs1
                                     (to_base temp___expr_788))))
                                     (and (dynamic_property 1
                                     (+ (to_rep
                                        (rec__very_longs__very_long__length
                                        (us_split_discrs1 dividend))) 1)
                                     (first1
                                     (rec__very_longs__very_long__long_digits1
                                     (us_split_fields3 temp___expr_788)))
                                     (last1
                                     (rec__very_longs__very_long__long_digits1
                                     (us_split_fields3 temp___expr_788))))
                                     (and
                                     (= (first1
                                        (rec__very_longs__very_long__long_digits1
                                        (us_split_fields3 temp___expr_788))) 1)
                                     (= (last1
                                        (rec__very_longs__very_long__long_digits1
                                        (us_split_fields3 temp___expr_788))) (+ 
                                     (to_rep
                                     (rec__very_longs__very_long__length
                                     (us_split_discrs1 dividend))) 1))))))

(define-fun default_initial_assumption ((temp___expr_791 us_rep1)
  (temp___skip_top_level_792 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__very_longs__very_long__length
                                            (us_split_discrs2
                                            temp___expr_791))) (+ (to_rep
                                                                  (rec__very_longs__very_long__length
                                                                  (us_split_discrs1
                                                                  dividend))) 1))
                                         (and
                                         (= (first1
                                            (rec__very_longs__very_long__long_digits1
                                            (us_split_fields3
                                            temp___expr_791))) 1)
                                         (= (last1
                                            (rec__very_longs__very_long__long_digits1
                                            (us_split_fields3
                                            temp___expr_791))) (+ (to_rep
                                                                  (rec__very_longs__very_long__length
                                                                  (us_split_discrs1
                                                                  dividend))) 1)))))

(declare-datatypes () ((t109b__ref (t109b__refqtmk (t109b__content us_t)))))
(define-fun t109b__ref_t109b__content__projection ((a t109b__ref)) us_t 
  (t109b__content a))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2 (rec__very_longs__very_long__long_digits2 us_t)))))
(define-fun us_split_fields_rec__very_longs__very_long__long_digits__31__projection ((a us_split_fields4)) us_t 
  (rec__very_longs__very_long__long_digits2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__31__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (us_repqtmk2
 (us_split_discrs3 us_split_discrs)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_discrs__31__projection ((a us_rep2)) us_split_discrs 
  (us_split_discrs3 a))

(define-fun us_rep___split_fields__31__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk (us_split_discrs3 a)
                                          (us_split_fieldsqtmk
                                          (let ((temp___228 (rec__very_longs__very_long__long_digits2
                                                            (us_split_fields5
                                                            a))))
                                          (of_array (to_array temp___228)
                                          (first1 temp___228)
                                          (last1 temp___228))))))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk2
                                          (let ((temp___227 (rec__very_longs__very_long__long_digits
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___227)
                                          (first1 temp___227)
                                          (last1 temp___227))))))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__very_longs__very_long__length
                            (us_split_discrs3 a))) (to_rep
                                                   (rec__very_longs__very_long__length
                                                   (us_split_discrs3 b))))
                         (= (bool_eq1
                            (rec__very_longs__very_long__long_digits2
                            (us_split_fields5 a))
                            (rec__very_longs__very_long__long_digits2
                            (us_split_fields5 b))) true))
                    true false))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const very_longs__very_long__length__first__bit2 Int)

(declare-const very_longs__very_long__length__last__bit2 Int)

(declare-const very_longs__very_long__length__position2 Int)

;; very_longs__very_long__length__first__bit_axiom
  (assert (<= 0 very_longs__very_long__length__first__bit2))

;; very_longs__very_long__length__last__bit_axiom
  (assert
  (< very_longs__very_long__length__first__bit2 very_longs__very_long__length__last__bit2))

;; very_longs__very_long__length__position_axiom
  (assert (<= 0 very_longs__very_long__length__position2))

(declare-const very_longs__very_long__long_digits__first__bit2 Int)

(declare-const very_longs__very_long__long_digits__last__bit2 Int)

(declare-const very_longs__very_long__long_digits__position2 Int)

;; very_longs__very_long__long_digits__first__bit_axiom
  (assert (<= 0 very_longs__very_long__long_digits__first__bit2))

;; very_longs__very_long__long_digits__last__bit_axiom
  (assert
  (< very_longs__very_long__long_digits__first__bit2 very_longs__very_long__long_digits__last__bit2))

;; very_longs__very_long__long_digits__position_axiom
  (assert (<= 0 very_longs__very_long__long_digits__position2))

(declare-fun user_eq7 (us_rep2 us_rep2) Bool)

(declare-const dummy7 us_rep2)

(declare-datatypes () ((tvS__ref (tvS__refqtmk (tvS__content us_rep2)))))
(define-fun tvS__ref_tvS__content__projection ((a tvS__ref)) us_rep2 
  (tvS__content a))

(declare-const v__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(define-fun dynamic_invariant3 ((temp___expr_801 us_rep2)
  (temp___is_init_797 Bool) (temp___skip_constant_798 Bool)
  (temp___do_toplevel_799 Bool)
  (temp___do_typ_inv_800 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_798 true))
                                     (in_range3
                                     (to_rep
                                     (rec__very_longs__very_long__length
                                     (us_split_discrs1 divisor)))
                                     (us_split_discrs1
                                     (to_base1 temp___expr_801))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__very_longs__very_long__length
                                     (us_split_discrs1 divisor)))
                                     (first1
                                     (rec__very_longs__very_long__long_digits2
                                     (us_split_fields5 temp___expr_801)))
                                     (last1
                                     (rec__very_longs__very_long__long_digits2
                                     (us_split_fields5 temp___expr_801))))
                                     (and
                                     (= (first1
                                        (rec__very_longs__very_long__long_digits2
                                        (us_split_fields5 temp___expr_801))) 1)
                                     (= (last1
                                        (rec__very_longs__very_long__long_digits2
                                        (us_split_fields5 temp___expr_801))) 
                                     (to_rep
                                     (rec__very_longs__very_long__length
                                     (us_split_discrs1 divisor))))))))

(define-fun default_initial_assumption1 ((temp___expr_804 us_rep2)
  (temp___skip_top_level_805 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__very_longs__very_long__length
                                            (us_split_discrs3
                                            temp___expr_804))) (to_rep
                                                               (rec__very_longs__very_long__length
                                                               (us_split_discrs1
                                                               divisor))))
                                         (and
                                         (= (first1
                                            (rec__very_longs__very_long__long_digits2
                                            (us_split_fields5
                                            temp___expr_804))) 1)
                                         (= (last1
                                            (rec__very_longs__very_long__long_digits2
                                            (us_split_fields5
                                            temp___expr_804))) (to_rep
                                                               (rec__very_longs__very_long__length
                                                               (us_split_discrs1
                                                               divisor)))))))

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-fun get_shift_distance ((_ BitVec 8)) Int)

(declare-fun get_shift_distance__function_guard (Int (_ BitVec 8)) Bool)

(define-fun dynamic_invariant4 ((temp___expr_250 (_ BitVec 8))
  (temp___is_init_246 Bool) (temp___skip_constant_247 Bool)
  (temp___do_toplevel_248 Bool) (temp___do_typ_inv_249 Bool)) Bool true)

(declare-sort shift_type 0)

(declare-fun shift_typeqtint (shift_type) Int)

;; shift_type'axiom
  (assert
  (forall ((i shift_type))
  (and (<= 0 (shift_typeqtint i)) (<= (shift_typeqtint i) 7))))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq8 (shift_type shift_type) Bool)

(declare-const dummy8 shift_type)

(declare-datatypes ()
((shift_type__ref (shift_type__refqtmk (shift_type__content shift_type)))))
(define-fun shift_type__ref_shift_type__content__projection ((a shift_type__ref)) shift_type 
  (shift_type__content a))

(define-fun dynamic_invariant5 ((temp___expr_781 Int)
  (temp___is_init_777 Bool) (temp___skip_constant_778 Bool)
  (temp___do_toplevel_779 Bool)
  (temp___do_typ_inv_780 Bool)) Bool (=>
                                     (or (= temp___is_init_777 true)
                                     (<= 0 7)) (in_range5 temp___expr_781)))

;; get_shift_distance__post_axiom
  (assert
  (forall ((digit (_ BitVec 8)))
  (! (=>
     (and (dynamic_invariant4 digit true true true true)
     (not (= digit #x00)))
     (let ((result (get_shift_distance digit)))
     (=> (get_shift_distance__function_guard result digit)
     (dynamic_invariant5 result true false true true)))) :pattern ((get_shift_distance
                                                                   digit)) )))

(declare-sort double_octet 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 16))

(declare-fun user_eq9 (double_octet double_octet) Bool)

(declare-const dummy9 double_octet)

(declare-datatypes ()
((double_octet__ref
 (double_octet__refqtmk (double_octet__content double_octet)))))
(define-fun double_octet__ref_double_octet__content__projection ((a double_octet__ref)) double_octet 
  (double_octet__content a))

(define-fun dynamic_invariant6 ((temp___expr_356 (_ BitVec 16))
  (temp___is_init_352 Bool) (temp___skip_constant_353 Bool)
  (temp___do_toplevel_354 Bool) (temp___do_typ_inv_355 Bool)) Bool true)

(declare-const r130b Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const r134b Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const r137b Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const r139b Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(define-fun dynamic_invariant7 ((temp___expr_243 Int)
  (temp___is_init_239 Bool) (temp___skip_constant_240 Bool)
  (temp___do_toplevel_241 Bool)
  (temp___do_typ_inv_242 Bool)) Bool (=>
                                     (or (= temp___is_init_239 true)
                                     (<= 1 65536)) (in_range1
                                     temp___expr_243)))

(declare-const last2 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-const dummy10 tdigit_count_typeB)

(declare-datatypes ()
((divisor_digits_count_type__ref
 (divisor_digits_count_type__refqtmk
 (divisor_digits_count_type__content tdigit_count_typeB)))))
(define-fun divisor_digits_count_type__ref_divisor_digits_count_type__content__projection ((a divisor_digits_count_type__ref)) tdigit_count_typeB 
  (divisor_digits_count_type__content a))

(define-fun dynamic_invariant8 ((temp___expr_767 Int)
  (temp___is_init_763 Bool) (temp___skip_constant_764 Bool)
  (temp___do_toplevel_765 Bool)
  (temp___do_typ_inv_766 Bool)) Bool (=>
                                     (or (= temp___is_init_763 true)
                                     (<= 1 last2)) (dynamic_property1 1 
                                     last2 temp___expr_767)))

;; last__def_axiom
  (assert
  (= last2 (to_rep
           (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))

(declare-const first2 Int)

(declare-const last3 Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq11 (tdigit_count_typeB tdigit_count_typeB) Bool)

(declare-const dummy11 tdigit_count_typeB)

(declare-datatypes ()
((quotient_digits_count_type__ref
 (quotient_digits_count_type__refqtmk
 (quotient_digits_count_type__content tdigit_count_typeB)))))
(define-fun quotient_digits_count_type__ref_quotient_digits_count_type__content__projection ((a quotient_digits_count_type__ref)) tdigit_count_typeB 
  (quotient_digits_count_type__content a))

(define-fun dynamic_invariant9 ((temp___expr_774 Int)
  (temp___is_init_770 Bool) (temp___skip_constant_771 Bool)
  (temp___do_toplevel_772 Bool)
  (temp___do_typ_inv_773 Bool)) Bool (=>
                                     (or (= temp___is_init_770 true)
                                     (<= first2 last3)) (dynamic_property2
                                     first2 last3 temp___expr_774)))

;; first__def_axiom
  (assert
  (= first2 (to_rep
            (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))

;; last__def_axiom
  (assert
  (= last3 (- (* 2 (to_rep
                   (rec__very_longs__very_long__length
                   (us_split_discrs1 divisor)))) 1)))

(declare-datatypes () ((s129b__ref (s129b__refqtmk (s129b__content us_t)))))
(define-fun s129b__ref_s129b__content__projection ((a s129b__ref)) us_t 
  (s129b__content a))

(declare-datatypes () ((t132b__ref (t132b__refqtmk (t132b__content us_t)))))
(define-fun t132b__ref_t132b__content__projection ((a t132b__ref)) us_t 
  (t132b__content a))

(declare-datatypes () ((s133b__ref (s133b__refqtmk (s133b__content us_t)))))
(define-fun s133b__ref_s133b__content__projection ((a s133b__ref)) us_t 
  (s133b__content a))

(declare-datatypes () ((t136b__ref (t136b__refqtmk (t136b__content us_t)))))
(define-fun t136b__ref_t136b__content__projection ((a t136b__ref)) us_t 
  (t136b__content a))

(declare-fun temp_____aggregate_def_1168 ((_ BitVec 8) Int Int) us_t)

(declare-fun temp_____aggregate_def_1181 ((_ BitVec 8) Int Int) us_t)

(define-fun dynamic_invariant10 ((temp___expr_257 us_t)
  (temp___is_init_253 Bool) (temp___skip_constant_254 Bool)
  (temp___do_toplevel_255 Bool)
  (temp___do_typ_inv_256 Bool)) Bool (=>
                                     (not (= temp___skip_constant_254 true))
                                     (dynamic_property 1 65536
                                     (first1 temp___expr_257)
                                     (last1 temp___expr_257))))

;; def_axiom
  (assert
  (forall ((temp___1170 (_ BitVec 8)))
  (forall ((temp___1171 Int) (temp___1172 Int))
  (let ((temp___1169 (temp_____aggregate_def_1168 temp___1170 temp___1171
                     temp___1172)))
  (=> (dynamic_invariant4 temp___1170 true true true true)
  (and
  (=> (dynamic_property 1 65536 temp___1171 temp___1172)
  (and (= (first1 temp___1169) temp___1171)
  (= (last1 temp___1169) temp___1172)))
  (forall ((temp___1173 Int))
  (= (to_rep2 (select (to_array temp___1169) temp___1173)) temp___1170))))))))

;; def_axiom
  (assert
  (forall ((temp___1183 (_ BitVec 8)))
  (forall ((temp___1184 Int) (temp___1185 Int))
  (let ((temp___1182 (temp_____aggregate_def_1181 temp___1183 temp___1184
                     temp___1185)))
  (=> (dynamic_invariant4 temp___1183 true true true true)
  (and
  (=> (dynamic_property 1 65536 temp___1184 temp___1185)
  (and (= (first1 temp___1182) temp___1184)
  (= (last1 temp___1182) temp___1185)))
  (forall ((temp___1186 Int))
  (= (to_rep2 (select (to_array temp___1182) temp___1186)) temp___1183))))))))

(define-fun dynamic_invariant11 ((temp___expr_857 us_t)
  (temp___is_init_853 Bool) (temp___skip_constant_854 Bool)
  (temp___do_toplevel_855 Bool)
  (temp___do_typ_inv_856 Bool)) Bool (=>
                                     (not (= temp___skip_constant_854 true))
                                     (and (dynamic_property 1 r130b
                                     (first1 temp___expr_857)
                                     (last1 temp___expr_857))
                                     (and (= (first1 temp___expr_857) 1)
                                     (= (last1 temp___expr_857) r130b)))))

(define-fun default_initial_assumption2 ((temp___expr_859 us_t)
  (temp___skip_top_level_860 Bool)) Bool (and (= (first1 temp___expr_859) 1)
                                         (= (last1 temp___expr_859) r130b)))

(define-fun dynamic_invariant12 ((temp___expr_867 us_t)
  (temp___is_init_863 Bool) (temp___skip_constant_864 Bool)
  (temp___do_toplevel_865 Bool)
  (temp___do_typ_inv_866 Bool)) Bool (=>
                                     (not (= temp___skip_constant_864 true))
                                     (and (dynamic_property 1 r134b
                                     (first1 temp___expr_867)
                                     (last1 temp___expr_867))
                                     (and (= (first1 temp___expr_867) 1)
                                     (= (last1 temp___expr_867) r134b)))))

(define-fun default_initial_assumption3 ((temp___expr_869 us_t)
  (temp___skip_top_level_870 Bool)) Bool (and (= (first1 temp___expr_869) 1)
                                         (= (last1 temp___expr_869) r134b)))

(declare-const quotient__split_fields us_t)

(declare-const remainder__split_fields us_t)

(declare-const n Int)

(declare-const m Int)

(declare-const shift_distance Int)

(declare-const u__split_fields us_t)

(declare-const v__split_fields us_t)

(declare-const q_hat (_ BitVec 16))

(declare-const current_borrow (_ BitVec 16))

;; Assume
  (assert (dynamic_invariant dividend true false true true))

;; Assume
  (assert (dynamic_invariant divisor true false true true))

;; Assume
  (assert (dynamic_invariant
  (us_repqtmk quotient__split_discrs
  (us_split_fieldsqtmk quotient__split_fields)) false false true true))

;; Assume
  (assert (dynamic_invariant
  (us_repqtmk remainder__split_discrs
  (us_split_fieldsqtmk remainder__split_fields)) false false true true))

;; H
  (assert (number_of_digits__function_guard1 (number_of_digits1 divisor)
  divisor))

;; Assume
  (assert
  (and
  (and
  (and (< 1 (number_of_digits1 divisor))
  (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))) 
  (to_rep (rec__very_longs__very_long__length remainder__split_discrs))))
  (= (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  (to_rep (rec__very_longs__very_long__length quotient__split_discrs))))
  (= (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) (* 2 
  (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor)))))))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant8 n false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant9 m false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant5 shift_distance false false true true))

(declare-const o Int)

;; Ensures
  (assert
  (= (to_rep
     (rec__very_longs__very_long__length (us_split_discrs1 dividend))) 
  o))

(define-fun o1 () Int (+ o 1))

;; Ensures
  (assert (in_range1 o1))

;; Assume
  (assert (default_initial_assumption
  (us_repqtmk1 u__split_discrs (us_split_fieldsqtmk1 u__split_fields))
  false))

;; Assume
  (assert (dynamic_invariant2
  (us_repqtmk1 u__split_discrs (us_split_fieldsqtmk1 u__split_fields)) false
  false true true))

(declare-const o2 Int)

;; Ensures
  (assert
  (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 divisor))) 
  o2))

;; Ensures
  (assert (in_range1 o2))

;; Assume
  (assert (default_initial_assumption1
  (us_repqtmk2 v__split_discrs (us_split_fieldsqtmk2 v__split_fields))
  false))

;; Assume
  (assert (dynamic_invariant3
  (us_repqtmk2 v__split_discrs (us_split_fieldsqtmk2 v__split_fields)) false
  false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant6 q_hat false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant6 current_borrow false false true true))

(declare-const very_longs__divide__R130b__assume Int)

;; Ensures
  (assert
  (= (to_rep (rec__very_longs__very_long__length quotient__split_discrs)) 
  very_longs__divide__R130b__assume))

;; Assume
  (assert (= very_longs__divide__R130b__assume r130b))

;; Assume
  (assert (dynamic_invariant7 r130b true false true true))

(define-fun temp___1174 () us_t (temp_____aggregate_def_1168 #x00 1 r130b))

;; Assume
  (assert (= (first1 temp___1174) 1))

;; Assume
  (assert (= (last1 temp___1174) r130b))

;; Assert
  (assert
  (ite (<= (first1 temp___1174) (last1 temp___1174))
  (and (<= 1 r130b)
  (= (- (last1 temp___1174) (first1 temp___1174)) (- r130b 1))) (< r130b 1)))

(define-fun temp___1176 () us_t (of_array (to_array temp___1174)
                                (first1 temp___1174) (last1 temp___1174)))

;; Assert
  (assert
  (ite (<= (first1 temp___1176) (last1 temp___1176))
  (and (<= (first1 quotient__split_fields) (last1 quotient__split_fields))
  (= (- (last1 temp___1176) (first1 temp___1176)) (- (last1
                                                     quotient__split_fields) 
  (first1 quotient__split_fields))))
  (< (last1 quotient__split_fields) (first1 quotient__split_fields))))

(declare-const quotient__split_fields1 us_t)

;; H
  (assert
  (= quotient__split_fields1 (of_array (to_array temp___1176)
                             (first1 temp___1176) (last1 temp___1176))))

(declare-const very_longs__divide__R134b__assume Int)

;; Ensures
  (assert
  (= (to_rep (rec__very_longs__very_long__length remainder__split_discrs)) 
  very_longs__divide__R134b__assume))

;; Assume
  (assert (= very_longs__divide__R134b__assume r134b))

;; Assume
  (assert (dynamic_invariant7 r134b true false true true))

(define-fun temp___1187 () us_t (temp_____aggregate_def_1181 #x00 1 r134b))

;; Assume
  (assert (= (first1 temp___1187) 1))

;; Assume
  (assert (= (last1 temp___1187) r134b))

;; H
  (assert (<= (first1 temp___1187) (last1 temp___1187)))

(assert
;; defqtvc
 ;; File "very_longs.ads", line 65, characters 0-0
  (not (<= 1 r134b)))
(check-sat)
