;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (positive positive) Bool)

(declare-const dummy positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun to_rep ((x positive)) Int (positiveqtint x))

(declare-fun of_rep (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (character character) Bool)

(declare-const dummy1 character)

(declare-datatypes ()
((character__ref (character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep1 (character) Int)

(declare-fun of_rep1 (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                                                 (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                        (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep2 ((x integer)) Int (integerqtint x))

(declare-fun of_rep2 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range3 f)
     (=> (in_range3 l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range3 low)
                   (and (in_range3 high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((string____ref (string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(declare-fun invariant__ (tuple0) Bool)

(declare-fun invariant____function_guard (Bool tuple0) Bool)

;; invariant____post_axiom
  (assert true)

;; invariant____def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (= (invariant__ us_void_param) true) :pattern ((invariant__
                                                    us_void_param)) )))

(declare-const n Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort capacity_range 0)

(declare-fun capacity_rangeqtint (capacity_range) Int)

;; capacity_range'axiom
  (assert
  (forall ((i capacity_range))
  (and (<= 0 (capacity_rangeqtint i))
  (<= (capacity_rangeqtint i) 2147483647))))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (capacity_range capacity_range) Bool)

(declare-const dummy4 capacity_range)

(declare-datatypes ()
((capacity_range__ref
 (capacity_range__refqtmk (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref_capacity_range__content__projection ((a capacity_range__ref)) capacity_range 
  (capacity_range__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_discrs
 (us_split_discrsqtmk
 (rec__names__char_tables__vector__capacity capacity_range)))))
(define-fun us_split_discrs_rec__names__char_tables__vector__capacity__projection ((a us_split_discrs)) capacity_range 
  (rec__names__char_tables__vector__capacity a))

(declare-datatypes ()
((us_split_discrs__ref
 (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk (rec__names__char_tables__vector us_main_type)))))
(define-fun us_split_fields_rec__names__char_tables__vector__projection ((a us_split_fields)) us_main_type 
  (rec__names__char_tables__vector a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (us_repqtmk
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun to_rep3 ((x capacity_range)) Int (capacity_rangeqtint x))

(declare-fun of_rep3 (Int) capacity_range)

;; inversion_axiom
  (assert
  (forall ((x capacity_range))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range)) (! (in_range4
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(define-fun in_range5 ((rec__names__char_tables__vector__capacity1 Int)
  (a us_split_discrs)) Bool (= rec__names__char_tables__vector__capacity1 
  (to_rep3 (rec__names__char_tables__vector__capacity a))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const names__char_tables__vector__capacity__first__bit Int)

(declare-const names__char_tables__vector__capacity__last__bit Int)

(declare-const names__char_tables__vector__capacity__position Int)

;; names__char_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__char_tables__vector__capacity__first__bit))

;; names__char_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__char_tables__vector__capacity__first__bit names__char_tables__vector__capacity__last__bit))

;; names__char_tables__vector__capacity__position_axiom
  (assert (<= 0 names__char_tables__vector__capacity__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ()
((vector__ref (vector__refqtmk (vector__content us_rep)))))
(define-fun vector__ref_vector__content__projection ((a vector__ref)) us_rep 
  (vector__content a))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-sort us_rep1 0)

(declare-fun bool_eq2 (us_rep1 us_rep1) Bool)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ()
((sequence__ref (sequence__refqtmk (sequence__content us_rep1)))))
(define-fun sequence__ref_sequence__content__projection ((a sequence__ref)) us_rep1 
  (sequence__content a))

(declare-fun get (us_rep1 Int) Int)

(declare-fun get__function_guard (Int us_rep1 Int) Bool)

(declare-fun model1 (us_rep) us_rep1)

(declare-fun model__function_guard (us_rep1 us_rep) Bool)

(declare-fun length1 (us_rep1) Int)

(declare-fun length__function_guard (Int us_rep1) Bool)

(define-fun last2 ((container us_rep1)) Int (+ (- 1) (length1 container)))

(declare-fun last__function_guard (Int us_rep1) Bool)

(define-fun last_index ((container us_rep)) Int (last2 (model1 container)))

(declare-fun last_index__function_guard (Int us_rep) Bool)

(declare-fun first_index__function_guard (Int us_rep) Bool)

(define-fun element ((container us_rep)
  (index Int)) Int (get (model1 container) index))

(declare-fun element__function_guard (Int us_rep Int) Bool)

(declare-sort element_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (element_type element_type) Bool)

(declare-const dummy7 element_type)

(declare-datatypes ()
((element_type__ref
 (element_type__refqtmk (element_type__content element_type)))))
(define-fun element_type__ref_element_type__content__projection ((a element_type__ref)) element_type 
  (element_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_351 Int)
  (temp___is_init_347 Bool) (temp___skip_constant_348 Bool)
  (temp___do_toplevel_349 Bool)
  (temp___do_typ_inv_350 Bool)) Bool (=>
                                     (or (= temp___is_init_347 true)
                                     (<= 0 255)) (in_range6 temp___expr_351)))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const names__char_tables__vector__capacity__first__bit1 Int)

(declare-const names__char_tables__vector__capacity__last__bit1 Int)

(declare-const names__char_tables__vector__capacity__position1 Int)

;; names__char_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__char_tables__vector__capacity__first__bit1))

;; names__char_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__char_tables__vector__capacity__first__bit1 names__char_tables__vector__capacity__last__bit1))

;; names__char_tables__vector__capacity__position_axiom
  (assert (<= 0 names__char_tables__vector__capacity__position1))

(declare-fun user_eq8 (us_rep us_rep) Bool)

(declare-const dummy8 us_rep)

(declare-datatypes ()
((tchar_tableS__ref (tchar_tableS__refqtmk (tchar_tableS__content us_rep)))))
(define-fun tchar_tableS__ref_tchar_tableS__content__projection ((a tchar_tableS__ref)) us_rep 
  (tchar_tableS__content a))

(declare-const char_table__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun oeq (us_rep us_rep) Bool)

(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)

(declare-fun is_empty (us_rep) Bool)

(declare-fun is_empty__function_guard (Bool us_rep) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep) (b us_rep))
  (! (= (user_eq8 a b) (oeq a b)) :pattern ((user_eq8 a b)) )))

(define-fun dynamic_invariant2 ((temp___expr_415 us_rep)
  (temp___is_init_411 Bool) (temp___skip_constant_412 Bool)
  (temp___do_toplevel_413 Bool)
  (temp___do_typ_inv_414 Bool)) Bool (=>
                                     (not (= temp___skip_constant_412 true))
                                     (in_range5 1024
                                     (us_split_discrs1 temp___expr_415))))

(define-fun default_initial_assumption ((temp___expr_417 us_rep)
  (temp___skip_top_level_418 Bool)) Bool (and
                                         (= (to_rep3
                                            (rec__names__char_tables__vector__capacity
                                            (us_split_discrs1
                                            temp___expr_417))) 1024)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_418 true))
                                         (= (is_empty temp___expr_417) true))))

(declare-sort name_id 0)

(declare-fun name_idqtint (name_id) Int)

;; name_id'axiom
  (assert
  (forall ((i name_id))
  (and (<= 0 (name_idqtint i)) (<= (name_idqtint i) 2147483647))))

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq9 (name_id name_id) Bool)

(declare-const dummy9 name_id)

(declare-datatypes ()
((name_id__ref (name_id__refqtmk (name_id__content name_id)))))
(define-fun name_id__ref_name_id__content__projection ((a name_id__ref)) name_id 
  (name_id__content a))

(define-fun to_rep4 ((x name_id)) Int (name_idqtint x))

(declare-fun of_rep4 (Int) name_id)

;; inversion_axiom
  (assert
  (forall ((x name_id))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x name_id)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort char_table_index 0)

(declare-fun char_table_indexqtint (char_table_index) Int)

;; char_table_index'axiom
  (assert
  (forall ((i char_table_index))
  (and (<= 0 (char_table_indexqtint i))
  (<= (char_table_indexqtint i) 2147483646))))

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (char_table_index char_table_index) Bool)

(declare-const dummy10 char_table_index)

(declare-datatypes ()
((char_table_index__ref
 (char_table_index__refqtmk (char_table_index__content char_table_index)))))
(define-fun char_table_index__ref_char_table_index__content__projection ((a char_table_index__ref)) char_table_index 
  (char_table_index__content a))

(define-fun to_rep5 ((x char_table_index)) Int (char_table_indexqtint x))

(declare-fun of_rep5 (Int) char_table_index)

;; inversion_axiom
  (assert
  (forall ((x char_table_index))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x char_table_index)) (! (in_range8
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__names__name_entry__table_index char_table_index)(rec__names__name_entry__length positive)(rec__names__name_entry__next_hash name_id)))))
(define-fun us_split_fields_rec__names__name_entry__table_index__projection ((a us_split_fields2)) char_table_index 
  (rec__names__name_entry__table_index a))

(define-fun us_split_fields_rec__names__name_entry__length__projection ((a us_split_fields2)) positive 
  (rec__names__name_entry__length a))

(define-fun us_split_fields_rec__names__name_entry__next_hash__projection ((a us_split_fields2)) name_id 
  (rec__names__name_entry__next_hash a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep2)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq3 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep5
                            (rec__names__name_entry__table_index
                            (us_split_fields3 a))) (to_rep5
                                                   (rec__names__name_entry__table_index
                                                   (us_split_fields3 b))))
                         (= (to_rep
                            (rec__names__name_entry__length
                            (us_split_fields3 a))) (to_rep
                                                   (rec__names__name_entry__length
                                                   (us_split_fields3 b)))))
                         (= (to_rep4
                            (rec__names__name_entry__next_hash
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__names__name_entry__next_hash
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const names__name_entry__table_index__first__bit Int)

(declare-const names__name_entry__table_index__last__bit Int)

(declare-const names__name_entry__table_index__position Int)

;; names__name_entry__table_index__first__bit_axiom
  (assert (<= 0 names__name_entry__table_index__first__bit))

;; names__name_entry__table_index__last__bit_axiom
  (assert
  (< names__name_entry__table_index__first__bit names__name_entry__table_index__last__bit))

;; names__name_entry__table_index__position_axiom
  (assert (<= 0 names__name_entry__table_index__position))

(declare-const names__name_entry__length__first__bit Int)

(declare-const names__name_entry__length__last__bit Int)

(declare-const names__name_entry__length__position Int)

;; names__name_entry__length__first__bit_axiom
  (assert (<= 0 names__name_entry__length__first__bit))

;; names__name_entry__length__last__bit_axiom
  (assert
  (< names__name_entry__length__first__bit names__name_entry__length__last__bit))

;; names__name_entry__length__position_axiom
  (assert (<= 0 names__name_entry__length__position))

(declare-const names__name_entry__next_hash__first__bit Int)

(declare-const names__name_entry__next_hash__last__bit Int)

(declare-const names__name_entry__next_hash__position Int)

;; names__name_entry__next_hash__first__bit_axiom
  (assert (<= 0 names__name_entry__next_hash__first__bit))

;; names__name_entry__next_hash__last__bit_axiom
  (assert
  (< names__name_entry__next_hash__first__bit names__name_entry__next_hash__last__bit))

;; names__name_entry__next_hash__position_axiom
  (assert (<= 0 names__name_entry__next_hash__position))

(declare-fun user_eq11 (us_rep2 us_rep2) Bool)

(declare-const dummy11 us_rep2)

(declare-datatypes ()
((name_entry__ref (name_entry__refqtmk (name_entry__content us_rep2)))))
(define-fun name_entry__ref_name_entry__content__projection ((a name_entry__ref)) us_rep2 
  (name_entry__content a))

(declare-datatypes ()
((element_type__ref1
 (element_type__refqtmk1 (element_type__content1 us_rep2)))))
(define-fun element_type__ref_element_type__content__3__projection ((a element_type__ref1)) us_rep2 
  (element_type__content1 a))

(declare-sort capacity_range1 0)

(declare-fun capacity_rangeqtint1 (capacity_range1) Int)

;; capacity_range'axiom
  (assert
  (forall ((i capacity_range1))
  (and (<= 0 (capacity_rangeqtint1 i))
  (<= (capacity_rangeqtint1 i) 2147483647))))

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq12 (capacity_range1 capacity_range1) Bool)

(declare-const dummy12 capacity_range1)

(declare-datatypes ()
((capacity_range__ref1
 (capacity_range__refqtmk1 (capacity_range__content1 capacity_range1)))))
(define-fun capacity_range__ref_capacity_range__content__2__projection ((a capacity_range__ref1)) capacity_range1 
  (capacity_range__content1 a))

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-datatypes ()
((us_split_discrs2
 (us_split_discrsqtmk1
 (rec__names__entry_tables__vector__capacity capacity_range1)))))
(define-fun us_split_discrs_rec__names__entry_tables__vector__capacity__projection ((a us_split_discrs2)) capacity_range1 
  (rec__names__entry_tables__vector__capacity a))

(declare-datatypes ()
((us_split_discrs__ref1
 (us_split_discrs__refqtmk1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___split_discrs__content__2__projection ((a us_split_discrs__ref1)) us_split_discrs2 
  (us_split_discrs__content1 a))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2 (rec__names__entry_tables__vector us_main_type2)))))
(define-fun us_split_fields_rec__names__entry_tables__vector__projection ((a us_split_fields4)) us_main_type2 
  (rec__names__entry_tables__vector a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep3
 (us_repqtmk2
 (us_split_discrs3 us_split_discrs2)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_discrs__2__projection ((a us_rep3)) us_split_discrs2 
  (us_split_discrs3 a))

(define-fun us_rep___split_fields__3__projection ((a us_rep3)) us_split_fields4 
  (us_split_fields5 a))

(define-fun to_rep6 ((x capacity_range1)) Int (capacity_rangeqtint1 x))

(declare-fun of_rep6 (Int) capacity_range1)

;; inversion_axiom
  (assert
  (forall ((x capacity_range1))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range1)) (! (in_range9
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                              (of_rep6 x))) )))

(define-fun in_range10 ((rec__names__entry_tables__vector__capacity1 Int)
  (a us_split_discrs2)) Bool (= rec__names__entry_tables__vector__capacity1 
  (to_rep6 (rec__names__entry_tables__vector__capacity a))))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const names__entry_tables__vector__capacity__first__bit Int)

(declare-const names__entry_tables__vector__capacity__last__bit Int)

(declare-const names__entry_tables__vector__capacity__position Int)

;; names__entry_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__entry_tables__vector__capacity__first__bit))

;; names__entry_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__entry_tables__vector__capacity__first__bit names__entry_tables__vector__capacity__last__bit))

;; names__entry_tables__vector__capacity__position_axiom
  (assert (<= 0 names__entry_tables__vector__capacity__position))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-const dummy13 us_rep3)

(declare-datatypes ()
((vector__ref1 (vector__refqtmk1 (vector__content1 us_rep3)))))
(define-fun vector__ref_vector__content__2__projection ((a vector__ref1)) us_rep3 
  (vector__content1 a))

(declare-sort us_main_type3 0)

(declare-fun us_main_eq3 (us_main_type3 us_main_type3) Bool)

(declare-sort us_rep4 0)

(declare-fun bool_eq4 (us_rep4 us_rep4) Bool)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-fun user_eq14 (us_rep4 us_rep4) Bool)

(declare-const dummy14 us_rep4)

(declare-datatypes ()
((sequence__ref1 (sequence__refqtmk1 (sequence__content1 us_rep4)))))
(define-fun sequence__ref_sequence__content__2__projection ((a sequence__ref1)) us_rep4 
  (sequence__content1 a))

(declare-datatypes ()
((element_type__ref2
 (element_type__refqtmk2 (element_type__content2 us_rep2)))))
(define-fun element_type__ref_element_type__content__4__projection ((a element_type__ref2)) us_rep2 
  (element_type__content2 a))

(declare-fun get1 (us_rep4 Int) us_rep2)

(declare-fun get__function_guard1 (us_rep2 us_rep4 Int) Bool)

(declare-fun model2 (us_rep3) us_rep4)

(declare-fun model__function_guard1 (us_rep4 us_rep3) Bool)

(declare-fun length2 (us_rep4) Int)

(declare-fun length__function_guard1 (Int us_rep4) Bool)

(define-fun last3 ((container us_rep4)) Int (+ 0 (length2 container)))

(declare-fun last__function_guard1 (Int us_rep4) Bool)

(define-fun last_index1 ((container us_rep3)) Int (last3 (model2 container)))

(declare-fun last_index__function_guard1 (Int us_rep3) Bool)

(declare-fun first_index__function_guard1 (Int us_rep3) Bool)

(define-fun element1 ((container us_rep3)
  (index Int)) us_rep2 (get1 (model2 container) index))

(declare-fun element__function_guard1 (us_rep2 us_rep3 Int) Bool)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const names__entry_tables__vector__capacity__first__bit1 Int)

(declare-const names__entry_tables__vector__capacity__last__bit1 Int)

(declare-const names__entry_tables__vector__capacity__position1 Int)

;; names__entry_tables__vector__capacity__first__bit_axiom
  (assert (<= 0 names__entry_tables__vector__capacity__first__bit1))

;; names__entry_tables__vector__capacity__last__bit_axiom
  (assert
  (< names__entry_tables__vector__capacity__first__bit1 names__entry_tables__vector__capacity__last__bit1))

;; names__entry_tables__vector__capacity__position_axiom
  (assert (<= 0 names__entry_tables__vector__capacity__position1))

(declare-fun user_eq15 (us_rep3 us_rep3) Bool)

(declare-const dummy15 us_rep3)

(declare-datatypes ()
((tentry_tableS__ref
 (tentry_tableS__refqtmk (tentry_tableS__content us_rep3)))))
(define-fun tentry_tableS__ref_tentry_tableS__content__projection ((a tentry_tableS__ref)) us_rep3 
  (tentry_tableS__content a))

(declare-const entry_table__split_discrs us_split_discrs2)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-fun oeq1 (us_rep3 us_rep3) Bool)

(declare-fun oeq__function_guard1 (Bool us_rep3 us_rep3) Bool)

(declare-fun is_empty1 (us_rep3) Bool)

(declare-fun is_empty__function_guard1 (Bool us_rep3) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq15 a b) (oeq1 a b)) :pattern ((user_eq15 a b)) )))

(define-fun dynamic_invariant3 ((temp___expr_613 us_rep3)
  (temp___is_init_609 Bool) (temp___skip_constant_610 Bool)
  (temp___do_toplevel_611 Bool)
  (temp___do_typ_inv_612 Bool)) Bool (=>
                                     (not (= temp___skip_constant_610 true))
                                     (in_range10 128
                                     (us_split_discrs3 temp___expr_613))))

(define-fun default_initial_assumption1 ((temp___expr_615 us_rep3)
  (temp___skip_top_level_616 Bool)) Bool (and
                                         (= (to_rep6
                                            (rec__names__entry_tables__vector__capacity
                                            (us_split_discrs3
                                            temp___expr_615))) 128)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_616 true))
                                         (= (is_empty1 temp___expr_615) true))))

(declare-const e us_rep2)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const l Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const s__first integer)

(declare-const s__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(define-fun dynamic_invariant4 ((temp___expr_282 Int)
  (temp___is_init_278 Bool) (temp___skip_constant_279 Bool)
  (temp___do_toplevel_280 Bool)
  (temp___do_typ_inv_281 Bool)) Bool (=>
                                     (or (= temp___is_init_278 true)
                                     (<= 0 2147483647)) (in_range7
                                     temp___expr_282)))

(declare-sort tchar_table_indexB 0)

(declare-fun tchar_table_indexBqtint (tchar_table_indexB) Int)

;; tchar_table_indexB'axiom
  (assert
  (forall ((i tchar_table_indexB))
  (and (<= (- 2147483648) (tchar_table_indexBqtint i))
  (<= (tchar_table_indexBqtint i) 2147483647))))

(define-fun in_range11 ((x Int)) Bool (and (<= (- 2147483648) x)
                                      (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq16 (tchar_table_indexB tchar_table_indexB) Bool)

(declare-const dummy16 tchar_table_indexB)

(declare-datatypes ()
((tchar_table_indexB__ref
 (tchar_table_indexB__refqtmk
 (tchar_table_indexB__content tchar_table_indexB)))))
(define-fun tchar_table_indexB__ref_tchar_table_indexB__content__projection ((a tchar_table_indexB__ref)) tchar_table_indexB 
  (tchar_table_indexB__content a))

(declare-sort index_type 0)

(declare-fun index_typeqtint (index_type) Int)

;; index_type'axiom
  (assert
  (forall ((i index_type))
  (and (<= 0 (index_typeqtint i)) (<= (index_typeqtint i) 2147483646))))

(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq17 (index_type index_type) Bool)

(declare-const dummy17 index_type)

(declare-datatypes ()
((index_type__ref (index_type__refqtmk (index_type__content index_type)))))
(define-fun index_type__ref_index_type__content__projection ((a index_type__ref)) index_type 
  (index_type__content a))

(declare-sort index_type1 0)

(declare-fun index_typeqtint1 (index_type1) Int)

;; index_type'axiom
  (assert
  (forall ((i index_type1))
  (and (<= 1 (index_typeqtint1 i)) (<= (index_typeqtint1 i) 2147483647))))

(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq18 (index_type1 index_type1) Bool)

(declare-const dummy18 index_type1)

(declare-datatypes ()
((index_type__ref1 (index_type__refqtmk1 (index_type__content1 index_type1)))))
(define-fun index_type__ref_index_type__content__3__projection ((a index_type__ref1)) index_type1 
  (index_type__content1 a))

(declare-datatypes () ((tsS__ref (tsS__refqtmk (tsS__content us_t)))))
(define-fun tsS__ref_tsS__content__projection ((a tsS__ref)) us_t (tsS__content
                                                                  a))

(define-fun dynamic_invariant5 ((temp___expr_635 us_t)
  (temp___is_init_631 Bool) (temp___skip_constant_632 Bool)
  (temp___do_toplevel_633 Bool)
  (temp___do_typ_inv_634 Bool)) Bool (=>
                                     (not (= temp___skip_constant_632 true))
                                     (and (dynamic_property 1 l
                                     (first1 temp___expr_635)
                                     (last1 temp___expr_635))
                                     (and (= (first1 temp___expr_635) 1)
                                     (= (last1 temp___expr_635) l)))))

(define-fun default_initial_assumption2 ((temp___expr_637 us_t)
  (temp___skip_top_level_638 Bool)) Bool (and (= (first1 temp___expr_637) 1)
                                         (= (last1 temp___expr_637) l)))

(declare-fun temp___String_Literal_676 (tuple0) (Array Int character))

;; temp___String_Literal_676__def_axiom
  (assert true)

(define-fun dynamic_invariant6 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range2 temp___expr_74)))

(define-fun dynamic_invariant7 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(define-fun dynamic_invariant8 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range3 temp___expr_18)))

(define-fun dynamic_invariant9 ((temp___expr_337 Int)
  (temp___is_init_333 Bool) (temp___skip_constant_334 Bool)
  (temp___do_toplevel_335 Bool)
  (temp___do_typ_inv_336 Bool)) Bool (=>
                                     (or (= temp___is_init_333 true)
                                     (<= 0 2147483646)) (in_range8
                                     temp___expr_337)))

;; l__def_axiom
  (assert
  (= l (to_rep (rec__names__name_entry__length (us_split_fields3 e)))))

(declare-sort count_type 0)

(declare-fun count_typeqtint (count_type) Int)

;; count_type'axiom
  (assert
  (forall ((i count_type))
  (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))

(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq19 (count_type count_type) Bool)

(declare-const dummy19 count_type)

(declare-datatypes ()
((count_type__ref (count_type__refqtmk (count_type__content count_type)))))
(define-fun count_type__ref_count_type__content__projection ((a count_type__ref)) count_type 
  (count_type__content a))

(define-fun dynamic_invariant10 ((temp___expr_365 Int)
  (temp___is_init_361 Bool) (temp___skip_constant_362 Bool)
  (temp___do_toplevel_363 Bool)
  (temp___do_typ_inv_364 Bool)) Bool (=>
                                     (or (= temp___is_init_361 true)
                                     (<= 0 2147483647)) (in_range14
                                     temp___expr_365)))

(declare-sort extended_index 0)

(declare-fun extended_indexqtint (extended_index) Int)

;; extended_index'axiom
  (assert
  (forall ((i extended_index))
  (and (<= (- 1) (extended_indexqtint i))
  (<= (extended_indexqtint i) 2147483647))))

(define-fun in_range15 ((x Int)) Bool (and (<= (- 1) x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq20 (extended_index extended_index) Bool)

(declare-const dummy20 extended_index)

(declare-datatypes ()
((extended_index__ref
 (extended_index__refqtmk (extended_index__content extended_index)))))
(define-fun extended_index__ref_extended_index__content__projection ((a extended_index__ref)) extended_index 
  (extended_index__content a))

(define-fun dynamic_invariant11 ((temp___expr_358 Int)
  (temp___is_init_354 Bool) (temp___skip_constant_355 Bool)
  (temp___do_toplevel_356 Bool)
  (temp___do_typ_inv_357 Bool)) Bool (=>
                                     (or (= temp___is_init_354 true)
                                     (<= (- 1) 2147483647)) (in_range15
                                     temp___expr_358)))

(define-fun dynamic_invariant12 ((temp___expr_372 Int)
  (temp___is_init_368 Bool) (temp___skip_constant_369 Bool)
  (temp___do_toplevel_370 Bool)
  (temp___do_typ_inv_371 Bool)) Bool (=>
                                     (or (= temp___is_init_368 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_372)))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep) (b us_rep))
  (! (= (user_eq5 a b) (oeq a b)) :pattern ((user_eq5 a b)) )))

(define-fun capacity ((container us_rep)) Int (ite (= (distinct 0 0) true)
                                              (to_rep3
                                              (rec__names__char_tables__vector__capacity
                                              (us_split_discrs1 container)))
                                              2147483647))

(declare-fun capacity__function_guard (Int us_rep) Bool)

(declare-fun length3 (us_rep) Int)

(declare-fun length__function_guard2 (Int us_rep) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length3 container)))
     (and (<= result (capacity container)) (dynamic_invariant12 result true
     false true true))) :pattern ((length3 container)) )))

(define-fun length4 ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(define-fun oeq2 ((left us_rep1)
  (right us_rep1)) Bool (and (= (length1 left) (length1 right)) (ite 
                                                                (forall
                                                                ((n1 Int))
                                                                (=>
                                                                (and
                                                                (<= 0 n1)
                                                                (<= n1 
                                                                (last2 left)))
                                                                (= (get left
                                                                   n1) 
                                                                (get right
                                                                n1)))) true
                                                                false)))

(declare-fun oeq__function_guard2 (Bool us_rep1 us_rep1) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (= (user_eq6 a b) (oeq2 a b)) :pattern ((user_eq6 a b)) )))

(define-fun default_initial_assumption3 ((temp___expr_407 us_rep1)
  (temp___skip_top_level_408 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_408 true))
                                         (= (length1 temp___expr_407) 0)))

;; model__post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (length1 (model1 container)) (length3 container)) :pattern ((model1
                                                                    container)) )))

;; oeq__post_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (= (= (oeq left right) true)
     (= (oeq2 (model1 left) (model1 right)) true)) :pattern ((oeq left right)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (= (is_empty container) true) (= (length3 container) 0)) :pattern (
  (is_empty container)) )))

(define-fun dynamic_invariant13 ((temp___expr_344 Int)
  (temp___is_init_340 Bool) (temp___skip_constant_341 Bool)
  (temp___do_toplevel_342 Bool)
  (temp___do_typ_inv_343 Bool)) Bool (=>
                                     (or (= temp___is_init_340 true)
                                     (<= 0 2147483646)) (in_range12
                                     temp___expr_344)))

(declare-sort extended_index1 0)

(declare-fun extended_indexqtint1 (extended_index1) Int)

;; extended_index'axiom
  (assert
  (forall ((i extended_index1))
  (and (<= (- 1) (extended_indexqtint1 i))
  (<= (extended_indexqtint1 i) 2147483646))))

(define-fun in_range16 ((x Int)) Bool (and (<= (- 1) x) (<= x 2147483646)))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq21 (extended_index1 extended_index1) Bool)

(declare-const dummy21 extended_index1)

(declare-datatypes ()
((extended_index__ref1
 (extended_index__refqtmk1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref_extended_index__content__2__projection ((a extended_index__ref1)) extended_index1 
  (extended_index__content1 a))

(define-fun dynamic_invariant14 ((temp___expr_399 Int)
  (temp___is_init_395 Bool) (temp___skip_constant_396 Bool)
  (temp___do_toplevel_397 Bool)
  (temp___do_typ_inv_398 Bool)) Bool (=>
                                     (or (= temp___is_init_395 true)
                                     (<= (- 1) 2147483646)) (in_range16
                                     temp___expr_399)))

;; length__post_axiom
  (assert
  (forall ((container us_rep1))
  (! (let ((result (length1 container)))
     (and (<= (+ (- 1) result) 2147483646) (dynamic_invariant10 result true
     false true true))) :pattern ((length1 container)) )))

(declare-sort element_type1 0)

(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq22 (element_type1 element_type1) Bool)

(declare-const dummy22 element_type1)

(declare-datatypes ()
((element_type__ref3
 (element_type__refqtmk3 (element_type__content3 element_type1)))))
(define-fun element_type__ref_element_type__content__2__projection ((a element_type__ref3)) element_type1 
  (element_type__content3 a))

(define-fun dynamic_invariant15 ((temp___expr_392 Int)
  (temp___is_init_388 Bool) (temp___skip_constant_389 Bool)
  (temp___do_toplevel_390 Bool)
  (temp___do_typ_inv_391 Bool)) Bool (=>
                                     (or (= temp___is_init_388 true)
                                     (<= 0 255)) (in_range17
                                     temp___expr_392)))

;; get__post_axiom
  (assert
  (forall ((container us_rep1))
  (forall ((position Int))
  (! (=>
     (and (dynamic_invariant14 position true true true true)
     (and (<= 0 position) (<= position (last2 container))))
     (dynamic_invariant15 (get container position) true false true true)) :pattern (
  (get container position)) ))))

(declare-sort extended_index2 0)

(declare-fun extended_indexqtint2 (extended_index2) Int)

;; extended_index'axiom
  (assert
  (forall ((i extended_index2))
  (and (<= 0 (extended_indexqtint2 i))
  (<= (extended_indexqtint2 i) 2147483647))))

(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq23 (extended_index2 extended_index2) Bool)

(declare-const dummy23 extended_index2)

(declare-datatypes ()
((extended_index__ref2
 (extended_index__refqtmk2 (extended_index__content2 extended_index2)))))
(define-fun extended_index__ref_extended_index__content__3__projection ((a extended_index__ref2)) extended_index2 
  (extended_index__content2 a))

(define-fun dynamic_invariant16 ((temp___expr_452 Int)
  (temp___is_init_448 Bool) (temp___skip_constant_449 Bool)
  (temp___do_toplevel_450 Bool)
  (temp___do_typ_inv_451 Bool)) Bool (=>
                                     (or (= temp___is_init_448 true)
                                     (<= 0 2147483647)) (in_range18
                                     temp___expr_452)))

(define-fun dynamic_invariant17 ((temp___expr_459 Int)
  (temp___is_init_455 Bool) (temp___skip_constant_456 Bool)
  (temp___do_toplevel_457 Bool)
  (temp___do_typ_inv_458 Bool)) Bool (=>
                                     (or (= temp___is_init_455 true)
                                     (<= 0 2147483647)) (in_range9
                                     temp___expr_459)))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq13 a b) (oeq1 a b)) :pattern ((user_eq13 a b)) )))

(define-fun capacity1 ((container us_rep3)) Int (ite (= (distinct 0 0) true)
                                                (to_rep6
                                                (rec__names__entry_tables__vector__capacity
                                                (us_split_discrs3 container)))
                                                2147483647))

(declare-fun capacity__function_guard1 (Int us_rep3) Bool)

(declare-fun length5 (us_rep3) Int)

(declare-fun length__function_guard3 (Int us_rep3) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep3))
  (! (let ((result (length5 container)))
     (and (<= result (capacity1 container)) (dynamic_invariant17 result true
     false true true))) :pattern ((length5 container)) )))

(define-fun oeq3 ((left us_rep4)
  (right us_rep4)) Bool (and (= (length2 left) (length2 right)) (ite 
                                                                (forall
                                                                ((n1 Int))
                                                                (=>
                                                                (and
                                                                (<= 1 n1)
                                                                (<= n1 
                                                                (last3 left)))
                                                                (= (bool_eq3
                                                                   (get1 left
                                                                   n1)
                                                                   (get1
                                                                   right n1)) true)))
                                                                true false)))

(declare-fun oeq__function_guard3 (Bool us_rep4 us_rep4) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep4) (b us_rep4))
  (! (= (user_eq14 a b) (oeq3 a b)) :pattern ((user_eq14 a b)) )))

(define-fun default_initial_assumption4 ((temp___expr_497 us_rep4)
  (temp___skip_top_level_498 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_498 true))
                                         (= (length2 temp___expr_497) 0)))

;; model__post_axiom
  (assert
  (forall ((container us_rep3))
  (! (= (length2 (model2 container)) (length5 container)) :pattern ((model2
                                                                    container)) )))

;; oeq__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (= (= (oeq1 left right) true)
     (= (oeq3 (model2 left) (model2 right)) true)) :pattern ((oeq1 left
                                                             right)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep3))
  (! (= (= (is_empty1 container) true) (= (length5 container) 0)) :pattern (
  (is_empty1 container)) )))

(define-fun dynamic_invariant18 ((temp___expr_435 Int)
  (temp___is_init_431 Bool) (temp___skip_constant_432 Bool)
  (temp___do_toplevel_433 Bool)
  (temp___do_typ_inv_434 Bool)) Bool (=>
                                     (or (= temp___is_init_431 true)
                                     (<= 1 2147483647)) (in_range13
                                     temp___expr_435)))

(declare-sort extended_index3 0)

(declare-fun extended_indexqtint3 (extended_index3) Int)

;; extended_index'axiom
  (assert
  (forall ((i extended_index3))
  (and (<= 0 (extended_indexqtint3 i))
  (<= (extended_indexqtint3 i) 2147483647))))

(define-fun in_range19 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq24 (extended_index3 extended_index3) Bool)

(declare-const dummy24 extended_index3)

(declare-datatypes ()
((extended_index__ref3
 (extended_index__refqtmk3 (extended_index__content3 extended_index3)))))
(define-fun extended_index__ref_extended_index__content__4__projection ((a extended_index__ref3)) extended_index3 
  (extended_index__content3 a))

(define-fun dynamic_invariant19 ((temp___expr_489 Int)
  (temp___is_init_485 Bool) (temp___skip_constant_486 Bool)
  (temp___do_toplevel_487 Bool)
  (temp___do_typ_inv_488 Bool)) Bool (=>
                                     (or (= temp___is_init_485 true)
                                     (<= 0 2147483647)) (in_range19
                                     temp___expr_489)))

;; length__post_axiom
  (assert
  (forall ((container us_rep4))
  (! (let ((result (length2 container)))
     (and (<= (+ 0 result) 2147483647) (dynamic_invariant10 result true false
     true true))) :pattern ((length2 container)) )))

;; get__post_axiom
  (assert true)

(declare-const char_table__split_fields us_main_type)

(declare-const entry_table__split_fields us_main_type2)

(declare-const s (Array Int character))

;; Assume
  (assert (dynamic_invariant2
  (us_repqtmk char_table__split_discrs
  (us_split_fieldsqtmk char_table__split_fields)) true false true true))

;; Assume
  (assert (dynamic_invariant3
  (us_repqtmk2 entry_table__split_discrs
  (us_split_fieldsqtmk2 entry_table__split_fields)) true false true true))

;; Assume
  (assert (dynamic_invariant4 n true false true true))

;; H
  (assert (invariant____function_guard (invariant__ Tuple0) Tuple0))

;; Assume
  (assert (= (invariant__ Tuple0) true))

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (= n 0) true false)))

;; H
  (assert (not (= spark__branch true)))

(define-fun o () Int n)

;; Ensures
  (assert (in_range13 o))

(define-fun o1 () us_rep3 (us_repqtmk2 entry_table__split_discrs
                          (us_split_fieldsqtmk2 entry_table__split_fields)))

(define-fun names__to_string__B_3__e__assume () us_rep2 (element1 o1 o))

;; H
  (assert true)

;; H
  (assert
  (= (bool_eq3 names__to_string__B_3__e__assume (get1 (model2 o1) o)) true))

;; Assume
  (assert (= names__to_string__B_3__e__assume e))

;; Assume
  (assert true)

(declare-const names__to_string__B_3__l__assume Int)

;; Ensures
  (assert
  (= (to_rep (rec__names__name_entry__length (us_split_fields3 e))) names__to_string__B_3__l__assume))

;; Assume
  (assert (= names__to_string__B_3__l__assume l))

;; Assume
  (assert (dynamic_invariant l true false true true))

;; H
  (assert (<= 1 l))

(assert
;; defqtvc
 ;; File "names.ads", line 15, characters 0-0
  (not (<= 1 1)))
(check-sat)
