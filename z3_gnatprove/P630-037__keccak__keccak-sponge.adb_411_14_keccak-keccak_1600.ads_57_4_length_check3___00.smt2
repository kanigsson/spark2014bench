(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-fun nth1 ((_ BitVec 64) Int) Bool)

(declare-fun lsr1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_right2 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left2 ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun to_int2 ((x (_ BitVec 64))) Int (ite (bvsge x (_ bv0 64))
                                            (bv2int x)
                                            (- (- 18446744073709551616 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i)
                                          (<= i 18446744073709551615)))

(declare-fun nth_bv1 ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (t__refqtmk1 (t__content1 (_ BitVec 64))))))
(declare-fun power1 ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min1 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(declare-sort lane_type 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 64))

(declare-fun user_eq3 (lane_type lane_type) Bool)

(declare-const dummy3 lane_type)

(declare-datatypes ()
((lane_type__ref (lane_type__refqtmk (lane_type__content lane_type)))))
(define-fun lane_type__ref_lane_type__content__projection ((a lane_type__ref)) lane_type 
  (lane_type__content a))

(declare-fun to_rep1 (lane_type) (_ BitVec 64))

(declare-fun of_rep1 ((_ BitVec 64)) lane_type)

;; inversion_axiom
  (assert
  (forall ((x lane_type))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 64)))
  (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(define-fun to_int3 ((x lane_type)) Int (bv2int (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x lane_type)) (! (uint_in_range1
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-sort map1 0)

(declare-datatypes () ((map__ref (map__refqtmk (map__content map1)))))
(declare-fun get (map1 (_ BitVec 8) (_ BitVec 8)) lane_type)

(declare-fun set (map1 (_ BitVec 8) (_ BitVec 8) lane_type) map1)

;; Select_eq
  (assert
  (forall ((m map1))
  (forall ((i (_ BitVec 8)))
  (forall ((j (_ BitVec 8)))
  (forall ((a lane_type))
  (! (= (get (set m i j a) i j) a) :pattern ((set m i j a)) ))))))

;; Select_neq
  (assert
  (forall ((m map1))
  (forall ((i (_ BitVec 8)) (i2 (_ BitVec 8)))
  (forall ((j (_ BitVec 8)) (j2 (_ BitVec 8)))
  (forall ((a lane_type))
  (! (=> (not (and (= i i2) (= j j2)))
     (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get
                                                            (set m i j a) i2
                                                            j2)) :pattern (
  (set m i j a) (get m i2 j2)) ))))))

(declare-fun slide (map1 (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) map1)

;; slide_def
  (assert
  (forall ((a map1))
  (forall ((new_first (_ BitVec 8)) (old_first (_ BitVec 8)))
  (forall ((new_first_2 (_ BitVec 8)) (old_first_2 (_ BitVec 8)))
  (forall ((i (_ BitVec 8)))
  (forall ((j (_ BitVec 8)))
  (! (= (get (slide a old_first new_first old_first_2 new_first_2) i j) 
  (get a (bvsub i (bvsub new_first old_first))
  (bvsub j (bvsub new_first_2 old_first_2)))) :pattern ((get
                                                        (slide a old_first
                                                        new_first old_first_2
                                                        new_first_2) i j)) )))))))

(define-fun bool_eq ((a map1) (a__first (_ BitVec 8)) (a__last (_ BitVec 8))
  (a__first_2 (_ BitVec 8)) (a__last_2 (_ BitVec 8)) (b map1)
  (b__first (_ BitVec 8)) (b__last (_ BitVec 8)) (b__first_2 (_ BitVec 8))
  (b__last_2 (_ BitVec 8))) Bool (ite (and
                                      (and
                                      (ite (bvule a__first a__last)
                                      (and (bvule b__first b__last)
                                      (= (bvsub a__last a__first) (bvsub b__last b__first)))
                                      (bvugt b__first b__last))
                                      (ite (bvule a__first_2 a__last_2)
                                      (and (bvule b__first_2 b__last_2)
                                      (= (bvsub a__last_2 a__first_2) (bvsub b__last_2 b__first_2)))
                                      (bvugt b__first_2 b__last_2)))
                                      (forall ((temp___idx_154 (_ BitVec 8))
                                      (temp___idx_155 (_ BitVec 8)))
                                      (=>
                                      (and
                                      (and (bvule a__first temp___idx_154)
                                      (bvule temp___idx_154 a__last))
                                      (and (bvule a__first_2 temp___idx_155)
                                      (bvule temp___idx_155 a__last_2)))
                                      (= (to_rep1
                                         (get a temp___idx_154
                                         temp___idx_155)) (to_rep1
                                                          (get b
                                                          (bvadd (bvsub b__first a__first) temp___idx_154)
                                                          (bvadd (bvsub b__first_2 a__first_2) temp___idx_155)))))))
                                 true false))

;; bool_eq_rev
  (assert
  (forall ((a map1) (b map1))
  (forall ((a__first (_ BitVec 8)) (a__last (_ BitVec 8))
  (a__first_2 (_ BitVec 8)) (a__last_2 (_ BitVec 8)) (b__first (_ BitVec 8))
  (b__last (_ BitVec 8)) (b__first_2 (_ BitVec 8)) (b__last_2 (_ BitVec 8)))
  (=>
  (= (bool_eq b b__first b__last b__first_2 b__last_2 a a__first a__last
     a__first_2 a__last_2) true)
  (and
  (and
  (ite (bvule a__first a__last)
  (and (bvule b__first b__last)
  (= (bvsub a__last a__first) (bvsub b__last b__first)))
  (bvugt b__first b__last))
  (ite (bvule a__first_2 a__last_2)
  (and (bvule b__first_2 b__last_2)
  (= (bvsub a__last_2 a__first_2) (bvsub b__last_2 b__first_2)))
  (bvugt b__first_2 b__last_2)))
  (forall ((temp___idx_154 (_ BitVec 8)) (temp___idx_155 (_ BitVec 8)))
  (=>
  (and (and (bvule a__first temp___idx_154) (bvule temp___idx_154 a__last))
  (and (bvule a__first_2 temp___idx_155) (bvule temp___idx_155 a__last_2)))
  (= (to_rep1 (get a temp___idx_154 temp___idx_155)) (to_rep1
                                                     (get b
                                                     (bvadd (bvsub b__first a__first) temp___idx_154)
                                                     (bvadd (bvsub b__first_2 a__first_2) temp___idx_155)))))))))))

(declare-sort index_number 0)

(declare-fun index_numberqtint (index_number) Int)

;; index_number'axiom
  (assert
  (forall ((i index_number))
  (and (<= 0 (index_numberqtint i)) (<= (index_numberqtint i) 2147483647))))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (index_number index_number) Bool)

(declare-const dummy4 index_number)

(declare-datatypes ()
((index_number__ref
 (index_number__refqtmk (index_number__content index_number)))))
(define-fun index_number__ref_index_number__content__projection ((a index_number__ref)) index_number 
  (index_number__content a))

(declare-sort byte 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))

(declare-fun user_eq5 (byte byte) Bool)

(declare-const dummy5 byte)

(declare-datatypes () ((byte__ref (byte__refqtmk (byte__content byte)))))
(define-fun byte__ref_byte__content__projection ((a byte__ref)) byte 
  (byte__content a))

(declare-fun to_rep2 (byte) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) byte)

;; inversion_axiom
  (assert
  (forall ((x byte)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int4 ((x byte)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x byte)) (! (uint_in_range (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((map__ref1 (map__refqtmk1 (map__content1 (Array Int byte))))))
(declare-fun slide1 ((Array Int byte) Int Int) (Array Int byte))

;; slide_eq
  (assert
  (forall ((a (Array Int byte)))
  (forall ((first Int))
  (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int byte)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int byte)) (a__first Int) (a__last Int)
  (b (Array Int byte)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_183 Int))
                           (=>
                           (and (<= a__first temp___idx_183)
                           (<= temp___idx_183 a__last))
                           (= (to_rep2 (select a temp___idx_183)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_183)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int byte)) (b (Array Int byte)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_183 Int))
  (=> (and (<= a__first temp___idx_183) (<= temp___idx_183 a__last))
  (= (to_rep2 (select a temp___idx_183)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_183)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range4 low) (in_range4 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int byte))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int byte) (elts a))

(define-fun of_array ((a (Array Int byte)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length1 ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                   (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq6 (us_t us_t) Bool)

(declare-const dummy6 us_t)

(declare-datatypes ()
((byte_array__ref (byte_array__refqtmk (byte_array__content us_t)))))
(define-fun byte_array__ref_byte_array__content__projection ((a byte_array__ref)) us_t 
  (byte_array__content a))

(declare-const dummy7 map1)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq7 (map1 map1) Bool)

(declare-sort states 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (states states) Bool)

(declare-const dummy8 states)

(declare-datatypes ()
((states__ref (states__refqtmk (states__content states)))))
(define-fun states__ref_states__content__projection ((a states__ref)) states 
  (states__content a))

(declare-fun to_rep3 (states) Int)

(declare-fun of_rep3 (Int) states)

;; inversion_axiom
  (assert
  (forall ((x states))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x states)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort byte_absorption_number 0)

(declare-fun byte_absorption_numberqtint (byte_absorption_number) Int)

;; byte_absorption_number'axiom
  (assert
  (forall ((i byte_absorption_number))
  (and (<= 0 (byte_absorption_numberqtint i))
  (<= (byte_absorption_numberqtint i) 199))))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 199)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (byte_absorption_number byte_absorption_number) Bool)

(declare-const dummy9 byte_absorption_number)

(declare-datatypes ()
((byte_absorption_number__ref
 (byte_absorption_number__refqtmk
 (byte_absorption_number__content byte_absorption_number)))))
(define-fun byte_absorption_number__ref_byte_absorption_number__content__projection ((a byte_absorption_number__ref)) byte_absorption_number 
  (byte_absorption_number__content a))

(define-fun to_rep4 ((x byte_absorption_number)) Int (byte_absorption_numberqtint
                                                     x))

(declare-fun of_rep4 (Int) byte_absorption_number)

;; inversion_axiom
  (assert
  (forall ((x byte_absorption_number))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x byte_absorption_number)) (! (in_range6
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-const dummy10 (Array Int byte))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const component__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; component__size_axiom
  (assert (<= 0 component__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-fun user_eq10 ((Array Int byte) (Array Int byte)) Bool)

(declare-sort bit_absorption_number 0)

(declare-fun bit_absorption_numberqtint (bit_absorption_number) Int)

;; bit_absorption_number'axiom
  (assert
  (forall ((i bit_absorption_number))
  (and (<= 0 (bit_absorption_numberqtint i))
  (<= (bit_absorption_numberqtint i) 1599))))

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1599)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq11 (bit_absorption_number bit_absorption_number) Bool)

(declare-const dummy11 bit_absorption_number)

(declare-datatypes ()
((bit_absorption_number__ref
 (bit_absorption_number__refqtmk
 (bit_absorption_number__content bit_absorption_number)))))
(define-fun bit_absorption_number__ref_bit_absorption_number__content__projection ((a bit_absorption_number__ref)) bit_absorption_number 
  (bit_absorption_number__content a))

(define-fun to_rep5 ((x bit_absorption_number)) Int (bit_absorption_numberqtint
                                                    x))

(declare-fun of_rep5 (Int) bit_absorption_number)

;; inversion_axiom
  (assert
  (forall ((x bit_absorption_number))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x bit_absorption_number)) (! (in_range7
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-sort rate_number 0)

(declare-fun rate_numberqtint (rate_number) Int)

;; rate_number'axiom
  (assert
  (forall ((i rate_number))
  (and (<= 1 (rate_numberqtint i)) (<= (rate_numberqtint i) 199))))

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 199)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq12 (rate_number rate_number) Bool)

(declare-const dummy12 rate_number)

(declare-datatypes ()
((rate_number__ref (rate_number__refqtmk (rate_number__content rate_number)))))
(define-fun rate_number__ref_rate_number__content__projection ((a rate_number__ref)) rate_number 
  (rate_number__content a))

(define-fun to_rep6 ((x rate_number)) Int (rate_numberqtint x))

(declare-fun of_rep6 (Int) rate_number)

;; inversion_axiom
  (assert
  (forall ((x rate_number))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x rate_number)) (! (in_range8
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                              (of_rep6 x))) )))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__ada___keccak__keccak_1600__sponge__context__state map1)(rec__ada___keccak__keccak_1600__sponge__context__block (Array Int byte))(rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed bit_absorption_number)(rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed byte_absorption_number)(rec__ada___keccak__keccak_1600__sponge__context__rate rate_number)(rec__ada___keccak__keccak_1600__sponge__context__curr_state states)))))
(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__state__projection ((a us_split_fields)) map1 
  (rec__ada___keccak__keccak_1600__sponge__context__state a))

(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__block__projection ((a us_split_fields)) (Array Int byte) 
  (rec__ada___keccak__keccak_1600__sponge__context__block a))

(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed__projection ((a us_split_fields)) bit_absorption_number 
  (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed a))

(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed__projection ((a us_split_fields)) byte_absorption_number 
  (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed a))

(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__rate__projection ((a us_split_fields)) rate_number 
  (rec__ada___keccak__keccak_1600__sponge__context__rate a))

(define-fun us_split_fields_rec__ada___keccak__keccak_1600__sponge__context__curr_state__projection ((a us_split_fields)) states 
  (rec__ada___keccak__keccak_1600__sponge__context__curr_state a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq3 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (bool_eq
                           (rec__ada___keccak__keccak_1600__sponge__context__state
                           (us_split_fields1 a)) #x00 #x04 #x00 #x04
                           (rec__ada___keccak__keccak_1600__sponge__context__state
                           (us_split_fields1 b)) #x00 #x04 #x00 #x04) true)
                        (= (bool_eq1
                           (rec__ada___keccak__keccak_1600__sponge__context__block
                           (us_split_fields1 a)) 0 199
                           (rec__ada___keccak__keccak_1600__sponge__context__block
                           (us_split_fields1 b)) 0 199) true))
                        (and
                        (and
                        (= (to_rep5
                           (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                           (us_split_fields1 a))) (to_rep5
                                                  (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                                                  (us_split_fields1 b))))
                        (= (to_rep4
                           (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                                                  (us_split_fields1 b)))))
                        (and
                        (= (to_rep6
                           (rec__ada___keccak__keccak_1600__sponge__context__rate
                           (us_split_fields1 a))) (to_rep6
                                                  (rec__ada___keccak__keccak_1600__sponge__context__rate
                                                  (us_split_fields1 b))))
                        (= (to_rep3
                           (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                                                  (us_split_fields1 b)))))))
                   true false))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const ada___keccak__keccak_1600__sponge__context__state__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__state__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__state__position Int)

;; ada___keccak__keccak_1600__sponge__context__state__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__state__first__bit))

;; ada___keccak__keccak_1600__sponge__context__state__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__state__first__bit ada___keccak__keccak_1600__sponge__context__state__last__bit))

;; ada___keccak__keccak_1600__sponge__context__state__position_axiom
  (assert (<= 0 ada___keccak__keccak_1600__sponge__context__state__position))

(declare-const ada___keccak__keccak_1600__sponge__context__block__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__block__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__block__position Int)

;; ada___keccak__keccak_1600__sponge__context__block__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__block__first__bit))

;; ada___keccak__keccak_1600__sponge__context__block__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__block__first__bit ada___keccak__keccak_1600__sponge__context__block__last__bit))

;; ada___keccak__keccak_1600__sponge__context__block__position_axiom
  (assert (<= 0 ada___keccak__keccak_1600__sponge__context__block__position))

(declare-const ada___keccak__keccak_1600__sponge__context__bits_absorbed__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__bits_absorbed__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__bits_absorbed__position Int)

;; ada___keccak__keccak_1600__sponge__context__bits_absorbed__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__bits_absorbed__first__bit))

;; ada___keccak__keccak_1600__sponge__context__bits_absorbed__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__bits_absorbed__first__bit 
  ada___keccak__keccak_1600__sponge__context__bits_absorbed__last__bit))

;; ada___keccak__keccak_1600__sponge__context__bits_absorbed__position_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__bits_absorbed__position))

(declare-const ada___keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__bytes_squeezed__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__bytes_squeezed__position Int)

;; ada___keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit))

;; ada___keccak__keccak_1600__sponge__context__bytes_squeezed__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__bytes_squeezed__first__bit 
  ada___keccak__keccak_1600__sponge__context__bytes_squeezed__last__bit))

;; ada___keccak__keccak_1600__sponge__context__bytes_squeezed__position_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__bytes_squeezed__position))

(declare-const ada___keccak__keccak_1600__sponge__context__rate__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__rate__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__rate__position Int)

;; ada___keccak__keccak_1600__sponge__context__rate__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__rate__first__bit))

;; ada___keccak__keccak_1600__sponge__context__rate__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__rate__first__bit ada___keccak__keccak_1600__sponge__context__rate__last__bit))

;; ada___keccak__keccak_1600__sponge__context__rate__position_axiom
  (assert (<= 0 ada___keccak__keccak_1600__sponge__context__rate__position))

(declare-const ada___keccak__keccak_1600__sponge__context__curr_state__first__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__curr_state__last__bit Int)

(declare-const ada___keccak__keccak_1600__sponge__context__curr_state__position Int)

;; ada___keccak__keccak_1600__sponge__context__curr_state__first__bit_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__curr_state__first__bit))

;; ada___keccak__keccak_1600__sponge__context__curr_state__last__bit_axiom
  (assert
  (< ada___keccak__keccak_1600__sponge__context__curr_state__first__bit 
  ada___keccak__keccak_1600__sponge__context__curr_state__last__bit))

;; ada___keccak__keccak_1600__sponge__context__curr_state__position_axiom
  (assert
  (<= 0 ada___keccak__keccak_1600__sponge__context__curr_state__position))

(declare-fun user_eq13 (us_rep us_rep) Bool)

(declare-const dummy13 us_rep)

(declare-datatypes ()
((context__ref (context__refqtmk (context__content us_rep)))))
(define-fun context__ref_context__content__projection ((a context__ref)) us_rep 
  (context__content a))

(declare-fun state_of (us_rep) Int)

(declare-fun state_of__function_guard (Int us_rep) Bool)

(define-fun dynamic_invariant3 ((temp___expr_329 Int)
  (temp___is_init_325 Bool) (temp___skip_constant_326 Bool)
  (temp___do_toplevel_327 Bool)
  (temp___do_typ_inv_328 Bool)) Bool (=>
                                     (or (= temp___is_init_325 true)
                                     (<= 0 1)) (in_range5 temp___expr_329)))

;; state_of__post_axiom
  (assert
  (forall ((ctx us_rep))
  (! (let ((result (state_of ctx)))
     (=> (state_of__function_guard result ctx) (dynamic_invariant3 result
     true false true true))) :pattern ((state_of ctx)) )))

;; state_of__def_axiom
  (assert
  (forall ((ctx us_rep))
  (! (= (state_of ctx) (to_rep3
                       (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                       (us_split_fields1 ctx)))) :pattern ((state_of ctx)) )))

(declare-fun rate_of (us_rep) Int)

(declare-fun rate_of__function_guard (Int us_rep) Bool)

;; rate_of__post_axiom
  (assert
  (forall ((ctx us_rep))
  (! (let ((result (rate_of ctx)))
     (=> (rate_of__function_guard result ctx)
     (and (< result 1600) (dynamic_invariant1 result true false true true)))) :pattern (
  (rate_of ctx)) )))

;; rate_of__def_axiom
  (assert
  (forall ((ctx us_rep))
  (! (= (rate_of ctx) (* (to_rep6
                         (rec__ada___keccak__keccak_1600__sponge__context__rate
                         (us_split_fields1 ctx))) 8)) :pattern ((rate_of ctx)) )))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const digest__first integer)

(declare-const digest__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const r120s Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const r123s Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const r124s Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const r127s Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const r128s Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const r131s Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const r134s Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const r135s Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const r138s Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const r141s Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const r144s Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const r145s Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const r148s Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(define-fun dynamic_invariant4 ((temp___expr_336 Int)
  (temp___is_init_332 Bool) (temp___skip_constant_333 Bool)
  (temp___do_toplevel_334 Bool)
  (temp___do_typ_inv_335 Bool)) Bool (=>
                                     (or (= temp___is_init_332 true)
                                     (<= 0 199)) (in_range6 temp___expr_336)))

(declare-datatypes () ((t119s__ref (t119s__refqtmk (t119s__content us_t)))))
(define-fun t119s__ref_t119s__content__projection ((a t119s__ref)) us_t 
  (t119s__content a))

(declare-datatypes () ((t122s__ref (t122s__refqtmk (t122s__content us_t)))))
(define-fun t122s__ref_t122s__content__projection ((a t122s__ref)) us_t 
  (t122s__content a))

(declare-datatypes () ((t126s__ref (t126s__refqtmk (t126s__content us_t)))))
(define-fun t126s__ref_t126s__content__projection ((a t126s__ref)) us_t 
  (t126s__content a))

(declare-datatypes () ((t130s__ref (t130s__refqtmk (t130s__content us_t)))))
(define-fun t130s__ref_t130s__content__projection ((a t130s__ref)) us_t 
  (t130s__content a))

(declare-datatypes () ((t133s__ref (t133s__refqtmk (t133s__content us_t)))))
(define-fun t133s__ref_t133s__content__projection ((a t133s__ref)) us_t 
  (t133s__content a))

(declare-datatypes () ((t137s__ref (t137s__refqtmk (t137s__content us_t)))))
(define-fun t137s__ref_t137s__content__projection ((a t137s__ref)) us_t 
  (t137s__content a))

(declare-datatypes () ((t140s__ref (t140s__refqtmk (t140s__content us_t)))))
(define-fun t140s__ref_t140s__content__projection ((a t140s__ref)) us_t 
  (t140s__content a))

(declare-datatypes () ((t143s__ref (t143s__refqtmk (t143s__content us_t)))))
(define-fun t143s__ref_t143s__content__projection ((a t143s__ref)) us_t 
  (t143s__content a))

(declare-datatypes () ((t147s__ref (t147s__refqtmk (t147s__content us_t)))))
(define-fun t147s__ref_t147s__content__projection ((a t147s__ref)) us_t 
  (t147s__content a))

(declare-datatypes () ((t150s__ref (t150s__refqtmk (t150s__content us_t)))))
(define-fun t150s__ref_t150s__content__projection ((a t150s__ref)) us_t 
  (t150s__content a))

(declare-fun temp_____aggregate_def_998 ((_ BitVec 8) Int Int) us_t)

(define-fun dynamic_invariant5 ((temp___expr_273 (_ BitVec 8))
  (temp___is_init_269 Bool) (temp___skip_constant_270 Bool)
  (temp___do_toplevel_271 Bool) (temp___do_typ_inv_272 Bool)) Bool true)

(define-fun dynamic_invariant6 ((temp___expr_259 Int)
  (temp___is_init_255 Bool) (temp___skip_constant_256 Bool)
  (temp___do_toplevel_257 Bool)
  (temp___do_typ_inv_258 Bool)) Bool (=>
                                     (or (= temp___is_init_255 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_259)))

(define-fun dynamic_invariant7 ((temp___expr_280 us_t)
  (temp___is_init_276 Bool) (temp___skip_constant_277 Bool)
  (temp___do_toplevel_278 Bool)
  (temp___do_typ_inv_279 Bool)) Bool (=>
                                     (not (= temp___skip_constant_277 true))
                                     (dynamic_property 0 2147483647
                                     (first1 temp___expr_280)
                                     (last1 temp___expr_280))))

(define-fun dynamic_invariant8 ((temp___expr_360 Int)
  (temp___is_init_356 Bool) (temp___skip_constant_357 Bool)
  (temp___do_toplevel_358 Bool)
  (temp___do_typ_inv_359 Bool)) Bool (=>
                                     (or (= temp___is_init_356 true)
                                     (<= 1 199)) (in_range8 temp___expr_360)))

(define-fun dynamic_invariant9 ((temp___expr_353 Int)
  (temp___is_init_349 Bool) (temp___skip_constant_350 Bool)
  (temp___do_toplevel_351 Bool)
  (temp___do_typ_inv_352 Bool)) Bool (=>
                                     (or (= temp___is_init_349 true)
                                     (<= 0 1599)) (in_range7
                                     temp___expr_353)))

;; def_axiom
  (assert
  (forall ((temp___1000 (_ BitVec 8)))
  (forall ((temp___1001 Int) (temp___1002 Int))
  (let ((temp___999 (temp_____aggregate_def_998 temp___1000 temp___1001
                    temp___1002)))
  (=> (dynamic_invariant5 temp___1000 true true true true)
  (and
  (=> (dynamic_property 0 2147483647 temp___1001 temp___1002)
  (and (= (first1 temp___999) temp___1001)
  (= (last1 temp___999) temp___1002)))
  (forall ((temp___1003 Int))
  (= (to_rep2 (select (to_array temp___999) temp___1003)) temp___1000))))))))

(declare-const rliteral byte_absorption_number)

;; rliteral_axiom
  (assert (= (byte_absorption_numberqtint rliteral) 0))

(declare-const ctx__split_fields us_split_fields)

(declare-const ctx__split_fields1 us_split_fields)

;; H
  (assert (= ctx__split_fields1 ctx__split_fields))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_property 0 2147483647 (to_rep digest__first)
  (to_rep digest__last)))

(define-fun usf () us_rep (us_repqtmk ctx__split_fields))

(declare-const o Int)

;; Ensures
  (assert (= (to_rep digest__last) o))

(declare-const o1 Int)

;; Ensures
  (assert (= (to_rep digest__first) o1))

(define-fun o2 () Int (length o1 o))

;; Ensures
  (assert (in_range2 o2))

(declare-const remaining Int)

;; H
  (assert (= remaining o2))

;; Assume
  (assert (dynamic_invariant remaining true false true true))

(declare-const offset Int)

;; H
  (assert (= offset 0))

;; Assume
  (assert (dynamic_invariant offset true false true true))

(define-fun o3 () us_rep (us_repqtmk ctx__split_fields))

(define-fun o4 () Int (rate_of o3))

;; H
  (assert (rate_of__function_guard o4 o3))

;; H
  (assert (dynamic_invariant1 o4 true false true true))

;; H
  (assert
  (= o4 (* (to_rep6
           (rec__ada___keccak__keccak_1600__sponge__context__rate
           ctx__split_fields)) 8)))

;; H
  (assert (< o4 1600))

(declare-const initial_rate Int)

;; H
  (assert (= initial_rate o4))

;; Assume
  (assert (dynamic_invariant1 initial_rate true false true true))

(declare-const o5 Int)

;; Ensures
  (assert (= (to_rep digest__last) o5))

(declare-const o6 Int)

;; Ensures
  (assert (= (to_rep digest__first) o6))

(define-fun temp___1004 () us_t (temp_____aggregate_def_998 #x00 o6 o5))

;; Assume
  (assert (= (first1 temp___1004) (to_rep digest__first)))

;; Assume
  (assert (= (last1 temp___1004) (to_rep digest__last)))

(define-fun temp___1006 () us_t (of_array (to_array temp___1004)
                                (first1 temp___1004) (last1 temp___1004)))

;; Assert
  (assert
  (ite (<= (first1 temp___1006) (last1 temp___1006))
  (and (<= (to_rep digest__first) (to_rep digest__last))
  (= (- (last1 temp___1006) (first1 temp___1006)) (- (to_rep digest__last) 
  (to_rep digest__first)))) (< (to_rep digest__last) (to_rep digest__first))))

(declare-const o7 Int)

;; Ensures
  (assert (= (to_rep digest__first) o7))

(declare-const digest (Array Int byte))

;; H
  (assert (= digest (slide1 (to_array temp___1006) (first1 temp___1006) o7)))

(declare-const spark__branch Bool)

(declare-const ctx__split_fields2 us_split_fields)

;; H
  (assert
  (forall ((ctx__split_fields3 us_split_fields)) (state_of__function_guard
  (state_of (us_repqtmk ctx__split_fields3))
  (us_repqtmk ctx__split_fields3))))

;; H
  (assert
  (forall ((ctx__split_fields3 us_split_fields)) (rate_of__function_guard
  (rate_of (us_repqtmk ctx__split_fields3)) (us_repqtmk ctx__split_fields3))))

;; H
  (assert
  (forall ((ctx__split_fields3 us_split_fields)) (rate_of__function_guard
  (rate_of (us_repqtmk ctx__split_fields3)) (us_repqtmk ctx__split_fields3))))

;; H
  (assert
  (let ((o8 (us_repqtmk ctx__split_fields))) (state_of__function_guard
  (state_of o8) o8)))

;; H
  (assert (dynamic_invariant3 (state_of (us_repqtmk ctx__split_fields)) true
  false true true))

;; H
  (assert
  (= (state_of (us_repqtmk ctx__split_fields)) (to_rep3
                                               (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                                               ctx__split_fields))))

;; H
  (assert
  (= spark__branch (ite (= (state_of (us_repqtmk ctx__split_fields)) 0) true
                   false)))

;; H
  (assert
  (ite (= spark__branch true)
  (and (= (state_of (us_repqtmk ctx__split_fields2)) 1)
  (= (rate_of (us_repqtmk ctx__split_fields2)) (rate_of
                                               (us_repqtmk ctx__split_fields))))
  (= ctx__split_fields2 ctx__split_fields)))

;; H
  (assert
  (forall ((ctx__split_fields3 us_split_fields)) (state_of__function_guard
  (state_of (us_repqtmk ctx__split_fields3))
  (us_repqtmk ctx__split_fields3))))

;; Assert
  (assert (= (state_of (us_repqtmk ctx__split_fields2)) 1))

(declare-const spark__branch1 Bool)

(declare-const ctx__split_fields3 us_split_fields)

(declare-const o8 Int)

;; Ensures
  (assert
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields2)) o8))

(declare-const o9 Int)

;; Ensures
  (assert
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields2)) o9))

;; H
  (assert (= spark__branch1 (ite (<= o8 o9) true false)))

(declare-const ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a map1)

(declare-const ctx__split_fields4 us_split_fields)

(declare-const o10 Int)

(declare-const o11 integer)

(declare-const o12 integer)

(declare-const ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data (Array Int byte))

(declare-const usf1 (Array Int byte))

(declare-const ctx__split_fields5 us_split_fields)

;; H
  (assert
  (ite (= spark__branch1 true)
  (and
  (= ctx__split_fields4 (us_split_fieldsqtmk
                        ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a
                        (rec__ada___keccak__keccak_1600__sponge__context__block
                        ctx__split_fields2)
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields2)
                        (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                        ctx__split_fields2)
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields2)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields2)))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields4)) o10)
  (and (= (- o10 1) r120s)
  (and (dynamic_invariant2 r120s true false true true)
  (and
  (=> (<= 0 r120s)
  (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r120s) (<= r120s 199))))
  (let ((ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl 
  (of_array
  (rec__ada___keccak__keccak_1600__sponge__context__block ctx__split_fields4)
  0 r120s)))
  (and
  (= (to_rep o11) (last1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (and
  (= (to_rep o12) (first1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (let ((temp___1013 (of_array
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data
                     (first1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl)
                     (last1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))))
  (and
  (forall ((temp___1016 Int))
  (ite (and (<= 0 temp___1016) (<= temp___1016 r120s))
  (= (select usf1 temp___1016) (select (to_array
                                       (of_array
                                       (slide1 (to_array temp___1013)
                                       (first1 temp___1013) 0) 0 r120s)) temp___1016))
  (= (select usf1 temp___1016) (select (rec__ada___keccak__keccak_1600__sponge__context__block
                                       ctx__split_fields4) temp___1016))))
  (and
  (= ctx__split_fields5 (us_split_fieldsqtmk
                        (rec__ada___keccak__keccak_1600__sponge__context__state
                        ctx__split_fields4) usf1
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields4)
                        (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                        ctx__split_fields4)
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields4)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields4)))
  (= ctx__split_fields3 (us_split_fieldsqtmk
                        (rec__ada___keccak__keccak_1600__sponge__context__state
                        ctx__split_fields5)
                        (rec__ada___keccak__keccak_1600__sponge__context__block
                        ctx__split_fields5)
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields5) rliteral
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields5)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields5))))))))))))))
  (= ctx__split_fields3 ctx__split_fields2)))

;; Assert
  (assert
  (= (+ offset remaining) (length (to_rep digest__first)
                          (to_rep digest__last))))

(declare-const spark__branch2 Bool)

(declare-const ctx__split_fields6 us_split_fields)

(declare-const digest1 (Array Int byte))

(declare-const remaining1 Int)

(declare-const offset1 Int)

(declare-const o13 Int)

;; Ensures
  (assert
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields3)) o13))

(declare-const spark__branch3 Bool)

;; H
  (assert (= spark__branch3 (ite (< 0 o13) true false)))

(declare-const o14 Int)

(declare-const o15 Int)

(declare-const bytes_to_squeeze Int)

(declare-const spark__branch4 Bool)

(declare-const bytes_to_squeeze1 Int)

(declare-const o16 Int)

(declare-const o17 Int)

(declare-const ada___keccak__keccak_1600__sponge__squeeze__B_2__R127s__assume Int)

(declare-const o18 Int)

(declare-const usf2 (Array Int byte))

(declare-const o19 Int)

(declare-const o20 byte_absorption_number)

(declare-const ctx__split_fields7 us_split_fields)

(declare-const o21 Int)

(declare-const o22 Int)

(declare-const ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a1 map1)

(declare-const ctx__split_fields8 us_split_fields)

(declare-const o23 Int)

(declare-const o24 integer)

(declare-const o25 integer)

(declare-const ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data1 (Array Int byte))

(declare-const usf3 (Array Int byte))

(declare-const ctx__split_fields9 us_split_fields)

;; H
  (assert
  (ite (= spark__branch3 true)
  (and
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields3)) o14)
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields3)) o15)
  (let ((o26 (- o15 o14)))
  (and (in_range2 o26)
  (and (= bytes_to_squeeze o26)
  (and (dynamic_invariant bytes_to_squeeze true false true true)
  (and
  (and (= spark__branch4 (ite (< remaining bytes_to_squeeze) true false))
  (ite (= spark__branch4 true) (= bytes_to_squeeze1 remaining)
  (= bytes_to_squeeze1 bytes_to_squeeze)))
  (and (= (to_rep digest__first) o16)
  (let ((o27 (+ o16 offset)))
  (and (in_range1 o27)
  (and (= o27 r123s)
  (and (dynamic_invariant2 r123s true false true true)
  (let ((o28 (+ offset bytes_to_squeeze1)))
  (and (in_range1 o28)
  (and (= (to_rep digest__first) o17)
  (let ((o29 (+ o17 (- o28 1))))
  (and (in_range1 o29)
  (and (= o29 r124s)
  (and (dynamic_invariant2 r124s true false true true)
  (and
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields3)) ada___keccak__keccak_1600__sponge__squeeze__B_2__R127s__assume)
  (and
  (= ada___keccak__keccak_1600__sponge__squeeze__B_2__R127s__assume r127s)
  (and (dynamic_invariant4 r127s true false true true)
  (and
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields3)) o18)
  (let ((o30 (+ o18 (- bytes_to_squeeze1 1))))
  (and (in_range1 o30)
  (and (= o30 r128s)
  (and (dynamic_invariant2 r128s true false true true)
  (and
  (=> (<= r127s r128s)
  (and (and (<= 0 r127s) (<= r127s 199)) (and (<= 0 r128s) (<= r128s 199))))
  (let ((temp___1024 (of_array
                     (rec__ada___keccak__keccak_1600__sponge__context__block
                     ctx__split_fields3) r127s r128s)))
  (and
  (ite (<= (first1 temp___1024) (last1 temp___1024))
  (and (<= r123s r124s)
  (= (- (last1 temp___1024) (first1 temp___1024)) (- r124s r123s)))
  (< r124s r123s))
  (let ((temp___1025 (of_array
                     (slide1 (to_array temp___1024) (first1 temp___1024)
                     r123s) r123s r124s)))
  (and
  (=> (<= r123s r124s)
  (and
  (and (<= (to_rep digest__first) r123s) (<= r123s (to_rep digest__last)))
  (and (<= (to_rep digest__first) r124s) (<= r124s (to_rep digest__last)))))
  (let ((temp___1026 (of_array digest r123s r124s)))
  (and
  (ite (<= (first1 temp___1025) (last1 temp___1025))
  (and (<= (first1 temp___1026) (last1 temp___1026))
  (= (- (last1 temp___1025) (first1 temp___1025)) (- (last1 temp___1026) 
  (first1 temp___1026)))) (< (last1 temp___1026) (first1 temp___1026)))
  (and
  (forall ((temp___1028 Int))
  (ite (and (<= r123s temp___1028) (<= temp___1028 r124s))
  (= (select usf2 temp___1028) (select (to_array temp___1025) temp___1028))
  (= (select usf2 temp___1028) (select digest temp___1028))))
  (and (= digest1 usf2)
  (and
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields3)) o19)
  (let ((o31 (+ o19 bytes_to_squeeze1)))
  (and (in_range1 o31)
  (and (in_range6 o31)
  (and (= (to_rep4 o20) o31)
  (and
  (= ctx__split_fields7 (us_split_fieldsqtmk
                        (rec__ada___keccak__keccak_1600__sponge__context__state
                        ctx__split_fields3)
                        (rec__ada___keccak__keccak_1600__sponge__context__block
                        ctx__split_fields3)
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields3) o20
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields3)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields3)))
  (let ((o32 (+ offset bytes_to_squeeze1)))
  (and (in_range1 o32)
  (and (= offset1 o32)
  (let ((o33 (- remaining bytes_to_squeeze1)))
  (and (in_range1 o33)
  (and (in_range2 o33)
  (and (= remaining1 o33)
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields7)) o21)
  (and
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields7)) o22)
  (and (= spark__branch2 (ite (<= o21 o22) true false))
  (ite (= spark__branch2 true)
  (and
  (= ctx__split_fields8 (us_split_fieldsqtmk
                        ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a1
                        (rec__ada___keccak__keccak_1600__sponge__context__block
                        ctx__split_fields7)
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields7)
                        (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                        ctx__split_fields7)
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields7)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields7)))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields8)) o23)
  (and (= (- o23 1) r131s)
  (and (dynamic_invariant2 r131s true false true true)
  (and
  (=> (<= 0 r131s)
  (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r131s) (<= r131s 199))))
  (let ((ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl 
  (of_array
  (rec__ada___keccak__keccak_1600__sponge__context__block ctx__split_fields8)
  0 r131s)))
  (and
  (= (to_rep o24) (last1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (and
  (= (to_rep o25) (first1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (let ((temp___1035 (of_array
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data1
                     (first1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl)
                     (last1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))))
  (and
  (forall ((temp___1038 Int))
  (ite (and (<= 0 temp___1038) (<= temp___1038 r131s))
  (= (select usf3 temp___1038) (select (to_array
                                       (of_array
                                       (slide1 (to_array temp___1035)
                                       (first1 temp___1035) 0) 0 r131s)) temp___1038))
  (= (select usf3 temp___1038) (select (rec__ada___keccak__keccak_1600__sponge__context__block
                                       ctx__split_fields8) temp___1038))))
  (and
  (= ctx__split_fields9 (us_split_fieldsqtmk
                        (rec__ada___keccak__keccak_1600__sponge__context__state
                        ctx__split_fields8) usf3
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields8)
                        (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                        ctx__split_fields8)
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields8)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields8)))
  (= ctx__split_fields6 (us_split_fieldsqtmk
                        (rec__ada___keccak__keccak_1600__sponge__context__state
                        ctx__split_fields9)
                        (rec__ada___keccak__keccak_1600__sponge__context__block
                        ctx__split_fields9)
                        (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                        ctx__split_fields9) rliteral
                        (rec__ada___keccak__keccak_1600__sponge__context__rate
                        ctx__split_fields9)
                        (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                        ctx__split_fields9))))))))))))))
  (= ctx__split_fields6 ctx__split_fields7))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (and
  (and
  (and
  (and (= spark__branch2 spark__branch3)
  (= ctx__split_fields6 ctx__split_fields3)) (= digest1 digest))
  (= remaining1 remaining)) (= offset1 offset))))

;; Assert
  (assert
  (=> (< 0 remaining1)
  (= (to_rep4
     (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
     ctx__split_fields6)) 0)))

;; Assert
  (assert
  (= (+ offset1 remaining1) (length (to_rep digest__first)
                            (to_rep digest__last))))

;; H
  (assert
  (forall ((ctx__split_fields10 us_split_fields)) (rate_of__function_guard
  (rate_of (us_repqtmk ctx__split_fields10))
  (us_repqtmk ctx__split_fields10))))

;; Assert
  (assert (= (rate_of (us_repqtmk ctx__split_fields6)) initial_rate))

(declare-const ctx__split_fields10 us_split_fields)

(declare-const digest2 (Array Int byte))

(declare-const remaining2 Int)

(declare-const offset2 Int)

;; H
  (assert
  (forall ((ctx__split_fields11 us_split_fields)) (state_of__function_guard
  (state_of (us_repqtmk ctx__split_fields11))
  (us_repqtmk ctx__split_fields11))))

;; H
  (assert
  (forall ((ctx__split_fields11 us_split_fields)) (rate_of__function_guard
  (rate_of (us_repqtmk ctx__split_fields11))
  (us_repqtmk ctx__split_fields11))))

;; H
  (assert
  (forall ((ctx__split_fields11 us_split_fields)) (state_of__function_guard
  (state_of (us_repqtmk ctx__split_fields11))
  (us_repqtmk ctx__split_fields11))))

;; H
  (assert
  (forall ((ctx__split_fields11 us_split_fields)) (rate_of__function_guard
  (rate_of (us_repqtmk ctx__split_fields11))
  (us_repqtmk ctx__split_fields11))))

(declare-const o26 Int)

;; Ensures
  (assert
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields6)) o26))

;; H
  (assert
  (ite (<= o26 remaining1)
  (let ((o27 (us_repqtmk ctx__split_fields6)))
  (let ((o28 (rate_of o27)))
  (and
  (and (rate_of__function_guard o28 o27)
  (and (dynamic_invariant1 o28 true false true true)
  (and
  (= o28 (* (to_rep6
            (rec__ada___keccak__keccak_1600__sponge__context__rate
            ctx__split_fields6)) 8))
  (< o28 1600))))
  (let ((o29 (us_repqtmk ctx__split_fields6)))
  (let ((o30 (state_of o29)))
  (and
  (and (state_of__function_guard o30 o29)
  (and (dynamic_invariant3 o30 true false true true)
  (= o30 (to_rep3
         (rec__ada___keccak__keccak_1600__sponge__context__curr_state
         ctx__split_fields6)))))
  (exists ((o31 Int))
  (and (= (to_rep digest__last) o31)
  (exists ((o32 Int))
  (and (= (to_rep digest__first) o32)
  (and (in_range1 (length o32 o31))
  (and (in_range1 (+ offset1 remaining1))
  (exists ((ctx__split_fields11 us_split_fields) (digest3 (Array Int byte))
  (remaining3 Int) (offset3 Int))
  (and
  (and
  (and
  (= (+ offset3 remaining3) (length (to_rep digest__first)
                            (to_rep digest__last)))
  (= (state_of (us_repqtmk ctx__split_fields11)) 1))
  (= (rate_of (us_repqtmk ctx__split_fields11)) initial_rate))
  (and
  (= (and (ite (and
               (and (dynamic_invariant remaining3 true true true true)
               (and
               (and
               (and
               (and
               (forall ((temp___1067 Int))
               (=> (and (<= 0 temp___1067) (<= temp___1067 199))
               (=> (< temp___1067 0)
               (= (select (rec__ada___keccak__keccak_1600__sponge__context__block
                          ctx__split_fields11) temp___1067) (select (rec__ada___keccak__keccak_1600__sponge__context__block
                                                                    ctx__split_fields6) temp___1067)))))
               (= (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                  ctx__split_fields11) (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                                       ctx__split_fields6)))
               (= (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                  ctx__split_fields11) (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                                       ctx__split_fields6)))
               (= (rec__ada___keccak__keccak_1600__sponge__context__rate
                  ctx__split_fields11) (rec__ada___keccak__keccak_1600__sponge__context__rate
                                       ctx__split_fields6)))
               (= (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                  ctx__split_fields11) (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                                       ctx__split_fields6))))
               (dynamic_invariant offset3 true true true true))
          true false) (ite (<= (to_rep6
                               (rec__ada___keccak__keccak_1600__sponge__context__rate
                               ctx__split_fields11)) remaining3)
                      true false)) true)
  (exists ((temp___1076 Int))
  (and (= temp___1076 offset3)
  (exists ((temp___1075 Int))
  (and (= temp___1075 remaining3)
  (exists ((o33 Int))
  (and (= (to_rep digest__first) o33)
  (let ((o34 (+ o33 offset3)))
  (and (in_range1 o34)
  (and (= o34 r134s)
  (and (dynamic_invariant2 r134s true false true true)
  (exists ((o35 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields11)) o35)
  (let ((o36 (+ offset3 o35)))
  (and (in_range1 o36)
  (exists ((o37 Int))
  (and (= (to_rep digest__first) o37)
  (let ((o38 (+ o37 (- o36 1))))
  (and (in_range1 o38)
  (and (= o38 r135s)
  (and (dynamic_invariant2 r135s true false true true)
  (exists ((o39 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields11)) o39)
  (and (= (- o39 1) r138s)
  (and (dynamic_invariant2 r138s true false true true)
  (and
  (=> (<= 0 r138s)
  (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r138s) (<= r138s 199))))
  (let ((temp___1048 (of_array
                     (rec__ada___keccak__keccak_1600__sponge__context__block
                     ctx__split_fields11) 0 r138s)))
  (and
  (ite (<= (first1 temp___1048) (last1 temp___1048))
  (and (<= r134s r135s)
  (= (- (last1 temp___1048) (first1 temp___1048)) (- r135s r134s)))
  (< r135s r134s))
  (let ((temp___1049 (of_array
                     (slide1 (to_array temp___1048) (first1 temp___1048)
                     r134s) r134s r135s)))
  (and
  (=> (<= r134s r135s)
  (and
  (and (<= (to_rep digest__first) r134s) (<= r134s (to_rep digest__last)))
  (and (<= (to_rep digest__first) r135s) (<= r135s (to_rep digest__last)))))
  (let ((temp___1050 (of_array digest3 r134s r135s)))
  (and
  (ite (<= (first1 temp___1049) (last1 temp___1049))
  (and (<= (first1 temp___1050) (last1 temp___1050))
  (= (- (last1 temp___1049) (first1 temp___1049)) (- (last1 temp___1050) 
  (first1 temp___1050)))) (< (last1 temp___1050) (first1 temp___1050)))
  (exists ((usf4 (Array Int byte)))
  (and
  (forall ((temp___1052 Int))
  (ite (and (<= r134s temp___1052) (<= temp___1052 r135s))
  (= (select usf4 temp___1052) (select (to_array temp___1049) temp___1052))
  (= (select usf4 temp___1052) (select digest3 temp___1052))))
  (and (= digest2 usf4)
  (exists
  ((ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a2 map1))
  (exists ((ctx__split_fields12 us_split_fields))
  (and
  (= ctx__split_fields12 (us_split_fieldsqtmk
                         ada___keccak__keccak_1600__keccakf_1600_permutation__permute__a2
                         (rec__ada___keccak__keccak_1600__sponge__context__block
                         ctx__split_fields11)
                         (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                         ctx__split_fields11)
                         (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                         ctx__split_fields11)
                         (rec__ada___keccak__keccak_1600__sponge__context__rate
                         ctx__split_fields11)
                         (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                         ctx__split_fields11)))
  (exists ((o40 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields12)) o40)
  (and (= (- o40 1) r141s)
  (and (dynamic_invariant2 r141s true false true true)
  (and
  (=> (<= 0 r141s)
  (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r141s) (<= r141s 199))))
  (let ((ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl 
  (of_array
  (rec__ada___keccak__keccak_1600__sponge__context__block
  ctx__split_fields12) 0 r141s)))
  (exists ((o41 integer))
  (and
  (= (to_rep o41) (last1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (exists ((o42 integer))
  (and
  (= (to_rep o42) (first1
                  ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))
  (exists
  ((ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data2 (Array Int byte)))
  (let ((temp___1057 (of_array
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data2
                     (first1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl)
                     (last1
                     ada___keccak__keccak_1600__keccakf_1600_lanes__extract_bytes__data__compl))))
  (exists ((usf5 (Array Int byte)))
  (and
  (forall ((temp___1060 Int))
  (ite (and (<= 0 temp___1060) (<= temp___1060 r141s))
  (= (select usf5 temp___1060) (select (to_array
                                       (of_array
                                       (slide1 (to_array temp___1057)
                                       (first1 temp___1057) 0) 0 r141s)) temp___1060))
  (= (select usf5 temp___1060) (select (rec__ada___keccak__keccak_1600__sponge__context__block
                                       ctx__split_fields12) temp___1060))))
  (and
  (= ctx__split_fields10 (us_split_fieldsqtmk
                         (rec__ada___keccak__keccak_1600__sponge__context__state
                         ctx__split_fields12) usf5
                         (rec__ada___keccak__keccak_1600__sponge__context__bits_absorbed
                         ctx__split_fields12)
                         (rec__ada___keccak__keccak_1600__sponge__context__bytes_squeezed
                         ctx__split_fields12)
                         (rec__ada___keccak__keccak_1600__sponge__context__rate
                         ctx__split_fields12)
                         (rec__ada___keccak__keccak_1600__sponge__context__curr_state
                         ctx__split_fields12)))
  (exists ((o43 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields10)) o43)
  (let ((o44 (+ offset3 o43)))
  (and (in_range1 o44)
  (and (= offset2 o44)
  (exists ((o45 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields10)) o45)
  (let ((o46 (- remaining3 o45)))
  (and (in_range2 o46)
  (and (= remaining2 o46)
  (exists ((o47 Int))
  (and
  (= (to_rep6
     (rec__ada___keccak__keccak_1600__sponge__context__rate
     ctx__split_fields10)) o47)
  (not (<= o47 remaining2)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (and
  (and (and (= ctx__split_fields10 ctx__split_fields6) (= digest2 digest1))
  (= remaining2 remaining1)) (= offset2 offset1))))

;; Assert
  (assert
  (< remaining2 (to_rep6
                (rec__ada___keccak__keccak_1600__sponge__context__rate
                ctx__split_fields10))))

(declare-const spark__branch5 Bool)

;; H
  (assert (= spark__branch5 (ite (< 0 remaining2) true false)))

;; H
  (assert (= spark__branch5 true))

(declare-const o27 Int)

;; Ensures
  (assert (= (to_rep digest__first) o27))

(define-fun o28 () Int (+ o27 offset2))

;; Ensures
  (assert (in_range1 o28))

;; Assume
  (assert (= o28 r144s))

;; Assume
  (assert (dynamic_invariant2 r144s true false true true))

(define-fun o29 () Int (+ offset2 remaining2))

;; Ensures
  (assert (in_range1 o29))

(declare-const o30 Int)

;; Ensures
  (assert (= (to_rep digest__first) o30))

(define-fun o31 () Int (+ o30 (- o29 1)))

;; Ensures
  (assert (in_range1 o31))

;; Assume
  (assert (= o31 r145s))

;; Assume
  (assert (dynamic_invariant2 r145s true false true true))

;; Assume
  (assert (= (- remaining2 1) r148s))

;; Assume
  (assert (dynamic_invariant2 r148s true false true true))

;; Assert
  (assert
  (=> (<= 0 r148s)
  (and (and (<= 0 0) (<= 0 199)) (and (<= 0 r148s) (<= r148s 199)))))

(define-fun temp___1079 () us_t (of_array
                                (rec__ada___keccak__keccak_1600__sponge__context__block
                                ctx__split_fields10) 0 r148s))

;; Assert
  (assert
  (ite (<= (first1 temp___1079) (last1 temp___1079))
  (and (<= r144s r145s)
  (= (- (last1 temp___1079) (first1 temp___1079)) (- r145s r144s)))
  (< r145s r144s)))

(define-fun temp___1080 () us_t (of_array
                                (slide1 (to_array temp___1079)
                                (first1 temp___1079) r144s) r144s r145s))

;; Assert
  (assert
  (=> (<= r144s r145s)
  (and
  (and (<= (to_rep digest__first) r144s) (<= r144s (to_rep digest__last)))
  (and (<= (to_rep digest__first) r145s) (<= r145s (to_rep digest__last))))))

(define-fun temp___1081 () us_t (of_array digest2 r144s r145s))

;; H
  (assert (<= (first1 temp___1080) (last1 temp___1080)))

(assert
;; defqtvc
 ;; File "keccak-sponge.ads", line 222, characters 0-0
  (not (<= (first1 temp___1081) (last1 temp___1081))))
(check-sat)
