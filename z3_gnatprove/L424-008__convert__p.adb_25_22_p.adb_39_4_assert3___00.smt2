(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort tTmy_s1SP1 0)

(declare-fun tTmy_s1SP1qtint (tTmy_s1SP1) Int)

;; tTmy_s1SP1'axiom
  (assert
  (forall ((i tTmy_s1SP1))
  (and (<= 1 (tTmy_s1SP1qtint i)) (<= (tTmy_s1SP1qtint i) 3))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (tTmy_s1SP1 tTmy_s1SP1) Bool)

(declare-const dummy1 tTmy_s1SP1)

(declare-datatypes ()
((tTmy_s1SP1__ref (tTmy_s1SP1__refqtmk (tTmy_s1SP1__content tTmy_s1SP1)))))
(define-fun tTmy_s1SP1__ref_tTmy_s1SP1__content__5__projection ((a tTmy_s1SP1__ref)) tTmy_s1SP1 
  (tTmy_s1SP1__content a))

(declare-sort tTmy_s2SP1 0)

(declare-fun tTmy_s2SP1qtint (tTmy_s2SP1) Int)

;; tTmy_s2SP1'axiom
  (assert
  (forall ((i tTmy_s2SP1))
  (and (<= 2 (tTmy_s2SP1qtint i)) (<= (tTmy_s2SP1qtint i) 4))))

(define-fun in_range2 ((x Int)) Bool (and (<= 2 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (tTmy_s2SP1 tTmy_s2SP1) Bool)

(declare-const dummy2 tTmy_s2SP1)

(declare-datatypes ()
((tTmy_s2SP1__ref (tTmy_s2SP1__refqtmk (tTmy_s2SP1__content tTmy_s2SP1)))))
(define-fun tTmy_s2SP1__ref_tTmy_s2SP1__content__5__projection ((a tTmy_s2SP1__ref)) tTmy_s2SP1 
  (tTmy_s2SP1__content a))

(declare-sort tTmy_s1SP11 0)

(declare-fun tTmy_s1SP1qtint1 (tTmy_s1SP11) Int)

;; tTmy_s1SP1'axiom
  (assert
  (forall ((i tTmy_s1SP11))
  (and (<= 1 (tTmy_s1SP1qtint1 i)) (<= (tTmy_s1SP1qtint1 i) 3))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (tTmy_s1SP11 tTmy_s1SP11) Bool)

(declare-const dummy3 tTmy_s1SP11)

(declare-datatypes ()
((tTmy_s1SP1__ref1 (tTmy_s1SP1__refqtmk1 (tTmy_s1SP1__content1 tTmy_s1SP11)))))
(define-fun tTmy_s1SP1__ref_tTmy_s1SP1__content__6__projection ((a tTmy_s1SP1__ref1)) tTmy_s1SP11 
  (tTmy_s1SP1__content1 a))

(declare-sort tTmy_s2SP11 0)

(declare-fun tTmy_s2SP1qtint1 (tTmy_s2SP11) Int)

;; tTmy_s2SP1'axiom
  (assert
  (forall ((i tTmy_s2SP11))
  (and (<= 2 (tTmy_s2SP1qtint1 i)) (<= (tTmy_s2SP1qtint1 i) 4))))

(define-fun in_range4 ((x Int)) Bool (and (<= 2 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (tTmy_s2SP11 tTmy_s2SP11) Bool)

(declare-const dummy4 tTmy_s2SP11)

(declare-datatypes ()
((tTmy_s2SP1__ref1 (tTmy_s2SP1__refqtmk1 (tTmy_s2SP1__content1 tTmy_s2SP11)))))
(define-fun tTmy_s2SP1__ref_tTmy_s2SP1__content__6__projection ((a tTmy_s2SP1__ref1)) tTmy_s2SP11 
  (tTmy_s2SP1__content1 a))

(declare-sort tTmy_s1SP12 0)

(declare-fun tTmy_s1SP1qtint2 (tTmy_s1SP12) Int)

;; tTmy_s1SP1'axiom
  (assert
  (forall ((i tTmy_s1SP12))
  (and (<= 1 (tTmy_s1SP1qtint2 i)) (<= (tTmy_s1SP1qtint2 i) 3))))

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (tTmy_s1SP12 tTmy_s1SP12) Bool)

(declare-const dummy5 tTmy_s1SP12)

(declare-datatypes ()
((tTmy_s1SP1__ref2 (tTmy_s1SP1__refqtmk2 (tTmy_s1SP1__content2 tTmy_s1SP12)))))
(define-fun tTmy_s1SP1__ref_tTmy_s1SP1__content__7__projection ((a tTmy_s1SP1__ref2)) tTmy_s1SP12 
  (tTmy_s1SP1__content2 a))

(declare-sort tTmy_s2SP12 0)

(declare-fun tTmy_s2SP1qtint2 (tTmy_s2SP12) Int)

;; tTmy_s2SP1'axiom
  (assert
  (forall ((i tTmy_s2SP12))
  (and (<= 2 (tTmy_s2SP1qtint2 i)) (<= (tTmy_s2SP1qtint2 i) 4))))

(define-fun in_range6 ((x Int)) Bool (and (<= 2 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (tTmy_s2SP12 tTmy_s2SP12) Bool)

(declare-const dummy6 tTmy_s2SP12)

(declare-datatypes ()
((tTmy_s2SP1__ref2 (tTmy_s2SP1__refqtmk2 (tTmy_s2SP1__content2 tTmy_s2SP12)))))
(define-fun tTmy_s2SP1__ref_tTmy_s2SP1__content__7__projection ((a tTmy_s2SP1__ref2)) tTmy_s2SP12 
  (tTmy_s2SP1__content2 a))

(declare-sort tTmy_s1SP13 0)

(declare-fun tTmy_s1SP1qtint3 (tTmy_s1SP13) Int)

;; tTmy_s1SP1'axiom
  (assert
  (forall ((i tTmy_s1SP13))
  (and (<= 1 (tTmy_s1SP1qtint3 i)) (<= (tTmy_s1SP1qtint3 i) 3))))

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (tTmy_s1SP13 tTmy_s1SP13) Bool)

(declare-const dummy7 tTmy_s1SP13)

(declare-datatypes ()
((tTmy_s1SP1__ref3 (tTmy_s1SP1__refqtmk3 (tTmy_s1SP1__content3 tTmy_s1SP13)))))
(define-fun tTmy_s1SP1__ref_tTmy_s1SP1__content__8__projection ((a tTmy_s1SP1__ref3)) tTmy_s1SP13 
  (tTmy_s1SP1__content3 a))

(declare-sort tTmy_s2SP13 0)

(declare-fun tTmy_s2SP1qtint3 (tTmy_s2SP13) Int)

;; tTmy_s2SP1'axiom
  (assert
  (forall ((i tTmy_s2SP13))
  (and (<= 2 (tTmy_s2SP1qtint3 i)) (<= (tTmy_s2SP1qtint3 i) 4))))

(define-fun in_range8 ((x Int)) Bool (and (<= 2 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (tTmy_s2SP13 tTmy_s2SP13) Bool)

(declare-const dummy8 tTmy_s2SP13)

(declare-datatypes ()
((tTmy_s2SP1__ref3 (tTmy_s2SP1__refqtmk3 (tTmy_s2SP1__content3 tTmy_s2SP13)))))
(define-fun tTmy_s2SP1__ref_tTmy_s2SP1__content__8__projection ((a tTmy_s2SP1__ref3)) tTmy_s2SP13 
  (tTmy_s2SP1__content3 a))

(declare-fun p__B19b__my_s1__aggregate_def (Int Int Int) (Array Int integer))

(declare-fun p__B22b__my_s1__aggregate_def (Int Int Int) (Array Int integer))

(declare-fun p__B25b__my_s1__aggregate_def (Int Int Int) (Array Int integer))

(declare-fun p__B28b__my_s1__aggregate_def (Int Int Int) (Array Int integer))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 1))

(declare-const rliteral1 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral1) 2))

(declare-const rliteral2 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral2) 3))

;; def_axiom
  (assert
  (forall ((temp___343 Int) (temp___344 Int) (temp___345 Int))
  (let ((temp___342 (p__B19b__my_s1__aggregate_def temp___343 temp___344
                    temp___345)))
  (=>
  (and
  (and (dynamic_invariant temp___343 true true true true) (dynamic_invariant
  temp___344 true true true true)) (dynamic_invariant temp___345 true true
  true true))
  (and
  (and (= (select temp___342 1) rliteral)
  (= (select temp___342 2) rliteral1)) (= (select temp___342 3) rliteral2))))))

;; def_axiom
  (assert
  (forall ((temp___348 Int) (temp___349 Int) (temp___350 Int))
  (let ((temp___347 (p__B22b__my_s1__aggregate_def temp___348 temp___349
                    temp___350)))
  (=>
  (and
  (and (dynamic_invariant temp___348 true true true true) (dynamic_invariant
  temp___349 true true true true)) (dynamic_invariant temp___350 true true
  true true))
  (and
  (and (= (select temp___347 1) rliteral)
  (= (select temp___347 2) rliteral1)) (= (select temp___347 3) rliteral2))))))

;; def_axiom
  (assert
  (forall ((temp___353 Int) (temp___354 Int) (temp___355 Int))
  (let ((temp___352 (p__B25b__my_s1__aggregate_def temp___353 temp___354
                    temp___355)))
  (=>
  (and
  (and (dynamic_invariant temp___353 true true true true) (dynamic_invariant
  temp___354 true true true true)) (dynamic_invariant temp___355 true true
  true true))
  (and
  (and (= (select temp___352 1) rliteral)
  (= (select temp___352 2) rliteral1)) (= (select temp___352 3) rliteral2))))))

;; def_axiom
  (assert
  (forall ((temp___358 Int) (temp___359 Int) (temp___360 Int))
  (let ((temp___357 (p__B28b__my_s1__aggregate_def temp___358 temp___359
                    temp___360)))
  (=>
  (and
  (and (dynamic_invariant temp___358 true true true true) (dynamic_invariant
  temp___359 true true true true)) (dynamic_invariant temp___360 true true
  true true))
  (and
  (and (= (select temp___357 1) rliteral)
  (= (select temp___357 2) rliteral1)) (= (select temp___357 3) rliteral2))))))

(declare-const my_s1 (Array Int integer))

;; H
  (assert (= my_s1 (p__B19b__my_s1__aggregate_def 1 2 3)))

;; Assume
  (assert true)

(declare-const my_s2 (Array Int integer))

;; H
  (assert (= my_s2 (slide my_s1 1 2)))

;; Assume
  (assert true)

;; Assert
  (assert (= (to_rep (select my_s2 2)) 1))

(declare-const my_s11 (Array Int integer))

;; H
  (assert (= my_s11 (p__B22b__my_s1__aggregate_def 1 2 3)))

;; Assume
  (assert true)

(declare-const my_s21 (Array Int integer))

;; H
  (assert (= my_s21 (slide my_s11 1 2)))

;; Assume
  (assert true)

;; Assert
  (assert (not (= (to_rep (select my_s21 2)) 1)))

(declare-const my_s12 (Array Int integer))

;; H
  (assert (= my_s12 (p__B25b__my_s1__aggregate_def 1 2 3)))

;; Assume
  (assert true)

(declare-const my_s22 (Array Int integer))

;; H
  (assert (= my_s22 (slide my_s12 1 2)))

;; Assume
  (assert true)

(assert
;; defqtvc
 ;; File "p.adb", line 1, characters 0-0
  (not (= (to_rep (select my_s22 2)) 2)))
(check-sat)

(exit)
