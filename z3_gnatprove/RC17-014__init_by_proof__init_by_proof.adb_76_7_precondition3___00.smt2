;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort my_int 0)

(declare-fun my_intqtint (my_int) Int)

;; my_int'axiom
  (assert
  (forall ((i my_int))
  (and (<= (- 2147483648) (my_intqtint i)) (<= (my_intqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (my_int my_int) Bool)

(declare-const dummy2 my_int)

(declare-datatypes ()
((my_int__ref (my_int__refqtmk (my_int__content my_int)))))
(define-fun my_int__ref_my_int__content__projection ((a my_int__ref)) my_int 
  (my_int__content a))

(declare-datatypes ()
((my_int__init_wrapper
 (my_int__init_wrapperqtmk (rec__value my_int)(attr__init Bool)))))
(define-fun my_int__init_wrapper_rec__value__projection ((a my_int__init_wrapper)) my_int 
  (rec__value a))

(define-fun my_int__init_wrapper_attr__init__projection ((a my_int__init_wrapper)) Bool 
  (attr__init a))

(define-fun to_rep1 ((x my_int)) Int (my_intqtint x))

(declare-fun of_rep1 (Int) my_int)

;; inversion_axiom
  (assert
  (forall ((x my_int))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x my_int)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int my_int__init_wrapper))))))
(declare-fun slide ((Array Int my_int__init_wrapper) Int
  Int) (Array Int my_int__init_wrapper))

;; slide_eq
  (assert
  (forall ((a (Array Int my_int__init_wrapper)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int my_int__init_wrapper)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int my_int__init_wrapper)) (a__first Int)
  (a__last Int) (b (Array Int my_int__init_wrapper)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_156 Int))
                           (=>
                           (and (<= a__first temp___idx_156)
                           (<= temp___idx_156 a__last))
                           (= (to_rep1
                              (rec__value (select a temp___idx_156))) 
                           (to_rep1
                           (rec__value
                           (select b (+ (- b__first a__first) temp___idx_156))))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int my_int__init_wrapper))
  (b (Array Int my_int__init_wrapper)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_156 Int))
  (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last))
  (= (to_rep1 (rec__value (select a temp___idx_156))) (to_rep1
                                                      (rec__value
                                                      (select b (+ (- b__first a__first) temp___idx_156))))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ()
((us_t (us_tqtmk (elts (Array Int my_int__init_wrapper))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int my_int__init_wrapper) (elts a))

(define-fun of_array ((a (Array Int my_int__init_wrapper)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length1 ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                   (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((int_array__ref (int_array__refqtmk (int_array__content us_t)))))
(define-fun int_array__ref_int_array__content__projection ((a int_array__ref)) us_t 
  (int_array__content a))

(declare-datatypes () ((t13b__ref (t13b__refqtmk (t13b__content us_t)))))
(define-fun t13b__ref_t13b__content__projection ((a t13b__ref)) us_t 
  (t13b__content a))

(declare-datatypes () ((t30b__ref (t30b__refqtmk (t30b__content us_t)))))
(define-fun t30b__ref_t30b__content__projection ((a t30b__ref)) us_t 
  (t30b__content a))

(declare-datatypes () ((t27b__ref (t27b__refqtmk (t27b__content us_t)))))
(define-fun t27b__ref_t27b__content__projection ((a t27b__ref)) us_t 
  (t27b__content a))

(declare-datatypes ()
((map__ref1 (map__refqtmk1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq2 ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_157 Int))
                           (=>
                           (and (<= a__first temp___idx_157)
                           (<= temp___idx_157 a__last))
                           (= (to_rep (select a temp___idx_157)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_157)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_157 Int))
  (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last))
  (= (to_rep (select a temp___idx_157)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_157)))))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const b__first integer)

(declare-const b__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern (
  (mk1 f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ()
((us_t1 (us_tqtmk1 (elts1 (Array Int integer))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))

(define-fun of_array1 ((a (Array Int integer)) (f Int)
  (l Int)) us_t1 (us_tqtmk1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))

(define-fun length2 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq3 ((x us_t1)
  (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep (first2 (rt1 x)))
                  (to_rep (last2 (rt1 x))) (elts1 y)
                  (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))

(declare-fun user_eq4 (us_t1 us_t1) Bool)

(declare-const dummy4 us_t1)

(declare-datatypes ()
((int_array_init__ref
 (int_array_init__refqtmk (int_array_init__content us_t1)))))
(define-fun int_array_init__ref_int_array_init__content__projection ((a int_array_init__ref)) us_t1 
  (int_array_init__content a))

(declare-sort tTbufSP1 0)

(declare-fun tTbufSP1qtint (tTbufSP1) Int)

;; tTbufSP1'axiom
  (assert
  (forall ((i tTbufSP1))
  (and (<= 1 (tTbufSP1qtint i)) (<= (tTbufSP1qtint i) 150))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq5 (tTbufSP1 tTbufSP1) Bool)

(declare-const dummy5 tTbufSP1)

(declare-datatypes ()
((tTbufSP1__ref (tTbufSP1__refqtmk (tTbufSP1__content tTbufSP1)))))
(define-fun tTbufSP1__ref_tTbufSP1__content__projection ((a tTbufSP1__ref)) tTbufSP1 
  (tTbufSP1__content a))

(define-fun default_initial_assumption ((temp___expr_273 (Array Int my_int__init_wrapper))
  (temp___skip_top_level_274 Bool)) Bool (forall ((temp___275 Int))
                                         (=>
                                         (and (<= 1 temp___275)
                                         (<= temp___275 150))
                                         (= (attr__init
                                            (select temp___expr_273 temp___275)) false))))

(declare-sort t39b 0)

(declare-fun t39bqtint (t39b) Int)

;; t39b'axiom
  (assert
  (forall ((i t39b)) (and (<= 1 (t39bqtint i)) (<= (t39bqtint i) 100))))

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq6 (t39b t39b) Bool)

(declare-const dummy6 t39b)

(declare-datatypes () ((t39b__ref (t39b__refqtmk (t39b__content t39b)))))
(define-fun t39b__ref_t39b__content__projection ((a t39b__ref)) t39b 
  (t39b__content a))

(declare-fun convert ((Array Int my_int__init_wrapper)) (Array Int integer))

;; convert__def
  (assert
  (forall ((a (Array Int my_int__init_wrapper)))
  (forall ((temp___279 Int))
  (= (to_rep1 (rec__value (select a temp___279))) (to_rep
                                                  (select (convert a) temp___279))))))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun dynamic_invariant2 ((temp___expr_190 Int)
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)
  (temp___do_typ_inv_189 Bool)) Bool (=>
                                     (or (= temp___is_init_186 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_190)))

(define-fun dynamic_invariant3 ((temp___expr_197 us_t)
  (temp___is_init_193 Bool) (temp___skip_constant_194 Bool)
  (temp___do_toplevel_195 Bool)
  (temp___do_typ_inv_196 Bool)) Bool (=>
                                     (not (= temp___skip_constant_194 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_197)
                                     (last1 temp___expr_197))))

(define-fun dynamic_invariant4 ((temp___expr_203 us_t1)
  (temp___is_init_199 Bool) (temp___skip_constant_200 Bool)
  (temp___do_toplevel_201 Bool)
  (temp___do_typ_inv_202 Bool)) Bool (=>
                                     (not (= temp___skip_constant_200 true))
                                     (dynamic_property1 1 2147483647
                                     (first3 temp___expr_203)
                                     (last3 temp___expr_203))))

(declare-const buf (Array Int my_int__init_wrapper))

(declare-const x Int)

;; Assume
  (assert (default_initial_assumption buf false))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant x false false true true))

(declare-const o integer)

;; Ensures
  (assert (= (to_rep o) 150))

(declare-const o1 integer)

;; Ensures
  (assert (= (to_rep o1) 1))

(declare-const error Bool)

(declare-const init_by_proof__read__buf (Array Int my_int__init_wrapper))

(declare-const o2 (Array Int my_int__init_wrapper))

;; H
  (assert (= o2 init_by_proof__read__buf))

;; Ensures
  (assert
  (=> (not (= error true))
  (let ((temp___221 (of_array o2 (to_rep o1) (+ (to_rep o1) (- 100 1)))))
  (forall ((temp___222 Int))
  (=>
  (and (<= (first1 temp___221) temp___222)
  (<= temp___222 (last1 temp___221)))
  (= (attr__init (select (to_array temp___221) temp___222)) true))))))

(define-fun temp___277 () us_t (of_array init_by_proof__read__buf 1 150))

(declare-const buf1 (Array Int my_int__init_wrapper))

;; H
  (assert (= buf1 (slide (to_array temp___277) (first1 temp___277) 1)))

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (= error true) false true)))

;; H
  (assert (= spark__branch true))

(define-fun o3 () my_int__init_wrapper (select buf1 10))

(declare-const o4 Int)

;; Ensures
  (assert (= (to_rep1 (rec__value o3)) o4))

(declare-const o5 integer)

;; Ensures
  (assert (= (to_rep o5) 150))

(declare-const o6 integer)

;; Ensures
  (assert (= (to_rep o6) 1))

(assert
;; defqtvc
 ;; File "init_by_proof.adb", line 2, characters 0-0
  (not (<= 100 (length (to_rep o6) (to_rep o5)))))
(check-sat)
