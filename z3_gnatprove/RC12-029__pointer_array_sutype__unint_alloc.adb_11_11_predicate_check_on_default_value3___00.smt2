(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (positive positive) Bool)

(declare-const dummy positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range
                                    temp___expr_46)))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high) (and (in_range low) (in_range high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length1 ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                   (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-const dummy2 us_t)

(declare-datatypes ()
((my_array__ref (my_array__refqtmk (my_array__content us_t)))))
(define-fun my_array__ref_my_array__content__projection ((a my_array__ref)) us_t 
  (my_array__content a))

(declare-datatypes ()
((us_rep
 (us_repqtmk
 (rec__unint_alloc__a_ptr__is_null_pointer Bool)(rec__unint_alloc__a_ptr__pointer_address Int)(rec__unint_alloc__a_ptr__pointer_value us_t)))))
(define-fun us_rep_rec__unint_alloc__a_ptr__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__unint_alloc__a_ptr__is_null_pointer a))

(define-fun us_rep_rec__unint_alloc__a_ptr__pointer_address__projection ((a us_rep)) Int 
  (rec__unint_alloc__a_ptr__pointer_address a))

(define-fun us_rep_rec__unint_alloc__a_ptr__pointer_value__projection ((a us_rep)) us_t 
  (rec__unint_alloc__a_ptr__pointer_value a))

(declare-datatypes ()
((us_rep__ref (us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__unint_alloc__a_ptr__is_null_pointer a) 
                        (rec__unint_alloc__a_ptr__is_null_pointer b))
                        (=>
                        (not
                        (= (rec__unint_alloc__a_ptr__is_null_pointer a) true))
                        (and
                        (= (rec__unint_alloc__a_ptr__pointer_address a) 
                        (rec__unint_alloc__a_ptr__pointer_address b))
                        (= (rec__unint_alloc__a_ptr__pointer_value a) 
                        (rec__unint_alloc__a_ptr__pointer_value b)))))
                   true false))

(define-fun rec__unint_alloc__a_ptr__pointer_value__pred ((a us_rep)) Bool 
  (not (= (rec__unint_alloc__a_ptr__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__unint_alloc__a_ptr__is_null_pointer us_null_pointer) true))

(declare-const dummy3 us_rep)

(declare-datatypes ()
((a_ptr__ref (a_ptr__refqtmk (a_ptr__content us_rep)))))
(define-fun a_ptr__ref_a_ptr__content__projection ((a a_ptr__ref)) us_rep 
  (a_ptr__content a))

(declare-datatypes ()
((us_split_fields (us_split_fieldsqtmk (rec__unint_alloc__my_rec__r us_rep)))))
(define-fun us_split_fields_rec__unint_alloc__my_rec__r__projection ((a us_split_fields)) us_rep 
  (rec__unint_alloc__my_rec__r a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep1 (us_repqtmk1 (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (= (bool_eq2
                            (rec__unint_alloc__my_rec__r
                            (us_split_fields1 a))
                            (rec__unint_alloc__my_rec__r
                            (us_split_fields1 b))) true)
                    true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const unint_alloc__my_rec__r__first__bit Int)

(declare-const unint_alloc__my_rec__r__last__bit Int)

(declare-const unint_alloc__my_rec__r__position Int)

;; unint_alloc__my_rec__r__first__bit_axiom
  (assert (<= 0 unint_alloc__my_rec__r__first__bit))

;; unint_alloc__my_rec__r__last__bit_axiom
  (assert
  (< unint_alloc__my_rec__r__first__bit unint_alloc__my_rec__r__last__bit))

;; unint_alloc__my_rec__r__position_axiom
  (assert (<= 0 unint_alloc__my_rec__r__position))

(declare-fun user_eq3 (us_rep1 us_rep1) Bool)

(declare-const dummy4 us_rep1)

(declare-datatypes ()
((my_rec__ref (my_rec__refqtmk (my_rec__content us_rep1)))))
(define-fun my_rec__ref_my_rec__content__projection ((a my_rec__ref)) us_rep1 
  (my_rec__content a))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant1 ((temp___expr_178 us_rep1)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)
  (temp___do_typ_inv_177 Bool)) Bool (=>
                                     (not
                                     (= (rec__unint_alloc__a_ptr__is_null_pointer
                                        (rec__unint_alloc__my_rec__r
                                        (us_split_fields1 temp___expr_178))) true))
                                     (and (dynamic_property 1 2147483647
                                     (first1
                                     (rec__unint_alloc__a_ptr__pointer_value
                                     (rec__unint_alloc__my_rec__r
                                     (us_split_fields1 temp___expr_178))))
                                     (last1
                                     (rec__unint_alloc__a_ptr__pointer_value
                                     (rec__unint_alloc__my_rec__r
                                     (us_split_fields1 temp___expr_178)))))
                                     (= (first1
                                        (rec__unint_alloc__a_ptr__pointer_value
                                        (rec__unint_alloc__my_rec__r
                                        (us_split_fields1 temp___expr_178)))) 1))))

(define-fun default_initial_assumption ((temp___expr_181 us_rep1)
  (temp___skip_top_level_182 Bool)) Bool (= (rec__unint_alloc__a_ptr__is_null_pointer
                                            (rec__unint_alloc__my_rec__r
                                            (us_split_fields1
                                            temp___expr_181))) true))

(declare-datatypes () ((s5b__ref (s5b__refqtmk (s5b__content us_t)))))
(define-fun s5b__ref_s5b__content__projection ((a s5b__ref)) us_t (s5b__content
                                                                  a))

(define-fun dynamic_invariant2 ((temp___expr_188 us_t)
  (temp___is_init_184 Bool) (temp___skip_constant_185 Bool)
  (temp___do_toplevel_186 Bool)
  (temp___do_typ_inv_187 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_185 true))
                                     (and (dynamic_property 1 c
                                     (first1 temp___expr_188)
                                     (last1 temp___expr_188))
                                     (and (= (first1 temp___expr_188) 1)
                                     (= (last1 temp___expr_188) c))))
                                     (= (first1 temp___expr_188) 1)))

(define-fun default_initial_assumption1 ((temp___expr_192 us_t)
  (temp___skip_top_level_193 Bool)) Bool (and
                                         (and (= (first1 temp___expr_192) 1)
                                         (= (last1 temp___expr_192) c))
                                         (forall ((temp___194 Int))
                                         (=>
                                         (and
                                         (<= (first1 temp___expr_192) temp___194)
                                         (<= temp___194 (last1
                                                        temp___expr_192)))
                                         (= (to_rep
                                            (select (to_array
                                                    temp___expr_192) temp___194)) 0)))))

(define-fun dynamic_predicate ((temp___195 us_t)) Bool (= (first1 temp___195) 1))

(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range2 temp___expr_18)))

(define-fun dynamic_invariant4 ((temp___expr_160 us_t)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)
  (temp___do_typ_inv_159 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_157 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_160)
                                     (last1 temp___expr_160)))
                                     (=> (= temp___do_toplevel_158 true)
                                     (= (first1 temp___expr_160) 1))))

(define-fun dynamic_predicate1 ((temp___163 us_t)) Bool (= (first1
                                                           temp___163) 1))

(define-fun dynamic_invariant5 ((temp___expr_169 us_rep)
  (temp___is_init_165 Bool) (temp___skip_constant_166 Bool)
  (temp___do_toplevel_167 Bool)
  (temp___do_typ_inv_168 Bool)) Bool (=>
                                     (not
                                     (= (rec__unint_alloc__a_ptr__is_null_pointer
                                        temp___expr_169) true))
                                     (and (dynamic_property 1 2147483647
                                     (first1
                                     (rec__unint_alloc__a_ptr__pointer_value
                                     temp___expr_169))
                                     (last1
                                     (rec__unint_alloc__a_ptr__pointer_value
                                     temp___expr_169)))
                                     (= (first1
                                        (rec__unint_alloc__a_ptr__pointer_value
                                        temp___expr_169)) 1))))

(define-fun default_initial_assumption2 ((temp___expr_172 us_rep)
  (temp___skip_top_level_173 Bool)) Bool (= (rec__unint_alloc__a_ptr__is_null_pointer
                                            temp___expr_172) true))

(declare-const x__split_fields us_rep)

;; Assume
  (assert (dynamic_invariant c true false true true))

;; Assume
  (assert (default_initial_assumption
  (us_repqtmk1 (us_split_fieldsqtmk x__split_fields)) false))

;; Assume
  (assert (dynamic_invariant1
  (us_repqtmk1 (us_split_fieldsqtmk x__split_fields)) false false true true))

(declare-const usf us_t)

;; Ensures
  (assert (default_initial_assumption1 usf false))

(assert
;; defqtvc
 ;; File "unint_alloc.adb", line 1, characters 0-0
  (not (dynamic_predicate usf)))
(check-sat)
