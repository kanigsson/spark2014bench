(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (t__refqtmk (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-fun nth1 ((_ BitVec 32) Int) Bool)

(declare-fun lsr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int2 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2int x)
                                            (- (- 4294967296 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv1 ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (t__refqtmk1 (t__content1 (_ BitVec 32))))))
(declare-fun power1 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort int__ 0)

(declare-fun int__qtint (int__) Int)

;; int__'axiom
  (assert
  (forall ((i int__))
  (and (<= (- 2147483648) (int__qtint i)) (<= (int__qtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (int__ int__) Bool)

(declare-const dummy int__)

(declare-datatypes () ((int____ref (int____refqtmk (int____content int__)))))
(define-fun int____ref_int____content__projection ((a int____ref)) int__ 
  (int____content a))

(define-fun to_rep ((x int__)) Int (int__qtint x))

(declare-fun of_rep (Int) int__)

;; inversion_axiom
  (assert
  (forall ((x int__)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x int__)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort nat 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 32))

(declare-fun user_eq1 (nat nat) Bool)

(declare-const dummy1 nat)

(declare-datatypes () ((nat__ref (nat__refqtmk (nat__content nat)))))
(define-fun nat__ref_nat__content__projection ((a nat__ref)) nat (nat__content
                                                                 a))

(declare-fun to_rep1 (nat) (_ BitVec 32))

(declare-fun of_rep1 ((_ BitVec 32)) nat)

;; inversion_axiom
  (assert
  (forall ((x nat)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))) )))

(define-fun to_int3 ((x nat)) Int (bv2int (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x nat)) (! (uint_in_range1 (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__ada___linted__update__packet__x_position int__)(rec__ada___linted__update__packet__y_position int__)(rec__ada___linted__update__packet__z_position int__)(rec__ada___linted__update__packet__mx_position int__)(rec__ada___linted__update__packet__my_position int__)(rec__ada___linted__update__packet__mz_position int__)(rec__ada___linted__update__packet__z_rotation nat)(rec__ada___linted__update__packet__x_rotation nat)))))
(define-fun us_split_fields_rec__ada___linted__update__packet__x_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__x_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__y_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__y_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__z_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__z_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__mx_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__mx_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__my_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__my_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__mz_position__projection ((a us_split_fields)) int__ 
  (rec__ada___linted__update__packet__mz_position a))

(define-fun us_split_fields_rec__ada___linted__update__packet__z_rotation__projection ((a us_split_fields)) nat 
  (rec__ada___linted__update__packet__z_rotation a))

(define-fun us_split_fields_rec__ada___linted__update__packet__x_rotation__projection ((a us_split_fields)) nat 
  (rec__ada___linted__update__packet__x_rotation a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__ada___linted__update__packet__x_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__x_position
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__ada___linted__update__packet__y_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__y_position
                                                  (us_split_fields1 b)))))
                        (and
                        (and
                        (and
                        (= (to_rep
                           (rec__ada___linted__update__packet__z_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__z_position
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__ada___linted__update__packet__mx_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__mx_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__ada___linted__update__packet__my_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__my_position
                                                  (us_split_fields1 b)))))
                        (and
                        (and
                        (= (to_rep
                           (rec__ada___linted__update__packet__mz_position
                           (us_split_fields1 a))) (to_rep
                                                  (rec__ada___linted__update__packet__mz_position
                                                  (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__ada___linted__update__packet__z_rotation
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__ada___linted__update__packet__z_rotation
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__ada___linted__update__packet__x_rotation
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__ada___linted__update__packet__x_rotation
                                                  (us_split_fields1 b)))))))
                   true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const ada___linted__update__packet__x_position__first__bit Int)

(declare-const ada___linted__update__packet__x_position__last__bit Int)

(declare-const ada___linted__update__packet__x_position__position Int)

;; ada___linted__update__packet__x_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__x_position__first__bit))

;; ada___linted__update__packet__x_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__x_position__first__bit ada___linted__update__packet__x_position__last__bit))

;; ada___linted__update__packet__x_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__x_position__position))

(declare-const ada___linted__update__packet__y_position__first__bit Int)

(declare-const ada___linted__update__packet__y_position__last__bit Int)

(declare-const ada___linted__update__packet__y_position__position Int)

;; ada___linted__update__packet__y_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__y_position__first__bit))

;; ada___linted__update__packet__y_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__y_position__first__bit ada___linted__update__packet__y_position__last__bit))

;; ada___linted__update__packet__y_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__y_position__position))

(declare-const ada___linted__update__packet__z_position__first__bit Int)

(declare-const ada___linted__update__packet__z_position__last__bit Int)

(declare-const ada___linted__update__packet__z_position__position Int)

;; ada___linted__update__packet__z_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__z_position__first__bit))

;; ada___linted__update__packet__z_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__z_position__first__bit ada___linted__update__packet__z_position__last__bit))

;; ada___linted__update__packet__z_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__z_position__position))

(declare-const ada___linted__update__packet__mx_position__first__bit Int)

(declare-const ada___linted__update__packet__mx_position__last__bit Int)

(declare-const ada___linted__update__packet__mx_position__position Int)

;; ada___linted__update__packet__mx_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__mx_position__first__bit))

;; ada___linted__update__packet__mx_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__mx_position__first__bit ada___linted__update__packet__mx_position__last__bit))

;; ada___linted__update__packet__mx_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__mx_position__position))

(declare-const ada___linted__update__packet__my_position__first__bit Int)

(declare-const ada___linted__update__packet__my_position__last__bit Int)

(declare-const ada___linted__update__packet__my_position__position Int)

;; ada___linted__update__packet__my_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__my_position__first__bit))

;; ada___linted__update__packet__my_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__my_position__first__bit ada___linted__update__packet__my_position__last__bit))

;; ada___linted__update__packet__my_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__my_position__position))

(declare-const ada___linted__update__packet__mz_position__first__bit Int)

(declare-const ada___linted__update__packet__mz_position__last__bit Int)

(declare-const ada___linted__update__packet__mz_position__position Int)

;; ada___linted__update__packet__mz_position__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__mz_position__first__bit))

;; ada___linted__update__packet__mz_position__last__bit_axiom
  (assert
  (< ada___linted__update__packet__mz_position__first__bit ada___linted__update__packet__mz_position__last__bit))

;; ada___linted__update__packet__mz_position__position_axiom
  (assert (<= 0 ada___linted__update__packet__mz_position__position))

(declare-const ada___linted__update__packet__z_rotation__first__bit Int)

(declare-const ada___linted__update__packet__z_rotation__last__bit Int)

(declare-const ada___linted__update__packet__z_rotation__position Int)

;; ada___linted__update__packet__z_rotation__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__z_rotation__first__bit))

;; ada___linted__update__packet__z_rotation__last__bit_axiom
  (assert
  (< ada___linted__update__packet__z_rotation__first__bit ada___linted__update__packet__z_rotation__last__bit))

;; ada___linted__update__packet__z_rotation__position_axiom
  (assert (<= 0 ada___linted__update__packet__z_rotation__position))

(declare-const ada___linted__update__packet__x_rotation__first__bit Int)

(declare-const ada___linted__update__packet__x_rotation__last__bit Int)

(declare-const ada___linted__update__packet__x_rotation__position Int)

;; ada___linted__update__packet__x_rotation__first__bit_axiom
  (assert (<= 0 ada___linted__update__packet__x_rotation__first__bit))

;; ada___linted__update__packet__x_rotation__last__bit_axiom
  (assert
  (< ada___linted__update__packet__x_rotation__first__bit ada___linted__update__packet__x_rotation__last__bit))

;; ada___linted__update__packet__x_rotation__position_axiom
  (assert (<= 0 ada___linted__update__packet__x_rotation__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ()
((packet__ref (packet__refqtmk (packet__content us_rep)))))
(define-fun packet__ref_packet__content__projection ((a packet__ref)) us_rep 
  (packet__content a))

(declare-sort storage_element 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))

(declare-fun user_eq3 (storage_element storage_element) Bool)

(declare-const dummy3 storage_element)

(declare-datatypes ()
((storage_element__ref
 (storage_element__refqtmk (storage_element__content storage_element)))))
(define-fun storage_element__ref_storage_element__content__projection ((a storage_element__ref)) storage_element 
  (storage_element__content a))

(declare-fun to_rep2 (storage_element) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) storage_element)

;; inversion_axiom
  (assert
  (forall ((x storage_element))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int4 ((x storage_element)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x storage_element)) (! (uint_in_range
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int storage_element))))))
(declare-fun slide ((Array Int storage_element) Int
  Int) (Array Int storage_element))

;; slide_eq
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int storage_element)) (a__first Int)
  (a__last Int) (b (Array Int storage_element)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep2 (select a temp___idx_154)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const s (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption ((temp___expr_197 us_rep)
  (temp___skip_top_level_198 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__x_position
                                            (us_split_fields1
                                            temp___expr_197))) 0)
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__y_position
                                            (us_split_fields1
                                            temp___expr_197))) 0))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__z_position
                                            (us_split_fields1
                                            temp___expr_197))) 0)
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__mx_position
                                            (us_split_fields1
                                            temp___expr_197))) 0))
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__my_position
                                            (us_split_fields1
                                            temp___expr_197))) 0))
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__ada___linted__update__packet__mz_position
                                            (us_split_fields1
                                            temp___expr_197))) 0)
                                         (= (to_rep1
                                            (rec__ada___linted__update__packet__z_rotation
                                            (us_split_fields1
                                            temp___expr_197))) #x00000000))
                                         (= (to_rep1
                                            (rec__ada___linted__update__packet__x_rotation
                                            (us_split_fields1
                                            temp___expr_197))) #x00000000)))))

(declare-const c19b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const c46b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const c73b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const c100b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const c127b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const c154b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-const c181b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-const c195b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-sort tintB 0)

(declare-fun tintBqtint (tintB) Int)

;; tintB'axiom
  (assert
  (forall ((i tintB))
  (and (<= (- 2147483648) (tintBqtint i)) (<= (tintBqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (tintB tintB) Bool)

(declare-const dummy4 tintB)

(declare-datatypes () ((tintB__ref (tintB__refqtmk (tintB__content tintB)))))
(define-fun tintB__ref_tintB__content__projection ((a tintB__ref)) tintB 
  (tintB__content a))

(define-fun dynamic_invariant ((temp___expr_182 Int)
  (temp___is_init_178 Bool) (temp___skip_constant_179 Bool)
  (temp___do_toplevel_180 Bool)
  (temp___do_typ_inv_181 Bool)) Bool (=>
                                     (or (= temp___is_init_178 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_182)))

(define-fun dynamic_invariant1 ((temp___expr_189 (_ BitVec 32))
  (temp___is_init_185 Bool) (temp___skip_constant_186 Bool)
  (temp___do_toplevel_187 Bool) (temp___do_typ_inv_188 Bool)) Bool true)

(declare-sort tstorageP1 0)

(declare-fun tstorageP1qtint (tstorageP1) Int)

;; tstorageP1'axiom
  (assert
  (forall ((i tstorageP1))
  (and (<= 1 (tstorageP1qtint i)) (<= (tstorageP1qtint i) 32))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (tstorageP1 tstorageP1) Bool)

(declare-const dummy5 tstorageP1)

(declare-datatypes ()
((tstorageP1__ref (tstorageP1__refqtmk (tstorageP1__content tstorageP1)))))
(define-fun tstorageP1__ref_tstorageP1__content__projection ((a tstorageP1__ref)) tstorageP1 
  (tstorageP1__content a))

(declare-sort ttupleP1 0)

(declare-fun ttupleP1qtint (ttupleP1) Int)

;; ttupleP1'axiom
  (assert
  (forall ((i ttupleP1))
  (and (<= 1 (ttupleP1qtint i)) (<= (ttupleP1qtint i) 4))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (ttupleP1 ttupleP1) Bool)

(declare-const dummy6 ttupleP1)

(declare-datatypes ()
((ttupleP1__ref (ttupleP1__refqtmk (ttupleP1__content ttupleP1)))))
(define-fun ttupleP1__ref_ttupleP1__content__projection ((a ttupleP1__ref)) ttupleP1 
  (ttupleP1__content a))

(declare-sort t43b 0)

(declare-fun t43bqtint (t43b) Int)

;; t43b'axiom
  (assert
  (forall ((i t43b)) (and (<= 5 (t43bqtint i)) (<= (t43bqtint i) 8))))

(define-fun in_range4 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (t43b t43b) Bool)

(declare-const dummy7 t43b)

(declare-datatypes () ((t43b__ref (t43b__refqtmk (t43b__content t43b)))))
(define-fun t43b__ref_t43b__content__projection ((a t43b__ref)) t43b 
  (t43b__content a))

(declare-sort t56b 0)

(declare-fun t56bqtint (t56b) Int)

;; t56b'axiom
  (assert
  (forall ((i t56b)) (and (<= 5 (t56bqtint i)) (<= (t56bqtint i) 8))))

(define-fun in_range5 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (t56b t56b) Bool)

(declare-const dummy8 t56b)

(declare-datatypes () ((t56b__ref (t56b__refqtmk (t56b__content t56b)))))
(define-fun t56b__ref_t56b__content__projection ((a t56b__ref)) t56b 
  (t56b__content a))

(declare-sort t60b 0)

(declare-fun t60bqtint (t60b) Int)

;; t60b'axiom
  (assert
  (forall ((i t60b)) (and (<= 5 (t60bqtint i)) (<= (t60bqtint i) 8))))

(define-fun in_range6 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (t60b t60b) Bool)

(declare-const dummy9 t60b)

(declare-datatypes () ((t60b__ref (t60b__refqtmk (t60b__content t60b)))))
(define-fun t60b__ref_t60b__content__projection ((a t60b__ref)) t60b 
  (t60b__content a))

(declare-sort t64b 0)

(declare-fun t64bqtint (t64b) Int)

;; t64b'axiom
  (assert
  (forall ((i t64b)) (and (<= 5 (t64bqtint i)) (<= (t64bqtint i) 8))))

(define-fun in_range7 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (t64b t64b) Bool)

(declare-const dummy10 t64b)

(declare-datatypes () ((t64b__ref (t64b__refqtmk (t64b__content t64b)))))
(define-fun t64b__ref_t64b__content__projection ((a t64b__ref)) t64b 
  (t64b__content a))

(declare-sort t68b 0)

(declare-fun t68bqtint (t68b) Int)

;; t68b'axiom
  (assert
  (forall ((i t68b)) (and (<= 5 (t68bqtint i)) (<= (t68bqtint i) 8))))

(define-fun in_range8 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (t68b t68b) Bool)

(declare-const dummy11 t68b)

(declare-datatypes () ((t68b__ref (t68b__refqtmk (t68b__content t68b)))))
(define-fun t68b__ref_t68b__content__projection ((a t68b__ref)) t68b 
  (t68b__content a))

(declare-sort t70b 0)

(declare-fun t70bqtint (t70b) Int)

;; t70b'axiom
  (assert
  (forall ((i t70b)) (and (<= 9 (t70bqtint i)) (<= (t70bqtint i) 12))))

(define-fun in_range9 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (t70b t70b) Bool)

(declare-const dummy12 t70b)

(declare-datatypes () ((t70b__ref (t70b__refqtmk (t70b__content t70b)))))
(define-fun t70b__ref_t70b__content__projection ((a t70b__ref)) t70b 
  (t70b__content a))

(declare-sort t83b 0)

(declare-fun t83bqtint (t83b) Int)

;; t83b'axiom
  (assert
  (forall ((i t83b)) (and (<= 9 (t83bqtint i)) (<= (t83bqtint i) 12))))

(define-fun in_range10 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq13 (t83b t83b) Bool)

(declare-const dummy13 t83b)

(declare-datatypes () ((t83b__ref (t83b__refqtmk (t83b__content t83b)))))
(define-fun t83b__ref_t83b__content__projection ((a t83b__ref)) t83b 
  (t83b__content a))

(declare-sort t87b 0)

(declare-fun t87bqtint (t87b) Int)

;; t87b'axiom
  (assert
  (forall ((i t87b)) (and (<= 9 (t87bqtint i)) (<= (t87bqtint i) 12))))

(define-fun in_range11 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq14 (t87b t87b) Bool)

(declare-const dummy14 t87b)

(declare-datatypes () ((t87b__ref (t87b__refqtmk (t87b__content t87b)))))
(define-fun t87b__ref_t87b__content__projection ((a t87b__ref)) t87b 
  (t87b__content a))

(declare-sort t91b 0)

(declare-fun t91bqtint (t91b) Int)

;; t91b'axiom
  (assert
  (forall ((i t91b)) (and (<= 9 (t91bqtint i)) (<= (t91bqtint i) 12))))

(define-fun in_range12 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq15 (t91b t91b) Bool)

(declare-const dummy15 t91b)

(declare-datatypes () ((t91b__ref (t91b__refqtmk (t91b__content t91b)))))
(define-fun t91b__ref_t91b__content__projection ((a t91b__ref)) t91b 
  (t91b__content a))

(declare-sort t95b 0)

(declare-fun t95bqtint (t95b) Int)

;; t95b'axiom
  (assert
  (forall ((i t95b)) (and (<= 9 (t95bqtint i)) (<= (t95bqtint i) 12))))

(define-fun in_range13 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq16 (t95b t95b) Bool)

(declare-const dummy16 t95b)

(declare-datatypes () ((t95b__ref (t95b__refqtmk (t95b__content t95b)))))
(define-fun t95b__ref_t95b__content__projection ((a t95b__ref)) t95b 
  (t95b__content a))

(declare-sort t97b 0)

(declare-fun t97bqtint (t97b) Int)

;; t97b'axiom
  (assert
  (forall ((i t97b)) (and (<= 13 (t97bqtint i)) (<= (t97bqtint i) 16))))

(define-fun in_range14 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq17 (t97b t97b) Bool)

(declare-const dummy17 t97b)

(declare-datatypes () ((t97b__ref (t97b__refqtmk (t97b__content t97b)))))
(define-fun t97b__ref_t97b__content__projection ((a t97b__ref)) t97b 
  (t97b__content a))

(declare-sort t110b 0)

(declare-fun t110bqtint (t110b) Int)

;; t110b'axiom
  (assert
  (forall ((i t110b)) (and (<= 13 (t110bqtint i)) (<= (t110bqtint i) 16))))

(define-fun in_range15 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq18 (t110b t110b) Bool)

(declare-const dummy18 t110b)

(declare-datatypes () ((t110b__ref (t110b__refqtmk (t110b__content t110b)))))
(define-fun t110b__ref_t110b__content__projection ((a t110b__ref)) t110b 
  (t110b__content a))

(declare-sort t114b 0)

(declare-fun t114bqtint (t114b) Int)

;; t114b'axiom
  (assert
  (forall ((i t114b)) (and (<= 13 (t114bqtint i)) (<= (t114bqtint i) 16))))

(define-fun in_range16 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)

(declare-fun user_eq19 (t114b t114b) Bool)

(declare-const dummy19 t114b)

(declare-datatypes () ((t114b__ref (t114b__refqtmk (t114b__content t114b)))))
(define-fun t114b__ref_t114b__content__projection ((a t114b__ref)) t114b 
  (t114b__content a))

(declare-sort t118b 0)

(declare-fun t118bqtint (t118b) Int)

;; t118b'axiom
  (assert
  (forall ((i t118b)) (and (<= 13 (t118bqtint i)) (<= (t118bqtint i) 16))))

(define-fun in_range17 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)

(declare-fun user_eq20 (t118b t118b) Bool)

(declare-const dummy20 t118b)

(declare-datatypes () ((t118b__ref (t118b__refqtmk (t118b__content t118b)))))
(define-fun t118b__ref_t118b__content__projection ((a t118b__ref)) t118b 
  (t118b__content a))

(declare-sort t122b 0)

(declare-fun t122bqtint (t122b) Int)

;; t122b'axiom
  (assert
  (forall ((i t122b)) (and (<= 13 (t122bqtint i)) (<= (t122bqtint i) 16))))

(define-fun in_range18 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)

(declare-fun user_eq21 (t122b t122b) Bool)

(declare-const dummy21 t122b)

(declare-datatypes () ((t122b__ref (t122b__refqtmk (t122b__content t122b)))))
(define-fun t122b__ref_t122b__content__projection ((a t122b__ref)) t122b 
  (t122b__content a))

(declare-sort t124b 0)

(declare-fun t124bqtint (t124b) Int)

;; t124b'axiom
  (assert
  (forall ((i t124b)) (and (<= 17 (t124bqtint i)) (<= (t124bqtint i) 20))))

(define-fun in_range19 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)

(declare-fun user_eq22 (t124b t124b) Bool)

(declare-const dummy22 t124b)

(declare-datatypes () ((t124b__ref (t124b__refqtmk (t124b__content t124b)))))
(define-fun t124b__ref_t124b__content__projection ((a t124b__ref)) t124b 
  (t124b__content a))

(declare-sort t137b 0)

(declare-fun t137bqtint (t137b) Int)

;; t137b'axiom
  (assert
  (forall ((i t137b)) (and (<= 17 (t137bqtint i)) (<= (t137bqtint i) 20))))

(define-fun in_range20 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)

(declare-fun user_eq23 (t137b t137b) Bool)

(declare-const dummy23 t137b)

(declare-datatypes () ((t137b__ref (t137b__refqtmk (t137b__content t137b)))))
(define-fun t137b__ref_t137b__content__projection ((a t137b__ref)) t137b 
  (t137b__content a))

(declare-sort t141b 0)

(declare-fun t141bqtint (t141b) Int)

;; t141b'axiom
  (assert
  (forall ((i t141b)) (and (<= 17 (t141bqtint i)) (<= (t141bqtint i) 20))))

(define-fun in_range21 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)

(declare-fun user_eq24 (t141b t141b) Bool)

(declare-const dummy24 t141b)

(declare-datatypes () ((t141b__ref (t141b__refqtmk (t141b__content t141b)))))
(define-fun t141b__ref_t141b__content__projection ((a t141b__ref)) t141b 
  (t141b__content a))

(declare-sort t145b 0)

(declare-fun t145bqtint (t145b) Int)

;; t145b'axiom
  (assert
  (forall ((i t145b)) (and (<= 17 (t145bqtint i)) (<= (t145bqtint i) 20))))

(define-fun in_range22 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)

(declare-fun user_eq25 (t145b t145b) Bool)

(declare-const dummy25 t145b)

(declare-datatypes () ((t145b__ref (t145b__refqtmk (t145b__content t145b)))))
(define-fun t145b__ref_t145b__content__projection ((a t145b__ref)) t145b 
  (t145b__content a))

(declare-sort t149b 0)

(declare-fun t149bqtint (t149b) Int)

;; t149b'axiom
  (assert
  (forall ((i t149b)) (and (<= 17 (t149bqtint i)) (<= (t149bqtint i) 20))))

(define-fun in_range23 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE25 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check25 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE25 (us_image) Int)

(declare-fun user_eq26 (t149b t149b) Bool)

(declare-const dummy26 t149b)

(declare-datatypes () ((t149b__ref (t149b__refqtmk (t149b__content t149b)))))
(define-fun t149b__ref_t149b__content__projection ((a t149b__ref)) t149b 
  (t149b__content a))

(declare-sort t151b 0)

(declare-fun t151bqtint (t151b) Int)

;; t151b'axiom
  (assert
  (forall ((i t151b)) (and (<= 21 (t151bqtint i)) (<= (t151bqtint i) 24))))

(define-fun in_range24 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE26 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check26 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE26 (us_image) Int)

(declare-fun user_eq27 (t151b t151b) Bool)

(declare-const dummy27 t151b)

(declare-datatypes () ((t151b__ref (t151b__refqtmk (t151b__content t151b)))))
(define-fun t151b__ref_t151b__content__projection ((a t151b__ref)) t151b 
  (t151b__content a))

(declare-sort t164b 0)

(declare-fun t164bqtint (t164b) Int)

;; t164b'axiom
  (assert
  (forall ((i t164b)) (and (<= 21 (t164bqtint i)) (<= (t164bqtint i) 24))))

(define-fun in_range25 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE27 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check27 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE27 (us_image) Int)

(declare-fun user_eq28 (t164b t164b) Bool)

(declare-const dummy28 t164b)

(declare-datatypes () ((t164b__ref (t164b__refqtmk (t164b__content t164b)))))
(define-fun t164b__ref_t164b__content__projection ((a t164b__ref)) t164b 
  (t164b__content a))

(declare-sort t168b 0)

(declare-fun t168bqtint (t168b) Int)

;; t168b'axiom
  (assert
  (forall ((i t168b)) (and (<= 21 (t168bqtint i)) (<= (t168bqtint i) 24))))

(define-fun in_range26 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE28 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check28 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE28 (us_image) Int)

(declare-fun user_eq29 (t168b t168b) Bool)

(declare-const dummy29 t168b)

(declare-datatypes () ((t168b__ref (t168b__refqtmk (t168b__content t168b)))))
(define-fun t168b__ref_t168b__content__projection ((a t168b__ref)) t168b 
  (t168b__content a))

(declare-sort t172b 0)

(declare-fun t172bqtint (t172b) Int)

;; t172b'axiom
  (assert
  (forall ((i t172b)) (and (<= 21 (t172bqtint i)) (<= (t172bqtint i) 24))))

(define-fun in_range27 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE29 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check29 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE29 (us_image) Int)

(declare-fun user_eq30 (t172b t172b) Bool)

(declare-const dummy30 t172b)

(declare-datatypes () ((t172b__ref (t172b__refqtmk (t172b__content t172b)))))
(define-fun t172b__ref_t172b__content__projection ((a t172b__ref)) t172b 
  (t172b__content a))

(declare-sort t176b 0)

(declare-fun t176bqtint (t176b) Int)

;; t176b'axiom
  (assert
  (forall ((i t176b)) (and (<= 21 (t176bqtint i)) (<= (t176bqtint i) 24))))

(define-fun in_range28 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE30 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check30 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE30 (us_image) Int)

(declare-fun user_eq31 (t176b t176b) Bool)

(declare-const dummy31 t176b)

(declare-datatypes () ((t176b__ref (t176b__refqtmk (t176b__content t176b)))))
(define-fun t176b__ref_t176b__content__projection ((a t176b__ref)) t176b 
  (t176b__content a))

(declare-sort t178b 0)

(declare-fun t178bqtint (t178b) Int)

;; t178b'axiom
  (assert
  (forall ((i t178b)) (and (<= 25 (t178bqtint i)) (<= (t178bqtint i) 28))))

(define-fun in_range29 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE31 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check31 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE31 (us_image) Int)

(declare-fun user_eq32 (t178b t178b) Bool)

(declare-const dummy32 t178b)

(declare-datatypes () ((t178b__ref (t178b__refqtmk (t178b__content t178b)))))
(define-fun t178b__ref_t178b__content__projection ((a t178b__ref)) t178b 
  (t178b__content a))

(declare-sort t184b 0)

(declare-fun t184bqtint (t184b) Int)

;; t184b'axiom
  (assert
  (forall ((i t184b)) (and (<= 25 (t184bqtint i)) (<= (t184bqtint i) 28))))

(define-fun in_range30 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE32 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check32 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE32 (us_image) Int)

(declare-fun user_eq33 (t184b t184b) Bool)

(declare-const dummy33 t184b)

(declare-datatypes () ((t184b__ref (t184b__refqtmk (t184b__content t184b)))))
(define-fun t184b__ref_t184b__content__projection ((a t184b__ref)) t184b 
  (t184b__content a))

(declare-sort t186b 0)

(declare-fun t186bqtint (t186b) Int)

;; t186b'axiom
  (assert
  (forall ((i t186b)) (and (<= 25 (t186bqtint i)) (<= (t186bqtint i) 28))))

(define-fun in_range31 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE33 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check33 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE33 (us_image) Int)

(declare-fun user_eq34 (t186b t186b) Bool)

(declare-const dummy34 t186b)

(declare-datatypes () ((t186b__ref (t186b__refqtmk (t186b__content t186b)))))
(define-fun t186b__ref_t186b__content__projection ((a t186b__ref)) t186b 
  (t186b__content a))

(declare-sort t188b 0)

(declare-fun t188bqtint (t188b) Int)

;; t188b'axiom
  (assert
  (forall ((i t188b)) (and (<= 25 (t188bqtint i)) (<= (t188bqtint i) 28))))

(define-fun in_range32 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE34 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check34 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE34 (us_image) Int)

(declare-fun user_eq35 (t188b t188b) Bool)

(declare-const dummy35 t188b)

(declare-datatypes () ((t188b__ref (t188b__refqtmk (t188b__content t188b)))))
(define-fun t188b__ref_t188b__content__projection ((a t188b__ref)) t188b 
  (t188b__content a))

(declare-sort t190b 0)

(declare-fun t190bqtint (t190b) Int)

;; t190b'axiom
  (assert
  (forall ((i t190b)) (and (<= 25 (t190bqtint i)) (<= (t190bqtint i) 28))))

(define-fun in_range33 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE35 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check35 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE35 (us_image) Int)

(declare-fun user_eq36 (t190b t190b) Bool)

(declare-const dummy36 t190b)

(declare-datatypes () ((t190b__ref (t190b__refqtmk (t190b__content t190b)))))
(define-fun t190b__ref_t190b__content__projection ((a t190b__ref)) t190b 
  (t190b__content a))

(declare-sort t192b 0)

(declare-fun t192bqtint (t192b) Int)

;; t192b'axiom
  (assert
  (forall ((i t192b)) (and (<= 29 (t192bqtint i)) (<= (t192bqtint i) 32))))

(define-fun in_range34 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE36 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check36 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE36 (us_image) Int)

(declare-fun user_eq37 (t192b t192b) Bool)

(declare-const dummy37 t192b)

(declare-datatypes () ((t192b__ref (t192b__refqtmk (t192b__content t192b)))))
(define-fun t192b__ref_t192b__content__projection ((a t192b__ref)) t192b 
  (t192b__content a))

(declare-sort t198b 0)

(declare-fun t198bqtint (t198b) Int)

;; t198b'axiom
  (assert
  (forall ((i t198b)) (and (<= 29 (t198bqtint i)) (<= (t198bqtint i) 32))))

(define-fun in_range35 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE37 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check37 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE37 (us_image) Int)

(declare-fun user_eq38 (t198b t198b) Bool)

(declare-const dummy38 t198b)

(declare-datatypes () ((t198b__ref (t198b__refqtmk (t198b__content t198b)))))
(define-fun t198b__ref_t198b__content__projection ((a t198b__ref)) t198b 
  (t198b__content a))

(declare-sort t200b 0)

(declare-fun t200bqtint (t200b) Int)

;; t200b'axiom
  (assert
  (forall ((i t200b)) (and (<= 29 (t200bqtint i)) (<= (t200bqtint i) 32))))

(define-fun in_range36 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE38 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check38 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE38 (us_image) Int)

(declare-fun user_eq39 (t200b t200b) Bool)

(declare-const dummy39 t200b)

(declare-datatypes () ((t200b__ref (t200b__refqtmk (t200b__content t200b)))))
(define-fun t200b__ref_t200b__content__projection ((a t200b__ref)) t200b 
  (t200b__content a))

(declare-sort t202b 0)

(declare-fun t202bqtint (t202b) Int)

;; t202b'axiom
  (assert
  (forall ((i t202b)) (and (<= 29 (t202bqtint i)) (<= (t202bqtint i) 32))))

(define-fun in_range37 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE39 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check39 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE39 (us_image) Int)

(declare-fun user_eq40 (t202b t202b) Bool)

(declare-const dummy40 t202b)

(declare-datatypes () ((t202b__ref (t202b__refqtmk (t202b__content t202b)))))
(define-fun t202b__ref_t202b__content__projection ((a t202b__ref)) t202b 
  (t202b__content a))

(declare-sort t204b 0)

(declare-fun t204bqtint (t204b) Int)

;; t204b'axiom
  (assert
  (forall ((i t204b)) (and (<= 29 (t204bqtint i)) (<= (t204bqtint i) 32))))

(define-fun in_range38 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE40 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check40 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE40 (us_image) Int)

(declare-fun user_eq41 (t204b t204b) Bool)

(declare-const dummy41 t204b)

(declare-datatypes () ((t204b__ref (t204b__refqtmk (t204b__content t204b)))))
(define-fun t204b__ref_t204b__content__projection ((a t204b__ref)) t204b 
  (t204b__content a))

(define-fun dynamic_invariant2 ((temp___expr_210 (_ BitVec 8))
  (temp___is_init_206 Bool) (temp___skip_constant_207 Bool)
  (temp___do_toplevel_208 Bool) (temp___do_typ_inv_209 Bool)) Bool true)

;; c19b__def_axiom
  (assert (= c19b (let ((temp___156 4)) (let ((temp___155 1)) s))))

;; c46b__def_axiom
  (assert
  (= c46b (let ((temp___159 (let ((temp___158 8)) (let ((temp___157 5)) s))))
          (slide temp___159 5 1))))

;; c73b__def_axiom
  (assert
  (= c73b (let ((temp___162 (let ((temp___161 12)) (let ((temp___160 9)) s))))
          (slide temp___162 9 1))))

;; c100b__def_axiom
  (assert
  (= c100b (let ((temp___165 (let ((temp___164 16))
                             (let ((temp___163 13)) s))))
           (slide temp___165 13 1))))

;; c127b__def_axiom
  (assert
  (= c127b (let ((temp___168 (let ((temp___167 20))
                             (let ((temp___166 17)) s))))
           (slide temp___168 17 1))))

;; c154b__def_axiom
  (assert
  (= c154b (let ((temp___171 (let ((temp___170 24))
                             (let ((temp___169 21)) s))))
           (slide temp___171 21 1))))

;; c181b__def_axiom
  (assert
  (= c181b (let ((temp___174 (let ((temp___173 28))
                             (let ((temp___172 25)) s))))
           (slide temp___174 25 1))))

;; c195b__def_axiom
  (assert
  (= c195b (let ((temp___177 (let ((temp___176 32))
                             (let ((temp___175 29)) s))))
           (slide temp___177 29 1))))

(declare-const u__split_fields us_split_fields)

(declare-const x (_ BitVec 32))

(declare-const y Int)

(declare-const x1 (_ BitVec 32))

(declare-const y1 Int)

(declare-const x2 (_ BitVec 32))

(declare-const y2 Int)

(declare-const x3 (_ BitVec 32))

(declare-const y3 Int)

(declare-const x4 (_ BitVec 32))

(declare-const y4 Int)

(declare-const x5 (_ BitVec 32))

(declare-const y5 Int)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assert
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; Assume
  (assert (= s c19b))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 x false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant y false false true true))

;; Assert
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

(declare-const o (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select s 1)) o))

;; Assert
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

(declare-const o1 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select s 2)) o1))

;; Assert
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

(declare-const o2 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select s 3)) o2))

;; Assert
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

(declare-const o3 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select s 4)) o3))

(declare-const x6 (_ BitVec 32))

;; H
  (assert
  (= x6 (bvor (bvor (bvor ((_ zero_extend 24) o3) (bvshl ((_ zero_extend 24) 
  o2) ((_ int2bv 32) 8))) (bvshl ((_ zero_extend 24) o1) ((_ int2bv 32) 16))) (bvshl ((_ zero_extend 24) 
  o) ((_ int2bv 32) 24)))))

(declare-const spark__branch Bool)

(declare-const y6 Int)

;; H
  (assert (= spark__branch (ite (bvule x6 #x7FFFFFFF) true false)))

;; H
  (assert
  (ite (= spark__branch true)
  (let ((o4 (bv2int x6))) (and (in_range o4) (= y6 o4)))
  (let ((o4 (bv2int (bvnot x6))))
  (and (in_range o4)
  (let ((o5 (- (- o4) 1))) (and (in_range1 o5) (= y6 o5)))))))

(declare-const o4 int__)

;; Ensures
  (assert (= (to_rep o4) y6))

(declare-const u__split_fields1 us_split_fields)

;; H
  (assert
  (= u__split_fields1 (us_split_fieldsqtmk o4
                      (rec__ada___linted__update__packet__y_position
                      u__split_fields)
                      (rec__ada___linted__update__packet__z_position
                      u__split_fields)
                      (rec__ada___linted__update__packet__mx_position
                      u__split_fields)
                      (rec__ada___linted__update__packet__my_position
                      u__split_fields)
                      (rec__ada___linted__update__packet__mz_position
                      u__split_fields)
                      (rec__ada___linted__update__packet__z_rotation
                      u__split_fields)
                      (rec__ada___linted__update__packet__x_rotation
                      u__split_fields))))

;; Assert
  (assert
  (=> (<= 5 8) (and (and (<= 1 5) (<= 5 32)) (and (<= 1 8) (<= 8 32)))))

;; Assume
  (assert (= (slide s 5 1) c46b))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 x1 false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant y1 false false true true))

;; Assert
  (assert
  (=> (<= 5 8) (and (and (<= 1 5) (<= 5 32)) (and (<= 1 8) (<= 8 32)))))

(declare-const o5 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 5 1) 1)) o5))

;; Assert
  (assert
  (=> (<= 5 8) (and (and (<= 1 5) (<= 5 32)) (and (<= 1 8) (<= 8 32)))))

(declare-const o6 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 5 1) 2)) o6))

;; Assert
  (assert
  (=> (<= 5 8) (and (and (<= 1 5) (<= 5 32)) (and (<= 1 8) (<= 8 32)))))

(declare-const o7 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 5 1) 3)) o7))

;; Assert
  (assert
  (=> (<= 5 8) (and (and (<= 1 5) (<= 5 32)) (and (<= 1 8) (<= 8 32)))))

(declare-const o8 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 5 1) 4)) o8))

(declare-const x7 (_ BitVec 32))

;; H
  (assert
  (= x7 (bvor (bvor (bvor ((_ zero_extend 24) o8) (bvshl ((_ zero_extend 24) 
  o7) ((_ int2bv 32) 8))) (bvshl ((_ zero_extend 24) o6) ((_ int2bv 32) 16))) (bvshl ((_ zero_extend 24) 
  o5) ((_ int2bv 32) 24)))))

(declare-const spark__branch1 Bool)

(declare-const y7 Int)

;; H
  (assert (= spark__branch1 (ite (bvule x7 #x7FFFFFFF) true false)))

;; H
  (assert
  (ite (= spark__branch1 true)
  (let ((o9 (bv2int x7))) (and (in_range o9) (= y7 o9)))
  (let ((o9 (bv2int (bvnot x7))))
  (and (in_range o9)
  (let ((o10 (- (- o9) 1))) (and (in_range1 o10) (= y7 o10)))))))

(declare-const o9 int__)

;; Ensures
  (assert (= (to_rep o9) y7))

(declare-const u__split_fields2 us_split_fields)

;; H
  (assert
  (= u__split_fields2 (us_split_fieldsqtmk
                      (rec__ada___linted__update__packet__x_position
                      u__split_fields1) o9
                      (rec__ada___linted__update__packet__z_position
                      u__split_fields1)
                      (rec__ada___linted__update__packet__mx_position
                      u__split_fields1)
                      (rec__ada___linted__update__packet__my_position
                      u__split_fields1)
                      (rec__ada___linted__update__packet__mz_position
                      u__split_fields1)
                      (rec__ada___linted__update__packet__z_rotation
                      u__split_fields1)
                      (rec__ada___linted__update__packet__x_rotation
                      u__split_fields1))))

;; Assert
  (assert
  (=> (<= 9 12) (and (and (<= 1 9) (<= 9 32)) (and (<= 1 12) (<= 12 32)))))

;; Assume
  (assert (= (slide s 9 1) c73b))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 x2 false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant y2 false false true true))

;; Assert
  (assert
  (=> (<= 9 12) (and (and (<= 1 9) (<= 9 32)) (and (<= 1 12) (<= 12 32)))))

(declare-const o10 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 9 1) 1)) o10))

;; Assert
  (assert
  (=> (<= 9 12) (and (and (<= 1 9) (<= 9 32)) (and (<= 1 12) (<= 12 32)))))

(declare-const o11 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 9 1) 2)) o11))

;; Assert
  (assert
  (=> (<= 9 12) (and (and (<= 1 9) (<= 9 32)) (and (<= 1 12) (<= 12 32)))))

(declare-const o12 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 9 1) 3)) o12))

;; Assert
  (assert
  (=> (<= 9 12) (and (and (<= 1 9) (<= 9 32)) (and (<= 1 12) (<= 12 32)))))

(declare-const o13 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 9 1) 4)) o13))

(declare-const x8 (_ BitVec 32))

;; H
  (assert
  (= x8 (bvor (bvor (bvor ((_ zero_extend 24) o13) (bvshl ((_ zero_extend 24) 
  o12) ((_ int2bv 32) 8))) (bvshl ((_ zero_extend 24) o11) ((_ int2bv 32) 16))) (bvshl ((_ zero_extend 24) 
  o10) ((_ int2bv 32) 24)))))

(declare-const spark__branch2 Bool)

(declare-const y8 Int)

;; H
  (assert (= spark__branch2 (ite (bvule x8 #x7FFFFFFF) true false)))

;; H
  (assert
  (ite (= spark__branch2 true)
  (let ((o14 (bv2int x8))) (and (in_range o14) (= y8 o14)))
  (let ((o14 (bv2int (bvnot x8))))
  (and (in_range o14)
  (let ((o15 (- (- o14) 1))) (and (in_range1 o15) (= y8 o15)))))))

(declare-const o14 int__)

;; Ensures
  (assert (= (to_rep o14) y8))

(declare-const u__split_fields3 us_split_fields)

;; H
  (assert
  (= u__split_fields3 (us_split_fieldsqtmk
                      (rec__ada___linted__update__packet__x_position
                      u__split_fields2)
                      (rec__ada___linted__update__packet__y_position
                      u__split_fields2) o14
                      (rec__ada___linted__update__packet__mx_position
                      u__split_fields2)
                      (rec__ada___linted__update__packet__my_position
                      u__split_fields2)
                      (rec__ada___linted__update__packet__mz_position
                      u__split_fields2)
                      (rec__ada___linted__update__packet__z_rotation
                      u__split_fields2)
                      (rec__ada___linted__update__packet__x_rotation
                      u__split_fields2))))

;; Assert
  (assert
  (=> (<= 13 16) (and (and (<= 1 13) (<= 13 32)) (and (<= 1 16) (<= 16 32)))))

;; Assume
  (assert (= (slide s 13 1) c100b))

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 x3 false false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant y3 false false true true))

;; Assert
  (assert
  (=> (<= 13 16) (and (and (<= 1 13) (<= 13 32)) (and (<= 1 16) (<= 16 32)))))

(declare-const o15 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 13 1) 1)) o15))

;; Assert
  (assert
  (=> (<= 13 16) (and (and (<= 1 13) (<= 13 32)) (and (<= 1 16) (<= 16 32)))))

(declare-const o16 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 13 1) 2)) o16))

;; Assert
  (assert
  (=> (<= 13 16) (and (and (<= 1 13) (<= 13 32)) (and (<= 1 16) (<= 16 32)))))

(declare-const o17 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 13 1) 3)) o17))

;; Assert
  (assert
  (=> (<= 13 16) (and (and (<= 1 13) (<= 13 32)) (and (<= 1 16) (<= 16 32)))))

(declare-const o18 (_ BitVec 8))

;; Ensures
  (assert (= (to_rep2 (select (slide s 13 1) 4)) o18))

(declare-const x9 (_ BitVec 32))

;; H
  (assert
  (= x9 (bvor (bvor (bvor ((_ zero_extend 24) o18) (bvshl ((_ zero_extend 24) 
  o17) ((_ int2bv 32) 8))) (bvshl ((_ zero_extend 24) o16) ((_ int2bv 32) 16))) (bvshl ((_ zero_extend 24) 
  o15) ((_ int2bv 32) 24)))))

(declare-const spark__branch3 Bool)

;; H
  (assert (= spark__branch3 (ite (bvule x9 #x7FFFFFFF) true false)))

;; H
  (assert (= spark__branch3 true))

(assert
;; defqtvc
 ;; File "linted-update.ads", line 41, characters 0-0
  (not (in_range (bv2int x9))))
(check-sat)
