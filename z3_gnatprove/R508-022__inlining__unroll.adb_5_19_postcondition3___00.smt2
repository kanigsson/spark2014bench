;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-const ch Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort channels_type 0)

(declare-fun channels_typeqtint (channels_type) Int)

;; channels_type'axiom
  (assert
  (forall ((i channels_type))
  (and (<= 1 (channels_typeqtint i)) (<= (channels_typeqtint i) 6))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 6)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (channels_type channels_type) Bool)

(declare-const dummy2 channels_type)

(declare-datatypes ()
((channels_type__ref
 (channels_type__refqtmk (channels_type__content channels_type)))))
(define-fun channels_type__ref_channels_type__content__projection ((a channels_type__ref)) channels_type 
  (channels_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= 1 6)) (in_range3 temp___expr_179)))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(declare-const res Int)

;; Assume
  (assert (dynamic_invariant1 ch true false true true))

;; Assume
  (assert (dynamic_invariant res false false true true))

(declare-const res1 Int)

;; H
  (assert (= res1 0))

(declare-const res2 Int)

(declare-const x Int)

;; H
  (assert (= x 1))

(declare-const res3 Int)

;; H
  (assert
  (ite (= (and (ite (<= 1 x) true false) (ite (<= x ch) true false)) true)
  (let ((o (+ res1 1))) (and (in_range1 o) (= res3 o))) (= res3 res1)))

(declare-const x1 Int)

;; H
  (assert (= x1 2))

(declare-const res4 Int)

;; H
  (assert
  (ite (= (and (ite (<= 1 x1) true false) (ite (<= x1 ch) true false)) true)
  (let ((o (+ res3 1))) (and (in_range1 o) (= res4 o))) (= res4 res3)))

(declare-const x2 Int)

;; H
  (assert (= x2 3))

(declare-const res5 Int)

;; H
  (assert
  (ite (= (and (ite (<= 1 x2) true false) (ite (<= x2 ch) true false)) true)
  (let ((o (+ res4 1))) (and (in_range1 o) (= res5 o))) (= res5 res4)))

(declare-const x3 Int)

;; H
  (assert (= x3 4))

(declare-const res6 Int)

;; H
  (assert
  (ite (= (and (ite (<= 1 x3) true false) (ite (<= x3 ch) true false)) true)
  (let ((o (+ res5 1))) (and (in_range1 o) (= res6 o))) (= res6 res5)))

(declare-const x4 Int)

;; H
  (assert (= x4 5))

(declare-const res7 Int)

;; H
  (assert
  (ite (= (and (ite (<= 1 x4) true false) (ite (<= x4 ch) true false)) true)
  (let ((o (+ res6 1))) (and (in_range1 o) (= res7 o))) (= res7 res6)))

(declare-const x5 Int)

;; H
  (assert (= x5 6))

;; H
  (assert
  (ite (= (and (ite (<= 1 x5) true false) (ite (<= x5 ch) true false)) true)
  (let ((o (+ res7 1))) (and (in_range1 o) (= res2 o))) (= res2 res7)))

(assert
;; defqtvc
 ;; File "unroll.adb", line 4, characters 0-0
  (not (= res2 ch)))
(check-sat)
