;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const fst Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-sort t1b 0)

(declare-fun t1bqtint (t1b) Int)

;; t1b'axiom
  (assert (forall ((i t1b)) (and (<= 1 (t1bqtint i)) (<= (t1bqtint i) 100))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (t1b t1b) Bool)

(declare-const dummy2 t1b)

(declare-datatypes () ((t1b__ref (t1b__refqtmk (t1b__content t1b)))))
(define-fun t1b__ref_t1b__content__projection ((a t1b__ref)) t1b (t1b__content
                                                                 a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-const first Int)

(declare-fun last (Int) Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (integer integer) Bool)

(declare-const dummy3 integer)

(declare-datatypes () ((t__ref (t__refqtmk (t__content integer)))))
(define-fun t__ref_t__content__projection ((a t__ref)) integer (t__content a))

(define-fun dynamic_invariant1 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool) (temp___do_typ_inv_178 Bool)
  (init_in_loop__B_2__lst Int)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= first (last init_in_loop__B_2__lst)))
                                     (dynamic_property first
                                     (last init_in_loop__B_2__lst)
                                     temp___expr_179)))

;; first__def_axiom
  (assert (= first fst))

;; last__def_axiom
  (assert
  (forall ((init_in_loop__B_2__lst Int))
  (! (= (last init_in_loop__B_2__lst) init_in_loop__B_2__lst) :pattern (
  (last init_in_loop__B_2__lst)) )))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

;; fst__def_axiom
  (assert (= fst (ite false 0 51)))

(declare-const c Int)

(declare-const j Int)

;; H
  (assert (= j 1))

;; Assume
  (assert (dynamic_invariant j true false true true))

(declare-const i Int)

;; H
  (assert (= i 1))

;; H
  (assert
  (= (and (ite (<= 1 i) true false) (ite (<= i 100) true false)) true))

(declare-const init_in_loop__B_2__fst__assume Int)

;; H
  (assert
  (ite (= (distinct 0 0) true) (= init_in_loop__B_2__fst__assume 0)
  (= init_in_loop__B_2__fst__assume 51)))

;; Assume
  (assert (= init_in_loop__B_2__fst__assume fst))

;; Assume
  (assert (dynamic_invariant fst true false true true))

(declare-const o Int)

;; H
  (assert (ite (< 1 i) (= o 100) (= o 50)))

(declare-const lst Int)

;; H
  (assert (= lst o))

;; Assume
  (assert (dynamic_invariant lst true false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 c false false true true lst))

;; Assert
  (assert (<= fst lst))

(declare-const j1 Int)

(declare-const i1 Int)

(declare-const lst1 Int)

;; LoopInvariant
  (assert (= i1 j1))

;; H
  (assert
  (= (and (ite (and
               (and
               (and (dynamic_invariant lst1 true true true true)
               (dynamic_invariant j1 true true true true)) (in_range3 
               i1)) (dynamic_invariant1 c false true true true lst1))
          true false) (ite (and (<= 1 i1) (<= i1 100)) true false)) true))

(define-fun o1 () Int (+ j1 1))

;; Ensures
  (assert (in_range1 o1))

(declare-const j2 Int)

;; H
  (assert (= j2 o1))

;; H
  (assert (not (= i1 100)))

(declare-const i2 Int)

;; H
  (assert (= i2 (+ i1 1)))

(declare-const init_in_loop__B_2__fst__assume1 Int)

;; H
  (assert
  (ite (= (distinct 0 0) true) (= init_in_loop__B_2__fst__assume1 0)
  (= init_in_loop__B_2__fst__assume1 51)))

;; Assume
  (assert (= init_in_loop__B_2__fst__assume1 fst))

;; Assume
  (assert (dynamic_invariant fst true false true true))

(declare-const o2 Int)

;; H
  (assert (ite (< 1 i2) (= o2 100) (= o2 50)))

(declare-const lst2 Int)

;; H
  (assert (= lst2 o2))

;; Assume
  (assert (dynamic_invariant lst2 true false true true))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 c false false true true lst2))

;; Assert
  (assert (<= fst lst2))

(assert
;; defqtvc
 ;; File "init_in_loop.adb", line 1, characters 0-0
  (not (= i2 j2)))
(check-sat)
