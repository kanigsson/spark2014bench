(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0))
  (and (< (- (abs1 y)) (mod1 x y)) (< (mod1 x y) (abs1 y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs1 (* (div1 x y) y)) (abs1 x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ()
((character__ref (character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep1 (character) Int)

(declare-fun of_rep1 (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                                                 (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                        (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((string____ref (string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(declare-const dummy4 (Array Int character))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq4 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__instr__instrument__name (Array Int character))(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__instr__instrument__name__projection ((a us_split_fields)) (Array Int character) 
  (rec__instr__instrument__name a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (= (bool_eq
                           (rec__instr__instrument__name
                           (us_split_fields1 a)) 1 14
                           (rec__instr__instrument__name
                           (us_split_fields1 b)) 1 14) true)
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const instr__instrument__name__first__bit Int)

(declare-const instr__instrument__name__last__bit Int)

(declare-const instr__instrument__name__position Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit instr__instrument__name__last__bit))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ()
((instrument__ref (instrument__refqtmk (instrument__content us_rep)))))
(define-fun instrument__ref_instrument__content__projection ((a instrument__ref)) us_rep 
  (instrument__content a))

(declare-sort speed 0)

(declare-fun speedqtint (speed) Int)

;; speed'axiom
  (assert
  (forall ((i speed)) (and (<= 0 (speedqtint i)) (<= (speedqtint i) 85))))

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 85)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq6 (speed speed) Bool)

(declare-const dummy6 speed)

(declare-datatypes () ((speed__ref (speed__refqtmk (speed__content speed)))))
(define-fun speed__ref_speed__content__projection ((a speed__ref)) speed 
  (speed__content a))

(define-fun to_rep2 ((x speed)) Int (speedqtint x))

(declare-fun of_rep2 (Int) speed)

;; inversion_axiom
  (assert
  (forall ((x speed))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x speed)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__instr__speedometer__value speed)(rec__instr__instrument__name1 (Array Int character))(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__instr__speedometer__value__projection ((a us_split_fields2)) speed 
  (rec__instr__speedometer__value a))

(define-fun us_split_fields_rec__instr__instrument__name__2__projection ((a us_split_fields2)) (Array Int character) 
  (rec__instr__instrument__name1 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (speed us_private) us_private)

(declare-fun extract__instr__speedometer__value (us_private) speed)

;; extract__instr__speedometer__value__conv
  (assert
  (forall ((instr__speedometer__value speed))
  (forall ((rec__ext__2 us_private))
  (= (extract__instr__speedometer__value
     (hide_ext__ instr__speedometer__value rec__ext__2)) instr__speedometer__value))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__instr__instrument__name1
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__instr__speedometer__value
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                         (extract__instr__speedometer__value
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__instr__instrument__name
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep2
                            (rec__instr__speedometer__value
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__instr__speedometer__value
                                                   (us_split_fields3 b))))
                         (= (bool_eq
                            (rec__instr__instrument__name1
                            (us_split_fields3 a)) 1 14
                            (rec__instr__instrument__name1
                            (us_split_fields3 b)) 1 14) true))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const instr__speedometer__value__first__bit Int)

(declare-const instr__speedometer__value__last__bit Int)

(declare-const instr__speedometer__value__position Int)

;; instr__speedometer__value__first__bit_axiom
  (assert (<= 0 instr__speedometer__value__first__bit))

;; instr__speedometer__value__last__bit_axiom
  (assert
  (< instr__speedometer__value__first__bit instr__speedometer__value__last__bit))

;; instr__speedometer__value__position_axiom
  (assert (<= 0 instr__speedometer__value__position))

(declare-const instr__instrument__name__first__bit1 Int)

(declare-const instr__instrument__name__last__bit1 Int)

(declare-const instr__instrument__name__position1 Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit1))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit1 instr__instrument__name__last__bit1))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position1))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-const dummy7 us_rep1)

(declare-datatypes ()
((speedometer__ref (speedometer__refqtmk (speedometer__content us_rep1)))))
(define-fun speedometer__ref_speedometer__content__projection ((a speedometer__ref)) us_rep1 
  (speedometer__content a))

(declare-sort percent 0)

(declare-fun percentqtint (percent) Int)

;; percent'axiom
  (assert
  (forall ((i percent))
  (and (<= 0 (percentqtint i)) (<= (percentqtint i) 100))))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq8 (percent percent) Bool)

(declare-const dummy8 percent)

(declare-datatypes ()
((percent__ref (percent__refqtmk (percent__content percent)))))
(define-fun percent__ref_percent__content__projection ((a percent__ref)) percent 
  (percent__content a))

(define-fun to_rep3 ((x percent)) Int (percentqtint x))

(declare-fun of_rep3 (Int) percent)

;; inversion_axiom
  (assert
  (forall ((x percent))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x percent)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2
 (rec__instr__gauge__value percent)(rec__instr__instrument__name2 (Array Int character))(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__instr__gauge__value__projection ((a us_split_fields4)) percent 
  (rec__instr__gauge__value a))

(define-fun us_split_fields_rec__instr__instrument__name__3__projection ((a us_split_fields4)) (Array Int character) 
  (rec__instr__instrument__name2 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (percent us_private) us_private)

(declare-fun extract__instr__gauge__value (us_private) percent)

;; extract__instr__gauge__value__conv
  (assert
  (forall ((instr__gauge__value percent))
  (forall ((rec__ext__3 us_private))
  (= (extract__instr__gauge__value
     (hide_ext__1 instr__gauge__value rec__ext__3)) instr__gauge__value))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__instr__instrument__name2
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__instr__gauge__value
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2
                                          (us_split_fieldsqtmk2
                                          (extract__instr__gauge__value
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep3
                            (rec__instr__gauge__value (us_split_fields5 a))) 
                         (to_rep3
                         (rec__instr__gauge__value (us_split_fields5 b))))
                         (= (bool_eq
                            (rec__instr__instrument__name2
                            (us_split_fields5 a)) 1 14
                            (rec__instr__instrument__name2
                            (us_split_fields5 b)) 1 14) true))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const instr__gauge__value__first__bit Int)

(declare-const instr__gauge__value__last__bit Int)

(declare-const instr__gauge__value__position Int)

;; instr__gauge__value__first__bit_axiom
  (assert (<= 0 instr__gauge__value__first__bit))

;; instr__gauge__value__last__bit_axiom
  (assert (< instr__gauge__value__first__bit instr__gauge__value__last__bit))

;; instr__gauge__value__position_axiom
  (assert (<= 0 instr__gauge__value__position))

(declare-const instr__instrument__name__first__bit2 Int)

(declare-const instr__instrument__name__last__bit2 Int)

(declare-const instr__instrument__name__position2 Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit2))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit2 instr__instrument__name__last__bit2))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position2))

(declare-fun user_eq9 (us_rep2 us_rep2) Bool)

(declare-const dummy9 us_rep2)

(declare-datatypes ()
((gauge__ref (gauge__refqtmk (gauge__content us_rep2)))))
(define-fun gauge__ref_gauge__content__projection ((a gauge__ref)) us_rep2 
  (gauge__content a))

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3
 (rec__instr__graphic_gauge__size integer)(rec__instr__graphic_gauge__fill character)(rec__instr__graphic_gauge__empty character)(rec__instr__instrument__name3 (Array Int character))(rec__instr__gauge__value1 percent)(rec__ext__3 us_private)))))
(define-fun us_split_fields_rec__instr__graphic_gauge__size__projection ((a us_split_fields6)) integer 
  (rec__instr__graphic_gauge__size a))

(define-fun us_split_fields_rec__instr__graphic_gauge__fill__projection ((a us_split_fields6)) character 
  (rec__instr__graphic_gauge__fill a))

(define-fun us_split_fields_rec__instr__graphic_gauge__empty__projection ((a us_split_fields6)) character 
  (rec__instr__graphic_gauge__empty a))

(define-fun us_split_fields_rec__instr__instrument__name__4__projection ((a us_split_fields6)) (Array Int character) 
  (rec__instr__instrument__name3 a))

(define-fun us_split_fields_rec__instr__gauge__value__2__projection ((a us_split_fields6)) percent 
  (rec__instr__gauge__value1 a))

(define-fun us_split_fields_rec__ext____4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (us_repqtmk3 (us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___split_fields__4__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun us_rep_attr__tag__4__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (integer character character percent
  us_private) us_private)

(declare-fun extract__instr__graphic_gauge__size (us_private) integer)

;; extract__instr__graphic_gauge__size__conv
  (assert
  (forall ((instr__graphic_gauge__size integer))
  (forall ((instr__graphic_gauge__fill character)
  (instr__graphic_gauge__empty character))
  (forall ((instr__graphic_gauge__value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__instr__graphic_gauge__size
     (hide_ext__2 instr__graphic_gauge__size instr__graphic_gauge__fill
     instr__graphic_gauge__empty instr__graphic_gauge__value rec__ext__4)) instr__graphic_gauge__size))))))

(declare-fun extract__instr__graphic_gauge__fill (us_private) character)

;; extract__instr__graphic_gauge__fill__conv
  (assert
  (forall ((instr__graphic_gauge__size integer))
  (forall ((instr__graphic_gauge__fill character)
  (instr__graphic_gauge__empty character))
  (forall ((instr__graphic_gauge__value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__instr__graphic_gauge__fill
     (hide_ext__2 instr__graphic_gauge__size instr__graphic_gauge__fill
     instr__graphic_gauge__empty instr__graphic_gauge__value rec__ext__4)) instr__graphic_gauge__fill))))))

(declare-fun extract__instr__graphic_gauge__empty (us_private) character)

;; extract__instr__graphic_gauge__empty__conv
  (assert
  (forall ((instr__graphic_gauge__size integer))
  (forall ((instr__graphic_gauge__fill character)
  (instr__graphic_gauge__empty character))
  (forall ((instr__graphic_gauge__value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__instr__graphic_gauge__empty
     (hide_ext__2 instr__graphic_gauge__size instr__graphic_gauge__fill
     instr__graphic_gauge__empty instr__graphic_gauge__value rec__ext__4)) instr__graphic_gauge__empty))))))

;; extract__instr__gauge__value__conv
  (assert
  (forall ((instr__graphic_gauge__size integer))
  (forall ((instr__graphic_gauge__fill character)
  (instr__graphic_gauge__empty character))
  (forall ((instr__graphic_gauge__value percent))
  (forall ((rec__ext__4 us_private))
  (= (extract__instr__gauge__value
     (hide_ext__2 instr__graphic_gauge__size instr__graphic_gauge__fill
     instr__graphic_gauge__empty instr__graphic_gauge__value rec__ext__4)) instr__graphic_gauge__value))))))

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__instr__instrument__name3
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__instr__graphic_gauge__size
                                          (us_split_fields7 a))
                                          (rec__instr__graphic_gauge__fill
                                          (us_split_fields7 a))
                                          (rec__instr__graphic_gauge__empty
                                          (us_split_fields7 a))
                                          (rec__instr__gauge__value1
                                          (us_split_fields7 a))
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (us_repqtmk3
                                          (us_split_fieldsqtmk3
                                          (extract__instr__graphic_gauge__size
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__instr__graphic_gauge__fill
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__instr__graphic_gauge__empty
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__instr__gauge__value
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq5 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__instr__graphic_gauge__size
                            (us_split_fields7 a))) (to_rep
                                                   (rec__instr__graphic_gauge__size
                                                   (us_split_fields7 b))))
                         (= (to_rep1
                            (rec__instr__graphic_gauge__fill
                            (us_split_fields7 a))) (to_rep1
                                                   (rec__instr__graphic_gauge__fill
                                                   (us_split_fields7 b)))))
                         (and
                         (and
                         (= (to_rep1
                            (rec__instr__graphic_gauge__empty
                            (us_split_fields7 a))) (to_rep1
                                                   (rec__instr__graphic_gauge__empty
                                                   (us_split_fields7 b))))
                         (= (bool_eq
                            (rec__instr__instrument__name3
                            (us_split_fields7 a)) 1 14
                            (rec__instr__instrument__name3
                            (us_split_fields7 b)) 1 14) true))
                         (= (to_rep3
                            (rec__instr__gauge__value1 (us_split_fields7 a))) 
                         (to_rep3
                         (rec__instr__gauge__value1 (us_split_fields7 b))))))
                    true false))

(declare-const us_tag3 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const instr__graphic_gauge__size__first__bit Int)

(declare-const instr__graphic_gauge__size__last__bit Int)

(declare-const instr__graphic_gauge__size__position Int)

;; instr__graphic_gauge__size__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__size__first__bit))

;; instr__graphic_gauge__size__last__bit_axiom
  (assert
  (< instr__graphic_gauge__size__first__bit instr__graphic_gauge__size__last__bit))

;; instr__graphic_gauge__size__position_axiom
  (assert (<= 0 instr__graphic_gauge__size__position))

(declare-const instr__graphic_gauge__fill__first__bit Int)

(declare-const instr__graphic_gauge__fill__last__bit Int)

(declare-const instr__graphic_gauge__fill__position Int)

;; instr__graphic_gauge__fill__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__fill__first__bit))

;; instr__graphic_gauge__fill__last__bit_axiom
  (assert
  (< instr__graphic_gauge__fill__first__bit instr__graphic_gauge__fill__last__bit))

;; instr__graphic_gauge__fill__position_axiom
  (assert (<= 0 instr__graphic_gauge__fill__position))

(declare-const instr__graphic_gauge__empty__first__bit Int)

(declare-const instr__graphic_gauge__empty__last__bit Int)

(declare-const instr__graphic_gauge__empty__position Int)

;; instr__graphic_gauge__empty__first__bit_axiom
  (assert (<= 0 instr__graphic_gauge__empty__first__bit))

;; instr__graphic_gauge__empty__last__bit_axiom
  (assert
  (< instr__graphic_gauge__empty__first__bit instr__graphic_gauge__empty__last__bit))

;; instr__graphic_gauge__empty__position_axiom
  (assert (<= 0 instr__graphic_gauge__empty__position))

(declare-const instr__instrument__name__first__bit3 Int)

(declare-const instr__instrument__name__last__bit3 Int)

(declare-const instr__instrument__name__position3 Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit3))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit3 instr__instrument__name__last__bit3))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position3))

(declare-const instr__gauge__value__first__bit1 Int)

(declare-const instr__gauge__value__last__bit1 Int)

(declare-const instr__gauge__value__position1 Int)

;; instr__gauge__value__first__bit_axiom
  (assert (<= 0 instr__gauge__value__first__bit1))

;; instr__gauge__value__last__bit_axiom
  (assert
  (< instr__gauge__value__first__bit1 instr__gauge__value__last__bit1))

;; instr__gauge__value__position_axiom
  (assert (<= 0 instr__gauge__value__position1))

(declare-fun user_eq10 (us_rep3 us_rep3) Bool)

(declare-const dummy10 us_rep3)

(declare-datatypes ()
((graphic_gauge__ref
 (graphic_gauge__refqtmk (graphic_gauge__content us_rep3)))))
(define-fun graphic_gauge__ref_graphic_gauge__content__projection ((a graphic_gauge__ref)) us_rep3 
  (graphic_gauge__content a))

(declare-sort sixty 0)

(declare-fun sixtyqtint (sixty) Int)

;; sixty'axiom
  (assert
  (forall ((i sixty)) (and (<= 0 (sixtyqtint i)) (<= (sixtyqtint i) 60))))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 60)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq11 (sixty sixty) Bool)

(declare-const dummy11 sixty)

(declare-datatypes () ((sixty__ref (sixty__refqtmk (sixty__content sixty)))))
(define-fun sixty__ref_sixty__content__projection ((a sixty__ref)) sixty 
  (sixty__content a))

(define-fun to_rep4 ((x sixty)) Int (sixtyqtint x))

(declare-fun of_rep4 (Int) sixty)

;; inversion_axiom
  (assert
  (forall ((x sixty))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x sixty)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort twenty_four 0)

(declare-fun twenty_fourqtint (twenty_four) Int)

;; twenty_four'axiom
  (assert
  (forall ((i twenty_four))
  (and (<= 0 (twenty_fourqtint i)) (<= (twenty_fourqtint i) 24))))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq12 (twenty_four twenty_four) Bool)

(declare-const dummy12 twenty_four)

(declare-datatypes ()
((twenty_four__ref (twenty_four__refqtmk (twenty_four__content twenty_four)))))
(define-fun twenty_four__ref_twenty_four__content__projection ((a twenty_four__ref)) twenty_four 
  (twenty_four__content a))

(define-fun to_rep5 ((x twenty_four)) Int (twenty_fourqtint x))

(declare-fun of_rep5 (Int) twenty_four)

;; inversion_axiom
  (assert
  (forall ((x twenty_four))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x twenty_four)) (! (in_range6
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-datatypes ()
((us_split_fields8
 (us_split_fieldsqtmk4
 (rec__instr__clock__seconds sixty)(rec__instr__clock__minutes sixty)(rec__instr__clock__hours twenty_four)(rec__instr__instrument__name4 (Array Int character))(rec__ext__4 us_private)))))
(define-fun us_split_fields_rec__instr__clock__seconds__projection ((a us_split_fields8)) sixty 
  (rec__instr__clock__seconds a))

(define-fun us_split_fields_rec__instr__clock__minutes__projection ((a us_split_fields8)) sixty 
  (rec__instr__clock__minutes a))

(define-fun us_split_fields_rec__instr__clock__hours__projection ((a us_split_fields8)) twenty_four 
  (rec__instr__clock__hours a))

(define-fun us_split_fields_rec__instr__instrument__name__5__projection ((a us_split_fields8)) (Array Int character) 
  (rec__instr__instrument__name4 a))

(define-fun us_split_fields_rec__ext____5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ()
((us_split_fields__ref4
 (us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (us_repqtmk4 (us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun us_rep_attr__tag__5__projection ((a us_rep4)) Int (attr__tag4 a))

(declare-fun hide_ext__3 (sixty sixty twenty_four us_private) us_private)

(declare-fun extract__instr__clock__seconds (us_private) sixty)

;; extract__instr__clock__seconds__conv
  (assert
  (forall ((instr__clock__seconds sixty) (instr__clock__minutes sixty))
  (forall ((instr__clock__hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__instr__clock__seconds
     (hide_ext__3 instr__clock__seconds instr__clock__minutes
     instr__clock__hours rec__ext__5)) instr__clock__seconds)))))

(declare-fun extract__instr__clock__minutes (us_private) sixty)

;; extract__instr__clock__minutes__conv
  (assert
  (forall ((instr__clock__seconds sixty) (instr__clock__minutes sixty))
  (forall ((instr__clock__hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__instr__clock__minutes
     (hide_ext__3 instr__clock__seconds instr__clock__minutes
     instr__clock__hours rec__ext__5)) instr__clock__minutes)))))

(declare-fun extract__instr__clock__hours (us_private) twenty_four)

;; extract__instr__clock__hours__conv
  (assert
  (forall ((instr__clock__seconds sixty) (instr__clock__minutes sixty))
  (forall ((instr__clock__hours twenty_four))
  (forall ((rec__ext__5 us_private))
  (= (extract__instr__clock__hours
     (hide_ext__3 instr__clock__seconds instr__clock__minutes
     instr__clock__hours rec__ext__5)) instr__clock__hours)))))

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep4)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__instr__instrument__name4
                                          (us_split_fields9 a))
                                          (hide_ext__3
                                          (rec__instr__clock__seconds
                                          (us_split_fields9 a))
                                          (rec__instr__clock__minutes
                                          (us_split_fields9 a))
                                          (rec__instr__clock__hours
                                          (us_split_fields9 a))
                                          (rec__ext__4 (us_split_fields9 a))))
                                          (attr__tag4 a)))

(define-fun of_base3 ((r us_rep)) us_rep4 (us_repqtmk4
                                          (us_split_fieldsqtmk4
                                          (extract__instr__clock__seconds
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__instr__clock__minutes
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__instr__clock__hours
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__instr__instrument__name
                                          (us_split_fields1 r))
                                          (extract__ext__3
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq6 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (= (to_rep4
                            (rec__instr__clock__seconds (us_split_fields9 a))) 
                         (to_rep4
                         (rec__instr__clock__seconds (us_split_fields9 b))))
                         (= (to_rep4
                            (rec__instr__clock__minutes (us_split_fields9 a))) 
                         (to_rep4
                         (rec__instr__clock__minutes (us_split_fields9 b)))))
                         (and
                         (= (to_rep5
                            (rec__instr__clock__hours (us_split_fields9 a))) 
                         (to_rep5
                         (rec__instr__clock__hours (us_split_fields9 b))))
                         (= (bool_eq
                            (rec__instr__instrument__name4
                            (us_split_fields9 a)) 1 14
                            (rec__instr__instrument__name4
                            (us_split_fields9 b)) 1 14) true)))
                    true false))

(declare-const us_tag4 Int)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const instr__clock__seconds__first__bit Int)

(declare-const instr__clock__seconds__last__bit Int)

(declare-const instr__clock__seconds__position Int)

;; instr__clock__seconds__first__bit_axiom
  (assert (<= 0 instr__clock__seconds__first__bit))

;; instr__clock__seconds__last__bit_axiom
  (assert
  (< instr__clock__seconds__first__bit instr__clock__seconds__last__bit))

;; instr__clock__seconds__position_axiom
  (assert (<= 0 instr__clock__seconds__position))

(declare-const instr__clock__minutes__first__bit Int)

(declare-const instr__clock__minutes__last__bit Int)

(declare-const instr__clock__minutes__position Int)

;; instr__clock__minutes__first__bit_axiom
  (assert (<= 0 instr__clock__minutes__first__bit))

;; instr__clock__minutes__last__bit_axiom
  (assert
  (< instr__clock__minutes__first__bit instr__clock__minutes__last__bit))

;; instr__clock__minutes__position_axiom
  (assert (<= 0 instr__clock__minutes__position))

(declare-const instr__clock__hours__first__bit Int)

(declare-const instr__clock__hours__last__bit Int)

(declare-const instr__clock__hours__position Int)

;; instr__clock__hours__first__bit_axiom
  (assert (<= 0 instr__clock__hours__first__bit))

;; instr__clock__hours__last__bit_axiom
  (assert (< instr__clock__hours__first__bit instr__clock__hours__last__bit))

;; instr__clock__hours__position_axiom
  (assert (<= 0 instr__clock__hours__position))

(declare-const instr__instrument__name__first__bit4 Int)

(declare-const instr__instrument__name__last__bit4 Int)

(declare-const instr__instrument__name__position4 Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit4))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit4 instr__instrument__name__last__bit4))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position4))

(declare-fun user_eq13 (us_rep4 us_rep4) Bool)

(declare-const dummy13 us_rep4)

(declare-datatypes ()
((clock__ref (clock__refqtmk (clock__content us_rep4)))))
(define-fun clock__ref_clock__content__projection ((a clock__ref)) us_rep4 
  (clock__content a))

(declare-const us_tag5 Int)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const instr__instrument__name__first__bit5 Int)

(declare-const instr__instrument__name__last__bit5 Int)

(declare-const instr__instrument__name__position5 Int)

;; instr__instrument__name__first__bit_axiom
  (assert (<= 0 instr__instrument__name__first__bit5))

;; instr__instrument__name__last__bit_axiom
  (assert
  (< instr__instrument__name__first__bit5 instr__instrument__name__last__bit5))

;; instr__instrument__name__position_axiom
  (assert (<= 0 instr__instrument__name__position5))

(declare-const instr__clock__seconds__first__bit1 Int)

(declare-const instr__clock__seconds__last__bit1 Int)

(declare-const instr__clock__seconds__position1 Int)

;; instr__clock__seconds__first__bit_axiom
  (assert (<= 0 instr__clock__seconds__first__bit1))

;; instr__clock__seconds__last__bit_axiom
  (assert
  (< instr__clock__seconds__first__bit1 instr__clock__seconds__last__bit1))

;; instr__clock__seconds__position_axiom
  (assert (<= 0 instr__clock__seconds__position1))

(declare-const instr__clock__minutes__first__bit1 Int)

(declare-const instr__clock__minutes__last__bit1 Int)

(declare-const instr__clock__minutes__position1 Int)

;; instr__clock__minutes__first__bit_axiom
  (assert (<= 0 instr__clock__minutes__first__bit1))

;; instr__clock__minutes__last__bit_axiom
  (assert
  (< instr__clock__minutes__first__bit1 instr__clock__minutes__last__bit1))

;; instr__clock__minutes__position_axiom
  (assert (<= 0 instr__clock__minutes__position1))

(declare-const instr__clock__hours__first__bit1 Int)

(declare-const instr__clock__hours__last__bit1 Int)

(declare-const instr__clock__hours__position1 Int)

;; instr__clock__hours__first__bit_axiom
  (assert (<= 0 instr__clock__hours__first__bit1))

;; instr__clock__hours__last__bit_axiom
  (assert
  (< instr__clock__hours__first__bit1 instr__clock__hours__last__bit1))

;; instr__clock__hours__position_axiom
  (assert (<= 0 instr__clock__hours__position1))

(declare-fun user_eq14 (us_rep4 us_rep4) Bool)

(declare-const dummy14 us_rep4)

(declare-datatypes ()
((chronometer__ref (chronometer__refqtmk (chronometer__content us_rep4)))))
(define-fun chronometer__ref_chronometer__content__projection ((a chronometer__ref)) us_rep4 
  (chronometer__content a))

(declare-fun display_value__specific_post (Int us_rep) Bool)

;; instr__instrument__compat_axiom
  (assert true)

;; instr__speedometer__compat_axiom
  (assert true)

;; instr__gauge__compat_axiom
  (assert true)

;; instr__graphic_gauge__compat_axiom
  (assert true)

;; instr__clock__compat_axiom
  (assert true)

;; instr__chronometer__compat_axiom
  (assert true)

(declare-const x us_rep3)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const lg Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-datatypes () ((ts1S__ref (ts1S__refqtmk (ts1S__content us_t)))))
(define-fun ts1S__ref_ts1S__content__projection ((a ts1S__ref)) us_t 
  (ts1S__content a))

(declare-const s1 us_t)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-datatypes () ((ts2S__ref (ts2S__refqtmk (ts2S__content us_t)))))
(define-fun ts2S__ref_ts2S__content__projection ((a ts2S__ref)) us_t 
  (ts2S__content a))

(declare-const s2 us_t)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-fun temp___String_Literal_177 (tuple0) (Array Int character))

;; temp___String_Literal_177__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 1)) 32)
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 2)) 32))
     (and
     (and
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 3)) 32)
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 4)) 32))
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 5)) 32))
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 6)) 32)
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 7)) 32))
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 8)) 32)))
     (and
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 9)) 32)
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 10)) 32))
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 11)) 32))
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 12)) 32)
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 13)) 32))
     (= (to_rep1 (select (temp___String_Literal_177 us_void_param) 14)) 32))))) :pattern (
  (temp___String_Literal_177 us_void_param)) )))

(define-fun default_initial_assumption ((temp___expr_250 us_rep3)
  (temp___skip_top_level_251 Bool)) Bool (and
                                         (= (attr__tag3 temp___expr_250) 
                                         us_tag3)
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__instr__graphic_gauge__size
                                            (us_split_fields7
                                            temp___expr_250))) 20)
                                         (= (to_rep1
                                            (rec__instr__graphic_gauge__fill
                                            (us_split_fields7
                                            temp___expr_250))) 42))
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__instr__graphic_gauge__empty
                                            (us_split_fields7
                                            temp___expr_250))) 46)
                                         (= (rec__instr__instrument__name3
                                            (us_split_fields7
                                            temp___expr_250)) (temp___String_Literal_177
                                                              Tuple0)))
                                         (= (to_rep3
                                            (rec__instr__gauge__value1
                                            (us_split_fields7
                                            temp___expr_250))) 0)))))

(declare-datatypes () ((t9b__ref (t9b__refqtmk (t9b__content us_t)))))
(define-fun t9b__ref_t9b__content__projection ((a t9b__ref)) us_t (t9b__content
                                                                  a))

(declare-fun instr__display_value__4__s1__aggregate_def (Int Int Int) us_t)

(define-fun dynamic_invariant1 ((temp___expr_317 us_t)
  (temp___is_init_313 Bool) (temp___skip_constant_314 Bool)
  (temp___do_toplevel_315 Bool)
  (temp___do_typ_inv_316 Bool)) Bool (=>
                                     (not (= temp___skip_constant_314 true))
                                     (and (dynamic_property 1 lg
                                     (first1 temp___expr_317)
                                     (last1 temp___expr_317))
                                     (and (= (first1 temp___expr_317) 1)
                                     (= (last1 temp___expr_317) lg)))))

(define-fun default_initial_assumption1 ((temp___expr_319 us_t)
  (temp___skip_top_level_320 Bool)) Bool (and (= (first1 temp___expr_319) 1)
                                         (= (last1 temp___expr_319) lg)))

(declare-datatypes () ((t11b__ref (t11b__refqtmk (t11b__content us_t)))))
(define-fun t11b__ref_t11b__content__projection ((a t11b__ref)) us_t 
  (t11b__content a))

(declare-fun instr__display_value__4__s2__aggregate_def (Int Int Int) us_t)

(define-fun dynamic_invariant2 ((temp___expr_327 us_t)
  (temp___is_init_323 Bool) (temp___skip_constant_324 Bool)
  (temp___do_toplevel_325 Bool)
  (temp___do_typ_inv_326 Bool)) Bool (=>
                                     (not (= temp___skip_constant_324 true))
                                     (and (dynamic_property (+ lg 1)
                                     (to_rep
                                     (rec__instr__graphic_gauge__size
                                     (us_split_fields7 x)))
                                     (first1 temp___expr_327)
                                     (last1 temp___expr_327))
                                     (and
                                     (= (first1 temp___expr_327) (+ lg 1))
                                     (= (last1 temp___expr_327) (to_rep
                                                                (rec__instr__graphic_gauge__size
                                                                (us_split_fields7
                                                                x))))))))

(define-fun default_initial_assumption2 ((temp___expr_329 us_t)
  (temp___skip_top_level_330 Bool)) Bool (and
                                         (= (first1 temp___expr_329) (+ 
                                         lg 1))
                                         (= (last1 temp___expr_329) (to_rep
                                                                    (rec__instr__graphic_gauge__size
                                                                    (us_split_fields7
                                                                    x))))))

(define-fun dynamic_invariant3 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range2 temp___expr_74)))

(define-fun dynamic_invariant5 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

;; lg__def_axiom
  (assert
  (= lg (div1
        (* (to_rep (rec__instr__graphic_gauge__size (us_split_fields7 x))) 
        (to_rep3 (rec__instr__gauge__value1 (us_split_fields7 x)))) 100)))

;; s1__def_axiom
  (assert
  (= s1 (let ((temp___162 (instr__display_value__4__s1__aggregate_def
                          (to_rep1
                          (rec__instr__graphic_gauge__fill
                          (us_split_fields7 x))) 1 lg)))
        (of_array (to_array temp___162) (first1 temp___162)
        (last1 temp___162)))))

;; def_axiom
  (assert
  (forall ((temp___158 Int) (temp___159 Int) (temp___160 Int))
  (let ((temp___157 (instr__display_value__4__s1__aggregate_def temp___158
                    temp___159 temp___160)))
  (=> (dynamic_invariant4 temp___158 true true true true)
  (and
  (=> (dynamic_property 1 2147483647 temp___159 temp___160)
  (and (= (first1 temp___157) temp___159) (= (last1 temp___157) temp___160)))
  (forall ((temp___161 Int))
  (= (to_rep1 (select (to_array temp___157) temp___161)) temp___158)))))))

;; s2__def_axiom
  (assert
  (= s2 (let ((temp___168 (instr__display_value__4__s2__aggregate_def
                          (to_rep1
                          (rec__instr__graphic_gauge__empty
                          (us_split_fields7 x))) (+ lg 1)
                          (to_rep
                          (rec__instr__graphic_gauge__size
                          (us_split_fields7 x))))))
        (of_array (slide (to_array temp___168) (first1 temp___168) (+ lg 1))
        (+ lg 1)
        (to_rep (rec__instr__graphic_gauge__size (us_split_fields7 x)))))))

;; def_axiom
  (assert
  (forall ((temp___164 Int) (temp___165 Int) (temp___166 Int))
  (let ((temp___163 (instr__display_value__4__s2__aggregate_def temp___164
                    temp___165 temp___166)))
  (=> (dynamic_invariant4 temp___164 true true true true)
  (and
  (=> (dynamic_property 1 2147483647 temp___165 temp___166)
  (and (= (first1 temp___163) temp___165) (= (last1 temp___163) temp___166)))
  (forall ((temp___167 Int))
  (= (to_rep1 (select (to_array temp___163) temp___167)) temp___164)))))))

(define-fun dynamic_invariant6 ((temp___expr_193 Int)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)
  (temp___do_typ_inv_192 Bool)) Bool (=>
                                     (or (= temp___is_init_189 true)
                                     (<= 0 85)) (in_range3 temp___expr_193)))

(define-fun dynamic_invariant7 ((temp___expr_220 Int)
  (temp___is_init_216 Bool) (temp___skip_constant_217 Bool)
  (temp___do_toplevel_218 Bool)
  (temp___do_typ_inv_219 Bool)) Bool (=>
                                     (or (= temp___is_init_216 true)
                                     (<= 0 100)) (in_range4 temp___expr_220)))

(define-fun dynamic_invariant8 ((temp___expr_258 Int)
  (temp___is_init_254 Bool) (temp___skip_constant_255 Bool)
  (temp___do_toplevel_256 Bool)
  (temp___do_typ_inv_257 Bool)) Bool (=>
                                     (or (= temp___is_init_254 true)
                                     (<= 0 60)) (in_range5 temp___expr_258)))

(define-fun dynamic_invariant9 ((temp___expr_265 Int)
  (temp___is_init_261 Bool) (temp___skip_constant_262 Bool)
  (temp___do_toplevel_263 Bool)
  (temp___do_typ_inv_264 Bool)) Bool (=>
                                     (or (= temp___is_init_261 true)
                                     (<= 0 24)) (in_range6 temp___expr_265)))

(define-fun default_initial_assumption3 ((temp___expr_175 us_rep)
  (temp___skip_top_level_176 Bool)) Bool (and
                                         (= (attr__tag temp___expr_175) 
                                         us_tag)
                                         (= (rec__instr__instrument__name
                                            (us_split_fields1
                                            temp___expr_175)) (temp___String_Literal_177
                                                              Tuple0))))

(define-fun default_initial_assumption4 ((temp___expr_202 us_rep1)
  (temp___skip_top_level_203 Bool)) Bool (and
                                         (= (attr__tag1 temp___expr_202) 
                                         us_tag1)
                                         (and
                                         (= (to_rep2
                                            (rec__instr__speedometer__value
                                            (us_split_fields3
                                            temp___expr_202))) 0)
                                         (= (rec__instr__instrument__name1
                                            (us_split_fields3
                                            temp___expr_202)) (temp___String_Literal_177
                                                              Tuple0)))))

(define-fun default_initial_assumption5 ((temp___expr_229 us_rep2)
  (temp___skip_top_level_230 Bool)) Bool (and
                                         (= (attr__tag2 temp___expr_229) 
                                         us_tag2)
                                         (and
                                         (= (to_rep3
                                            (rec__instr__gauge__value
                                            (us_split_fields5
                                            temp___expr_229))) 0)
                                         (= (rec__instr__instrument__name2
                                            (us_split_fields5
                                            temp___expr_229)) (temp___String_Literal_177
                                                              Tuple0)))))

(define-fun default_initial_assumption6 ((temp___expr_274 us_rep4)
  (temp___skip_top_level_275 Bool)) Bool (and
                                         (= (attr__tag4 temp___expr_274) 
                                         us_tag4)
                                         (and
                                         (and
                                         (= (to_rep4
                                            (rec__instr__clock__seconds
                                            (us_split_fields9
                                            temp___expr_274))) 0)
                                         (= (to_rep4
                                            (rec__instr__clock__minutes
                                            (us_split_fields9
                                            temp___expr_274))) 0))
                                         (and
                                         (= (to_rep5
                                            (rec__instr__clock__hours
                                            (us_split_fields9
                                            temp___expr_274))) 0)
                                         (= (rec__instr__instrument__name4
                                            (us_split_fields9
                                            temp___expr_274)) (temp___String_Literal_177
                                                              Tuple0))))))

(define-fun default_initial_assumption7 ((temp___expr_298 us_rep4)
  (temp___skip_top_level_299 Bool)) Bool (and
                                         (= (attr__tag4 temp___expr_298) 
                                         us_tag5)
                                         (and
                                         (and
                                         (= (rec__instr__instrument__name4
                                            (us_split_fields9
                                            temp___expr_298)) (temp___String_Literal_177
                                                              Tuple0))
                                         (= (to_rep4
                                            (rec__instr__clock__seconds
                                            (us_split_fields9
                                            temp___expr_298))) 0))
                                         (and
                                         (= (to_rep4
                                            (rec__instr__clock__minutes
                                            (us_split_fields9
                                            temp___expr_298))) 0)
                                         (= (to_rep5
                                            (rec__instr__clock__hours
                                            (us_split_fields9
                                            temp___expr_298))) 0)))))

;; Assume
  (assert true)

(declare-const o Int)

;; Ensures
  (assert (= (to_rep3 (rec__instr__gauge__value1 (us_split_fields7 x))) 
  o))

(declare-const o1 Int)

;; Ensures
  (assert
  (= (to_rep (rec__instr__graphic_gauge__size (us_split_fields7 x))) 
  o1))

(define-fun o2 () Int (* o1 o))

(assert
;; defqtvc
 ;; File "instr.ads", line 54, characters 0-0
  (not (in_range o2)))
(check-sat)

(exit)
