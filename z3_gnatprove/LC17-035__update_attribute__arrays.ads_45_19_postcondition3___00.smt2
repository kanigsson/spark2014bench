(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const arr_in (Array Int integer))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const i Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const j Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort index 0)

(declare-fun indexqtint (index) Int)

;; index'axiom
  (assert
  (forall ((i1 index)) (and (<= 1 (indexqtint i1)) (<= (indexqtint i1) 8))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (index index) Bool)

(declare-const dummy1 index)

(declare-datatypes () ((index__ref (index__refqtmk (index__content index)))))
(define-fun index__ref_index__content__projection ((a index__ref)) index 
  (index__content a))

(define-fun dynamic_invariant ((temp___expr_166 Int)
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)
  (temp___do_typ_inv_165 Bool)) Bool (=>
                                     (or (= temp___is_init_162 true)
                                     (<= 1 8)) (in_range1 temp___expr_166)))

(declare-fun temp_____aggregate_def_241 ((Array Int integer) Int Int Int Int
  Int Int) (Array Int integer))

(declare-fun temp_____aggregate_def_421 ((Array Int integer) Int Int Int Int
  Int Int) (Array Int integer))

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 20))

(declare-const rliteral1 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral1) 10))

;; def_axiom
  (assert
  (forall ((temp___423 (Array Int integer)))
  (forall ((temp___424 Int) (temp___425 Int) (temp___426 Int)
  (temp___427 Int) (temp___428 Int) (temp___429 Int))
  (let ((temp___422 (temp_____aggregate_def_421 temp___423 temp___424
                    temp___425 temp___426 temp___427 temp___428 temp___429)))
  (=>
  (and (dynamic_invariant temp___424 true true true true)
  (and
  (and
  (and (dynamic_invariant temp___425 true true true true) (dynamic_invariant1
  temp___426 true true true true)) (dynamic_invariant temp___427 true true
  true true))
  (and (dynamic_invariant temp___428 true true true true) (dynamic_invariant1
  temp___429 true true true true))))
  (forall ((temp___430 Int))
  (ite (and (<= temp___427 temp___430) (<= temp___430 temp___428))
  (= (select temp___422 temp___430) rliteral)
  (ite (and (<= temp___424 temp___430) (<= temp___430 temp___425))
  (= (select temp___422 temp___430) rliteral1)
  (= (select temp___422 temp___430) (select temp___423 temp___430))))))))))

;; def_axiom
  (assert
  (forall ((temp___243 (Array Int integer)))
  (forall ((temp___244 Int) (temp___245 Int) (temp___246 Int)
  (temp___247 Int) (temp___248 Int) (temp___249 Int))
  (let ((temp___242 (temp_____aggregate_def_241 temp___243 temp___244
                    temp___245 temp___246 temp___247 temp___248 temp___249)))
  (=>
  (and (dynamic_invariant temp___244 true true true true)
  (and
  (and
  (and (dynamic_invariant temp___245 true true true true) (dynamic_invariant1
  temp___246 true true true true)) (dynamic_invariant temp___247 true true
  true true))
  (and (dynamic_invariant temp___248 true true true true) (dynamic_invariant1
  temp___249 true true true true))))
  (forall ((temp___250 Int))
  (ite (and (<= temp___247 temp___250) (<= temp___250 temp___248))
  (= (select temp___242 temp___250) rliteral)
  (ite (and (<= temp___244 temp___250) (<= temp___250 temp___245))
  (= (select temp___242 temp___250) rliteral1)
  (= (select temp___242 temp___250) (select temp___243 temp___250))))))))))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant i true false true true))

;; Assume
  (assert (dynamic_invariant j true false true true))

(declare-const arrays__f4__result (Array Int integer))

;; H
  (assert
  (= arrays__f4__result (temp_____aggregate_def_421 arr_in 1 i 10 i j 20)))

(assert
;; defqtvc
 ;; File "arrays.ads", line 44, characters 0-0
  (not
  (= (bool_eq arrays__f4__result 1 8
     (temp_____aggregate_def_241 arr_in 1 i 10 i j 20) 1 8) true)))
(check-sat)
