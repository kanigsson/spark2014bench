;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun free_memory (Int) Int)

(declare-fun free_memory__function_guard (Int Int) Bool)

;; free_memory__post_axiom
  (assert
  (forall ((fixed_mem__free Int))
  (! (=> (dynamic_invariant fixed_mem__free true true true true)
     (let ((result (free_memory fixed_mem__free)))
     (=> (free_memory__function_guard result fixed_mem__free)
     (dynamic_invariant result true false true true)))) :pattern ((free_memory
                                                                  fixed_mem__free)) )))

;; free_memory__def_axiom
  (assert
  (forall ((fixed_mem__free Int))
  (! (=> (dynamic_invariant fixed_mem__free true true true true)
     (= (free_memory fixed_mem__free) (+ (- 1000 fixed_mem__free) 1))) :pattern (
  (free_memory fixed_mem__free)) )))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-const free Int)

(declare-const free_init Int)

(declare-const free1 Int)

;; H
  (assert (= free1 free))

;; Assume
  (assert (dynamic_invariant free true false true true))

;; H
  (assert
  (forall ((free2 Int)) (free_memory__function_guard (free_memory free2)
  free2)))

;; Assume
  (assert (< 0 (free_memory free)))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant free_init false false true true))

(declare-const free_init1 Int)

;; H
  (assert (= free_init1 free))

(define-fun o () Int (+ free 1))

;; Ensures
  (assert (in_range o))

(declare-const free2 Int)

;; H
  (assert (= free2 o))

(declare-const spark__branch Bool)

;; H
  (assert (= spark__branch (ite (<= free2 free_init1) true false)))

;; H
  (assert (not (= spark__branch true)))

;; H
  (assert
  (forall ((free3 Int)) (free_memory__function_guard (free_memory free3)
  free3)))

;; H
  (assert
  (forall ((free3 Int)) (free_memory__function_guard (free_memory free3)
  free3)))

(assert
;; defqtvc
 ;; File "fixed_mem.ads", line 4, characters 0-0
  (not (< (free_memory free2) (free_memory free1))))
(check-sat)
