(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

;; id__post_axiom
  (assert (forall ((x Int)) (! (in_range1 (id x)) :pattern ((id x)) )))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__test_record_cnt_ex__root__f1 integer)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__root__f1__projection ((a us_split_fields)) integer 
  (rec__test_record_cnt_ex__root__f1 a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__test_record_cnt_ex__root__f1
                           (us_split_fields1 a))) (to_rep
                                                  (rec__test_record_cnt_ex__root__f1
                                                  (us_split_fields1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const test_record_cnt_ex__root__f1__first__bit Int)

(declare-const test_record_cnt_ex__root__f1__last__bit Int)

(declare-const test_record_cnt_ex__root__f1__position Int)

;; test_record_cnt_ex__root__f1__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__first__bit))

;; test_record_cnt_ex__root__f1__last__bit_axiom
  (assert
  (< test_record_cnt_ex__root__f1__first__bit test_record_cnt_ex__root__f1__last__bit))

;; test_record_cnt_ex__root__f1__position_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes () ((root__ref (root__refqtmk (root__content us_rep)))))
(define-fun root__ref_root__content__projection ((a root__ref)) us_rep 
  (root__content a))

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__test_record_cnt_ex__nested_1__hidden_1__f2 integer)(rec__test_record_cnt_ex__root__f11 integer)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__nested_1__hidden_1__f2__projection ((a us_split_fields2)) integer 
  (rec__test_record_cnt_ex__nested_1__hidden_1__f2 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__root__f1__2__projection ((a us_split_fields2)) integer 
  (rec__test_record_cnt_ex__root__f11 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (integer us_private) us_private)

(declare-fun extract__test_record_cnt_ex__nested_1__hidden_1__f2 (us_private) integer)

;; extract__test_record_cnt_ex__nested_1__hidden_1__f2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_1__hidden_1__f2 integer))
  (forall ((rec__ext__2 us_private))
  (= (extract__test_record_cnt_ex__nested_1__hidden_1__f2
     (hide_ext__ test_record_cnt_ex__nested_1__hidden_1__f2 rec__ext__2)) test_record_cnt_ex__nested_1__hidden_1__f2))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__test_record_cnt_ex__root__f11
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__test_record_cnt_ex__nested_1__hidden_1__f2
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                         (extract__test_record_cnt_ex__nested_1__hidden_1__f2
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__test_record_cnt_ex__root__f1
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_1__hidden_1__f2
                            (us_split_fields3 a))) (to_rep
                                                   (rec__test_record_cnt_ex__nested_1__hidden_1__f2
                                                   (us_split_fields3 b))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__root__f11
                            (us_split_fields3 a))) (to_rep
                                                   (rec__test_record_cnt_ex__root__f11
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__first__bit Int)

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__last__bit Int)

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__position Int)

;; test_record_cnt_ex__nested_1__hidden_1__f2__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_1__hidden_1__f2__first__bit))

;; test_record_cnt_ex__nested_1__hidden_1__f2__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_1__hidden_1__f2__first__bit test_record_cnt_ex__nested_1__hidden_1__f2__last__bit))

;; test_record_cnt_ex__nested_1__hidden_1__f2__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_1__hidden_1__f2__position))

(declare-const test_record_cnt_ex__root__f1__first__bit1 Int)

(declare-const test_record_cnt_ex__root__f1__last__bit1 Int)

(declare-const test_record_cnt_ex__root__f1__position1 Int)

;; test_record_cnt_ex__root__f1__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__first__bit1))

;; test_record_cnt_ex__root__f1__last__bit_axiom
  (assert
  (< test_record_cnt_ex__root__f1__first__bit1 test_record_cnt_ex__root__f1__last__bit1))

;; test_record_cnt_ex__root__f1__position_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__position1))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-const dummy2 us_rep1)

(declare-datatypes ()
((hidden_1__ref (hidden_1__refqtmk (hidden_1__content us_rep1)))))
(define-fun hidden_1__ref_hidden_1__content__projection ((a hidden_1__ref)) us_rep1 
  (hidden_1__content a))

(declare-const c us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2
 (rec__test_record_cnt_ex__nested_1__hidden_1__f21 integer)(rec__test_record_cnt_ex__two_f2__f2 integer)(rec__test_record_cnt_ex__root__f12 integer)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__nested_1__hidden_1__f2__2__projection ((a us_split_fields4)) integer 
  (rec__test_record_cnt_ex__nested_1__hidden_1__f21 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__two_f2__f2__projection ((a us_split_fields4)) integer 
  (rec__test_record_cnt_ex__two_f2__f2 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__root__f1__3__projection ((a us_split_fields4)) integer 
  (rec__test_record_cnt_ex__root__f12 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (integer integer us_private) us_private)

;; extract__test_record_cnt_ex__nested_1__hidden_1__f2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_1__hidden_1__f2 integer)
  (test_record_cnt_ex__two_f2__f2 integer))
  (forall ((rec__ext__3 us_private))
  (= (extract__test_record_cnt_ex__nested_1__hidden_1__f2
     (hide_ext__1 test_record_cnt_ex__nested_1__hidden_1__f2
     test_record_cnt_ex__two_f2__f2 rec__ext__3)) test_record_cnt_ex__nested_1__hidden_1__f2))))

(declare-fun extract__test_record_cnt_ex__two_f2__f2 (us_private) integer)

;; extract__test_record_cnt_ex__two_f2__f2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_1__hidden_1__f2 integer)
  (test_record_cnt_ex__two_f2__f2 integer))
  (forall ((rec__ext__3 us_private))
  (= (extract__test_record_cnt_ex__two_f2__f2
     (hide_ext__1 test_record_cnt_ex__nested_1__hidden_1__f2
     test_record_cnt_ex__two_f2__f2 rec__ext__3)) test_record_cnt_ex__two_f2__f2))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__test_record_cnt_ex__root__f12
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__test_record_cnt_ex__nested_1__hidden_1__f21
                                          (us_split_fields5 a))
                                          (rec__test_record_cnt_ex__two_f2__f2
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2
                                          (us_split_fieldsqtmk2
                                          (extract__test_record_cnt_ex__nested_1__hidden_1__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__test_record_cnt_ex__two_f2__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__test_record_cnt_ex__root__f1
                                          (us_split_fields1 r))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_1__hidden_1__f21
                            (us_split_fields5 a))) (to_rep
                                                   (rec__test_record_cnt_ex__nested_1__hidden_1__f21
                                                   (us_split_fields5 b))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__two_f2__f2
                            (us_split_fields5 a))) (to_rep
                                                   (rec__test_record_cnt_ex__two_f2__f2
                                                   (us_split_fields5 b)))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__root__f12
                            (us_split_fields5 a))) (to_rep
                                                   (rec__test_record_cnt_ex__root__f12
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1 Int)

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__last__bit1 Int)

(declare-const test_record_cnt_ex__nested_1__hidden_1__f2__position1 Int)

;; test_record_cnt_ex__nested_1__hidden_1__f2__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1))

;; test_record_cnt_ex__nested_1__hidden_1__f2__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1 test_record_cnt_ex__nested_1__hidden_1__f2__last__bit1))

;; test_record_cnt_ex__nested_1__hidden_1__f2__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_1__hidden_1__f2__position1))

(declare-const test_record_cnt_ex__two_f2__f2__first__bit Int)

(declare-const test_record_cnt_ex__two_f2__f2__last__bit Int)

(declare-const test_record_cnt_ex__two_f2__f2__position Int)

;; test_record_cnt_ex__two_f2__f2__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__two_f2__f2__first__bit))

;; test_record_cnt_ex__two_f2__f2__last__bit_axiom
  (assert
  (< test_record_cnt_ex__two_f2__f2__first__bit test_record_cnt_ex__two_f2__f2__last__bit))

;; test_record_cnt_ex__two_f2__f2__position_axiom
  (assert (<= 0 test_record_cnt_ex__two_f2__f2__position))

(declare-const test_record_cnt_ex__root__f1__first__bit2 Int)

(declare-const test_record_cnt_ex__root__f1__last__bit2 Int)

(declare-const test_record_cnt_ex__root__f1__position2 Int)

;; test_record_cnt_ex__root__f1__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__first__bit2))

;; test_record_cnt_ex__root__f1__last__bit_axiom
  (assert
  (< test_record_cnt_ex__root__f1__first__bit2 test_record_cnt_ex__root__f1__last__bit2))

;; test_record_cnt_ex__root__f1__position_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__position2))

(declare-fun user_eq3 (us_rep2 us_rep2) Bool)

(declare-const dummy3 us_rep2)

(declare-datatypes ()
((two_f2__ref (two_f2__refqtmk (two_f2__content us_rep2)))))
(define-fun two_f2__ref_two_f2__content__projection ((a two_f2__ref)) us_rep2 
  (two_f2__content a))

(declare-const x_1__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption ((temp___expr_179 us_rep2)
  (temp___skip_top_level_180 Bool)) Bool (= (attr__tag2 temp___expr_179) 
  us_tag2))

(declare-const y_1__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3
 (rec__test_record_cnt_ex__nested_2__hidden_2 us_main_type)(rec__test_record_cnt_ex__root__f13 integer)(rec__ext__3 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__nested_2__hidden_2__projection ((a us_split_fields6)) us_main_type 
  (rec__test_record_cnt_ex__nested_2__hidden_2 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__root__f1__4__projection ((a us_split_fields6)) integer 
  (rec__test_record_cnt_ex__root__f13 a))

(define-fun us_split_fields_rec__ext____4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (us_repqtmk3 (us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___split_fields__4__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun us_rep_attr__tag__4__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (us_main_type us_private) us_private)

(declare-fun extract__test_record_cnt_ex__nested_2__hidden_2 (us_private) us_main_type)

;; extract__test_record_cnt_ex__nested_2__hidden_2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_2__hidden_2 us_main_type))
  (forall ((rec__ext__4 us_private))
  (= (extract__test_record_cnt_ex__nested_2__hidden_2
     (hide_ext__2 test_record_cnt_ex__nested_2__hidden_2 rec__ext__4)) test_record_cnt_ex__nested_2__hidden_2))))

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__test_record_cnt_ex__root__f13
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__test_record_cnt_ex__nested_2__hidden_2
                                          (us_split_fields7 a))
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (us_repqtmk3
                                          (us_split_fieldsqtmk3
                                          (extract__test_record_cnt_ex__nested_2__hidden_2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__test_record_cnt_ex__root__f1
                                          (us_split_fields1 r))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq3 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (= (us_main_eq
                            (rec__test_record_cnt_ex__nested_2__hidden_2
                            (us_split_fields7 a))
                            (rec__test_record_cnt_ex__nested_2__hidden_2
                            (us_split_fields7 b))) true)
                         (= (to_rep
                            (rec__test_record_cnt_ex__root__f13
                            (us_split_fields7 a))) (to_rep
                                                   (rec__test_record_cnt_ex__root__f13
                                                   (us_split_fields7 b)))))
                    true false))

(declare-const us_tag3 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const test_record_cnt_ex__root__f1__first__bit3 Int)

(declare-const test_record_cnt_ex__root__f1__last__bit3 Int)

(declare-const test_record_cnt_ex__root__f1__position3 Int)

;; test_record_cnt_ex__root__f1__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__first__bit3))

;; test_record_cnt_ex__root__f1__last__bit_axiom
  (assert
  (< test_record_cnt_ex__root__f1__first__bit3 test_record_cnt_ex__root__f1__last__bit3))

;; test_record_cnt_ex__root__f1__position_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__position3))

(declare-fun user_eq4 (us_rep3 us_rep3) Bool)

(declare-const dummy4 us_rep3)

(declare-datatypes ()
((hidden_2__ref (hidden_2__refqtmk (hidden_2__content us_rep3)))))
(define-fun hidden_2__ref_hidden_2__content__projection ((a hidden_2__ref)) us_rep3 
  (hidden_2__content a))

(declare-const c1 us_rep3)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-datatypes ()
((us_split_fields8
 (us_split_fieldsqtmk4
 (rec__test_record_cnt_ex__nested_2__hidden_21 us_main_type)(rec__test_record_cnt_ex__hidden_info__f2 integer)(rec__test_record_cnt_ex__root__f14 integer)(rec__ext__4 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__nested_2__hidden_2__2__projection ((a us_split_fields8)) us_main_type 
  (rec__test_record_cnt_ex__nested_2__hidden_21 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__hidden_info__f2__projection ((a us_split_fields8)) integer 
  (rec__test_record_cnt_ex__hidden_info__f2 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__root__f1__5__projection ((a us_split_fields8)) integer 
  (rec__test_record_cnt_ex__root__f14 a))

(define-fun us_split_fields_rec__ext____5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ()
((us_split_fields__ref4
 (us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (us_repqtmk4 (us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun us_rep_attr__tag__5__projection ((a us_rep4)) Int (attr__tag4 a))

(declare-fun hide_ext__3 (us_main_type integer us_private) us_private)

;; extract__test_record_cnt_ex__nested_2__hidden_2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_2__hidden_2 us_main_type))
  (forall ((test_record_cnt_ex__hidden_info__f2 integer))
  (forall ((rec__ext__5 us_private))
  (= (extract__test_record_cnt_ex__nested_2__hidden_2
     (hide_ext__3 test_record_cnt_ex__nested_2__hidden_2
     test_record_cnt_ex__hidden_info__f2 rec__ext__5)) test_record_cnt_ex__nested_2__hidden_2)))))

(declare-fun extract__test_record_cnt_ex__hidden_info__f2 (us_private) integer)

;; extract__test_record_cnt_ex__hidden_info__f2__conv
  (assert
  (forall ((test_record_cnt_ex__nested_2__hidden_2 us_main_type))
  (forall ((test_record_cnt_ex__hidden_info__f2 integer))
  (forall ((rec__ext__5 us_private))
  (= (extract__test_record_cnt_ex__hidden_info__f2
     (hide_ext__3 test_record_cnt_ex__nested_2__hidden_2
     test_record_cnt_ex__hidden_info__f2 rec__ext__5)) test_record_cnt_ex__hidden_info__f2)))))

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep4)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__test_record_cnt_ex__root__f14
                                          (us_split_fields9 a))
                                          (hide_ext__3
                                          (rec__test_record_cnt_ex__nested_2__hidden_21
                                          (us_split_fields9 a))
                                          (rec__test_record_cnt_ex__hidden_info__f2
                                          (us_split_fields9 a))
                                          (rec__ext__4 (us_split_fields9 a))))
                                          (attr__tag4 a)))

(define-fun of_base3 ((r us_rep)) us_rep4 (us_repqtmk4
                                          (us_split_fieldsqtmk4
                                          (extract__test_record_cnt_ex__nested_2__hidden_2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__test_record_cnt_ex__hidden_info__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__test_record_cnt_ex__root__f1
                                          (us_split_fields1 r))
                                          (extract__ext__3
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq4 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (= (us_main_eq
                            (rec__test_record_cnt_ex__nested_2__hidden_21
                            (us_split_fields9 a))
                            (rec__test_record_cnt_ex__nested_2__hidden_21
                            (us_split_fields9 b))) true)
                         (= (to_rep
                            (rec__test_record_cnt_ex__hidden_info__f2
                            (us_split_fields9 a))) (to_rep
                                                   (rec__test_record_cnt_ex__hidden_info__f2
                                                   (us_split_fields9 b)))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__root__f14
                            (us_split_fields9 a))) (to_rep
                                                   (rec__test_record_cnt_ex__root__f14
                                                   (us_split_fields9 b)))))
                    true false))

(declare-const us_tag4 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const test_record_cnt_ex__hidden_info__f2__first__bit Int)

(declare-const test_record_cnt_ex__hidden_info__f2__last__bit Int)

(declare-const test_record_cnt_ex__hidden_info__f2__position Int)

;; test_record_cnt_ex__hidden_info__f2__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__hidden_info__f2__first__bit))

;; test_record_cnt_ex__hidden_info__f2__last__bit_axiom
  (assert
  (< test_record_cnt_ex__hidden_info__f2__first__bit test_record_cnt_ex__hidden_info__f2__last__bit))

;; test_record_cnt_ex__hidden_info__f2__position_axiom
  (assert (<= 0 test_record_cnt_ex__hidden_info__f2__position))

(declare-const test_record_cnt_ex__root__f1__first__bit4 Int)

(declare-const test_record_cnt_ex__root__f1__last__bit4 Int)

(declare-const test_record_cnt_ex__root__f1__position4 Int)

;; test_record_cnt_ex__root__f1__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__first__bit4))

;; test_record_cnt_ex__root__f1__last__bit_axiom
  (assert
  (< test_record_cnt_ex__root__f1__first__bit4 test_record_cnt_ex__root__f1__last__bit4))

;; test_record_cnt_ex__root__f1__position_axiom
  (assert (<= 0 test_record_cnt_ex__root__f1__position4))

(declare-fun user_eq5 (us_rep4 us_rep4) Bool)

(declare-const dummy5 us_rep4)

(declare-datatypes ()
((hidden_info__ref (hidden_info__refqtmk (hidden_info__content us_rep4)))))
(define-fun hidden_info__ref_hidden_info__content__projection ((a hidden_info__ref)) us_rep4 
  (hidden_info__content a))

(declare-const x_2__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun default_initial_assumption1 ((temp___expr_197 us_rep4)
  (temp___skip_top_level_198 Bool)) Bool (= (attr__tag4 temp___expr_197) 
  us_tag4))

(declare-const y_2__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-datatypes ()
((us_split_discrs
 (us_split_discrsqtmk (rec__test_record_cnt_ex__nested_3__complex__b Bool)))))
(define-fun us_split_discrs_rec__test_record_cnt_ex__nested_3__complex__b__projection ((a us_split_discrs)) Bool 
  (rec__test_record_cnt_ex__nested_3__complex__b a))

(declare-datatypes ()
((us_split_discrs__ref
 (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields10
 (us_split_fieldsqtmk5
 (rec__test_record_cnt_ex__nested_3__complex__g integer)(rec__test_record_cnt_ex__nested_3__complex__f integer)(rec__ext__5 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__projection ((a us_split_fields10)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__g a))

(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__projection ((a us_split_fields10)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__f a))

(define-fun us_split_fields_rec__ext____6__projection ((a us_split_fields10)) us_private 
  (rec__ext__5 a))

(declare-datatypes ()
((us_split_fields__ref5
 (us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ()
((us_rep5
 (us_repqtmk5
 (us_split_discrs1 us_split_discrs)(us_split_fields11 us_split_fields10)(attr__tag5 Int)))))
(define-fun us_rep___split_discrs__projection ((a us_rep5)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__6__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun us_rep_attr__tag__6__projection ((a us_rep5)) Int (attr__tag5 a))

(define-fun test_record_cnt_ex__nested_3__complex__f__pred ((a us_rep5)) Bool (= (ite 
  (rec__test_record_cnt_ex__nested_3__complex__b (us_split_discrs1 a)) 1 0) 1))

(define-fun bool_eq5 ((a us_rep5)
  (b us_rep5)) Bool (ite (and
                         (= (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                 (us_split_discrs1 a)) 1 0) (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                                                 (us_split_discrs1
                                                                 b)) 1 0))
                         (and
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__g
                            (us_split_fields11 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__g
                                                    (us_split_fields11 b))))
                         (=> (test_record_cnt_ex__nested_3__complex__f__pred
                         a)
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__f
                            (us_split_fields11 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__f
                                                    (us_split_fields11 b)))))))
                    true false))

(declare-fun us_dispatch_eq1 (us_rep5 us_rep5) Bool)

(declare-const us_tag5 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit test_record_cnt_ex__nested_3__complex__b__last__bit))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit test_record_cnt_ex__nested_3__complex__f__last__bit))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit test_record_cnt_ex__nested_3__complex__g__last__bit))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position))

(declare-fun user_eq6 (us_rep5 us_rep5) Bool)

(declare-const dummy6 us_rep5)

(declare-datatypes () ((no_f__ref (no_f__refqtmk (no_f__content us_rep5)))))
(define-fun no_f__ref_no_f__content__projection ((a no_f__ref)) us_rep5 
  (no_f__content a))

(declare-const x us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const y us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const us_tag6 Int)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position1 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit1))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit1 test_record_cnt_ex__nested_3__complex__b__last__bit1))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position1))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position1 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit1))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit1 test_record_cnt_ex__nested_3__complex__g__last__bit1))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position1))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit1 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position1 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit1))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit1 test_record_cnt_ex__nested_3__complex__f__last__bit1))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position1))

(declare-fun user_eq7 (us_rep5 us_rep5) Bool)

(declare-const dummy7 us_rep5)

(declare-datatypes ()
((f_present__ref (f_present__refqtmk (f_present__content us_rep5)))))
(define-fun f_present__ref_f_present__content__projection ((a f_present__ref)) us_rep5 
  (f_present__content a))

(declare-const w us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const z us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const us_tag7 Int)

(define-fun in_range2 ((rec__test_record_cnt_ex__nested_3__complex__b1 Bool)
  (a us_split_discrs)) Bool (= rec__test_record_cnt_ex__nested_3__complex__b1 
  (rec__test_record_cnt_ex__nested_3__complex__b a)))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position2 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit2))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit2 test_record_cnt_ex__nested_3__complex__b__last__bit2))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position2))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position2 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit2))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit2 test_record_cnt_ex__nested_3__complex__g__last__bit2))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position2))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit2 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position2 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit2))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit2 test_record_cnt_ex__nested_3__complex__f__last__bit2))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position2))

(declare-fun user_eq8 (us_rep5 us_rep5) Bool)

(declare-const dummy8 us_rep5)

(declare-datatypes ()
((complex__ref (complex__refqtmk (complex__content us_rep5)))))
(define-fun complex__ref_complex__content__projection ((a complex__ref)) us_rep5 
  (complex__content a))

(declare-datatypes ()
((us_split_fields12
 (us_split_fieldsqtmk6
 (rec__test_record_cnt_ex__Tno_fB__g integer)(rec__test_record_cnt_ex__nested_3__complex__g1 integer)(rec__test_record_cnt_ex__nested_3__complex__f1 integer)(rec__ext__6 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__Tno_fB__g__projection ((a us_split_fields12)) integer 
  (rec__test_record_cnt_ex__Tno_fB__g a))

(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__2__projection ((a us_split_fields12)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__g1 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__2__projection ((a us_split_fields12)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__f1 a))

(define-fun us_split_fields_rec__ext____7__projection ((a us_split_fields12)) us_private 
  (rec__ext__6 a))

(declare-datatypes ()
((us_split_fields__ref6
 (us_split_fields__refqtmk6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___split_fields__content__7__projection ((a us_split_fields__ref6)) us_split_fields12 
  (us_split_fields__content6 a))

(declare-datatypes ()
((us_rep6
 (us_repqtmk6
 (us_split_discrs2 us_split_discrs)(us_split_fields13 us_split_fields12)(attr__tag6 Int)))))
(define-fun us_rep___split_discrs__2__projection ((a us_rep6)) us_split_discrs 
  (us_split_discrs2 a))

(define-fun us_rep___split_fields__7__projection ((a us_rep6)) us_split_fields12 
  (us_split_fields13 a))

(define-fun us_rep_attr__tag__7__projection ((a us_rep6)) Int (attr__tag6 a))

(declare-fun hide_ext__4 (integer us_private) us_private)

(declare-fun extract__test_record_cnt_ex__Tno_fB__g (us_private) integer)

;; extract__test_record_cnt_ex__Tno_fB__g__conv
  (assert
  (forall ((test_record_cnt_ex__Tno_fB__g integer))
  (forall ((rec__ext__7 us_private))
  (= (extract__test_record_cnt_ex__Tno_fB__g
     (hide_ext__4 test_record_cnt_ex__Tno_fB__g rec__ext__7)) test_record_cnt_ex__Tno_fB__g))))

(declare-fun extract__ext__4 (us_private) us_private)

(define-fun to_base4 ((a us_rep6)) us_rep5 (us_repqtmk5 (us_split_discrs2 a)
                                           (us_split_fieldsqtmk5
                                           (rec__test_record_cnt_ex__nested_3__complex__g1
                                           (us_split_fields13 a))
                                           (rec__test_record_cnt_ex__nested_3__complex__f1
                                           (us_split_fields13 a))
                                           (hide_ext__4
                                           (rec__test_record_cnt_ex__Tno_fB__g
                                           (us_split_fields13 a))
                                           (rec__ext__6
                                           (us_split_fields13 a))))
                                           (attr__tag6 a)))

(define-fun of_base4 ((r us_rep5)) us_rep6 (us_repqtmk6 (us_split_discrs1 r)
                                           (us_split_fieldsqtmk6
                                           (extract__test_record_cnt_ex__Tno_fB__g
                                           (rec__ext__5
                                           (us_split_fields11 r)))
                                           (rec__test_record_cnt_ex__nested_3__complex__g
                                           (us_split_fields11 r))
                                           (rec__test_record_cnt_ex__nested_3__complex__f
                                           (us_split_fields11 r))
                                           (extract__ext__4
                                           (rec__ext__5
                                           (us_split_fields11 r))))
                                           (attr__tag5 r)))

(define-fun test_record_cnt_ex__nested_3__complex__f__pred1 ((a us_rep6)) Bool (= (ite 
  (rec__test_record_cnt_ex__nested_3__complex__b (us_split_discrs2 a)) 1 0) 1))

(define-fun bool_eq6 ((a us_rep6)
  (b us_rep6)) Bool (ite (and
                         (= (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                 (us_split_discrs2 a)) 1 0) (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                                                 (us_split_discrs2
                                                                 b)) 1 0))
                         (and
                         (and
                         (= (to_rep
                            (rec__test_record_cnt_ex__Tno_fB__g
                            (us_split_fields13 a))) (to_rep
                                                    (rec__test_record_cnt_ex__Tno_fB__g
                                                    (us_split_fields13 b))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__g1
                            (us_split_fields13 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__g1
                                                    (us_split_fields13 b)))))
                         (=> (test_record_cnt_ex__nested_3__complex__f__pred1
                         a)
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__f1
                            (us_split_fields13 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__f1
                                                    (us_split_fields13 b)))))))
                    true false))

(declare-const us_tag8 Int)

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const alignment8 Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (<= 0 object__size8))

;; alignment_axiom
  (assert (<= 0 alignment8))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position3 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit3))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit3 test_record_cnt_ex__nested_3__complex__b__last__bit3))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position3))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position3 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit3))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit3 test_record_cnt_ex__nested_3__complex__g__last__bit3))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position3))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit3 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position3 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit3))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit3 test_record_cnt_ex__nested_3__complex__f__last__bit3))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position3))

(declare-const test_record_cnt_ex__Tno_fB__g__first__bit Int)

(declare-const test_record_cnt_ex__Tno_fB__g__last__bit Int)

(declare-const test_record_cnt_ex__Tno_fB__g__position Int)

;; test_record_cnt_ex__Tno_fB__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__first__bit))

;; test_record_cnt_ex__Tno_fB__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tno_fB__g__first__bit test_record_cnt_ex__Tno_fB__g__last__bit))

;; test_record_cnt_ex__Tno_fB__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__position))

(declare-fun user_eq9 (us_rep6 us_rep6) Bool)

(declare-const dummy9 us_rep6)

(declare-datatypes ()
((no_f__ref1 (no_f__refqtmk1 (no_f__content1 us_rep6)))))
(define-fun no_f__ref_no_f__content__2__projection ((a no_f__ref1)) us_rep6 
  (no_f__content1 a))

(declare-const x1 us_rep6)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const y1 us_rep6)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-datatypes ()
((us_split_fields14
 (us_split_fieldsqtmk7
 (rec__test_record_cnt_ex__Tf_presentB__h integer)(rec__test_record_cnt_ex__nested_3__complex__g2 integer)(rec__test_record_cnt_ex__nested_3__complex__f2 integer)(rec__ext__7 us_private)))))
(define-fun us_split_fields_rec__test_record_cnt_ex__Tf_presentB__h__projection ((a us_split_fields14)) integer 
  (rec__test_record_cnt_ex__Tf_presentB__h a))

(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__3__projection ((a us_split_fields14)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__g2 a))

(define-fun us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__3__projection ((a us_split_fields14)) integer 
  (rec__test_record_cnt_ex__nested_3__complex__f2 a))

(define-fun us_split_fields_rec__ext____8__projection ((a us_split_fields14)) us_private 
  (rec__ext__7 a))

(declare-datatypes ()
((us_split_fields__ref7
 (us_split_fields__refqtmk7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___split_fields__content__8__projection ((a us_split_fields__ref7)) us_split_fields14 
  (us_split_fields__content7 a))

(declare-datatypes ()
((us_rep7
 (us_repqtmk7
 (us_split_discrs3 us_split_discrs)(us_split_fields15 us_split_fields14)(attr__tag7 Int)))))
(define-fun us_rep___split_discrs__3__projection ((a us_rep7)) us_split_discrs 
  (us_split_discrs3 a))

(define-fun us_rep___split_fields__8__projection ((a us_rep7)) us_split_fields14 
  (us_split_fields15 a))

(define-fun us_rep_attr__tag__8__projection ((a us_rep7)) Int (attr__tag7 a))

(declare-fun hide_ext__5 (integer us_private) us_private)

(declare-fun extract__test_record_cnt_ex__Tf_presentB__h (us_private) integer)

;; extract__test_record_cnt_ex__Tf_presentB__h__conv
  (assert
  (forall ((test_record_cnt_ex__Tf_presentB__h integer))
  (forall ((rec__ext__8 us_private))
  (= (extract__test_record_cnt_ex__Tf_presentB__h
     (hide_ext__5 test_record_cnt_ex__Tf_presentB__h rec__ext__8)) test_record_cnt_ex__Tf_presentB__h))))

(declare-fun extract__ext__5 (us_private) us_private)

(define-fun to_base5 ((a us_rep7)) us_rep5 (us_repqtmk5 (us_split_discrs3 a)
                                           (us_split_fieldsqtmk5
                                           (rec__test_record_cnt_ex__nested_3__complex__g2
                                           (us_split_fields15 a))
                                           (rec__test_record_cnt_ex__nested_3__complex__f2
                                           (us_split_fields15 a))
                                           (hide_ext__5
                                           (rec__test_record_cnt_ex__Tf_presentB__h
                                           (us_split_fields15 a))
                                           (rec__ext__7
                                           (us_split_fields15 a))))
                                           (attr__tag7 a)))

(define-fun of_base5 ((r us_rep5)) us_rep7 (us_repqtmk7 (us_split_discrs1 r)
                                           (us_split_fieldsqtmk7
                                           (extract__test_record_cnt_ex__Tf_presentB__h
                                           (rec__ext__5
                                           (us_split_fields11 r)))
                                           (rec__test_record_cnt_ex__nested_3__complex__g
                                           (us_split_fields11 r))
                                           (rec__test_record_cnt_ex__nested_3__complex__f
                                           (us_split_fields11 r))
                                           (extract__ext__5
                                           (rec__ext__5
                                           (us_split_fields11 r))))
                                           (attr__tag5 r)))

(define-fun test_record_cnt_ex__nested_3__complex__f__pred2 ((a us_rep7)) Bool (= (ite 
  (rec__test_record_cnt_ex__nested_3__complex__b (us_split_discrs3 a)) 1 0) 1))

(define-fun bool_eq7 ((a us_rep7)
  (b us_rep7)) Bool (ite (and
                         (= (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                 (us_split_discrs3 a)) 1 0) (ite (rec__test_record_cnt_ex__nested_3__complex__b
                                                                 (us_split_discrs3
                                                                 b)) 1 0))
                         (and
                         (and
                         (= (to_rep
                            (rec__test_record_cnt_ex__Tf_presentB__h
                            (us_split_fields15 a))) (to_rep
                                                    (rec__test_record_cnt_ex__Tf_presentB__h
                                                    (us_split_fields15 b))))
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__g2
                            (us_split_fields15 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__g2
                                                    (us_split_fields15 b)))))
                         (=> (test_record_cnt_ex__nested_3__complex__f__pred2
                         a)
                         (= (to_rep
                            (rec__test_record_cnt_ex__nested_3__complex__f2
                            (us_split_fields15 a))) (to_rep
                                                    (rec__test_record_cnt_ex__nested_3__complex__f2
                                                    (us_split_fields15 b)))))))
                    true false))

(declare-const us_tag9 Int)

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const alignment9 Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (<= 0 object__size9))

;; alignment_axiom
  (assert (<= 0 alignment9))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position4 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit4))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit4 test_record_cnt_ex__nested_3__complex__b__last__bit4))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position4))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position4 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit4))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit4 test_record_cnt_ex__nested_3__complex__g__last__bit4))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position4))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit4 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position4 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit4))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit4 test_record_cnt_ex__nested_3__complex__f__last__bit4))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position4))

(declare-const test_record_cnt_ex__Tf_presentB__h__first__bit Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__last__bit Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__position Int)

;; test_record_cnt_ex__Tf_presentB__h__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__first__bit))

;; test_record_cnt_ex__Tf_presentB__h__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tf_presentB__h__first__bit test_record_cnt_ex__Tf_presentB__h__last__bit))

;; test_record_cnt_ex__Tf_presentB__h__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__position))

(declare-fun user_eq10 (us_rep7 us_rep7) Bool)

(declare-const dummy10 us_rep7)

(declare-datatypes ()
((f_present__ref1 (f_present__refqtmk1 (f_present__content1 us_rep7)))))
(define-fun f_present__ref_f_present__content__2__projection ((a f_present__ref1)) us_rep7 
  (f_present__content1 a))

(declare-const w1 us_rep7)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const z1 us_rep7)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(define-fun default_initial_assumption2 ((temp___expr_170 us_rep1)
  (temp___skip_top_level_171 Bool)) Bool (= (attr__tag1 temp___expr_170) 
  us_tag1))

(define-fun default_initial_assumption3 ((temp___expr_189 us_rep3)
  (temp___skip_top_level_190 Bool)) Bool (= (attr__tag3 temp___expr_189) 
  us_tag3))

(declare-const us_tag10 Int)

(declare-const value__size10 Int)

(declare-const object__size10 Int)

(declare-const alignment10 Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (<= 0 object__size10))

;; alignment_axiom
  (assert (<= 0 alignment10))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position5 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit5))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit5 test_record_cnt_ex__nested_3__complex__b__last__bit5))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position5))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position5 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit5))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit5 test_record_cnt_ex__nested_3__complex__g__last__bit5))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position5))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit5 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position5 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit5))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit5 test_record_cnt_ex__nested_3__complex__f__last__bit5))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position5))

(declare-fun user_eq11 (us_rep5 us_rep5) Bool)

(declare-const dummy11 us_rep5)

(declare-datatypes ()
((tno_fB__ref (tno_fB__refqtmk (tno_fB__content us_rep5)))))
(define-fun tno_fB__ref_tno_fB__content__projection ((a tno_fB__ref)) us_rep5 
  (tno_fB__content a))

(define-fun dynamic_invariant1 ((temp___expr_211 us_rep5)
  (temp___is_init_207 Bool) (temp___skip_constant_208 Bool)
  (temp___do_toplevel_209 Bool)
  (temp___do_typ_inv_210 Bool)) Bool (=>
                                     (not (= temp___skip_constant_208 true))
                                     (in_range2 (distinct 0 0)
                                     (us_split_discrs1 temp___expr_211))))

(define-fun default_initial_assumption4 ((temp___expr_213 us_rep5)
  (temp___skip_top_level_214 Bool)) Bool (and
                                         (= (attr__tag5 temp___expr_213) 
                                         us_tag5)
                                         (= (rec__test_record_cnt_ex__nested_3__complex__b
                                            (us_split_discrs1
                                            temp___expr_213)) (distinct 0 0))))

(declare-const us_tag11 Int)

(declare-const value__size11 Int)

(declare-const object__size11 Int)

(declare-const alignment11 Int)

;; value__size_axiom
  (assert (<= 0 value__size11))

;; object__size_axiom
  (assert (<= 0 object__size11))

;; alignment_axiom
  (assert (<= 0 alignment11))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position6 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit6))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit6 test_record_cnt_ex__nested_3__complex__b__last__bit6))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position6))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position6 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit6))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit6 test_record_cnt_ex__nested_3__complex__g__last__bit6))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position6))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit6 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position6 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit6))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit6 test_record_cnt_ex__nested_3__complex__f__last__bit6))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position6))

(declare-fun user_eq12 (us_rep5 us_rep5) Bool)

(declare-const dummy12 us_rep5)

(declare-datatypes ()
((tf_presentB__ref (tf_presentB__refqtmk (tf_presentB__content us_rep5)))))
(define-fun tf_presentB__ref_tf_presentB__content__projection ((a tf_presentB__ref)) us_rep5 
  (tf_presentB__content a))

(define-fun dynamic_invariant2 ((temp___expr_222 us_rep5)
  (temp___is_init_218 Bool) (temp___skip_constant_219 Bool)
  (temp___do_toplevel_220 Bool)
  (temp___do_typ_inv_221 Bool)) Bool (=>
                                     (not (= temp___skip_constant_219 true))
                                     (in_range2 (distinct 1 0)
                                     (us_split_discrs1 temp___expr_222))))

(define-fun default_initial_assumption5 ((temp___expr_224 us_rep5)
  (temp___skip_top_level_225 Bool)) Bool (and
                                         (= (attr__tag5 temp___expr_224) 
                                         us_tag6)
                                         (= (rec__test_record_cnt_ex__nested_3__complex__b
                                            (us_split_discrs1
                                            temp___expr_224)) (distinct 1 0))))

(declare-const us_tag12 Int)

(declare-const value__size12 Int)

(declare-const object__size12 Int)

(declare-const alignment12 Int)

;; value__size_axiom
  (assert (<= 0 value__size12))

;; object__size_axiom
  (assert (<= 0 object__size12))

;; alignment_axiom
  (assert (<= 0 alignment12))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position7 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit7))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit7 test_record_cnt_ex__nested_3__complex__b__last__bit7))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position7))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position7 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit7))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit7 test_record_cnt_ex__nested_3__complex__f__last__bit7))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position7))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit7 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position7 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit7))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit7 test_record_cnt_ex__nested_3__complex__g__last__bit7))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position7))

(declare-fun user_eq13 (us_rep5 us_rep5) Bool)

(declare-const dummy13 us_rep5)

(declare-datatypes () ((t3s__ref (t3s__refqtmk (t3s__content us_rep5)))))
(define-fun t3s__ref_t3s__content__projection ((a t3s__ref)) us_rep5 
  (t3s__content a))

(declare-const us_tag13 Int)

(declare-const value__size13 Int)

(declare-const object__size13 Int)

(declare-const alignment13 Int)

;; value__size_axiom
  (assert (<= 0 value__size13))

;; object__size_axiom
  (assert (<= 0 object__size13))

;; alignment_axiom
  (assert (<= 0 alignment13))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position8 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit8))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit8 test_record_cnt_ex__nested_3__complex__b__last__bit8))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position8))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position8 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit8))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit8 test_record_cnt_ex__nested_3__complex__f__last__bit8))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position8))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit8 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position8 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit8))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit8 test_record_cnt_ex__nested_3__complex__g__last__bit8))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position8))

(declare-fun user_eq14 (us_rep5 us_rep5) Bool)

(declare-const dummy14 us_rep5)

(declare-datatypes () ((t4s__ref (t4s__refqtmk (t4s__content us_rep5)))))
(define-fun t4s__ref_t4s__content__projection ((a t4s__ref)) us_rep5 
  (t4s__content a))

(declare-const us_tag14 Int)

(declare-const value__size14 Int)

(declare-const object__size14 Int)

(declare-const alignment14 Int)

;; value__size_axiom
  (assert (<= 0 value__size14))

;; object__size_axiom
  (assert (<= 0 object__size14))

;; alignment_axiom
  (assert (<= 0 alignment14))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position9 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit9))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit9 test_record_cnt_ex__nested_3__complex__b__last__bit9))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position9))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position9 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit9))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit9 test_record_cnt_ex__nested_3__complex__g__last__bit9))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position9))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit9 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position9 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit9))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit9 test_record_cnt_ex__nested_3__complex__f__last__bit9))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position9))

(declare-fun user_eq15 (us_rep5 us_rep5) Bool)

(declare-const dummy15 us_rep5)

(declare-datatypes () ((t5s__ref (t5s__refqtmk (t5s__content us_rep5)))))
(define-fun t5s__ref_t5s__content__projection ((a t5s__ref)) us_rep5 
  (t5s__content a))

(declare-const us_tag15 Int)

(declare-const value__size15 Int)

(declare-const object__size15 Int)

(declare-const alignment15 Int)

;; value__size_axiom
  (assert (<= 0 value__size15))

;; object__size_axiom
  (assert (<= 0 object__size15))

;; alignment_axiom
  (assert (<= 0 alignment15))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position10 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit10))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit10 test_record_cnt_ex__nested_3__complex__b__last__bit10))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position10))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position10 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit10))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit10 test_record_cnt_ex__nested_3__complex__g__last__bit10))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position10))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit10 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position10 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit10))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit10 test_record_cnt_ex__nested_3__complex__f__last__bit10))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position10))

(declare-fun user_eq16 (us_rep5 us_rep5) Bool)

(declare-const dummy16 us_rep5)

(declare-datatypes () ((t6s__ref (t6s__refqtmk (t6s__content us_rep5)))))
(define-fun t6s__ref_t6s__content__projection ((a t6s__ref)) us_rep5 
  (t6s__content a))

(declare-const us_tag16 Int)

(declare-const value__size16 Int)

(declare-const object__size16 Int)

(declare-const alignment16 Int)

;; value__size_axiom
  (assert (<= 0 value__size16))

;; object__size_axiom
  (assert (<= 0 object__size16))

;; alignment_axiom
  (assert (<= 0 alignment16))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position11 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit11))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit11 test_record_cnt_ex__nested_3__complex__b__last__bit11))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position11))

(declare-const test_record_cnt_ex__Tno_fB__g__first__bit1 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__last__bit1 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__position1 Int)

;; test_record_cnt_ex__Tno_fB__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__first__bit1))

;; test_record_cnt_ex__Tno_fB__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tno_fB__g__first__bit1 test_record_cnt_ex__Tno_fB__g__last__bit1))

;; test_record_cnt_ex__Tno_fB__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__position1))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position11 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit11))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit11 test_record_cnt_ex__nested_3__complex__g__last__bit11))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position11))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit11 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position11 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit11))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit11 test_record_cnt_ex__nested_3__complex__f__last__bit11))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position11))

(declare-fun user_eq17 (us_rep6 us_rep6) Bool)

(declare-const dummy17 us_rep6)

(declare-datatypes ()
((tno_fB__ref1 (tno_fB__refqtmk1 (tno_fB__content1 us_rep6)))))
(define-fun tno_fB__ref_tno_fB__content__2__projection ((a tno_fB__ref1)) us_rep6 
  (tno_fB__content1 a))

(define-fun dynamic_invariant3 ((temp___expr_233 us_rep6)
  (temp___is_init_229 Bool) (temp___skip_constant_230 Bool)
  (temp___do_toplevel_231 Bool)
  (temp___do_typ_inv_232 Bool)) Bool (=>
                                     (not (= temp___skip_constant_230 true))
                                     (in_range2 (distinct 0 0)
                                     (us_split_discrs1
                                     (to_base4 temp___expr_233)))))

(define-fun default_initial_assumption6 ((temp___expr_235 us_rep6)
  (temp___skip_top_level_236 Bool)) Bool (and
                                         (= (attr__tag6 temp___expr_235) 
                                         us_tag8)
                                         (= (rec__test_record_cnt_ex__nested_3__complex__b
                                            (us_split_discrs2
                                            temp___expr_235)) (distinct 0 0))))

(declare-const us_tag17 Int)

(declare-const value__size17 Int)

(declare-const object__size17 Int)

(declare-const alignment17 Int)

;; value__size_axiom
  (assert (<= 0 value__size17))

;; object__size_axiom
  (assert (<= 0 object__size17))

;; alignment_axiom
  (assert (<= 0 alignment17))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position12 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit12))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit12 test_record_cnt_ex__nested_3__complex__b__last__bit12))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position12))

(declare-const test_record_cnt_ex__Tf_presentB__h__first__bit1 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__last__bit1 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__position1 Int)

;; test_record_cnt_ex__Tf_presentB__h__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__first__bit1))

;; test_record_cnt_ex__Tf_presentB__h__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tf_presentB__h__first__bit1 test_record_cnt_ex__Tf_presentB__h__last__bit1))

;; test_record_cnt_ex__Tf_presentB__h__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__position1))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position12 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit12))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit12 test_record_cnt_ex__nested_3__complex__g__last__bit12))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position12))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit12 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position12 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit12))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit12 test_record_cnt_ex__nested_3__complex__f__last__bit12))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position12))

(declare-fun user_eq18 (us_rep7 us_rep7) Bool)

(declare-const dummy18 us_rep7)

(declare-datatypes ()
((tf_presentB__ref1 (tf_presentB__refqtmk1 (tf_presentB__content1 us_rep7)))))
(define-fun tf_presentB__ref_tf_presentB__content__2__projection ((a tf_presentB__ref1)) us_rep7 
  (tf_presentB__content1 a))

(define-fun dynamic_invariant4 ((temp___expr_245 us_rep7)
  (temp___is_init_241 Bool) (temp___skip_constant_242 Bool)
  (temp___do_toplevel_243 Bool)
  (temp___do_typ_inv_244 Bool)) Bool (=>
                                     (not (= temp___skip_constant_242 true))
                                     (in_range2 (distinct 1 0)
                                     (us_split_discrs1
                                     (to_base5 temp___expr_245)))))

(define-fun default_initial_assumption7 ((temp___expr_247 us_rep7)
  (temp___skip_top_level_248 Bool)) Bool (and
                                         (= (attr__tag7 temp___expr_247) 
                                         us_tag9)
                                         (= (rec__test_record_cnt_ex__nested_3__complex__b
                                            (us_split_discrs3
                                            temp___expr_247)) (distinct 1 0))))

(declare-const us_tag18 Int)

(declare-const value__size18 Int)

(declare-const object__size18 Int)

(declare-const alignment18 Int)

;; value__size_axiom
  (assert (<= 0 value__size18))

;; object__size_axiom
  (assert (<= 0 object__size18))

;; alignment_axiom
  (assert (<= 0 alignment18))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position13 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit13))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit13 test_record_cnt_ex__nested_3__complex__b__last__bit13))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position13))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position13 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit13))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit13 test_record_cnt_ex__nested_3__complex__g__last__bit13))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position13))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit13 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position13 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit13))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit13 test_record_cnt_ex__nested_3__complex__f__last__bit13))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position13))

(declare-const test_record_cnt_ex__Tno_fB__g__first__bit2 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__last__bit2 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__position2 Int)

;; test_record_cnt_ex__Tno_fB__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__first__bit2))

;; test_record_cnt_ex__Tno_fB__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tno_fB__g__first__bit2 test_record_cnt_ex__Tno_fB__g__last__bit2))

;; test_record_cnt_ex__Tno_fB__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__position2))

(declare-fun user_eq19 (us_rep6 us_rep6) Bool)

(declare-const dummy19 us_rep6)

(declare-datatypes () ((t7s__ref (t7s__refqtmk (t7s__content us_rep6)))))
(define-fun t7s__ref_t7s__content__projection ((a t7s__ref)) us_rep6 
  (t7s__content a))

(declare-const us_tag19 Int)

(declare-const value__size19 Int)

(declare-const object__size19 Int)

(declare-const alignment19 Int)

;; value__size_axiom
  (assert (<= 0 value__size19))

;; object__size_axiom
  (assert (<= 0 object__size19))

;; alignment_axiom
  (assert (<= 0 alignment19))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position14 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit14))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit14 test_record_cnt_ex__nested_3__complex__b__last__bit14))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position14))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position14 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit14))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit14 test_record_cnt_ex__nested_3__complex__g__last__bit14))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position14))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit14 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position14 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit14))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit14 test_record_cnt_ex__nested_3__complex__f__last__bit14))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position14))

(declare-const test_record_cnt_ex__Tno_fB__g__first__bit3 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__last__bit3 Int)

(declare-const test_record_cnt_ex__Tno_fB__g__position3 Int)

;; test_record_cnt_ex__Tno_fB__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__first__bit3))

;; test_record_cnt_ex__Tno_fB__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tno_fB__g__first__bit3 test_record_cnt_ex__Tno_fB__g__last__bit3))

;; test_record_cnt_ex__Tno_fB__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tno_fB__g__position3))

(declare-fun user_eq20 (us_rep6 us_rep6) Bool)

(declare-const dummy20 us_rep6)

(declare-datatypes () ((t8s__ref (t8s__refqtmk (t8s__content us_rep6)))))
(define-fun t8s__ref_t8s__content__projection ((a t8s__ref)) us_rep6 
  (t8s__content a))

(declare-const us_tag20 Int)

(declare-const value__size20 Int)

(declare-const object__size20 Int)

(declare-const alignment20 Int)

;; value__size_axiom
  (assert (<= 0 value__size20))

;; object__size_axiom
  (assert (<= 0 object__size20))

;; alignment_axiom
  (assert (<= 0 alignment20))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position15 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit15))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit15 test_record_cnt_ex__nested_3__complex__b__last__bit15))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position15))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position15 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit15))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit15 test_record_cnt_ex__nested_3__complex__g__last__bit15))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position15))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit15 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position15 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit15))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit15 test_record_cnt_ex__nested_3__complex__f__last__bit15))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position15))

(declare-const test_record_cnt_ex__Tf_presentB__h__first__bit2 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__last__bit2 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__position2 Int)

;; test_record_cnt_ex__Tf_presentB__h__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__first__bit2))

;; test_record_cnt_ex__Tf_presentB__h__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tf_presentB__h__first__bit2 test_record_cnt_ex__Tf_presentB__h__last__bit2))

;; test_record_cnt_ex__Tf_presentB__h__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__position2))

(declare-fun user_eq21 (us_rep7 us_rep7) Bool)

(declare-const dummy21 us_rep7)

(declare-datatypes () ((t9s__ref (t9s__refqtmk (t9s__content us_rep7)))))
(define-fun t9s__ref_t9s__content__projection ((a t9s__ref)) us_rep7 
  (t9s__content a))

(declare-const us_tag21 Int)

(declare-const value__size21 Int)

(declare-const object__size21 Int)

(declare-const alignment21 Int)

;; value__size_axiom
  (assert (<= 0 value__size21))

;; object__size_axiom
  (assert (<= 0 object__size21))

;; alignment_axiom
  (assert (<= 0 alignment21))

(declare-const test_record_cnt_ex__nested_3__complex__b__first__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__last__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__b__position16 Int)

;; test_record_cnt_ex__nested_3__complex__b__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__first__bit16))

;; test_record_cnt_ex__nested_3__complex__b__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__b__first__bit16 test_record_cnt_ex__nested_3__complex__b__last__bit16))

;; test_record_cnt_ex__nested_3__complex__b__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__b__position16))

(declare-const test_record_cnt_ex__nested_3__complex__g__first__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__last__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__g__position16 Int)

;; test_record_cnt_ex__nested_3__complex__g__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__first__bit16))

;; test_record_cnt_ex__nested_3__complex__g__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__g__first__bit16 test_record_cnt_ex__nested_3__complex__g__last__bit16))

;; test_record_cnt_ex__nested_3__complex__g__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__g__position16))

(declare-const test_record_cnt_ex__nested_3__complex__f__first__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__last__bit16 Int)

(declare-const test_record_cnt_ex__nested_3__complex__f__position16 Int)

;; test_record_cnt_ex__nested_3__complex__f__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__first__bit16))

;; test_record_cnt_ex__nested_3__complex__f__last__bit_axiom
  (assert
  (< test_record_cnt_ex__nested_3__complex__f__first__bit16 test_record_cnt_ex__nested_3__complex__f__last__bit16))

;; test_record_cnt_ex__nested_3__complex__f__position_axiom
  (assert (<= 0 test_record_cnt_ex__nested_3__complex__f__position16))

(declare-const test_record_cnt_ex__Tf_presentB__h__first__bit3 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__last__bit3 Int)

(declare-const test_record_cnt_ex__Tf_presentB__h__position3 Int)

;; test_record_cnt_ex__Tf_presentB__h__first__bit_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__first__bit3))

;; test_record_cnt_ex__Tf_presentB__h__last__bit_axiom
  (assert
  (< test_record_cnt_ex__Tf_presentB__h__first__bit3 test_record_cnt_ex__Tf_presentB__h__last__bit3))

;; test_record_cnt_ex__Tf_presentB__h__position_axiom
  (assert (<= 0 test_record_cnt_ex__Tf_presentB__h__position3))

(declare-fun user_eq22 (us_rep7 us_rep7) Bool)

(declare-const dummy22 us_rep7)

(declare-datatypes () ((t10s__ref (t10s__refqtmk (t10s__content us_rep7)))))
(define-fun t10s__ref_t10s__content__projection ((a t10s__ref)) us_rep7 
  (t10s__content a))

(define-fun default_initial_assumption8 ((temp___expr_162 us_rep)
  (temp___skip_top_level_163 Bool)) Bool (= (attr__tag temp___expr_162) 
  us_tag))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 2))

(declare-const rliteral1 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral1) 1))

;; c__def_axiom
  (assert
  (= c (us_repqtmk1 (us_split_fieldsqtmk1 rliteral rliteral1 us_null_ext__)
       us_tag1)))

(declare-const rliteral2 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral2) 7))

;; x__def_axiom
  (assert
  (= x (us_repqtmk5 (us_split_discrsqtmk (distinct 0 0))
       (us_split_fieldsqtmk5 rliteral2 dummy us_null_ext__) us_tag12)))

;; y__def_axiom
  (assert
  (and (id__function_guard (id 7) 7)
  (= y (us_repqtmk5 (us_split_discrsqtmk (distinct 0 0))
       (us_split_fieldsqtmk5 (of_rep (id 7)) dummy us_null_ext__) us_tag13))))

(declare-const rliteral3 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral3) 3))

(declare-const rliteral4 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral4) 6))

;; w__def_axiom
  (assert
  (= w (us_repqtmk5 (us_split_discrsqtmk (distinct 1 0))
       (us_split_fieldsqtmk5 rliteral3 rliteral4 us_null_ext__) us_tag14)))

;; z__def_axiom
  (assert
  (and (id__function_guard (id 6) 6)
  (= z (us_repqtmk5 (us_split_discrsqtmk (distinct 1 0))
       (us_split_fieldsqtmk5 rliteral3 (of_rep (id 6)) us_null_ext__)
       us_tag15))))

(declare-const rliteral5 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral5) 8))

;; x__def_axiom
  (assert
  (= x1 (of_base4
        (to_base4
        (us_repqtmk6 (us_split_discrs1 x)
        (us_split_fieldsqtmk6 rliteral5
        (rec__test_record_cnt_ex__nested_3__complex__g (us_split_fields11 x))
        (rec__test_record_cnt_ex__nested_3__complex__f (us_split_fields11 x))
        us_null_ext__) us_tag18)))))

;; y__def_axiom
  (assert
  (= y1 (of_base4
        (to_base4
        (us_repqtmk6 (us_split_discrs1 y)
        (us_split_fieldsqtmk6 rliteral5
        (rec__test_record_cnt_ex__nested_3__complex__g (us_split_fields11 y))
        (rec__test_record_cnt_ex__nested_3__complex__f (us_split_fields11 y))
        us_null_ext__) us_tag19)))))

;; w__def_axiom
  (assert
  (= w1 (of_base5
        (to_base5
        (us_repqtmk7 (us_split_discrs1 w)
        (us_split_fieldsqtmk7 rliteral5
        (rec__test_record_cnt_ex__nested_3__complex__g (us_split_fields11 w))
        (rec__test_record_cnt_ex__nested_3__complex__f (us_split_fields11 w))
        us_null_ext__) us_tag20)))))

;; z__def_axiom
  (assert
  (= z1 (of_base5
        (to_base5
        (us_repqtmk7 (us_split_discrs1 z)
        (us_split_fieldsqtmk7 rliteral5
        (rec__test_record_cnt_ex__nested_3__complex__g (us_split_fields11 z))
        (rec__test_record_cnt_ex__nested_3__complex__f (us_split_fields11 z))
        us_null_ext__) us_tag21)))))

;; Assume
  (assert true)

;; Assume
  (assert
  (= (us_repqtmk1 (us_split_fieldsqtmk1 rliteral rliteral1 us_null_ext__)
     us_tag1) c))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant1 x true false true true))

(define-fun temp___283 () us_rep5 (us_repqtmk5
                                  (us_split_discrsqtmk (distinct 0 0))
                                  (us_split_fieldsqtmk5 rliteral2 dummy
                                  us_null_ext__) us_tag12))

;; Assume
  (assert
  (= (us_repqtmk5 (us_split_discrs1 temp___283)
     (us_split_fields11 temp___283) us_tag5) x))

;; Assume
  (assert (dynamic_invariant1 y true false true true))

(declare-const o integer)

;; Ensures
  (assert (= (to_rep o) (id 7)))

(define-fun temp___284 () us_rep5 (us_repqtmk5
                                  (us_split_discrsqtmk (distinct 0 0))
                                  (us_split_fieldsqtmk5 o dummy
                                  us_null_ext__) us_tag13))

;; Assume
  (assert
  (= (us_repqtmk5 (us_split_discrs1 temp___284)
     (us_split_fields11 temp___284) us_tag5) y))

;; Assume
  (assert (dynamic_invariant2 w true false true true))

(define-fun temp___285 () us_rep5 (us_repqtmk5
                                  (us_split_discrsqtmk (distinct 1 0))
                                  (us_split_fieldsqtmk5 rliteral3 rliteral4
                                  us_null_ext__) us_tag14))

;; Assume
  (assert
  (= (us_repqtmk5 (us_split_discrs1 temp___285)
     (us_split_fields11 temp___285) us_tag6) w))

;; Assume
  (assert (dynamic_invariant2 z true false true true))

(declare-const o1 integer)

;; Ensures
  (assert (= (to_rep o1) (id 6)))

(define-fun temp___286 () us_rep5 (us_repqtmk5
                                  (us_split_discrsqtmk (distinct 1 0))
                                  (us_split_fieldsqtmk5 rliteral3 o1
                                  us_null_ext__) us_tag15))

;; Assume
  (assert
  (= (us_repqtmk5 (us_split_discrs1 temp___286)
     (us_split_fields11 temp___286) us_tag6) z))

(declare-const x_1__split_fields us_split_fields4)

;; H
  (assert
  (= x_1__split_fields (us_split_fieldsqtmk2
                       (rec__test_record_cnt_ex__nested_1__hidden_1__f2
                       (us_split_fields3 c)) rliteral3
                       (rec__test_record_cnt_ex__root__f11
                       (us_split_fields3 c)) us_null_ext__)))

;; Assume
  (assert (= x_1__attr__tag us_tag2))

;; Assume
  (assert true)

(define-fun o2 () Int (id 3))

;; H
  (assert (id__function_guard o2 3))

;; H
  (assert (dynamic_invariant o2 true false true true))

(declare-const o3 integer)

;; Ensures
  (assert (= (to_rep o3) o2))

(declare-const y_1__split_fields us_split_fields4)

;; H
  (assert
  (= y_1__split_fields (us_split_fieldsqtmk2
                       (rec__test_record_cnt_ex__nested_1__hidden_1__f2
                       (us_split_fields3 c)) o3
                       (rec__test_record_cnt_ex__root__f11
                       (us_split_fields3 c)) us_null_ext__)))

;; Assume
  (assert (= y_1__attr__tag us_tag2))

;; Assume
  (assert true)

(assert
;; defqtvc
 ;; File "test_record_cnt_ex.ads", line 1, characters 0-0
  (not
  (= (bool_eq2 (us_repqtmk2 x_1__split_fields x_1__attr__tag)
     (us_repqtmk2 y_1__split_fields y_1__attr__tag)) true)))
(check-sat)
