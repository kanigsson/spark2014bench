(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_156 Int))
                           (=>
                           (and (<= a__first temp___idx_156)
                           (<= temp___idx_156 a__last))
                           (= (to_rep (select a temp___idx_156)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_156)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_156 Int))
  (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last))
  (= (to_rep (select a temp___idx_156)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_156)))))))))))

(declare-const a1__first integer)

(declare-const a1__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ()
((tarray1D1__ref (tarray1D1__refqtmk (tarray1D1__content integer)))))
(define-fun tarray1D1__ref_tarray1D1__content__projection ((a tarray1D1__ref)) integer 
  (tarray1D1__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x1 us_t)
  (y us_t)) Bool (bool_eq (elts x1) (to_rep (first (rt x1)))
                 (to_rep (last (rt x1))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-const dummy2 us_t)

(declare-datatypes ()
((tarray1B__ref (tarray1B__refqtmk (tarray1B__content us_t)))))
(define-fun tarray1B__ref_tarray1B__content__projection ((a tarray1B__ref)) us_t 
  (tarray1B__content a))

(declare-datatypes ()
((array1__ref (array1__refqtmk (array1__content us_t)))))
(define-fun array1__ref_array1__content__projection ((a array1__ref)) us_t 
  (array1__content a))

(declare-datatypes ()
((map__ref1 (map__refqtmk1 (map__content1 (Array Int us_t))))))
(declare-fun slide1 ((Array Int us_t) Int Int) (Array Int us_t))

;; slide_eq
  (assert
  (forall ((a (Array Int us_t)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_t)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq2 ((a (Array Int us_t)) (a__first Int) (a__last Int)
  (b (Array Int us_t)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_157 Int))
                           (=>
                           (and (<= a__first temp___idx_157)
                           (<= temp___idx_157 a__last))
                           (= (bool_eq1 (select a temp___idx_157)
                              (select b (+ (- b__first a__first) temp___idx_157))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_t)) (b (Array Int us_t)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_157 Int))
  (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last))
  (= (bool_eq1 (select a temp___idx_157)
     (select b (+ (- b__first a__first) temp___idx_157))) true))))))))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort tarray2D1 0)

(declare-fun tarray2D1qtint (tarray2D1) Int)

;; tarray2D1'axiom
  (assert
  (forall ((i tarray2D1))
  (and (<= 1 (tarray2D1qtint i)) (<= (tarray2D1qtint i) 1))))

(define-fun in_range1 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq3 (tarray2D1 tarray2D1) Bool)

(declare-const dummy3 tarray2D1)

(declare-datatypes ()
((tarray2D1__ref (tarray2D1__refqtmk (tarray2D1__content tarray2D1)))))
(define-fun tarray2D1__ref_tarray2D1__content__projection ((a tarray2D1__ref)) tarray2D1 
  (tarray2D1__content a))

(define-fun dynamic_invariant1 ((temp___expr_269 (Array Int us_t))
  (temp___is_init_265 Bool) (temp___skip_constant_266 Bool)
  (temp___do_toplevel_267 Bool)
  (temp___do_typ_inv_268 Bool)) Bool (forall ((temp___270 Int))
                                     (=>
                                     (and (<= 1 temp___270)
                                     (<= temp___270 1))
                                     (and (dynamic_property1 1 x
                                     (first1
                                     (select temp___expr_269 temp___270))
                                     (last1
                                     (select temp___expr_269 temp___270)))
                                     (and
                                     (= (first1
                                        (select temp___expr_269 temp___270)) 1)
                                     (= (last1
                                        (select temp___expr_269 temp___270)) 
                                     x))))))

(define-fun default_initial_assumption ((temp___expr_272 (Array Int us_t))
  (temp___skip_top_level_273 Bool)) Bool (forall ((temp___274 Int))
                                         (=>
                                         (and (<= 1 temp___274)
                                         (<= temp___274 1))
                                         (and
                                         (= (first1
                                            (select temp___expr_272 temp___274)) 1)
                                         (= (last1
                                            (select temp___expr_272 temp___274)) 
                                         x)))))

(declare-datatypes () ((t23b__ref (t23b__refqtmk (t23b__content us_t)))))
(define-fun t23b__ref_t23b__content__projection ((a t23b__ref)) us_t 
  (t23b__content a))

(declare-fun alignment_attribute__q__a1__aggregate_def (Int Int Int) us_t)

(declare-fun alignment_attribute__q__a2__aggregate_def (us_t) (Array Int us_t))

(define-fun dynamic_invariant2 ((temp___expr_259 us_t)
  (temp___is_init_255 Bool) (temp___skip_constant_256 Bool)
  (temp___do_toplevel_257 Bool)
  (temp___do_typ_inv_258 Bool)) Bool (=>
                                     (not (= temp___skip_constant_256 true))
                                     (and (dynamic_property1 1 x
                                     (first1 temp___expr_259)
                                     (last1 temp___expr_259))
                                     (and (= (first1 temp___expr_259) 1)
                                     (= (last1 temp___expr_259) x)))))

(define-fun default_initial_assumption1 ((temp___expr_261 us_t)
  (temp___skip_top_level_262 Bool)) Bool (and (= (first1 temp___expr_261) 1)
                                         (= (last1 temp___expr_261) x)))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 1))

;; def_axiom
  (assert
  (forall ((temp___308 Int) (temp___309 Int) (temp___310 Int))
  (let ((temp___307 (alignment_attribute__q__a1__aggregate_def temp___308
                    temp___309 temp___310)))
  (=> (dynamic_invariant temp___308 true true true true)
  (and
  (=> (dynamic_property1 1 x temp___309 temp___310)
  (and (= (first1 temp___307) temp___309) (= (last1 temp___307) temp___310)))
  (forall ((temp___311 Int))
  (= (select (to_array temp___307) temp___311) rliteral)))))))

;; def_axiom
  (assert
  (forall ((temp___316 us_t))
  (=> (dynamic_invariant2 temp___316 true true true true)
  (forall ((temp___317 Int))
  (= (select (alignment_attribute__q__a2__aggregate_def temp___316) temp___317) temp___316)))))

;; Assume
  (assert (dynamic_invariant x true false true true))

(define-fun temp___312 () us_t (alignment_attribute__q__a1__aggregate_def 1 1
                               x))

;; Assume
  (assert (= (first1 temp___312) 1))

;; Assume
  (assert (= (last1 temp___312) x))

;; Assert
  (assert
  (ite (<= (first1 temp___312) (last1 temp___312))
  (and (<= 1 x) (= (- (last1 temp___312) (first1 temp___312)) (- x 1)))
  (< x 1)))

(define-fun alignment_attribute__q__a1__assume () us_t (of_array
                                                       (to_array temp___312)
                                                       (first1 temp___312)
                                                       (last1 temp___312)))

(declare-const a1 (Array Int integer))

;; H
  (assert (= a1 (to_array alignment_attribute__q__a1__assume)))

;; Assume
  (assert (= (to_rep a1__first) (first1 alignment_attribute__q__a1__assume)))

;; Assume
  (assert (= (to_rep a1__last) (last1 alignment_attribute__q__a1__assume)))

;; Assume
  (assert
  (and (dynamic_property1 1 x (to_rep a1__first) (to_rep a1__last))
  (and (= (to_rep a1__first) 1) (= (to_rep a1__last) x))))

(declare-const o Int)

;; Ensures
  (assert (= (to_rep a1__last) o))

(declare-const o1 Int)

;; Ensures
  (assert (= (to_rep a1__first) o1))

(declare-const a2 (Array Int us_t))

;; H
  (assert
  (= a2 (alignment_attribute__q__a2__aggregate_def (of_array a1 o1 o))))

;; Assume
  (assert (dynamic_invariant1 a2 true false true true))

(assert
;; defqtvc
 ;; File "alignment_attribute.adb", line 47, characters 0-0
  (not false))
(check-sat)

(exit)
