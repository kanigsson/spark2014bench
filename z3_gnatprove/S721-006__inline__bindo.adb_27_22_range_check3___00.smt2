(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const dummy1 (Array Int natural))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq1 ((Array Int natural) (Array Int natural)) Bool)

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__bindo__library_graph_attributes__counts (Array Int natural))))))
(define-fun us_split_fields_rec__bindo__library_graph_attributes__counts__projection ((a us_split_fields)) (Array Int natural) 
  (rec__bindo__library_graph_attributes__counts a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep)
  (b us_rep)) Bool (ite (= (bool_eq
                           (rec__bindo__library_graph_attributes__counts
                           (us_split_fields1 a)) 0 0
                           (rec__bindo__library_graph_attributes__counts
                           (us_split_fields1 b)) 0 0) true)
                   true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const bindo__library_graph_attributes__counts__first__bit Int)

(declare-const bindo__library_graph_attributes__counts__last__bit Int)

(declare-const bindo__library_graph_attributes__counts__position Int)

;; bindo__library_graph_attributes__counts__first__bit_axiom
  (assert (<= 0 bindo__library_graph_attributes__counts__first__bit))

;; bindo__library_graph_attributes__counts__last__bit_axiom
  (assert
  (< bindo__library_graph_attributes__counts__first__bit bindo__library_graph_attributes__counts__last__bit))

;; bindo__library_graph_attributes__counts__position_axiom
  (assert (<= 0 bindo__library_graph_attributes__counts__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ()
((library_graph_attributes__ref
 (library_graph_attributes__refqtmk
 (library_graph_attributes__content us_rep)))))
(define-fun library_graph_attributes__ref_library_graph_attributes__content__projection ((a library_graph_attributes__ref)) us_rep 
  (library_graph_attributes__content a))

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Bool)

(declare-datatypes ()
((us_rep1
 (us_repqtmk1
 (rec__bindo__library_graph__is_null_pointer Bool)(rec__bindo__library_graph__pointer_address Int)(rec__bindo__library_graph__pointer_value us_rep)))))
(define-fun us_rep_rec__bindo__library_graph__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__bindo__library_graph__is_null_pointer a))

(define-fun us_rep_rec__bindo__library_graph__pointer_address__projection ((a us_rep1)) Int 
  (rec__bindo__library_graph__pointer_address a))

(define-fun us_rep_rec__bindo__library_graph__pointer_value__projection ((a us_rep1)) us_rep 
  (rec__bindo__library_graph__pointer_value a))

(declare-datatypes ()
((us_rep__ref (us_rep__refqtmk (us_rep__content us_rep1)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep1 
  (us_rep__content a))

(define-fun bool_eq2 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__bindo__library_graph__is_null_pointer a) 
                         (rec__bindo__library_graph__is_null_pointer b))
                         (=>
                         (not
                         (= (rec__bindo__library_graph__is_null_pointer a) true))
                         (and
                         (= (rec__bindo__library_graph__pointer_address a) 
                         (rec__bindo__library_graph__pointer_address b))
                         (= (rec__bindo__library_graph__pointer_value a) 
                         (rec__bindo__library_graph__pointer_value b)))))
                    true false))

(define-fun rec__bindo__library_graph__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__bindo__library_graph__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep1)

;; __null_pointer__def_axiom
  (assert
  (= (rec__bindo__library_graph__is_null_pointer us_null_pointer) true))

(declare-const dummy3 us_rep1)

(declare-datatypes ()
((library_graph__ref
 (library_graph__refqtmk (library_graph__content us_rep1)))))
(define-fun library_graph__ref_library_graph__content__projection ((a library_graph__ref)) us_rep1 
  (library_graph__content a))

(declare-const g__pointer_address Int)

(declare-const g__is_null_pointer Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const kind Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort library_graph_edge_kind 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 0)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq3 (library_graph_edge_kind library_graph_edge_kind) Bool)

(declare-const dummy4 library_graph_edge_kind)

(declare-datatypes ()
((library_graph_edge_kind__ref
 (library_graph_edge_kind__refqtmk
 (library_graph_edge_kind__content library_graph_edge_kind)))))
(define-fun library_graph_edge_kind__ref_library_graph_edge_kind__content__projection ((a library_graph_edge_kind__ref)) library_graph_edge_kind 
  (library_graph_edge_kind__content a))

(define-fun dynamic_invariant ((temp___expr_167 Int)
  (temp___is_init_163 Bool) (temp___skip_constant_164 Bool)
  (temp___do_toplevel_165 Bool)
  (temp___do_typ_inv_166 Bool)) Bool (=>
                                     (or (= temp___is_init_163 true)
                                     (<= 0 0)) (in_range2 temp___expr_167)))

(define-fun default_initial_assumption ((temp___expr_197 us_rep1)
  (temp___skip_top_level_198 Bool)) Bool (= (rec__bindo__library_graph__is_null_pointer
                                            temp___expr_197) true))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range
                                    temp___expr_39)))

(declare-fun temp_____aggregate_def_188 (Int) (Array Int natural))

(define-fun default_initial_assumption1 ((temp___expr_186 us_rep)
  (temp___skip_top_level_187 Bool)) Bool (= (rec__bindo__library_graph_attributes__counts
                                            (us_split_fields1
                                            temp___expr_186)) (temp_____aggregate_def_188
                                                              0)))

(declare-const rliteral natural)

;; rliteral_axiom
  (assert (= (naturalqtint rliteral) 0))

;; def_axiom
  (assert
  (forall ((temp___190 Int))
  (=> (dynamic_invariant1 temp___190 true true true true)
  (forall ((temp___191 Int))
  (= (select (temp_____aggregate_def_188 temp___190) temp___191) rliteral)))))

(declare-const g__pointer_value (Array Int natural))

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant kind true false true true))

(declare-const o Int)

;; Ensures
  (assert (= (to_rep (select g__pointer_value kind)) o))

(assert
;; defqtvc
 ;; File "bindo.adb", line 20, characters 0-0
  (not (in_range (- o 1))))
(check-sat)
