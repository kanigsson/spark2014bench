;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ()
((natural__ref (natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk
 (rec__private_with_attributes__root_private_tagged us_main_type)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__root_private_tagged__projection ((a us_split_fields)) us_main_type 
  (rec__private_with_attributes__root_private_tagged a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (us_main_eq
                           (rec__private_with_attributes__root_private_tagged
                           (us_split_fields1 a))
                           (rec__private_with_attributes__root_private_tagged
                           (us_split_fields1 b))) true)
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ()
((root_private_tagged__ref
 (root_private_tagged__refqtmk (root_private_tagged__content us_rep)))))
(define-fun root_private_tagged__ref_root_private_tagged__content__projection ((a root_private_tagged__ref)) us_rep 
  (root_private_tagged__content a))

(declare-const r__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption ((temp___expr_189 us_rep)
  (temp___skip_top_level_190 Bool)) Bool (= (attr__tag temp___expr_189) 
  us_tag))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-datatypes ()
((us_split_fields2
 (us_split_fieldsqtmk1
 (rec__private_with_attributes__root_private_tagged1 us_main_type)(rec__private_with_attributes__child_private_tagged us_main_type1)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__root_private_tagged__2__projection ((a us_split_fields2)) us_main_type 
  (rec__private_with_attributes__root_private_tagged1 a))

(define-fun us_split_fields_rec__private_with_attributes__child_private_tagged__projection ((a us_split_fields2)) us_main_type1 
  (rec__private_with_attributes__child_private_tagged a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (us_main_type1 us_private) us_private)

(declare-fun extract__private_with_attributes__child_private_tagged (us_private) us_main_type1)

;; extract__private_with_attributes__child_private_tagged__conv
  (assert
  (forall ((private_with_attributes__child_private_tagged us_main_type1))
  (forall ((rec__ext__2 us_private))
  (= (extract__private_with_attributes__child_private_tagged
     (hide_ext__ private_with_attributes__child_private_tagged rec__ext__2)) private_with_attributes__child_private_tagged))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__private_with_attributes__root_private_tagged1
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__private_with_attributes__child_private_tagged
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                         (rec__private_with_attributes__root_private_tagged
                                         (us_split_fields1 r))
                                         (extract__private_with_attributes__child_private_tagged
                                         (rec__ext__ (us_split_fields1 r)))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (us_main_eq
                            (rec__private_with_attributes__root_private_tagged1
                            (us_split_fields3 a))
                            (rec__private_with_attributes__root_private_tagged1
                            (us_split_fields3 b))) true)
                         (= (us_main_eq1
                            (rec__private_with_attributes__child_private_tagged
                            (us_split_fields3 a))
                            (rec__private_with_attributes__child_private_tagged
                            (us_split_fields3 b))) true))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-const dummy2 us_rep1)

(declare-datatypes ()
((child_private_tagged__ref
 (child_private_tagged__refqtmk (child_private_tagged__content us_rep1)))))
(define-fun child_private_tagged__ref_child_private_tagged__content__projection ((a child_private_tagged__ref)) us_rep1 
  (child_private_tagged__content a))

(declare-const f__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun default_initial_assumption1 ((temp___expr_196 us_rep1)
  (temp___skip_top_level_197 Bool)) Bool (= (attr__tag1 temp___expr_196) 
  us_tag1))

(declare-datatypes ()
((us_split_fields4
 (us_split_fieldsqtmk2
 (rec__private_with_attributes__root_private_tagged2 us_main_type)(rec__private_with_attributes__child_private_tagged1 us_main_type1)(rec__public_derives_private__grand_child_private_tagged__f2 natural)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__root_private_tagged__3__projection ((a us_split_fields4)) us_main_type 
  (rec__private_with_attributes__root_private_tagged2 a))

(define-fun us_split_fields_rec__private_with_attributes__child_private_tagged__2__projection ((a us_split_fields4)) us_main_type1 
  (rec__private_with_attributes__child_private_tagged1 a))

(define-fun us_split_fields_rec__public_derives_private__grand_child_private_tagged__f2__projection ((a us_split_fields4)) natural 
  (rec__public_derives_private__grand_child_private_tagged__f2 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__4__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (us_main_type1 natural us_private) us_private)

;; extract__private_with_attributes__child_private_tagged__conv
  (assert
  (forall ((private_with_attributes__child_private_tagged us_main_type1))
  (forall ((public_derives_private__grand_child_private_tagged__f2 natural))
  (forall ((rec__ext__3 us_private))
  (= (extract__private_with_attributes__child_private_tagged
     (hide_ext__1 private_with_attributes__child_private_tagged
     public_derives_private__grand_child_private_tagged__f2 rec__ext__3)) private_with_attributes__child_private_tagged)))))

(declare-fun extract__public_derives_private__grand_child_private_tagged__f2 (us_private) natural)

;; extract__public_derives_private__grand_child_private_tagged__f2__conv
  (assert
  (forall ((private_with_attributes__child_private_tagged us_main_type1))
  (forall ((public_derives_private__grand_child_private_tagged__f2 natural))
  (forall ((rec__ext__3 us_private))
  (= (extract__public_derives_private__grand_child_private_tagged__f2
     (hide_ext__1 private_with_attributes__child_private_tagged
     public_derives_private__grand_child_private_tagged__f2 rec__ext__3)) public_derives_private__grand_child_private_tagged__f2)))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__private_with_attributes__root_private_tagged2
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__private_with_attributes__child_private_tagged1
                                          (us_split_fields5 a))
                                          (rec__public_derives_private__grand_child_private_tagged__f2
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2
                                          (us_split_fieldsqtmk2
                                          (rec__private_with_attributes__root_private_tagged
                                          (us_split_fields1 r))
                                          (extract__private_with_attributes__child_private_tagged
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__public_derives_private__grand_child_private_tagged__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (us_main_eq
                            (rec__private_with_attributes__root_private_tagged2
                            (us_split_fields5 a))
                            (rec__private_with_attributes__root_private_tagged2
                            (us_split_fields5 b))) true)
                         (= (us_main_eq1
                            (rec__private_with_attributes__child_private_tagged1
                            (us_split_fields5 a))
                            (rec__private_with_attributes__child_private_tagged1
                            (us_split_fields5 b))) true))
                         (= (to_rep
                            (rec__public_derives_private__grand_child_private_tagged__f2
                            (us_split_fields5 a))) (to_rep
                                                   (rec__public_derives_private__grand_child_private_tagged__f2
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const public_derives_private__grand_child_private_tagged__f2__first__bit Int)

(declare-const public_derives_private__grand_child_private_tagged__f2__last__bit Int)

(declare-const public_derives_private__grand_child_private_tagged__f2__position Int)

;; public_derives_private__grand_child_private_tagged__f2__first__bit_axiom
  (assert
  (<= 0 public_derives_private__grand_child_private_tagged__f2__first__bit))

;; public_derives_private__grand_child_private_tagged__f2__last__bit_axiom
  (assert
  (< public_derives_private__grand_child_private_tagged__f2__first__bit 
  public_derives_private__grand_child_private_tagged__f2__last__bit))

;; public_derives_private__grand_child_private_tagged__f2__position_axiom
  (assert
  (<= 0 public_derives_private__grand_child_private_tagged__f2__position))

(declare-fun user_eq3 (us_rep2 us_rep2) Bool)

(declare-const dummy3 us_rep2)

(declare-datatypes ()
((grand_child_private_tagged__ref
 (grand_child_private_tagged__refqtmk
 (grand_child_private_tagged__content us_rep2)))))
(define-fun grand_child_private_tagged__ref_grand_child_private_tagged__content__projection ((a grand_child_private_tagged__ref)) us_rep2 
  (grand_child_private_tagged__content a))

(declare-const g__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun default_initial_assumption2 ((temp___expr_203 us_rep2)
  (temp___skip_top_level_204 Bool)) Bool (and
                                         (= (attr__tag2 temp___expr_203) 
                                         us_tag2)
                                         (= (to_rep
                                            (rec__public_derives_private__grand_child_private_tagged__f2
                                            (us_split_fields5
                                            temp___expr_203))) 0)))

(declare-datatypes ()
((us_split_fields6
 (us_split_fieldsqtmk3
 (rec__private_with_attributes__root_private_tagged3 us_main_type)(rec__private_with_attributes__child_private_tagged2 us_main_type1)(rec__public_derives_private__private_grand_child_private_tagged__f2 natural)(rec__ext__3 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__root_private_tagged__4__projection ((a us_split_fields6)) us_main_type 
  (rec__private_with_attributes__root_private_tagged3 a))

(define-fun us_split_fields_rec__private_with_attributes__child_private_tagged__3__projection ((a us_split_fields6)) us_main_type1 
  (rec__private_with_attributes__child_private_tagged2 a))

(define-fun us_split_fields_rec__public_derives_private__private_grand_child_private_tagged__f2__projection ((a us_split_fields6)) natural 
  (rec__public_derives_private__private_grand_child_private_tagged__f2 a))

(define-fun us_split_fields_rec__ext____4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ()
((us_split_fields__ref3
 (us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3 (us_repqtmk3 (us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun us_rep_attr__tag__4__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (us_main_type1 natural us_private) us_private)

;; extract__private_with_attributes__child_private_tagged__conv
  (assert
  (forall ((private_with_attributes__child_private_tagged us_main_type1))
  (forall
  ((public_derives_private__private_grand_child_private_tagged__f2 natural))
  (forall ((rec__ext__4 us_private))
  (= (extract__private_with_attributes__child_private_tagged
     (hide_ext__2 private_with_attributes__child_private_tagged
     public_derives_private__private_grand_child_private_tagged__f2
     rec__ext__4)) private_with_attributes__child_private_tagged)))))

(declare-fun extract__public_derives_private__private_grand_child_private_tagged__f2 (us_private) natural)

;; extract__public_derives_private__private_grand_child_private_tagged__f2__conv
  (assert
  (forall ((private_with_attributes__child_private_tagged us_main_type1))
  (forall
  ((public_derives_private__private_grand_child_private_tagged__f2 natural))
  (forall ((rec__ext__4 us_private))
  (= (extract__public_derives_private__private_grand_child_private_tagged__f2
     (hide_ext__2 private_with_attributes__child_private_tagged
     public_derives_private__private_grand_child_private_tagged__f2
     rec__ext__4)) public_derives_private__private_grand_child_private_tagged__f2)))))

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__private_with_attributes__root_private_tagged3
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__private_with_attributes__child_private_tagged2
                                          (us_split_fields7 a))
                                          (rec__public_derives_private__private_grand_child_private_tagged__f2
                                          (us_split_fields7 a))
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (us_repqtmk3
                                          (us_split_fieldsqtmk3
                                          (rec__private_with_attributes__root_private_tagged
                                          (us_split_fields1 r))
                                          (extract__private_with_attributes__child_private_tagged
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__public_derives_private__private_grand_child_private_tagged__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq3 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (us_main_eq
                            (rec__private_with_attributes__root_private_tagged3
                            (us_split_fields7 a))
                            (rec__private_with_attributes__root_private_tagged3
                            (us_split_fields7 b))) true)
                         (= (us_main_eq1
                            (rec__private_with_attributes__child_private_tagged2
                            (us_split_fields7 a))
                            (rec__private_with_attributes__child_private_tagged2
                            (us_split_fields7 b))) true))
                         (= (to_rep
                            (rec__public_derives_private__private_grand_child_private_tagged__f2
                            (us_split_fields7 a))) (to_rep
                                                   (rec__public_derives_private__private_grand_child_private_tagged__f2
                                                   (us_split_fields7 b)))))
                    true false))

(declare-const us_tag3 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const public_derives_private__private_grand_child_private_tagged__f2__first__bit Int)

(declare-const public_derives_private__private_grand_child_private_tagged__f2__last__bit Int)

(declare-const public_derives_private__private_grand_child_private_tagged__f2__position Int)

;; public_derives_private__private_grand_child_private_tagged__f2__first__bit_axiom
  (assert
  (<= 0 public_derives_private__private_grand_child_private_tagged__f2__first__bit))

;; public_derives_private__private_grand_child_private_tagged__f2__last__bit_axiom
  (assert
  (< public_derives_private__private_grand_child_private_tagged__f2__first__bit 
  public_derives_private__private_grand_child_private_tagged__f2__last__bit))

;; public_derives_private__private_grand_child_private_tagged__f2__position_axiom
  (assert
  (<= 0 public_derives_private__private_grand_child_private_tagged__f2__position))

(declare-fun user_eq4 (us_rep3 us_rep3) Bool)

(declare-const dummy4 us_rep3)

(declare-datatypes ()
((private_grand_child_private_tagged__ref
 (private_grand_child_private_tagged__refqtmk
 (private_grand_child_private_tagged__content us_rep3)))))
(define-fun private_grand_child_private_tagged__ref_private_grand_child_private_tagged__content__projection ((a private_grand_child_private_tagged__ref)) us_rep3 
  (private_grand_child_private_tagged__content a))

(declare-const p__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun default_initial_assumption3 ((temp___expr_210 us_rep3)
  (temp___skip_top_level_211 Bool)) Bool (and
                                         (= (attr__tag3 temp___expr_210) 
                                         us_tag3)
                                         (= (to_rep
                                            (rec__public_derives_private__private_grand_child_private_tagged__f2
                                            (us_split_fields7
                                            temp___expr_210))) 0)))

(declare-const rc__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const fc__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-datatypes ()
((us_split_fields8
 (us_split_fieldsqtmk4
 (rec__private_with_attributes__root__f natural)(rec__ext__4 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__root__f__projection ((a us_split_fields8)) natural 
  (rec__private_with_attributes__root__f a))

(define-fun us_split_fields_rec__ext____5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ()
((us_split_fields__ref4
 (us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ()
((us_rep4 (us_repqtmk4 (us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep___split_fields__6__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun us_rep_attr__tag__5__projection ((a us_rep4)) Int (attr__tag4 a))

(define-fun bool_eq4 ((a us_rep4)
  (b us_rep4)) Bool (ite (= (to_rep
                            (rec__private_with_attributes__root__f
                            (us_split_fields9 a))) (to_rep
                                                   (rec__private_with_attributes__root__f
                                                   (us_split_fields9 b))))
                    true false))

(declare-fun us_dispatch_eq1 (us_rep4 us_rep4) Bool)

(declare-const us_tag4 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const private_with_attributes__root__f__first__bit Int)

(declare-const private_with_attributes__root__f__last__bit Int)

(declare-const private_with_attributes__root__f__position Int)

;; private_with_attributes__root__f__first__bit_axiom
  (assert (<= 0 private_with_attributes__root__f__first__bit))

;; private_with_attributes__root__f__last__bit_axiom
  (assert
  (< private_with_attributes__root__f__first__bit private_with_attributes__root__f__last__bit))

;; private_with_attributes__root__f__position_axiom
  (assert (<= 0 private_with_attributes__root__f__position))

(declare-fun user_eq5 (us_rep4 us_rep4) Bool)

(declare-const dummy5 us_rep4)

(declare-datatypes () ((root__ref (root__refqtmk (root__content us_rep4)))))
(define-fun root__ref_root__content__projection ((a root__ref)) us_rep4 
  (root__content a))

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-datatypes ()
((us_split_fields10
 (us_split_fieldsqtmk5
 (rec__private_with_attributes__child us_main_type2)(rec__private_with_attributes__root__f1 natural)(rec__ext__5 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__child__projection ((a us_split_fields10)) us_main_type2 
  (rec__private_with_attributes__child a))

(define-fun us_split_fields_rec__private_with_attributes__root__f__2__projection ((a us_split_fields10)) natural 
  (rec__private_with_attributes__root__f1 a))

(define-fun us_split_fields_rec__ext____6__projection ((a us_split_fields10)) us_private 
  (rec__ext__5 a))

(declare-datatypes ()
((us_split_fields__ref5
 (us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__7__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ()
((us_rep5
 (us_repqtmk5 (us_split_fields11 us_split_fields10)(attr__tag5 Int)))))
(define-fun us_rep___split_fields__7__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun us_rep_attr__tag__6__projection ((a us_rep5)) Int (attr__tag5 a))

(declare-fun hide_ext__3 (us_main_type2 us_private) us_private)

(declare-fun extract__private_with_attributes__child (us_private) us_main_type2)

;; extract__private_with_attributes__child__conv
  (assert
  (forall ((private_with_attributes__child us_main_type2))
  (forall ((rec__ext__6 us_private))
  (= (extract__private_with_attributes__child
     (hide_ext__3 private_with_attributes__child rec__ext__6)) private_with_attributes__child))))

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep5)) us_rep4 (us_repqtmk4
                                           (us_split_fieldsqtmk4
                                           (rec__private_with_attributes__root__f1
                                           (us_split_fields11 a))
                                           (hide_ext__3
                                           (rec__private_with_attributes__child
                                           (us_split_fields11 a))
                                           (rec__ext__5
                                           (us_split_fields11 a))))
                                           (attr__tag5 a)))

(define-fun of_base3 ((r us_rep4)) us_rep5 (us_repqtmk5
                                           (us_split_fieldsqtmk5
                                           (extract__private_with_attributes__child
                                           (rec__ext__4 (us_split_fields9 r)))
                                           (rec__private_with_attributes__root__f
                                           (us_split_fields9 r))
                                           (extract__ext__3
                                           (rec__ext__4 (us_split_fields9 r))))
                                           (attr__tag4 r)))

(define-fun bool_eq5 ((a us_rep5)
  (b us_rep5)) Bool (ite (and
                         (= (us_main_eq2
                            (rec__private_with_attributes__child
                            (us_split_fields11 a))
                            (rec__private_with_attributes__child
                            (us_split_fields11 b))) true)
                         (= (to_rep
                            (rec__private_with_attributes__root__f1
                            (us_split_fields11 a))) (to_rep
                                                    (rec__private_with_attributes__root__f1
                                                    (us_split_fields11 b)))))
                    true false))

(declare-const us_tag5 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const private_with_attributes__root__f__first__bit1 Int)

(declare-const private_with_attributes__root__f__last__bit1 Int)

(declare-const private_with_attributes__root__f__position1 Int)

;; private_with_attributes__root__f__first__bit_axiom
  (assert (<= 0 private_with_attributes__root__f__first__bit1))

;; private_with_attributes__root__f__last__bit_axiom
  (assert
  (< private_with_attributes__root__f__first__bit1 private_with_attributes__root__f__last__bit1))

;; private_with_attributes__root__f__position_axiom
  (assert (<= 0 private_with_attributes__root__f__position1))

(declare-fun user_eq6 (us_rep5 us_rep5) Bool)

(declare-const dummy6 us_rep5)

(declare-datatypes ()
((child__ref (child__refqtmk (child__content us_rep5)))))
(define-fun child__ref_child__content__projection ((a child__ref)) us_rep5 
  (child__content a))

(declare-const c1 us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-datatypes ()
((us_split_fields12
 (us_split_fieldsqtmk6
 (rec__private_with_attributes__child1 us_main_type2)(rec__public_derives_private__grand_child__f2 natural)(rec__private_with_attributes__root__f2 natural)(rec__ext__6 us_private)))))
(define-fun us_split_fields_rec__private_with_attributes__child__2__projection ((a us_split_fields12)) us_main_type2 
  (rec__private_with_attributes__child1 a))

(define-fun us_split_fields_rec__public_derives_private__grand_child__f2__projection ((a us_split_fields12)) natural 
  (rec__public_derives_private__grand_child__f2 a))

(define-fun us_split_fields_rec__private_with_attributes__root__f__3__projection ((a us_split_fields12)) natural 
  (rec__private_with_attributes__root__f2 a))

(define-fun us_split_fields_rec__ext____7__projection ((a us_split_fields12)) us_private 
  (rec__ext__6 a))

(declare-datatypes ()
((us_split_fields__ref6
 (us_split_fields__refqtmk6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___split_fields__content__8__projection ((a us_split_fields__ref6)) us_split_fields12 
  (us_split_fields__content6 a))

(declare-datatypes ()
((us_rep6
 (us_repqtmk6 (us_split_fields13 us_split_fields12)(attr__tag6 Int)))))
(define-fun us_rep___split_fields__8__projection ((a us_rep6)) us_split_fields12 
  (us_split_fields13 a))

(define-fun us_rep_attr__tag__7__projection ((a us_rep6)) Int (attr__tag6 a))

(declare-fun hide_ext__4 (us_main_type2 natural us_private) us_private)

;; extract__private_with_attributes__child__conv
  (assert
  (forall ((private_with_attributes__child us_main_type2))
  (forall ((public_derives_private__grand_child__f2 natural))
  (forall ((rec__ext__7 us_private))
  (= (extract__private_with_attributes__child
     (hide_ext__4 private_with_attributes__child
     public_derives_private__grand_child__f2 rec__ext__7)) private_with_attributes__child)))))

(declare-fun extract__public_derives_private__grand_child__f2 (us_private) natural)

;; extract__public_derives_private__grand_child__f2__conv
  (assert
  (forall ((private_with_attributes__child us_main_type2))
  (forall ((public_derives_private__grand_child__f2 natural))
  (forall ((rec__ext__7 us_private))
  (= (extract__public_derives_private__grand_child__f2
     (hide_ext__4 private_with_attributes__child
     public_derives_private__grand_child__f2 rec__ext__7)) public_derives_private__grand_child__f2)))))

(declare-fun extract__ext__4 (us_private) us_private)

(define-fun to_base4 ((a us_rep6)) us_rep4 (us_repqtmk4
                                           (us_split_fieldsqtmk4
                                           (rec__private_with_attributes__root__f2
                                           (us_split_fields13 a))
                                           (hide_ext__4
                                           (rec__private_with_attributes__child1
                                           (us_split_fields13 a))
                                           (rec__public_derives_private__grand_child__f2
                                           (us_split_fields13 a))
                                           (rec__ext__6
                                           (us_split_fields13 a))))
                                           (attr__tag6 a)))

(define-fun of_base4 ((r us_rep4)) us_rep6 (us_repqtmk6
                                           (us_split_fieldsqtmk6
                                           (extract__private_with_attributes__child
                                           (rec__ext__4 (us_split_fields9 r)))
                                           (extract__public_derives_private__grand_child__f2
                                           (rec__ext__4 (us_split_fields9 r)))
                                           (rec__private_with_attributes__root__f
                                           (us_split_fields9 r))
                                           (extract__ext__4
                                           (rec__ext__4 (us_split_fields9 r))))
                                           (attr__tag4 r)))

(define-fun bool_eq6 ((a us_rep6)
  (b us_rep6)) Bool (ite (and
                         (and
                         (= (us_main_eq2
                            (rec__private_with_attributes__child1
                            (us_split_fields13 a))
                            (rec__private_with_attributes__child1
                            (us_split_fields13 b))) true)
                         (= (to_rep
                            (rec__public_derives_private__grand_child__f2
                            (us_split_fields13 a))) (to_rep
                                                    (rec__public_derives_private__grand_child__f2
                                                    (us_split_fields13 b)))))
                         (= (to_rep
                            (rec__private_with_attributes__root__f2
                            (us_split_fields13 a))) (to_rep
                                                    (rec__private_with_attributes__root__f2
                                                    (us_split_fields13 b)))))
                    true false))

(declare-const us_tag6 Int)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const public_derives_private__grand_child__f2__first__bit Int)

(declare-const public_derives_private__grand_child__f2__last__bit Int)

(declare-const public_derives_private__grand_child__f2__position Int)

;; public_derives_private__grand_child__f2__first__bit_axiom
  (assert (<= 0 public_derives_private__grand_child__f2__first__bit))

;; public_derives_private__grand_child__f2__last__bit_axiom
  (assert
  (< public_derives_private__grand_child__f2__first__bit public_derives_private__grand_child__f2__last__bit))

;; public_derives_private__grand_child__f2__position_axiom
  (assert (<= 0 public_derives_private__grand_child__f2__position))

(declare-const private_with_attributes__root__f__first__bit2 Int)

(declare-const private_with_attributes__root__f__last__bit2 Int)

(declare-const private_with_attributes__root__f__position2 Int)

;; private_with_attributes__root__f__first__bit_axiom
  (assert (<= 0 private_with_attributes__root__f__first__bit2))

;; private_with_attributes__root__f__last__bit_axiom
  (assert
  (< private_with_attributes__root__f__first__bit2 private_with_attributes__root__f__last__bit2))

;; private_with_attributes__root__f__position_axiom
  (assert (<= 0 private_with_attributes__root__f__position2))

(declare-fun user_eq7 (us_rep6 us_rep6) Bool)

(declare-const dummy7 us_rep6)

(declare-datatypes ()
((grand_child__ref (grand_child__refqtmk (grand_child__content us_rep6)))))
(define-fun grand_child__ref_grand_child__content__projection ((a grand_child__ref)) us_rep6 
  (grand_child__content a))

(declare-const g1__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(define-fun default_initial_assumption4 ((temp___expr_238 us_rep6)
  (temp___skip_top_level_239 Bool)) Bool (and
                                         (= (attr__tag6 temp___expr_238) 
                                         us_tag6)
                                         (= (to_rep
                                            (rec__public_derives_private__grand_child__f2
                                            (us_split_fields13
                                            temp___expr_238))) 0)))

(declare-const c2 us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const g2__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-fun get_f2 (us_rep3) Int)

(declare-fun get_f2__function_guard (Int us_rep3) Bool)

;; get_f2__post_axiom
  (assert
  (forall ((g us_rep3))
  (! (let ((result (get_f2 g)))
     (=> (get_f2__function_guard result g) (dynamic_invariant result true
     false true true))) :pattern ((get_f2 g)) )))

;; get_f2__def_axiom
  (assert
  (forall ((g us_rep3))
  (! (= (get_f2 g) (to_rep
                   (rec__public_derives_private__private_grand_child_private_tagged__f2
                   (us_split_fields7 g)))) :pattern ((get_f2 g)) )))

(define-fun default_initial_assumption5 ((temp___expr_230 us_rep5)
  (temp___skip_top_level_231 Bool)) Bool (= (attr__tag5 temp___expr_230) 
  us_tag5))

(define-fun default_initial_assumption6 ((temp___expr_222 us_rep4)
  (temp___skip_top_level_223 Bool)) Bool (= (attr__tag4 temp___expr_222) 
  us_tag4))

(declare-const rliteral natural)

;; rliteral_axiom
  (assert (= (naturalqtint rliteral) 1))

(declare-const r__split_fields us_split_fields)

(declare-const f__split_fields us_split_fields2)

(declare-const g__split_fields us_split_fields4)

(declare-const p__split_fields us_split_fields6)

;; Assume
  (assert true)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant c true false true true))

;; Assume
  (assert (default_initial_assumption
  (us_repqtmk r__split_fields r__attr__tag) false))

;; Assume
  (assert true)

;; Assume
  (assert (default_initial_assumption1
  (us_repqtmk1 f__split_fields f__attr__tag) false))

;; Assume
  (assert true)

;; Assume
  (assert (default_initial_assumption2
  (us_repqtmk2 g__split_fields g__attr__tag) false))

;; Assume
  (assert true)

;; Assume
  (assert (default_initial_assumption3
  (us_repqtmk3 p__split_fields p__attr__tag) false))

;; Assume
  (assert true)

(declare-const rc__split_fields us_split_fields)

;; H
  (assert (= rc__split_fields r__split_fields))

;; Assume
  (assert (= rc__attr__tag r__attr__tag))

;; Assume
  (assert true)

(define-fun use_private_attributes__test_tag__fc__assume () us_rep (to_base
                                                                   (us_repqtmk1
                                                                   f__split_fields
                                                                   f__attr__tag)))

(declare-const fc__split_fields us_split_fields)

;; H
  (assert
  (= fc__split_fields (us_split_fields1
                      use_private_attributes__test_tag__fc__assume)))

;; Assume
  (assert
  (= fc__attr__tag (attr__tag use_private_attributes__test_tag__fc__assume)))

;; Assume
  (assert true)

(declare-const g1__split_fields us_split_fields12)

;; H
  (assert
  (= g1__split_fields (us_split_fieldsqtmk6
                      (rec__private_with_attributes__child
                      (us_split_fields11 c1)) rliteral
                      (rec__private_with_attributes__root__f1
                      (us_split_fields11 c1)) us_null_ext__)))

;; Assume
  (assert (= g1__attr__tag us_tag6))

;; Assume
  (assert true)

(declare-const g2__split_fields us_split_fields12)

;; H
  (assert
  (= g2__split_fields (us_split_fieldsqtmk6
                      (rec__private_with_attributes__child
                      (us_split_fields11 c2)) rliteral
                      (rec__private_with_attributes__root__f1
                      (us_split_fields11 c2)) us_null_ext__)))

;; Assume
  (assert (= g2__attr__tag us_tag6))

;; Assume
  (assert true)

;; Assert
  (assert (not (= (bool_eq5 c1 c2) true)))

;; Assert
  (assert
  (= (to_rep (rec__private_with_attributes__root__f1 (us_split_fields11 c1))) 
  (to_rep (rec__private_with_attributes__root__f1 (us_split_fields11 c2)))))

(assert
;; defqtvc
 ;; File "use_private_attributes.ads", line 8, characters 0-0
  (not
  (not
  (= (and (ite (= rc__attr__tag fc__attr__tag) true false) (us_dispatch_eq
                                                           (us_repqtmk
                                                           rc__split_fields
                                                           rc__attr__tag)
                                                           (us_repqtmk
                                                           fc__split_fields
                                                           fc__attr__tag))) true))))
(check-sat)
