(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun my_false (tuple0) Bool)

(declare-fun my_false__function_guard (Bool tuple0) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort wrong_scalar 0)

(declare-fun wrong_scalarqtint (wrong_scalar) Int)

;; wrong_scalar'axiom
  (assert
  (forall ((i wrong_scalar))
  (and (<= (- 2147483648) (wrong_scalarqtint i))
  (<= (wrong_scalarqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (wrong_scalar wrong_scalar) Bool)

(declare-const dummy wrong_scalar)

(declare-datatypes ()
((wrong_scalar__ref
 (wrong_scalar__refqtmk (wrong_scalar__content wrong_scalar)))))
(define-fun wrong_scalar__ref_wrong_scalar__content__projection ((a wrong_scalar__ref)) wrong_scalar 
  (wrong_scalar__content a))

;; temp___result_262'def
  (assert (my_false__function_guard (my_false Tuple0) Tuple0))

(define-fun dynamic_invariant ((temp___expr_260 Int)
  (temp___is_init_256 Bool) (temp___skip_constant_257 Bool)
  (temp___do_toplevel_258 Bool)
  (temp___do_typ_inv_259 Bool)) Bool (and
                                     (=>
                                     (or (= temp___is_init_256 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_260))
                                     (=> (= temp___do_toplevel_258 true)
                                     (=> (= temp___is_init_256 true)
                                     (= (my_false Tuple0) true)))))

;; temp___result_267'def
  (assert (my_false__function_guard (my_false Tuple0) Tuple0))

(define-fun dynamic_predicate ((temp___265 Int)) Bool (= (my_false Tuple0) true))

;; my_false__post_axiom
  (assert true)

;; my_false__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (not (= (my_false us_void_param) true)) :pattern ((my_false
                                                       us_void_param)) )))

(declare-const x Int)

;; Assume
  (assert true)

;; Assume
  (assert (dynamic_invariant x false false true true))

;; H
  (assert (my_false__function_guard (my_false Tuple0) Tuple0))

(assert
;; defqtvc
 ;; File "init_pred_in_loop.adb", line 187, characters 0-0
  (not (= (my_false Tuple0) true)))
(check-sat)
