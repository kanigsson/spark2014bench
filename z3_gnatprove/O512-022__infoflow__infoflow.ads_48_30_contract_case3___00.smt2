(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep (select a temp___idx_155)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep (select a temp___idx_155)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort sensorids 0)

(declare-fun sensoridsqtint (sensorids) Int)

;; sensorids'axiom
  (assert
  (forall ((i sensorids))
  (and (<= 1 (sensoridsqtint i)) (<= (sensoridsqtint i) 10))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (sensorids sensorids) Bool)

(declare-const dummy1 sensorids)

(declare-datatypes ()
((sensorids__ref (sensorids__refqtmk (sensorids__content sensorids)))))
(define-fun sensorids__ref_sensorids__content__projection ((a sensorids__ref)) sensorids 
  (sensorids__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun dynamic_invariant1 ((temp___expr_192 Int)
  (temp___is_init_188 Bool) (temp___skip_constant_189 Bool)
  (temp___do_toplevel_190 Bool)
  (temp___do_typ_inv_191 Bool)) Bool (=>
                                     (or (= temp___is_init_188 true)
                                     (<= 1 10)) (in_range2 temp___expr_192)))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 0))

(declare-const cache_v1 (Array Int integer))

(declare-const cache_v2 (Array Int integer))

;; Assume
  (assert true)

;; Assume
  (assert true)

(define-fun usf () Bool (distinct 1 0))

(declare-const cache_v11 (Array Int integer))

(declare-const i Int)

;; H
  (assert (= i 1))

;; H
  (assert
  (ite (= (and (ite (<= 1 i) true false) (ite (<= i 10) true false)) true)
  (exists ((cache_v12 (Array Int integer)))
  (and (= cache_v12 (store cache_v1 i rliteral))
  (exists ((i1 Int))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k 10))
  (=> (<= k i1) (= (to_rep (select cache_v11 k)) 0))))
  (and
  (= (and (ite (and
               (forall ((temp___395 Int))
               (=> (and (<= 1 temp___395) (<= temp___395 10))
               (=>
               (or (< 10 temp___395) (or (< temp___395 1) (< i1 temp___395)))
               (= (select cache_v11 temp___395) (select cache_v1 temp___395)))))
               (in_range2 i1))
          true false) (ite (and (<= 1 i1) (<= i1 10)) true false)) true)
  (= i1 10)))))) (= cache_v11 cache_v1)))

(declare-const cache_v21 (Array Int integer))

(declare-const i1 Int)

;; H
  (assert (= i1 1))

;; H
  (assert
  (ite (= (and (ite (<= 1 i1) true false) (ite (<= i1 10) true false)) true)
  (exists ((cache_v22 (Array Int integer)))
  (and (= cache_v22 (store cache_v2 i1 rliteral))
  (exists ((i2 Int))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k 10))
  (=> (<= k i2) (= (to_rep (select cache_v21 k)) 0))))
  (and
  (= (and (ite (and (in_range2 i2)
               (forall ((temp___402 Int))
               (=> (and (<= 1 temp___402) (<= temp___402 10))
               (=>
               (or (< 10 temp___402) (or (< temp___402 1) (< i2 temp___402)))
               (= (select cache_v21 temp___402) (select cache_v2 temp___402))))))
          true false) (ite (and (<= 1 i2) (<= i2 10)) true false)) true)
  (= i2 10)))))) (= cache_v21 cache_v2)))

;; H
  (assert (= usf true))

(declare-const k Int)

;; H
  (assert (<= 1 k))

;; H
  (assert (<= k 10))

(assert
;; defqtvc
 ;; File "infoflow.ads", line 47, characters 0-0
  (not (= (to_rep (select cache_v11 k)) (to_rep (select cache_v21 k)))))
(check-sat)

(exit)
