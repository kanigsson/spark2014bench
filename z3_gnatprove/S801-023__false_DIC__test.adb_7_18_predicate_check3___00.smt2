(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (positive positive) Bool)

(declare-const dummy positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun to_rep ((x positive)) Int (positiveqtint x))

(declare-fun of_rep (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((us_split_discrs
 (us_split_discrsqtmk
 (rec__test__context_type__first positive)(rec__test__context_type__last positive)))))
(define-fun us_split_discrs_rec__test__context_type__first__projection ((a us_split_discrs)) positive 
  (rec__test__context_type__first a))

(define-fun us_split_discrs_rec__test__context_type__last__projection ((a us_split_discrs)) positive 
  (rec__test__context_type__last a))

(declare-datatypes ()
((us_split_discrs__ref
 (us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (us_split_fieldsqtmk (rec__test__context_type__index positive)))))
(define-fun us_split_fields_rec__test__context_type__index__projection ((a us_split_fields)) positive 
  (rec__test__context_type__index a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (us_repqtmk
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__test__context_type__first
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__test__context_type__first
                                                  (us_split_discrs1 b))))
                        (= (to_rep
                           (rec__test__context_type__last
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__test__context_type__last
                                                  (us_split_discrs1 b)))))
                        (= (to_rep
                           (rec__test__context_type__index
                           (us_split_fields1 a))) (to_rep
                                                  (rec__test__context_type__index
                                                  (us_split_fields1 b)))))
                   true false))

(define-fun in_range2 ((rec__test__context_type__first1 Int)
  (rec__test__context_type__last1 Int)
  (a us_split_discrs)) Bool (and
                            (= rec__test__context_type__first1 (to_rep
                                                               (rec__test__context_type__first
                                                               a)))
                            (= rec__test__context_type__last1 (to_rep
                                                              (rec__test__context_type__last
                                                              a)))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const test__context_type__first__first__bit Int)

(declare-const test__context_type__first__last__bit Int)

(declare-const test__context_type__first__position Int)

;; test__context_type__first__first__bit_axiom
  (assert (<= 0 test__context_type__first__first__bit))

;; test__context_type__first__last__bit_axiom
  (assert
  (< test__context_type__first__first__bit test__context_type__first__last__bit))

;; test__context_type__first__position_axiom
  (assert (<= 0 test__context_type__first__position))

(declare-const test__context_type__last__first__bit Int)

(declare-const test__context_type__last__last__bit Int)

(declare-const test__context_type__last__position Int)

;; test__context_type__last__first__bit_axiom
  (assert (<= 0 test__context_type__last__first__bit))

;; test__context_type__last__last__bit_axiom
  (assert
  (< test__context_type__last__first__bit test__context_type__last__last__bit))

;; test__context_type__last__position_axiom
  (assert (<= 0 test__context_type__last__position))

(declare-const test__context_type__index__first__bit Int)

(declare-const test__context_type__index__last__bit Int)

(declare-const test__context_type__index__position Int)

;; test__context_type__index__first__bit_axiom
  (assert (<= 0 test__context_type__index__first__bit))

;; test__context_type__index__last__bit_axiom
  (assert
  (< test__context_type__index__first__bit test__context_type__index__last__bit))

;; test__context_type__index__position_axiom
  (assert (<= 0 test__context_type__index__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ()
((context_type__ref (context_type__refqtmk (context_type__content us_rep)))))
(define-fun context_type__ref_context_type__content__projection ((a context_type__ref)) us_rep 
  (context_type__content a))

(declare-const context__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant1 ((temp___expr_160 us_rep)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)
  (temp___do_typ_inv_159 Bool)) Bool (=> (= temp___do_toplevel_158 true)
                                     (and
                                     (and
                                     (<= (to_rep
                                         (rec__test__context_type__first
                                         (us_split_discrs1 temp___expr_160))) 
                                     (to_rep
                                     (rec__test__context_type__last
                                     (us_split_discrs1 temp___expr_160))))
                                     (<= (to_rep
                                         (rec__test__context_type__first
                                         (us_split_discrs1 temp___expr_160))) 
                                     (to_rep
                                     (rec__test__context_type__index
                                     (us_split_fields1 temp___expr_160)))))
                                     (<= (to_rep
                                         (rec__test__context_type__index
                                         (us_split_fields1 temp___expr_160))) 
                                     (to_rep
                                     (rec__test__context_type__last
                                     (us_split_discrs1 temp___expr_160)))))))

(define-fun default_initial_assumption ((temp___expr_164 us_rep)
  (temp___skip_top_level_165 Bool)) Bool (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__test__context_type__first
                                            (us_split_discrs1
                                            temp___expr_164))) 1)
                                         (= (to_rep
                                            (rec__test__context_type__last
                                            (us_split_discrs1
                                            temp___expr_164))) 2147483647))
                                         (= (to_rep
                                            (rec__test__context_type__index
                                            (us_split_fields1
                                            temp___expr_164))) 1))
                                         (= temp___skip_top_level_165 true)))

(define-fun dynamic_predicate ((temp___169 us_rep)) Bool (and
                                                         (and
                                                         (<= (to_rep
                                                             (rec__test__context_type__first
                                                             (us_split_discrs1
                                                             temp___169))) 
                                                         (to_rep
                                                         (rec__test__context_type__last
                                                         (us_split_discrs1
                                                         temp___169))))
                                                         (<= (to_rep
                                                             (rec__test__context_type__first
                                                             (us_split_discrs1
                                                             temp___169))) 
                                                         (to_rep
                                                         (rec__test__context_type__index
                                                         (us_split_fields1
                                                         temp___169)))))
                                                         (<= (to_rep
                                                             (rec__test__context_type__index
                                                             (us_split_fields1
                                                             temp___169))) 
                                                         (to_rep
                                                         (rec__test__context_type__last
                                                         (us_split_discrs1
                                                         temp___169))))))

(declare-const first Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const last Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const i2s us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r2b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const r3b Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const test__context_type__first__first__bit1 Int)

(declare-const test__context_type__first__last__bit1 Int)

(declare-const test__context_type__first__position1 Int)

;; test__context_type__first__first__bit_axiom
  (assert (<= 0 test__context_type__first__first__bit1))

;; test__context_type__first__last__bit_axiom
  (assert
  (< test__context_type__first__first__bit1 test__context_type__first__last__bit1))

;; test__context_type__first__position_axiom
  (assert (<= 0 test__context_type__first__position1))

(declare-const test__context_type__last__first__bit1 Int)

(declare-const test__context_type__last__last__bit1 Int)

(declare-const test__context_type__last__position1 Int)

;; test__context_type__last__first__bit_axiom
  (assert (<= 0 test__context_type__last__first__bit1))

;; test__context_type__last__last__bit_axiom
  (assert
  (< test__context_type__last__first__bit1 test__context_type__last__last__bit1))

;; test__context_type__last__position_axiom
  (assert (<= 0 test__context_type__last__position1))

(declare-const test__context_type__index__first__bit1 Int)

(declare-const test__context_type__index__last__bit1 Int)

(declare-const test__context_type__index__position1 Int)

;; test__context_type__index__first__bit_axiom
  (assert (<= 0 test__context_type__index__first__bit1))

;; test__context_type__index__last__bit_axiom
  (assert
  (< test__context_type__index__first__bit1 test__context_type__index__last__bit1))

;; test__context_type__index__position_axiom
  (assert (<= 0 test__context_type__index__position1))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes () ((t4b__ref (t4b__refqtmk (t4b__content us_rep)))))
(define-fun t4b__ref_t4b__content__projection ((a t4b__ref)) us_rep (t4b__content
                                                                    a))

(define-fun dynamic_predicate1 ((temp___173 us_rep)) Bool (and
                                                          (and
                                                          (<= (to_rep
                                                              (rec__test__context_type__first
                                                              (us_split_discrs1
                                                              temp___173))) 
                                                          (to_rep
                                                          (rec__test__context_type__last
                                                          (us_split_discrs1
                                                          temp___173))))
                                                          (<= (to_rep
                                                              (rec__test__context_type__first
                                                              (us_split_discrs1
                                                              temp___173))) 
                                                          (to_rep
                                                          (rec__test__context_type__index
                                                          (us_split_fields1
                                                          temp___173)))))
                                                          (<= (to_rep
                                                              (rec__test__context_type__index
                                                              (us_split_fields1
                                                              temp___173))) 
                                                          (to_rep
                                                          (rec__test__context_type__last
                                                          (us_split_discrs1
                                                          temp___173))))))

(declare-const context__split_fields positive)

(declare-const context__split_discrs us_split_discrs)

;; Assume
  (assert (dynamic_invariant1 i2s true false true true))

;; Assume
  (assert (dynamic_invariant1 i2s true false true true))

;; Assume
  (assert (dynamic_invariant1
  (us_repqtmk context__split_discrs
  (us_split_fieldsqtmk context__split_fields)) false false true true))

;; Assume
  (assert (dynamic_invariant first true false true true))

;; Assume
  (assert (dynamic_invariant last true false true true))

;; Assume
  (assert (and (not (= context__attr__constrained true)) (<= first last)))

(declare-const test__initialize__R2b__assume Int)

;; Ensures
  (assert
  (= (to_rep (rec__test__context_type__first context__split_discrs)) 
  test__initialize__R2b__assume))

;; Assume
  (assert (= test__initialize__R2b__assume r2b))

;; Assume
  (assert (dynamic_invariant r2b true false true true))

(declare-const test__initialize__R3b__assume Int)

;; Ensures
  (assert
  (= (to_rep (rec__test__context_type__last context__split_discrs)) test__initialize__R3b__assume))

;; Assume
  (assert (= test__initialize__R3b__assume r3b))

;; Assume
  (assert (dynamic_invariant r3b true false true true))

(declare-const o positive)

;; Ensures
  (assert (= (to_rep o) first))

(declare-const o1 positive)

;; Ensures
  (assert (= (to_rep o1) last))

(declare-const o2 positive)

;; Ensures
  (assert (= (to_rep o2) first))

(define-fun temp___187 () us_rep (us_repqtmk (us_split_discrsqtmk o2 o1)
                                 (us_split_fieldsqtmk o)))

(assert
;; defqtvc
 ;; File "test.ads", line 8, characters 0-0
  (not (dynamic_predicate1 temp___187)))
(check-sat)

(exit)
