;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (int__refqtmk (int__content Int)))))
(declare-datatypes () ((bool__ref (bool__refqtmk (bool__content Bool)))))
(declare-datatypes ()
((us_fixed__ref (us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes () ((real__ref (real__refqtmk (real__content Real)))))
(declare-datatypes ()
((us_private__ref (us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ()
((us_split_fields (us_split_fieldsqtmk (rec__test__r__f integer)))))
(define-fun us_split_fields_rec__test__r__f__projection ((a us_split_fields)) integer 
  (rec__test__r__f a))

(declare-datatypes ()
((us_split_fields__ref
 (us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep (rec__test__r__f (us_split_fields1 a))) 
                   (to_rep (rec__test__r__f (us_split_fields1 b)))) true
                   false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const test__r__f__first__bit Int)

(declare-const test__r__f__last__bit Int)

(declare-const test__r__f__position Int)

;; test__r__f__first__bit_axiom
  (assert (<= 0 test__r__f__first__bit))

;; test__r__f__last__bit_axiom
  (assert (< test__r__f__first__bit test__r__f__last__bit))

;; test__r__f__position_axiom
  (assert (<= 0 test__r__f__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes () ((r__ref (r__refqtmk (r__content us_rep)))))
(define-fun r__ref_r__content__projection ((a r__ref)) us_rep (r__content a))

(declare-datatypes ()
((map__ref (map__refqtmk (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (bool_eq (select a temp___idx_154)
                              (select b (+ (- b__first a__first) temp___idx_154))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (bool_eq (select a temp___idx_154)
     (select b (+ (- b__first a__first) temp___idx_154))) true))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (us_tqtmk (elts (Array Int us_rep))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))

(define-fun of_array ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length1 ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                   (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ()
((u_array__ref (u_array__refqtmk (u_array__content us_t)))))
(define-fun u_array__ref_u_array__content__projection ((a u_array__ref)) us_t 
  (u_array__content a))

(define-fun in_range2 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)

(declare-datatypes ()
((us_rep1
 (us_repqtmk1
 (rec__test__u_array_acc__is_null_pointer Bool)(rec__test__u_array_acc__pointer_address Int)(rec__test__u_array_acc__pointer_value us_t)))))
(define-fun us_rep_rec__test__u_array_acc__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__test__u_array_acc__is_null_pointer a))

(define-fun us_rep_rec__test__u_array_acc__pointer_address__projection ((a us_rep1)) Int 
  (rec__test__u_array_acc__pointer_address a))

(define-fun us_rep_rec__test__u_array_acc__pointer_value__projection ((a us_rep1)) us_t 
  (rec__test__u_array_acc__pointer_value a))

(declare-datatypes ()
((us_rep__ref (us_rep__refqtmk (us_rep__content us_rep1)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep1 
  (us_rep__content a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__test__u_array_acc__is_null_pointer a) 
                         (rec__test__u_array_acc__is_null_pointer b))
                         (=>
                         (not
                         (= (rec__test__u_array_acc__is_null_pointer a) true))
                         (and
                         (= (rec__test__u_array_acc__pointer_address a) 
                         (rec__test__u_array_acc__pointer_address b))
                         (= (rec__test__u_array_acc__pointer_value a) 
                         (rec__test__u_array_acc__pointer_value b)))))
                    true false))

(define-fun rec__test__u_array_acc__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__test__u_array_acc__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep1)

;; __null_pointer__def_axiom
  (assert (= (rec__test__u_array_acc__is_null_pointer us_null_pointer) true))

(declare-const dummy4 us_rep1)

(declare-datatypes ()
((u_array_acc__ref (u_array_acc__refqtmk (u_array_acc__content us_rep1)))))
(define-fun u_array_acc__ref_u_array_acc__content__projection ((a u_array_acc__ref)) us_rep1 
  (u_array_acc__content a))

(define-fun dynamic_invariant ((temp___expr_193 us_rep1)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)
  (temp___do_typ_inv_192 Bool)) Bool (=>
                                     (not
                                     (= (rec__test__u_array_acc__is_null_pointer
                                        temp___expr_193) true))
                                     (dynamic_property 1 2147483647
                                     (first1
                                     (rec__test__u_array_acc__pointer_value
                                     temp___expr_193))
                                     (last1
                                     (rec__test__u_array_acc__pointer_value
                                     temp___expr_193)))))

(define-fun default_initial_assumption ((temp___expr_195 us_rep1)
  (temp___skip_top_level_196 Bool)) Bool (= (rec__test__u_array_acc__is_null_pointer
                                            temp___expr_195) true))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort tS8bP1 0)

(declare-fun tS8bP1qtint (tS8bP1) Int)

;; tS8bP1'axiom
  (assert
  (forall ((i tS8bP1)) (and (<= 1 (tS8bP1qtint i)) (<= (tS8bP1qtint i) 100))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (tS8bP1 tS8bP1) Bool)

(declare-const dummy5 tS8bP1)

(declare-datatypes ()
((tS8bP1__ref (tS8bP1__refqtmk (tS8bP1__content tS8bP1)))))
(define-fun tS8bP1__ref_tS8bP1__content__projection ((a tS8bP1__ref)) tS8bP1 
  (tS8bP1__content a))

(define-fun default_initial_assumption1 ((temp___expr_203 (Array Int us_rep))
  (temp___skip_top_level_204 Bool)) Bool (forall ((temp___205 Int))
                                         (=>
                                         (and (<= 1 temp___205)
                                         (<= temp___205 100))
                                         (= (to_rep
                                            (rec__test__r__f
                                            (us_split_fields1
                                            (select temp___expr_203 temp___205)))) 0))))

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun default_initial_assumption2 ((temp___expr_181 us_rep)
  (temp___skip_top_level_182 Bool)) Bool (= (to_rep
                                            (rec__test__r__f
                                            (us_split_fields1
                                            temp___expr_181))) 0))

(define-fun dynamic_invariant3 ((temp___expr_187 us_t)
  (temp___is_init_183 Bool) (temp___skip_constant_184 Bool)
  (temp___do_toplevel_185 Bool)
  (temp___do_typ_inv_186 Bool)) Bool (=>
                                     (not (= temp___skip_constant_184 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_187)
                                     (last1 temp___expr_187))))

(declare-const us_next_pointer_address Int)

(declare-const temp___alloc_209 us_rep1)

;; H
  (assert
  (not (= (rec__test__u_array_acc__is_null_pointer temp___alloc_209) true)))

;; H
  (assert
  (= (rec__test__u_array_acc__pointer_address temp___alloc_209) us_next_pointer_address))

(declare-const usf (Array Int us_rep))

;; H
  (assert (default_initial_assumption1 usf false))

;; H
  (assert true)

;; Assume
  (assert
  (= (rec__test__u_array_acc__pointer_value temp___alloc_209) (of_array 
                                                              usf 1 100)))

(declare-const a__pointer_value us_t)

;; H
  (assert
  (= a__pointer_value (rec__test__u_array_acc__pointer_value
                      temp___alloc_209)))

(declare-const a__pointer_address Int)

;; H
  (assert
  (= a__pointer_address (rec__test__u_array_acc__pointer_address
                        temp___alloc_209)))

(declare-const a__is_null_pointer Bool)

;; H
  (assert
  (= a__is_null_pointer (rec__test__u_array_acc__is_null_pointer
                        temp___alloc_209)))

;; Assume
  (assert (dynamic_invariant
  (us_repqtmk1 a__is_null_pointer a__pointer_address a__pointer_value) true
  false true true))

;; Assert
  (assert (= (first1 a__pointer_value) 1))

(assert
;; defqtvc
 ;; File "test.adb", line 1, characters 0-0
  (not
  (not
  (= (bool_eq3
     (us_repqtmk1 a__is_null_pointer a__pointer_address a__pointer_value)
     us_null_pointer) true))))
(check-sat)
