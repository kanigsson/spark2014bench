;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun us_compatible_tags (Int Int) Bool)

;; __compatible_tags_refl
  (assert (forall ((tag Int)) (us_compatible_tags tag tag)))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__dispatch__root__i integer)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__dispatch__root__i__projection ((a us_split_fields)) integer 
  (rec__dispatch__root__i a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__dispatch__root__i (us_split_fields1 a))) 
                   (to_rep (rec__dispatch__root__i (us_split_fields1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const dispatch__root__i__first__bit Int)

(declare-const dispatch__root__i__last__bit Int)

(declare-const dispatch__root__i__position Int)

;; dispatch__root__i__first__bit_axiom
  (assert (<= 0 dispatch__root__i__first__bit))

;; dispatch__root__i__last__bit_axiom
  (assert (< dispatch__root__i__first__bit dispatch__root__i__last__bit))

;; dispatch__root__i__position_axiom
  (assert (<= 0 dispatch__root__i__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((root__ref 0))
(((root__refqtmk (root__content us_rep)))))
(define-fun root__ref_root__content__projection ((a root__ref)) us_rep 
  (root__content a))

(declare-const x1__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun default_initial_assumption ((temp___expr_198 us_rep)
  (temp___skip_top_level_199 Bool)) Bool (= (attr__tag temp___expr_198) 
  us_tag))

(declare-const x2__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const x3__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const v1__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const v2__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const v3__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-fun init (Int) Int)

(declare-fun init__function_guard (Int Int) Bool)

;; init__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true true)
     (let ((result (init x)))
     (=> (init__function_guard result x) (dynamic_invariant result true false
     true true)))) :pattern ((init x)) )))

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

(declare-const b_max Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq3 (natural natural) Bool)

(declare-const dummy3 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep1 ((x natural)) Int (naturalqtint x))

(declare-fun of_rep1 (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq1 ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep1 (select a temp___idx_155)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep1 (select a temp___idx_155)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-const a1__first integer)

(declare-const a1__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ((nat_array__ref 0))
(((nat_array__refqtmk (nat_array__content us_t)))))
(define-fun nat_array__ref_nat_array__content__projection ((a nat_array__ref)) us_t 
  (nat_array__content a))

(declare-fun init1 (us_t) us_t)

(declare-fun init__function_guard1 (us_t us_t) Bool)

(define-fun dynamic_invariant2 ((temp___expr_219 us_t)
  (temp___is_init_215 Bool) (temp___skip_constant_216 Bool)
  (temp___do_toplevel_217 Bool)
  (temp___do_typ_inv_218 Bool)) Bool (=>
                                     (not (= temp___skip_constant_216 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_219)
                                     (last1 temp___expr_219))))

;; init__post_axiom
  (assert
  (forall ((x us_t))
  (! (=> (dynamic_invariant2 x true true true true)
     (let ((result (init1 x)))
     (=> (init__function_guard1 result x) (dynamic_invariant2 result true
     false true true)))) :pattern ((init1 x)) )))

(declare-const z1__first integer)

(declare-const z1__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const a2__first integer)

(declare-const a2__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const z2__first integer)

(declare-const z2__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const a3__first integer)

(declare-const a3__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const z3__first integer)

(declare-const z3__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(define-fun in_range3 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Bool)

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__dispatch__mut_rec__d Bool)))))
(define-fun us_split_discrs_rec__dispatch__mut_rec__d__projection ((a us_split_discrs)) Bool 
  (rec__dispatch__mut_rec__d a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1 (rec__dispatch__mut_rec__i integer)))))
(define-fun us_split_fields_rec__dispatch__mut_rec__i__projection ((a us_split_fields2)) integer 
  (rec__dispatch__mut_rec__i a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (us_split_discrs1 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_discrs__projection ((a us_rep1)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__3__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (ite (rec__dispatch__mut_rec__d
                                 (us_split_discrs1 a)) 1 0) (ite (rec__dispatch__mut_rec__d
                                                                 (us_split_discrs1
                                                                 b)) 1 0))
                         (= (to_rep
                            (rec__dispatch__mut_rec__i (us_split_fields3 a))) 
                         (to_rep
                         (rec__dispatch__mut_rec__i (us_split_fields3 b)))))
                    true false))

(define-fun in_range4 ((rec__dispatch__mut_rec__d1 Bool)
  (a us_split_discrs)) Bool (= rec__dispatch__mut_rec__d1 (rec__dispatch__mut_rec__d
                                                          a)))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const dispatch__mut_rec__d__first__bit Int)

(declare-const dispatch__mut_rec__d__last__bit Int)

(declare-const dispatch__mut_rec__d__position Int)

;; dispatch__mut_rec__d__first__bit_axiom
  (assert (<= 0 dispatch__mut_rec__d__first__bit))

;; dispatch__mut_rec__d__last__bit_axiom
  (assert
  (< dispatch__mut_rec__d__first__bit dispatch__mut_rec__d__last__bit))

;; dispatch__mut_rec__d__position_axiom
  (assert (<= 0 dispatch__mut_rec__d__position))

(declare-const dispatch__mut_rec__i__first__bit Int)

(declare-const dispatch__mut_rec__i__last__bit Int)

(declare-const dispatch__mut_rec__i__position Int)

;; dispatch__mut_rec__i__first__bit_axiom
  (assert (<= 0 dispatch__mut_rec__i__first__bit))

;; dispatch__mut_rec__i__last__bit_axiom
  (assert
  (< dispatch__mut_rec__i__first__bit dispatch__mut_rec__i__last__bit))

;; dispatch__mut_rec__i__position_axiom
  (assert (<= 0 dispatch__mut_rec__i__position))

(declare-fun user_eq5 (us_rep1 us_rep1) Bool)

(declare-const dummy5 us_rep1)

(declare-datatypes ((mut_rec__ref 0))
(((mut_rec__refqtmk (mut_rec__content us_rep1)))))
(define-fun mut_rec__ref_mut_rec__content__projection ((a mut_rec__ref)) us_rep1 
  (mut_rec__content a))

(declare-const r1__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(define-fun default_initial_assumption1 ((temp___expr_261 us_rep1)
  (temp___skip_top_level_262 Bool)) Bool (= (rec__dispatch__mut_rec__d
                                            (us_split_discrs1
                                            temp___expr_261)) (distinct 1 0)))

(declare-fun init2 (us_rep1) us_rep1)

(declare-fun init__function_guard2 (us_rep1 us_rep1) Bool)

;; init__post_axiom
  (assert true)

(declare-const w1__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-const r2__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-const w2__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-const r3__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-const w3__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__dispatch__child__j integer)(rec__dispatch__root__i1 integer)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__dispatch__child__j__projection ((a us_split_fields4)) integer 
  (rec__dispatch__child__j a))

(define-fun us_split_fields_rec__dispatch__root__i__2__projection ((a us_split_fields4)) integer 
  (rec__dispatch__root__i1 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields4)) us_private 
  (rec__ext__1 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep2)) Int (attr__tag1 a))

(declare-fun hide_ext__ (integer us_private) us_private)

(declare-fun extract__dispatch__child__j (us_private) integer)

;; extract__dispatch__child__j__conv
  (assert
  (forall ((dispatch__child__j integer))
  (forall ((rec__ext__2 us_private))
  (= (extract__dispatch__child__j
     (hide_ext__ dispatch__child__j rec__ext__2)) dispatch__child__j))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep2)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__dispatch__root__i1
                                         (us_split_fields5 a))
                                         (hide_ext__
                                         (rec__dispatch__child__j
                                         (us_split_fields5 a))
                                         (rec__ext__1 (us_split_fields5 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep2 (us_repqtmk2
                                         (us_split_fieldsqtmk2
                                         (extract__dispatch__child__j
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__dispatch__root__i
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__dispatch__child__j (us_split_fields5 a))) 
                         (to_rep
                         (rec__dispatch__child__j (us_split_fields5 b))))
                         (= (to_rep
                            (rec__dispatch__root__i1 (us_split_fields5 a))) 
                         (to_rep
                         (rec__dispatch__root__i1 (us_split_fields5 b)))))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const dispatch__child__j__first__bit Int)

(declare-const dispatch__child__j__last__bit Int)

(declare-const dispatch__child__j__position Int)

;; dispatch__child__j__first__bit_axiom
  (assert (<= 0 dispatch__child__j__first__bit))

;; dispatch__child__j__last__bit_axiom
  (assert (< dispatch__child__j__first__bit dispatch__child__j__last__bit))

;; dispatch__child__j__position_axiom
  (assert (<= 0 dispatch__child__j__position))

(declare-const dispatch__root__i__first__bit1 Int)

(declare-const dispatch__root__i__last__bit1 Int)

(declare-const dispatch__root__i__position1 Int)

;; dispatch__root__i__first__bit_axiom
  (assert (<= 0 dispatch__root__i__first__bit1))

;; dispatch__root__i__last__bit_axiom
  (assert (< dispatch__root__i__first__bit1 dispatch__root__i__last__bit1))

;; dispatch__root__i__position_axiom
  (assert (<= 0 dispatch__root__i__position1))

(declare-fun user_eq6 (us_rep2 us_rep2) Bool)

(declare-const dummy6 us_rep2)

(declare-datatypes ((child__ref 0))
(((child__refqtmk (child__content us_rep2)))))
(define-fun child__ref_child__content__projection ((a child__ref)) us_rep2 
  (child__content a))

(declare-fun p__specific_post (Int us_rep us_split_fields Int us_split_fields
  Int Int Int Int us_t (Array Int natural) integer integer
  (Array Int natural) integer integer us_rep1 us_split_fields2
  us_split_discrs Bool us_split_fields2 us_split_discrs Bool Int us_private
  (Array Int natural) us_split_fields2 us_split_discrs Int us_split_fields2
  us_split_discrs (Array Int natural) us_split_fields2 us_split_discrs
  (Array Int natural) us_split_fields us_split_fields Int Int
  (Array Int natural) (Array Int natural) us_split_fields2 us_split_discrs
  us_split_fields2 us_split_discrs Int us_private (Array Int natural)
  us_split_fields2 us_split_discrs Int us_split_fields2 us_split_discrs
  (Array Int natural) us_split_fields2 us_split_discrs
  (Array Int natural)) Bool)

;; dispatch__root__compat_axiom
  (assert
  (forall ((x1 us_rep))
  (forall ((dispatch__p__x2__fields us_split_fields)
  (dispatch__p__x3__fields us_split_fields)
  (dispatch__p__x2__old__fields us_split_fields)
  (dispatch__p__x3__old__fields us_split_fields))
  (forall ((x2__attr__tag1 Int) (x3__attr__tag1 Int) (y1 Int)
  (dispatch__p__y2 Int) (dispatch__p__y3 Int) (dispatch__c1 Int)
  (dispatch__c3 Int) (dispatch__p__y2__old Int) (dispatch__p__y3__old Int)
  (dispatch__c1__old Int) (dispatch__c3__old Int))
  (forall ((z1 us_t))
  (forall ((dispatch__p__z2 (Array Int natural))
  (dispatch__p__z3 (Array Int natural)) (dispatch__a3 (Array Int natural))
  (dispatch__a1 (Array Int natural)) (dispatch__a2 (Array Int natural))
  (dispatch__p__z2__old (Array Int natural))
  (dispatch__p__z3__old (Array Int natural))
  (dispatch__a3__old (Array Int natural))
  (dispatch__a1__old (Array Int natural))
  (dispatch__a2__old (Array Int natural)))
  (forall ((z2__first1 integer) (z2__last1 integer) (z3__first1 integer)
  (z3__last1 integer))
  (forall ((w1 us_rep1))
  (forall ((dispatch__p__w2__fields us_split_fields2)
  (dispatch__p__w3__fields us_split_fields2)
  (dispatch__r1__fields us_split_fields2)
  (dispatch__r2__fields us_split_fields2)
  (dispatch__r3__fields us_split_fields2)
  (dispatch__p__w2__old__fields us_split_fields2)
  (dispatch__p__w3__old__fields us_split_fields2)
  (dispatch__r1__old__fields us_split_fields2)
  (dispatch__r2__old__fields us_split_fields2)
  (dispatch__r3__old__fields us_split_fields2))
  (forall ((dispatch__p__w2__discrs us_split_discrs)
  (dispatch__p__w3__discrs us_split_discrs)
  (dispatch__r1__discrs us_split_discrs)
  (dispatch__r2__discrs us_split_discrs)
  (dispatch__r3__discrs us_split_discrs)
  (dispatch__p__w2__old__discrs us_split_discrs)
  (dispatch__p__w3__old__discrs us_split_discrs)
  (dispatch__r1__old__discrs us_split_discrs)
  (dispatch__r2__old__discrs us_split_discrs)
  (dispatch__r3__old__discrs us_split_discrs))
  (forall ((w2__attr__constrained1 Bool) (w3__attr__constrained1 Bool))
  (forall ((dispatch__c2 us_private) (dispatch__c2__old us_private))
  (! (=> (p__specific_post us_tag x1 dispatch__p__x2__fields x2__attr__tag1
     dispatch__p__x3__fields x3__attr__tag1 y1 dispatch__p__y2
     dispatch__p__y3 z1 dispatch__p__z2 z2__first1 z2__last1 dispatch__p__z3
     z3__first1 z3__last1 w1 dispatch__p__w2__fields dispatch__p__w2__discrs
     w2__attr__constrained1 dispatch__p__w3__fields dispatch__p__w3__discrs
     w3__attr__constrained1 dispatch__c1 dispatch__c2 dispatch__a3
     dispatch__r1__fields dispatch__r1__discrs dispatch__c3
     dispatch__r2__fields dispatch__r2__discrs dispatch__a1
     dispatch__r3__fields dispatch__r3__discrs dispatch__a2
     dispatch__p__x2__old__fields dispatch__p__x3__old__fields
     dispatch__p__y2__old dispatch__p__y3__old dispatch__p__z2__old
     dispatch__p__z3__old dispatch__p__w2__old__fields
     dispatch__p__w2__old__discrs dispatch__p__w3__old__fields
     dispatch__p__w3__old__discrs dispatch__c1__old dispatch__c2__old
     dispatch__a3__old dispatch__r1__old__fields dispatch__r1__old__discrs
     dispatch__c3__old dispatch__r2__old__fields dispatch__r2__old__discrs
     dispatch__a1__old dispatch__r3__old__fields dispatch__r3__old__discrs
     dispatch__a2__old)
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep
        (rec__dispatch__root__i
        (us_split_fields1
        (us_repqtmk dispatch__p__x2__fields x2__attr__tag1)))) (to_rep
                                                               (rec__dispatch__root__i
                                                               (us_split_fields1
                                                               x1))))
     (= (to_rep
        (rec__dispatch__root__i
        (us_split_fields1
        (us_repqtmk dispatch__p__x3__fields x3__attr__tag1)))) (to_rep
                                                               (rec__dispatch__root__i
                                                               (us_split_fields1
                                                               (us_repqtmk
                                                               dispatch__p__x3__old__fields
                                                               x3__attr__tag1))))))
     (= dispatch__p__y3 dispatch__p__y3__old))
     (= (bool_eq1 dispatch__p__z3 (to_rep z3__first1) (to_rep z3__last1)
        dispatch__p__z3__old (to_rep z3__first1) (to_rep z3__last1)) true))
     (= (bool_eq3
        (us_repqtmk1 dispatch__p__w3__discrs dispatch__p__w3__fields)
        (us_repqtmk1 dispatch__p__w3__old__discrs
        dispatch__p__w3__old__fields)) true))
     (= dispatch__c3 dispatch__c3__old))
     (= (bool_eq1 dispatch__a3 (to_rep a3__first) (to_rep a3__last)
        dispatch__a3__old (to_rep a3__first) (to_rep a3__last)) true))
     (= (bool_eq3 (us_repqtmk1 dispatch__r3__discrs dispatch__r3__fields)
        (us_repqtmk1 dispatch__r3__old__discrs dispatch__r3__old__fields)) true))) :pattern ((p__specific_post
  us_tag x1 dispatch__p__x2__fields x2__attr__tag1 dispatch__p__x3__fields
  x3__attr__tag1 y1 dispatch__p__y2 dispatch__p__y3 z1 dispatch__p__z2
  z2__first1 z2__last1 dispatch__p__z3 z3__first1 z3__last1 w1
  dispatch__p__w2__fields dispatch__p__w2__discrs w2__attr__constrained1
  dispatch__p__w3__fields dispatch__p__w3__discrs w3__attr__constrained1
  dispatch__c1 dispatch__c2 dispatch__a3 dispatch__r1__fields
  dispatch__r1__discrs dispatch__c3 dispatch__r2__fields dispatch__r2__discrs
  dispatch__a1 dispatch__r3__fields dispatch__r3__discrs dispatch__a2
  dispatch__p__x2__old__fields dispatch__p__x3__old__fields
  dispatch__p__y2__old dispatch__p__y3__old dispatch__p__z2__old
  dispatch__p__z3__old dispatch__p__w2__old__fields
  dispatch__p__w2__old__discrs dispatch__p__w3__old__fields
  dispatch__p__w3__old__discrs dispatch__c1__old dispatch__c2__old
  dispatch__a3__old dispatch__r1__old__fields dispatch__r1__old__discrs
  dispatch__c3__old dispatch__r2__old__fields dispatch__r2__old__discrs
  dispatch__a1__old dispatch__r3__old__fields dispatch__r3__old__discrs
  dispatch__a2__old)) )))))))))))))

;; dispatch__child__compat_axiom
  (assert
  (forall ((x1 us_rep))
  (forall ((dispatch__p__x2__fields us_split_fields)
  (dispatch__p__x3__fields us_split_fields)
  (dispatch__p__x2__old__fields us_split_fields)
  (dispatch__p__x3__old__fields us_split_fields))
  (forall ((x2__attr__tag1 Int) (x3__attr__tag1 Int) (y1 Int)
  (dispatch__p__y2 Int) (dispatch__p__y3 Int) (dispatch__c1 Int)
  (dispatch__c3 Int) (dispatch__p__y2__old Int) (dispatch__p__y3__old Int)
  (dispatch__c1__old Int) (dispatch__c3__old Int))
  (forall ((z1 us_t))
  (forall ((dispatch__p__z2 (Array Int natural))
  (dispatch__p__z3 (Array Int natural)) (dispatch__a3 (Array Int natural))
  (dispatch__a1 (Array Int natural)) (dispatch__a2 (Array Int natural))
  (dispatch__p__z2__old (Array Int natural))
  (dispatch__p__z3__old (Array Int natural))
  (dispatch__a3__old (Array Int natural))
  (dispatch__a1__old (Array Int natural))
  (dispatch__a2__old (Array Int natural)))
  (forall ((z2__first1 integer) (z2__last1 integer) (z3__first1 integer)
  (z3__last1 integer))
  (forall ((w1 us_rep1))
  (forall ((dispatch__p__w2__fields us_split_fields2)
  (dispatch__p__w3__fields us_split_fields2)
  (dispatch__r1__fields us_split_fields2)
  (dispatch__r2__fields us_split_fields2)
  (dispatch__r3__fields us_split_fields2)
  (dispatch__p__w2__old__fields us_split_fields2)
  (dispatch__p__w3__old__fields us_split_fields2)
  (dispatch__r1__old__fields us_split_fields2)
  (dispatch__r2__old__fields us_split_fields2)
  (dispatch__r3__old__fields us_split_fields2))
  (forall ((dispatch__p__w2__discrs us_split_discrs)
  (dispatch__p__w3__discrs us_split_discrs)
  (dispatch__r1__discrs us_split_discrs)
  (dispatch__r2__discrs us_split_discrs)
  (dispatch__r3__discrs us_split_discrs)
  (dispatch__p__w2__old__discrs us_split_discrs)
  (dispatch__p__w3__old__discrs us_split_discrs)
  (dispatch__r1__old__discrs us_split_discrs)
  (dispatch__r2__old__discrs us_split_discrs)
  (dispatch__r3__old__discrs us_split_discrs))
  (forall ((w2__attr__constrained1 Bool) (w3__attr__constrained1 Bool))
  (forall ((dispatch__c2 us_private) (dispatch__c2__old us_private))
  (! (=> (p__specific_post us_tag1 x1 dispatch__p__x2__fields x2__attr__tag1
     dispatch__p__x3__fields x3__attr__tag1 y1 dispatch__p__y2
     dispatch__p__y3 z1 dispatch__p__z2 z2__first1 z2__last1 dispatch__p__z3
     z3__first1 z3__last1 w1 dispatch__p__w2__fields dispatch__p__w2__discrs
     w2__attr__constrained1 dispatch__p__w3__fields dispatch__p__w3__discrs
     w3__attr__constrained1 dispatch__c1 dispatch__c2 dispatch__a3
     dispatch__r1__fields dispatch__r1__discrs dispatch__c3
     dispatch__r2__fields dispatch__r2__discrs dispatch__a1
     dispatch__r3__fields dispatch__r3__discrs dispatch__a2
     dispatch__p__x2__old__fields dispatch__p__x3__old__fields
     dispatch__p__y2__old dispatch__p__y3__old dispatch__p__z2__old
     dispatch__p__z3__old dispatch__p__w2__old__fields
     dispatch__p__w2__old__discrs dispatch__p__w3__old__fields
     dispatch__p__w3__old__discrs dispatch__c1__old dispatch__c2__old
     dispatch__a3__old dispatch__r1__old__fields dispatch__r1__old__discrs
     dispatch__c3__old dispatch__r2__old__fields dispatch__r2__old__discrs
     dispatch__a1__old dispatch__r3__old__fields dispatch__r3__old__discrs
     dispatch__a2__old)
     (let ((temp___x3_319 (of_base
                          (us_repqtmk dispatch__p__x3__old__fields
                          x3__attr__tag1))))
     (let ((temp___x3_3191 (of_base
                           (us_repqtmk dispatch__p__x3__fields
                           x3__attr__tag1))))
     (let ((temp___x2_318 (of_base
                          (us_repqtmk dispatch__p__x2__fields x2__attr__tag1))))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (< (to_rep (rec__dispatch__child__j (us_split_fields5 temp___x2_318))) 0)
     (= (to_rep (rec__dispatch__root__i1 (us_split_fields5 temp___x2_318))) 
     (to_rep (rec__dispatch__root__i1 (us_split_fields5 (of_base x1))))))
     (= (to_rep (rec__dispatch__root__i1 (us_split_fields5 temp___x3_3191))) 
     (to_rep (rec__dispatch__root__i1 (us_split_fields5 temp___x3_319)))))
     (= (to_rep (rec__dispatch__child__j (us_split_fields5 temp___x3_3191))) 
     (to_rep (rec__dispatch__child__j (us_split_fields5 temp___x3_319)))))
     (= dispatch__p__y3 dispatch__p__y3__old))
     (= (bool_eq1 dispatch__p__z3 (to_rep z3__first1) (to_rep z3__last1)
        dispatch__p__z3__old (to_rep z3__first1) (to_rep z3__last1)) true))
     (= (bool_eq3
        (us_repqtmk1 dispatch__p__w3__discrs dispatch__p__w3__fields)
        (us_repqtmk1 dispatch__p__w3__old__discrs
        dispatch__p__w3__old__fields)) true))
     (= dispatch__c3 dispatch__c3__old))
     (= (bool_eq1 dispatch__a3 (to_rep a3__first) (to_rep a3__last)
        dispatch__a3__old (to_rep a3__first) (to_rep a3__last)) true))
     (= (bool_eq3 (us_repqtmk1 dispatch__r3__discrs dispatch__r3__fields)
        (us_repqtmk1 dispatch__r3__old__discrs dispatch__r3__old__fields)) true)))))) :pattern ((p__specific_post
  us_tag1 x1 dispatch__p__x2__fields x2__attr__tag1 dispatch__p__x3__fields
  x3__attr__tag1 y1 dispatch__p__y2 dispatch__p__y3 z1 dispatch__p__z2
  z2__first1 z2__last1 dispatch__p__z3 z3__first1 z3__last1 w1
  dispatch__p__w2__fields dispatch__p__w2__discrs w2__attr__constrained1
  dispatch__p__w3__fields dispatch__p__w3__discrs w3__attr__constrained1
  dispatch__c1 dispatch__c2 dispatch__a3 dispatch__r1__fields
  dispatch__r1__discrs dispatch__c3 dispatch__r2__fields dispatch__r2__discrs
  dispatch__a1 dispatch__r3__fields dispatch__r3__discrs dispatch__a2
  dispatch__p__x2__old__fields dispatch__p__x3__old__fields
  dispatch__p__y2__old dispatch__p__y3__old dispatch__p__z2__old
  dispatch__p__z3__old dispatch__p__w2__old__fields
  dispatch__p__w2__old__discrs dispatch__p__w3__old__fields
  dispatch__p__w3__old__discrs dispatch__c1__old dispatch__c2__old
  dispatch__a3__old dispatch__r1__old__fields dispatch__r1__old__discrs
  dispatch__c3__old dispatch__r2__old__fields dispatch__r2__old__discrs
  dispatch__a1__old dispatch__r3__old__fields dispatch__r3__old__discrs
  dispatch__a2__old)) )))))))))))))

(declare-datatypes ((ta1S__ref 0))
(((ta1S__refqtmk (ta1S__content us_t)))))
(define-fun ta1S__ref_ta1S__content__projection ((a ta1S__ref)) us_t 
  (ta1S__content a))

(declare-datatypes ((ta2S__ref 0))
(((ta2S__refqtmk (ta2S__content us_t)))))
(define-fun ta2S__ref_ta2S__content__projection ((a ta2S__ref)) us_t 
  (ta2S__content a))

(declare-datatypes ((ta3S__ref 0))
(((ta3S__refqtmk (ta3S__content us_t)))))
(define-fun ta3S__ref_ta3S__content__projection ((a ta3S__ref)) us_t 
  (ta3S__content a))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

;; id__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant1 x true true true true)
     (let ((result (id x)))
     (=> (id__function_guard result x) (dynamic_invariant1 result true false
     true true)))) :pattern ((id x)) )))

;; id__def_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant1 x true true true true) (= (id x) x)) :pattern (
  (id x)) )))

;; b_max__def_axiom
  (assert (and (id__function_guard (id 100) 100) (= b_max (id 100))))

(define-fun default_initial_assumption2 ((temp___expr_211 us_rep2)
  (temp___skip_top_level_212 Bool)) Bool (= (attr__tag1 temp___expr_211) 
  us_tag1))

(define-fun dynamic_invariant4 ((temp___expr_225 us_t)
  (temp___is_init_221 Bool) (temp___skip_constant_222 Bool)
  (temp___do_toplevel_223 Bool)
  (temp___do_typ_inv_224 Bool)) Bool (=>
                                     (not (= temp___skip_constant_222 true))
                                     (and (dynamic_property 1 b_max
                                     (first1 temp___expr_225)
                                     (last1 temp___expr_225))
                                     (and (= (first1 temp___expr_225) 1)
                                     (= (last1 temp___expr_225) b_max)))))

(define-fun default_initial_assumption3 ((temp___expr_227 us_t)
  (temp___skip_top_level_228 Bool)) Bool (and (= (first1 temp___expr_227) 1)
                                         (= (last1 temp___expr_227) b_max)))

(define-fun dynamic_invariant5 ((temp___expr_239 us_t)
  (temp___is_init_235 Bool) (temp___skip_constant_236 Bool)
  (temp___do_toplevel_237 Bool)
  (temp___do_typ_inv_238 Bool)) Bool (=>
                                     (not (= temp___skip_constant_236 true))
                                     (and (dynamic_property 1 b_max
                                     (first1 temp___expr_239)
                                     (last1 temp___expr_239))
                                     (and (= (first1 temp___expr_239) 1)
                                     (= (last1 temp___expr_239) b_max)))))

(define-fun default_initial_assumption4 ((temp___expr_241 us_t)
  (temp___skip_top_level_242 Bool)) Bool (and (= (first1 temp___expr_241) 1)
                                         (= (last1 temp___expr_241) b_max)))

(define-fun dynamic_invariant6 ((temp___expr_249 us_t)
  (temp___is_init_245 Bool) (temp___skip_constant_246 Bool)
  (temp___do_toplevel_247 Bool)
  (temp___do_typ_inv_248 Bool)) Bool (=>
                                     (not (= temp___skip_constant_246 true))
                                     (and (dynamic_property 1 b_max
                                     (first1 temp___expr_249)
                                     (last1 temp___expr_249))
                                     (and (= (first1 temp___expr_249) 1)
                                     (= (last1 temp___expr_249) b_max)))))

(define-fun default_initial_assumption5 ((temp___expr_251 us_t)
  (temp___skip_top_level_252 Bool)) Bool (and (= (first1 temp___expr_251) 1)
                                         (= (last1 temp___expr_251) b_max)))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 1))

(declare-const rliteral1 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral1) 2))

(declare-const rliteral2 integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral2) 3))

(assert
;; defqtvc
 ;; File "call_dispatch.adb", line 2, characters 0-0
  (not
  (forall ((c1 Int) (y2 Int) (c3 Int) (a1 (Array Int natural))
  (a2 (Array Int natural)) (a3 (Array Int natural))
  (r1__split_fields integer) (r1__split_discrs Bool)
  (r2__split_fields integer) (r2__split_discrs Bool)
  (r3__split_fields integer) (r3__split_discrs Bool) (c2 us_private)
  (x1__split_fields us_split_fields) (x2__split_fields us_split_fields)
  (x3__split_fields us_split_fields))
  (=> (dynamic_invariant1 b_max true false true true)
  (=> (= (id 100) b_max)
  (=> (dynamic_invariant1 b_max true false true true)
  (=> (= (id 100) b_max)
  (=> (dynamic_invariant c1 true false true true)
  (=> (dynamic_invariant c3 true false true true)
  (=>
  (and (dynamic_property 1 b_max (to_rep a1__first) (to_rep a1__last))
  (and (= (to_rep a1__first) 1) (= (to_rep a1__last) b_max)))
  (=>
  (and (dynamic_property 1 b_max (to_rep a2__first) (to_rep a2__last))
  (and (= (to_rep a2__first) 1) (= (to_rep a2__last) b_max)))
  (=>
  (and (dynamic_property 1 b_max (to_rep a3__first) (to_rep a3__last))
  (and (= (to_rep a3__first) 1) (= (to_rep a3__last) b_max)))
  (=> (= r1__attr__constrained false)
  (=> (= r2__attr__constrained false)
  (=> (= r3__attr__constrained false)
  (=> (= x1__split_fields (us_split_fieldsqtmk rliteral us_null_ext__))
  (=> (= x1__attr__tag us_tag)
  (=> (= x2__split_fields (us_split_fieldsqtmk rliteral1 us_null_ext__))
  (=> (= x2__attr__tag us_tag)
  (=> (= x3__split_fields (us_split_fieldsqtmk rliteral2 us_null_ext__))
  (=> (= x3__attr__tag us_tag)
  (let ((call_dispatch__v1__assume (to_base
                                   (us_repqtmk2
                                   (us_split_fieldsqtmk2 rliteral rliteral
                                   us_null_ext__) us_tag1))))
  (forall ((v1__split_fields us_split_fields))
  (=> (= v1__split_fields (us_split_fields1 call_dispatch__v1__assume))
  (=> (= v1__attr__tag (attr__tag call_dispatch__v1__assume))
  (let ((call_dispatch__v2__assume (to_base
                                   (us_repqtmk2
                                   (us_split_fieldsqtmk2 rliteral1 rliteral1
                                   us_null_ext__) us_tag1))))
  (forall ((v2__split_fields us_split_fields))
  (=> (= v2__split_fields (us_split_fields1 call_dispatch__v2__assume))
  (=> (= v2__attr__tag (attr__tag call_dispatch__v2__assume))
  (let ((call_dispatch__v3__assume (to_base
                                   (us_repqtmk2
                                   (us_split_fieldsqtmk2 rliteral2 rliteral2
                                   us_null_ext__) us_tag1))))
  (forall ((v3__split_fields us_split_fields))
  (=> (= v3__split_fields (us_split_fields1 call_dispatch__v3__assume))
  (=> (= v3__attr__tag (attr__tag call_dispatch__v3__assume))
  (let ((o (init c1)))
  (=>
  (and (init__function_guard o c1) (dynamic_invariant o true false true
  true))
  (forall ((y1 Int))
  (=> (= y1 o)
  (=> (dynamic_invariant y1 true false true true)
  (=> (dynamic_invariant y2 false false true true)
  (let ((o1 (init c3)))
  (=>
  (and (init__function_guard o1 c3) (dynamic_invariant o1 true false true
  true))
  (forall ((y3 Int))
  (=> (= y3 o1)
  (=> (dynamic_invariant y3 true false true true)
  (forall ((o2 Int))
  (=> (= (to_rep a1__last) o2)
  (forall ((o3 Int))
  (=> (= (to_rep a1__first) o3)
  (let ((o4 (of_array a1 o3 o2)))
  (let ((call_dispatch__z1__assume (init1 o4)))
  (=>
  (and (init__function_guard1 call_dispatch__z1__assume o4)
  (dynamic_invariant2 call_dispatch__z1__assume true false true true))
  (forall ((z1 (Array Int natural)))
  (=> (= z1 (to_array call_dispatch__z1__assume))
  (=> (= (to_rep z1__first) (first1 call_dispatch__z1__assume))
  (=> (= (to_rep z1__last) (last1 call_dispatch__z1__assume))
  (=> (dynamic_property 1 2147483647 (to_rep z1__first) (to_rep z1__last))
  (forall ((o5 Int))
  (=> (= (to_rep a2__last) o5)
  (forall ((o6 Int))
  (=> (= (to_rep a2__first) o6)
  (let ((o7 (of_array a2 o6 o5)))
  (let ((call_dispatch__z2__assume (init1 o7)))
  (=>
  (and (init__function_guard1 call_dispatch__z2__assume o7)
  (dynamic_invariant2 call_dispatch__z2__assume true false true true))
  (forall ((z2 (Array Int natural)))
  (=> (= z2 (to_array call_dispatch__z2__assume))
  (=> (= (to_rep z2__first) (first1 call_dispatch__z2__assume))
  (=> (= (to_rep z2__last) (last1 call_dispatch__z2__assume))
  (=> (dynamic_property 1 2147483647 (to_rep z2__first) (to_rep z2__last))
  (forall ((o8 Int))
  (=> (= (to_rep a3__last) o8)
  (forall ((o9 Int))
  (=> (= (to_rep a3__first) o9)
  (let ((o10 (of_array a3 o9 o8)))
  (let ((call_dispatch__z3__assume (init1 o10)))
  (=>
  (and (init__function_guard1 call_dispatch__z3__assume o10)
  (dynamic_invariant2 call_dispatch__z3__assume true false true true))
  (forall ((z3 (Array Int natural)))
  (=> (= z3 (to_array call_dispatch__z3__assume))
  (=> (= (to_rep z3__first) (first1 call_dispatch__z3__assume))
  (=> (= (to_rep z3__last) (last1 call_dispatch__z3__assume))
  (=> (dynamic_property 1 2147483647 (to_rep z3__first) (to_rep z3__last))
  (let ((o11 (us_repqtmk1 (us_split_discrsqtmk r1__split_discrs)
             (us_split_fieldsqtmk1 r1__split_fields))))
  (let ((call_dispatch__w1__assume (init2 o11)))
  (=> (init__function_guard2 call_dispatch__w1__assume o11)
  (forall ((w1__split_fields integer))
  (=>
  (= (us_split_fieldsqtmk1 w1__split_fields) (us_split_fields3
                                             call_dispatch__w1__assume))
  (forall ((w1__split_discrs Bool))
  (=>
  (= (us_split_discrsqtmk w1__split_discrs) (us_split_discrs1
                                            call_dispatch__w1__assume))
  (=> (= w1__attr__constrained false)
  (let ((o12 (us_repqtmk1 (us_split_discrsqtmk r2__split_discrs)
             (us_split_fieldsqtmk1 r2__split_fields))))
  (let ((call_dispatch__w2__assume (init2 o12)))
  (=> (init__function_guard2 call_dispatch__w2__assume o12)
  (forall ((w2__split_fields integer))
  (=>
  (= (us_split_fieldsqtmk1 w2__split_fields) (us_split_fields3
                                             call_dispatch__w2__assume))
  (forall ((w2__split_discrs Bool))
  (=>
  (= (us_split_discrsqtmk w2__split_discrs) (us_split_discrs1
                                            call_dispatch__w2__assume))
  (=> (= w2__attr__constrained false)
  (let ((o13 (us_repqtmk1 (us_split_discrsqtmk r3__split_discrs)
             (us_split_fieldsqtmk1 r3__split_fields))))
  (let ((call_dispatch__w3__assume (init2 o13)))
  (=> (init__function_guard2 call_dispatch__w3__assume o13)
  (forall ((w3__split_fields integer))
  (=>
  (= (us_split_fieldsqtmk1 w3__split_fields) (us_split_fields3
                                             call_dispatch__w3__assume))
  (forall ((w3__split_discrs Bool))
  (=>
  (= (us_split_discrsqtmk w3__split_discrs) (us_split_discrs1
                                            call_dispatch__w3__assume))
  (=> (= w3__attr__constrained false)
  (=> (and (= x1__attr__tag x2__attr__tag) (= x1__attr__tag x3__attr__tag))
  (forall ((o14 Int))
  (=> (= (to_rep z1__last) o14)
  (forall ((o15 Int))
  (=> (= (to_rep z1__first) o15)
  (forall ((c11 Int))
  (=> (= c11 c1)
  (forall ((a31 (Array Int natural)))
  (=> (= a31 a3)
  (forall ((r1__split_fields1 integer))
  (=> (= r1__split_fields1 r1__split_fields)
  (forall ((r1__split_discrs1 Bool))
  (=> (= r1__split_discrs1 r1__split_discrs)
  (forall ((c31 Int))
  (=> (= c31 c3)
  (forall ((r2__split_fields1 integer))
  (=> (= r2__split_fields1 r2__split_fields)
  (forall ((r2__split_discrs1 Bool))
  (=> (= r2__split_discrs1 r2__split_discrs)
  (forall ((a11 (Array Int natural)))
  (=> (= a11 a1)
  (forall ((r3__split_fields1 integer))
  (=> (= r3__split_fields1 r3__split_fields)
  (forall ((r3__split_discrs1 Bool))
  (=> (= r3__split_discrs1 r3__split_discrs)
  (forall ((a21 (Array Int natural)))
  (=> (= a21 a2)
  (forall ((x2__split_fields1 us_split_fields)
  (x3__split_fields1 us_split_fields) (y21 Int) (c32 Int) (y31 Int)
  (a22 (Array Int natural)) (z21 (Array Int natural))
  (a32 (Array Int natural)) (z31 (Array Int natural))
  (r2__split_fields2 integer) (r2__split_discrs2 Bool)
  (w2__split_fields1 integer) (w2__split_discrs1 Bool)
  (r3__split_fields2 integer) (r3__split_discrs2 Bool)
  (w3__split_fields1 integer) (w3__split_discrs1 Bool) (c21 us_private))
  (=>
  (and
  (and
  (and (dynamic_invariant y21 true true true true) (dynamic_invariant y31
  true true true true)) (dynamic_invariant c32 true true true true))
  (p__specific_post x1__attr__tag (us_repqtmk x1__split_fields x1__attr__tag)
  x2__split_fields1 x2__attr__tag x3__split_fields1 x3__attr__tag y1 y21 y31
  (of_array z1 o15 o14) z21 z2__first z2__last z31 z3__first z3__last
  (us_repqtmk1 (us_split_discrsqtmk w1__split_discrs)
  (us_split_fieldsqtmk1 w1__split_fields))
  (us_split_fieldsqtmk1 w2__split_fields1)
  (us_split_discrsqtmk w2__split_discrs1) w2__attr__constrained
  (us_split_fieldsqtmk1 w3__split_fields1)
  (us_split_discrsqtmk w3__split_discrs1) w3__attr__constrained c1 c21 a32
  (us_split_fieldsqtmk1 r1__split_fields)
  (us_split_discrsqtmk r1__split_discrs) c32
  (us_split_fieldsqtmk1 r2__split_fields2)
  (us_split_discrsqtmk r2__split_discrs2) a1
  (us_split_fieldsqtmk1 r3__split_fields2)
  (us_split_discrsqtmk r3__split_discrs2) a22 x2__split_fields
  x3__split_fields y2 y3 z2 z3 (us_split_fieldsqtmk1 w2__split_fields)
  (us_split_discrsqtmk w2__split_discrs)
  (us_split_fieldsqtmk1 w3__split_fields)
  (us_split_discrsqtmk w3__split_discrs) c11 c2 a31
  (us_split_fieldsqtmk1 r1__split_fields1)
  (us_split_discrsqtmk r1__split_discrs1) c31
  (us_split_fieldsqtmk1 r2__split_fields1)
  (us_split_discrsqtmk r2__split_discrs1) a11
  (us_split_fieldsqtmk1 r3__split_fields1)
  (us_split_discrsqtmk r3__split_discrs1) a21))
  (=>
  (= (to_rep (rec__dispatch__root__i x2__split_fields1)) (to_rep
                                                         (rec__dispatch__root__i
                                                         x1__split_fields)))
  (=> (= (to_rep (rec__dispatch__root__i x3__split_fields1)) 3)
  (=> (and (= v1__attr__tag v2__attr__tag) (= v1__attr__tag v3__attr__tag))
  (forall ((o16 Int))
  (=> (= (to_rep z1__last) o16)
  (forall ((o17 Int))
  (=> (= (to_rep z1__first) o17)
  (forall ((c12 Int))
  (=> (= c12 c1)
  (forall ((a33 (Array Int natural)))
  (=> (= a33 a32)
  (forall ((r1__split_fields2 integer))
  (=> (= r1__split_fields2 r1__split_fields)
  (forall ((r1__split_discrs2 Bool))
  (=> (= r1__split_discrs2 r1__split_discrs)
  (forall ((c33 Int))
  (=> (= c33 c32)
  (forall ((r2__split_fields3 integer))
  (=> (= r2__split_fields3 r2__split_fields2)
  (forall ((r2__split_discrs3 Bool))
  (=> (= r2__split_discrs3 r2__split_discrs2)
  (forall ((a12 (Array Int natural)))
  (=> (= a12 a1)
  (forall ((r3__split_fields3 integer))
  (=> (= r3__split_fields3 r3__split_fields2)
  (forall ((r3__split_discrs3 Bool))
  (=> (= r3__split_discrs3 r3__split_discrs2)
  (forall ((a23 (Array Int natural)))
  (=> (= a23 a22)
  (forall ((v2__split_fields1 us_split_fields)
  (v3__split_fields1 us_split_fields) (y22 Int) (c34 Int) (y32 Int)
  (a24 (Array Int natural)) (z22 (Array Int natural))
  (a34 (Array Int natural)) (z32 (Array Int natural))
  (r2__split_fields4 integer) (r2__split_discrs4 Bool)
  (w2__split_fields2 integer) (w2__split_discrs2 Bool)
  (r3__split_fields4 integer) (r3__split_discrs4 Bool)
  (w3__split_fields2 integer) (w3__split_discrs2 Bool) (c22 us_private))
  (=>
  (and
  (and
  (and (dynamic_invariant y22 true true true true) (dynamic_invariant y32
  true true true true)) (dynamic_invariant c34 true true true true))
  (p__specific_post v1__attr__tag (us_repqtmk v1__split_fields v1__attr__tag)
  v2__split_fields1 v2__attr__tag v3__split_fields1 v3__attr__tag y1 y22 y32
  (of_array z1 o17 o16) z22 z2__first z2__last z32 z3__first z3__last
  (us_repqtmk1 (us_split_discrsqtmk w1__split_discrs)
  (us_split_fieldsqtmk1 w1__split_fields))
  (us_split_fieldsqtmk1 w2__split_fields2)
  (us_split_discrsqtmk w2__split_discrs2) w2__attr__constrained
  (us_split_fieldsqtmk1 w3__split_fields2)
  (us_split_discrsqtmk w3__split_discrs2) w3__attr__constrained c1 c22 a34
  (us_split_fieldsqtmk1 r1__split_fields)
  (us_split_discrsqtmk r1__split_discrs) c34
  (us_split_fieldsqtmk1 r2__split_fields4)
  (us_split_discrsqtmk r2__split_discrs4) a1
  (us_split_fieldsqtmk1 r3__split_fields4)
  (us_split_discrsqtmk r3__split_discrs4) a24 v2__split_fields
  v3__split_fields y21 y31 z21 z31 (us_split_fieldsqtmk1 w2__split_fields1)
  (us_split_discrsqtmk w2__split_discrs1)
  (us_split_fieldsqtmk1 w3__split_fields1)
  (us_split_discrsqtmk w3__split_discrs1) c12 c21 a33
  (us_split_fieldsqtmk1 r1__split_fields2)
  (us_split_discrsqtmk r1__split_discrs2) c33
  (us_split_fieldsqtmk1 r2__split_fields3)
  (us_split_discrsqtmk r2__split_discrs3) a12
  (us_split_fieldsqtmk1 r3__split_fields3)
  (us_split_discrsqtmk r3__split_discrs3) a23))
  (=>
  (= (to_rep (rec__dispatch__root__i v2__split_fields1)) (to_rep
                                                         (rec__dispatch__root__i
                                                         v1__split_fields)))
  (= (to_rep (rec__dispatch__root__i v3__split_fields1)) 3))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
