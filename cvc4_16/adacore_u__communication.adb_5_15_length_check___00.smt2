;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range
                                    temp___expr_39)))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort character 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (character character) Bool)

(declare-const dummy1 character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep1 (character) Int)

(declare-fun of_rep1 (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range1
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                                                 (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                        (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (positive positive) Bool)

(declare-const dummy3 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun to_rep2 ((x integer)) Int (integerqtint x))

(declare-fun of_rep2 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ((string____ref 0))
(((string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(define-fun dynamic_invariant1 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(declare-const address us_t)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const port Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun to_rep3 ((x positive)) Int (positiveqtint x))

(declare-fun of_rep3 (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort data 0)

(declare-fun dataqtint (data) Int)

;; data'axiom
  (assert
  (forall ((i data))
  (and (<= (- 2147483648) (dataqtint i)) (<= (dataqtint i) 2147483647))))

(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (data data) Bool)

(declare-const dummy5 data)

(declare-datatypes ((data__ref 0))
(((data__refqtmk (data__content data)))))
(define-fun data__ref_data__content__projection ((a data__ref)) data 
  (data__content a))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (integer integer) Bool)

(declare-const dummy6 integer)

(declare-datatypes ((tdata_arrayD1__ref 0))
(((tdata_arrayD1__refqtmk (tdata_arrayD1__content integer)))))
(define-fun tdata_arrayD1__ref_tdata_arrayD1__content__projection ((a tdata_arrayD1__ref)) integer 
  (tdata_arrayD1__content a))

(define-fun to_rep4 ((x data)) Int (dataqtint x))

(declare-fun of_rep4 (Int) data)

;; inversion_axiom
  (assert
  (forall ((x data)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x data)) (! (in_range4 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-datatypes ((map__ref1 0))
(((map__refqtmk1 (map__content1 (Array Int data))))))
(declare-fun slide1 ((Array Int data) Int Int) (Array Int data))

;; slide_eq
  (assert
  (forall ((a (Array Int data)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int data)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq2 ((a (Array Int data)) (a__first Int) (a__last Int)
  (b (Array Int data)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep4 (select a temp___idx_155)) (to_rep4
                                                                  (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int data)) (b (Array Int data)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep4 (select a temp___idx_155)) (to_rep4
                                         (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first2 (mk1 f l))) f)
     (= (to_rep2 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((us_tqtmk1 (elts1 (Array Int data))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int data) (elts1 a))

(define-fun of_array1 ((a (Array Int data)) (f Int)
  (l Int)) us_t1 (us_tqtmk1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep2 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq3 ((x us_t1)
  (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep2 (first2 (rt1 x)))
                  (to_rep2 (last2 (rt1 x))) (elts1 y)
                  (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))

(declare-fun user_eq7 (us_t1 us_t1) Bool)

(declare-const dummy7 us_t1)

(declare-datatypes ((tdata_arrayB__ref 0))
(((tdata_arrayB__refqtmk (tdata_arrayB__content us_t1)))))
(define-fun tdata_arrayB__ref_tdata_arrayB__content__projection ((a tdata_arrayB__ref)) us_t1 
  (tdata_arrayB__content a))

(declare-datatypes ((data_array__ref 0))
(((data_array__refqtmk (data_array__content us_t1)))))
(define-fun data_array__ref_data_array__content__projection ((a data_array__ref)) us_t1 
  (data_array__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__communication__ring_buffer__buffer__content us_t1)(rec__communication__ring_buffer__buffer__first positive)(rec__communication__ring_buffer__buffer__length natural)))))
(define-fun us_split_fields_rec__communication__ring_buffer__buffer__content__projection ((a us_split_fields)) us_t1 
  (rec__communication__ring_buffer__buffer__content a))

(define-fun us_split_fields_rec__communication__ring_buffer__buffer__first__projection ((a us_split_fields)) positive 
  (rec__communication__ring_buffer__buffer__first a))

(define-fun us_split_fields_rec__communication__ring_buffer__buffer__length__projection ((a us_split_fields)) natural 
  (rec__communication__ring_buffer__buffer__length a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq4 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (bool_eq3
                           (rec__communication__ring_buffer__buffer__content
                           (us_split_fields1 a))
                           (rec__communication__ring_buffer__buffer__content
                           (us_split_fields1 b))) true)
                        (= (to_rep3
                           (rec__communication__ring_buffer__buffer__first
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__communication__ring_buffer__buffer__first
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__communication__ring_buffer__buffer__length
                           (us_split_fields1 a))) (to_rep
                                                  (rec__communication__ring_buffer__buffer__length
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const communication__ring_buffer__buffer__content__first__bit Int)

(declare-const communication__ring_buffer__buffer__content__last__bit Int)

(declare-const communication__ring_buffer__buffer__content__position Int)

;; communication__ring_buffer__buffer__content__first__bit_axiom
  (assert (<= 0 communication__ring_buffer__buffer__content__first__bit))

;; communication__ring_buffer__buffer__content__last__bit_axiom
  (assert
  (< communication__ring_buffer__buffer__content__first__bit communication__ring_buffer__buffer__content__last__bit))

;; communication__ring_buffer__buffer__content__position_axiom
  (assert (<= 0 communication__ring_buffer__buffer__content__position))

(declare-const communication__ring_buffer__buffer__first__first__bit Int)

(declare-const communication__ring_buffer__buffer__first__last__bit Int)

(declare-const communication__ring_buffer__buffer__first__position Int)

;; communication__ring_buffer__buffer__first__first__bit_axiom
  (assert (<= 0 communication__ring_buffer__buffer__first__first__bit))

;; communication__ring_buffer__buffer__first__last__bit_axiom
  (assert
  (< communication__ring_buffer__buffer__first__first__bit communication__ring_buffer__buffer__first__last__bit))

;; communication__ring_buffer__buffer__first__position_axiom
  (assert (<= 0 communication__ring_buffer__buffer__first__position))

(declare-const communication__ring_buffer__buffer__length__first__bit Int)

(declare-const communication__ring_buffer__buffer__length__last__bit Int)

(declare-const communication__ring_buffer__buffer__length__position Int)

;; communication__ring_buffer__buffer__length__first__bit_axiom
  (assert (<= 0 communication__ring_buffer__buffer__length__first__bit))

;; communication__ring_buffer__buffer__length__last__bit_axiom
  (assert
  (< communication__ring_buffer__buffer__length__first__bit communication__ring_buffer__buffer__length__last__bit))

;; communication__ring_buffer__buffer__length__position_axiom
  (assert (<= 0 communication__ring_buffer__buffer__length__position))

(declare-fun user_eq8 (us_rep us_rep) Bool)

(declare-const dummy8 us_rep)

(declare-datatypes ((buffer__ref 0))
(((buffer__refqtmk (buffer__content us_rep)))))
(define-fun buffer__ref_buffer__content__projection ((a buffer__ref)) us_rep 
  (buffer__content a))

(declare-const dummy9 (Array Int character))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const component__size2 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; component__size_axiom
  (assert (<= 0 component__size2))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-fun user_eq9 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__communication__mailbox__address (Array Int character))(rec__communication__mailbox__port natural)(rec__communication__mailbox__in_buffer us_rep)(rec__communication__mailbox__out_buffer us_rep)))))
(define-fun us_split_fields_rec__communication__mailbox__address__projection ((a us_split_fields2)) (Array Int character) 
  (rec__communication__mailbox__address a))

(define-fun us_split_fields_rec__communication__mailbox__port__projection ((a us_split_fields2)) natural 
  (rec__communication__mailbox__port a))

(define-fun us_split_fields_rec__communication__mailbox__in_buffer__projection ((a us_split_fields2)) us_rep 
  (rec__communication__mailbox__in_buffer a))

(define-fun us_split_fields_rec__communication__mailbox__out_buffer__projection ((a us_split_fields2)) us_rep 
  (rec__communication__mailbox__out_buffer a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq5 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (bool_eq
                            (rec__communication__mailbox__address
                            (us_split_fields3 a)) 1 15
                            (rec__communication__mailbox__address
                            (us_split_fields3 b)) 1 15) true)
                         (= (to_rep
                            (rec__communication__mailbox__port
                            (us_split_fields3 a))) (to_rep
                                                   (rec__communication__mailbox__port
                                                   (us_split_fields3 b)))))
                         (and
                         (= (bool_eq4
                            (rec__communication__mailbox__in_buffer
                            (us_split_fields3 a))
                            (rec__communication__mailbox__in_buffer
                            (us_split_fields3 b))) true)
                         (= (bool_eq4
                            (rec__communication__mailbox__out_buffer
                            (us_split_fields3 a))
                            (rec__communication__mailbox__out_buffer
                            (us_split_fields3 b))) true)))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const communication__mailbox__address__first__bit Int)

(declare-const communication__mailbox__address__last__bit Int)

(declare-const communication__mailbox__address__position Int)

;; communication__mailbox__address__first__bit_axiom
  (assert (<= 0 communication__mailbox__address__first__bit))

;; communication__mailbox__address__last__bit_axiom
  (assert
  (< communication__mailbox__address__first__bit communication__mailbox__address__last__bit))

;; communication__mailbox__address__position_axiom
  (assert (<= 0 communication__mailbox__address__position))

(declare-const communication__mailbox__port__first__bit Int)

(declare-const communication__mailbox__port__last__bit Int)

(declare-const communication__mailbox__port__position Int)

;; communication__mailbox__port__first__bit_axiom
  (assert (<= 0 communication__mailbox__port__first__bit))

;; communication__mailbox__port__last__bit_axiom
  (assert
  (< communication__mailbox__port__first__bit communication__mailbox__port__last__bit))

;; communication__mailbox__port__position_axiom
  (assert (<= 0 communication__mailbox__port__position))

(declare-const communication__mailbox__in_buffer__first__bit Int)

(declare-const communication__mailbox__in_buffer__last__bit Int)

(declare-const communication__mailbox__in_buffer__position Int)

;; communication__mailbox__in_buffer__first__bit_axiom
  (assert (<= 0 communication__mailbox__in_buffer__first__bit))

;; communication__mailbox__in_buffer__last__bit_axiom
  (assert
  (< communication__mailbox__in_buffer__first__bit communication__mailbox__in_buffer__last__bit))

;; communication__mailbox__in_buffer__position_axiom
  (assert (<= 0 communication__mailbox__in_buffer__position))

(declare-const communication__mailbox__out_buffer__first__bit Int)

(declare-const communication__mailbox__out_buffer__last__bit Int)

(declare-const communication__mailbox__out_buffer__position Int)

;; communication__mailbox__out_buffer__first__bit_axiom
  (assert (<= 0 communication__mailbox__out_buffer__first__bit))

;; communication__mailbox__out_buffer__last__bit_axiom
  (assert
  (< communication__mailbox__out_buffer__first__bit communication__mailbox__out_buffer__last__bit))

;; communication__mailbox__out_buffer__position_axiom
  (assert (<= 0 communication__mailbox__out_buffer__position))

(declare-fun user_eq10 (us_rep1 us_rep1) Bool)

(declare-const dummy10 us_rep1)

(declare-datatypes ((mailbox__ref 0))
(((mailbox__refqtmk (mailbox__content us_rep1)))))
(define-fun mailbox__ref_mailbox__content__projection ((a mailbox__ref)) us_rep1 
  (mailbox__content a))

(declare-sort t3s 0)

(declare-fun t3sqtint (t3s) Int)

;; t3s'axiom
  (assert (forall ((i t3s)) (and (<= 1 (t3sqtint i)) (<= (t3sqtint i) 15))))

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 15)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq11 (t3s t3s) Bool)

(declare-const dummy11 t3s)

(declare-datatypes ((t3s__ref 0))
(((t3s__refqtmk (t3s__content t3s)))))
(define-fun t3s__ref_t3s__content__projection ((a t3s__ref)) t3s (t3s__content
                                                                 a))

(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range1 temp___expr_74)))

(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range2 temp___expr_18)))

(declare-const max Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun dynamic_invariant5 ((temp___expr_168 us_t1)
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)
  (temp___do_typ_inv_167 Bool)) Bool (=>
                                     (not (= temp___skip_constant_165 true))
                                     (and (dynamic_property2 1 max
                                     (first3 temp___expr_168)
                                     (last3 temp___expr_168))
                                     (and (= (first3 temp___expr_168) 1)
                                     (= (last3 temp___expr_168) max)))))

(define-fun default_initial_assumption ((temp___expr_170 us_t1)
  (temp___skip_top_level_171 Bool)) Bool (and (= (first3 temp___expr_170) 1)
                                         (= (last3 temp___expr_170) max)))

(define-fun dynamic_invariant6 ((temp___expr_178 us_rep)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)
  (temp___do_typ_inv_177 Bool)) Bool (and (dynamic_property2 1 max
                                     (first3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1 temp___expr_178)))
                                     (last3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1 temp___expr_178))))
                                     (and
                                     (= (first3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1 temp___expr_178))) 1)
                                     (= (last3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1 temp___expr_178))) 
                                     max))))

(define-fun default_initial_assumption1 ((temp___expr_180 us_rep)
  (temp___skip_top_level_181 Bool)) Bool (and
                                         (and
                                         (and
                                         (= (first3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            temp___expr_180))) 1)
                                         (= (last3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            temp___expr_180))) max))
                                         (= (to_rep3
                                            (rec__communication__ring_buffer__buffer__first
                                            (us_split_fields1
                                            temp___expr_180))) 1))
                                         (= (to_rep
                                            (rec__communication__ring_buffer__buffer__length
                                            (us_split_fields1
                                            temp___expr_180))) 0)))

(declare-fun temp___String_Literal_195 (tuple0) (Array Int character))

;; temp___String_Literal_195__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 1)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 2)) 48))
     (and
     (and
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 3)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 4)) 46))
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 5)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 6)) 48)))
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 7)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 8)) 46))
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 9)) 48)))
     (and
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 10)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 11)) 48))
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 12)) 46))
     (and
     (and
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 13)) 48)
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 14)) 48))
     (= (to_rep1 (select (temp___String_Literal_195 us_void_param) 15)) 48))))) :pattern (
  (temp___String_Literal_195 us_void_param)) )))

(define-fun dynamic_invariant7 ((temp___expr_189 us_rep1)
  (temp___is_init_185 Bool) (temp___skip_constant_186 Bool)
  (temp___do_toplevel_187 Bool)
  (temp___do_typ_inv_188 Bool)) Bool (and
                                     (and (dynamic_property2 1 max
                                     (first3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1
                                     (rec__communication__mailbox__in_buffer
                                     (us_split_fields3 temp___expr_189)))))
                                     (last3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1
                                     (rec__communication__mailbox__in_buffer
                                     (us_split_fields3 temp___expr_189))))))
                                     (and
                                     (= (first3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1
                                        (rec__communication__mailbox__in_buffer
                                        (us_split_fields3 temp___expr_189))))) 1)
                                     (= (last3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1
                                        (rec__communication__mailbox__in_buffer
                                        (us_split_fields3 temp___expr_189))))) 
                                     max)))
                                     (and (dynamic_property2 1 max
                                     (first3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1
                                     (rec__communication__mailbox__out_buffer
                                     (us_split_fields3 temp___expr_189)))))
                                     (last3
                                     (rec__communication__ring_buffer__buffer__content
                                     (us_split_fields1
                                     (rec__communication__mailbox__out_buffer
                                     (us_split_fields3 temp___expr_189))))))
                                     (and
                                     (= (first3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1
                                        (rec__communication__mailbox__out_buffer
                                        (us_split_fields3 temp___expr_189))))) 1)
                                     (= (last3
                                        (rec__communication__ring_buffer__buffer__content
                                        (us_split_fields1
                                        (rec__communication__mailbox__out_buffer
                                        (us_split_fields3 temp___expr_189))))) 
                                     max)))))

(define-fun default_initial_assumption2 ((temp___expr_193 us_rep1)
  (temp___skip_top_level_194 Bool)) Bool (and
                                         (and
                                         (= (rec__communication__mailbox__address
                                            (us_split_fields3
                                            temp___expr_193)) (temp___String_Literal_195
                                                              Tuple0))
                                         (= (to_rep
                                            (rec__communication__mailbox__port
                                            (us_split_fields3
                                            temp___expr_193))) 0))
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (first3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            (rec__communication__mailbox__in_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 1)
                                         (= (last3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            (rec__communication__mailbox__in_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) max))
                                         (= (to_rep3
                                            (rec__communication__ring_buffer__buffer__first
                                            (us_split_fields1
                                            (rec__communication__mailbox__in_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 1))
                                         (= (to_rep
                                            (rec__communication__ring_buffer__buffer__length
                                            (us_split_fields1
                                            (rec__communication__mailbox__in_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 0))
                                         (and
                                         (and
                                         (and
                                         (= (first3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            (rec__communication__mailbox__out_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 1)
                                         (= (last3
                                            (rec__communication__ring_buffer__buffer__content
                                            (us_split_fields1
                                            (rec__communication__mailbox__out_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) max))
                                         (= (to_rep3
                                            (rec__communication__ring_buffer__buffer__first
                                            (us_split_fields1
                                            (rec__communication__mailbox__out_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 1))
                                         (= (to_rep
                                            (rec__communication__ring_buffer__buffer__length
                                            (us_split_fields1
                                            (rec__communication__mailbox__out_buffer
                                            (us_split_fields3
                                            temp___expr_193))))) 0)))))

(assert
;; defqtvc
 ;; File "communication.ads", line 9, characters 0-0
  (not
  (forall ((o natural))
  (=> (dynamic_invariant1 address true false true true)
  (=> (dynamic_invariant port true false true true)
  (=> (= (to_rep o) port)
  (=> (<= (first1 address) (last1 address)) (<= 1 15))))))))
(check-sat)
