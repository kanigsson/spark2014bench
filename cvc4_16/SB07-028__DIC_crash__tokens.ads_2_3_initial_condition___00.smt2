(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((token_set__ref 0))
(((token_set__refqtmk (token_set__content us_rep)))))
(define-fun token_set__ref_token_set__content__projection ((a token_set__ref)) us_rep 
  (token_set__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun init (us_rep) Bool)

(declare-fun init__function_guard (Bool us_rep) Bool)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((cont__ref 0))
(((cont__refqtmk (cont__content us_rep)))))
(define-fun cont__ref_cont__content__projection ((a cont__ref)) us_rep 
  (cont__content a))

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

;; init__def_axiom
  (assert
  (forall ((tokens__x us_rep))
  (! (and
     (forall ((tokens__x1 us_rep)) (length__function_guard
     (length tokens__x1) tokens__x1))
     (= (= (init tokens__x) true) (= (length tokens__x) 0))) :pattern (
  (init tokens__x)) )))

;; temp___result_173'def
  (assert
  (forall ((temp___172 us_rep)) (length__function_guard (length temp___172)
  temp___172)))

(define-fun default_initial_assumption ((temp___expr_170 us_rep)
  (temp___skip_top_level_171 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_171 true))
                                         (= (length temp___expr_170) 0)))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

;; temp___result_164'def
  (assert
  (forall ((temp___163 us_rep)) (length__function_guard (length temp___163)
  temp___163)))

(define-fun default_initial_assumption1 ((temp___expr_161 us_rep)
  (temp___skip_top_level_162 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_162 true))
                                         (= (length temp___expr_161) 0)))

;; length__post_axiom
  (assert
  (forall ((x us_rep)) (! (in_range (length x)) :pattern ((length x)) )))

(assert
;; defqtvc
 ;; File "tokens.ads", line 1, characters 0-0
  (not
  (forall ((x us_rep))
  (=> (default_initial_assumption x false)
  (let ((result (init x)))
  (=> (forall ((x1 us_rep)) (length__function_guard (length x1) x1))
  (=>
  (and (init__function_guard result x) (= (= result true) (= (length x) 0)))
  (=> (forall ((x1 us_rep)) (init__function_guard (init x1) x1))
  (= (init x) true)))))))))
(check-sat)
