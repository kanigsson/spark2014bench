;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__dic_and_predicate_checks__r__f integer)(rec__dic_and_predicate_checks__r__g integer)))))
(define-fun us_split_fields_rec__dic_and_predicate_checks__r__f__projection ((a us_split_fields)) integer 
  (rec__dic_and_predicate_checks__r__f a))

(define-fun us_split_fields_rec__dic_and_predicate_checks__r__g__projection ((a us_split_fields)) integer 
  (rec__dic_and_predicate_checks__r__g a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__dic_and_predicate_checks__r__f
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dic_and_predicate_checks__r__f
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__dic_and_predicate_checks__r__g
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dic_and_predicate_checks__r__g
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const dic_and_predicate_checks__r__f__first__bit Int)

(declare-const dic_and_predicate_checks__r__f__last__bit Int)

(declare-const dic_and_predicate_checks__r__f__position Int)

;; dic_and_predicate_checks__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__first__bit))

;; dic_and_predicate_checks__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__f__first__bit dic_and_predicate_checks__r__f__last__bit))

;; dic_and_predicate_checks__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__position))

(declare-const dic_and_predicate_checks__r__g__first__bit Int)

(declare-const dic_and_predicate_checks__r__g__last__bit Int)

(declare-const dic_and_predicate_checks__r__g__position Int)

;; dic_and_predicate_checks__r__g__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__first__bit))

;; dic_and_predicate_checks__r__g__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__g__first__bit dic_and_predicate_checks__r__g__last__bit))

;; dic_and_predicate_checks__r__g__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((t__ref 0))
(((t__refqtmk (t__content us_rep)))))
(define-fun t__ref_t__content__projection ((a t__ref)) us_rep (t__content a))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__dic_and_predicate_checks__nested_2__r__f integer)))))
(define-fun us_split_fields_rec__dic_and_predicate_checks__nested_2__r__f__projection ((a us_split_fields2)) integer 
  (rec__dic_and_predicate_checks__nested_2__r__f a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (= (to_rep
                            (rec__dic_and_predicate_checks__nested_2__r__f
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dic_and_predicate_checks__nested_2__r__f
                                                   (us_split_fields3 b))))
                    true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const dic_and_predicate_checks__nested_2__r__f__first__bit Int)

(declare-const dic_and_predicate_checks__nested_2__r__f__last__bit Int)

(declare-const dic_and_predicate_checks__nested_2__r__f__position Int)

;; dic_and_predicate_checks__nested_2__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__nested_2__r__f__first__bit))

;; dic_and_predicate_checks__nested_2__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__nested_2__r__f__first__bit dic_and_predicate_checks__nested_2__r__f__last__bit))

;; dic_and_predicate_checks__nested_2__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__nested_2__r__f__position))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-const dummy2 us_rep1)

(declare-datatypes ((t__ref1 0))
(((t__refqtmk1 (t__content1 us_rep1)))))
(define-fun t__ref_t__content__2__projection ((a t__ref1)) us_rep1 (t__content1
                                                                   a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const dic_and_predicate_checks__r__f__first__bit1 Int)

(declare-const dic_and_predicate_checks__r__f__last__bit1 Int)

(declare-const dic_and_predicate_checks__r__f__position1 Int)

;; dic_and_predicate_checks__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__first__bit1))

;; dic_and_predicate_checks__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__f__first__bit1 dic_and_predicate_checks__r__f__last__bit1))

;; dic_and_predicate_checks__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__position1))

(declare-const dic_and_predicate_checks__r__g__first__bit1 Int)

(declare-const dic_and_predicate_checks__r__g__last__bit1 Int)

(declare-const dic_and_predicate_checks__r__g__position1 Int)

;; dic_and_predicate_checks__r__g__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__first__bit1))

;; dic_and_predicate_checks__r__g__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__g__first__bit1 dic_and_predicate_checks__r__g__last__bit1))

;; dic_and_predicate_checks__r__g__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__position1))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((r__ref 0))
(((r__refqtmk (r__content us_rep)))))
(define-fun r__ref_r__content__projection ((a r__ref)) us_rep (r__content a))

(declare-fun is_valid (us_rep) Bool)

(declare-fun is_valid__function_guard (Bool us_rep) Bool)

(declare-fun is_valid1 (us_rep) Bool)

(declare-fun is_valid__function_guard1 (Bool us_rep) Bool)

;; temp___result_176'def
  (assert
  (forall ((temp___175 us_rep)) (is_valid__function_guard
  (is_valid temp___175) temp___175)))

(define-fun dynamic_invariant ((temp___expr_174 us_rep)
  (temp___is_init_170 Bool) (temp___skip_constant_171 Bool)
  (temp___do_toplevel_172 Bool)
  (temp___do_typ_inv_173 Bool)) Bool (=> (= temp___do_toplevel_172 true)
                                     (= (is_valid temp___expr_174) true)))

;; temp___result_181'def
  (assert
  (forall ((temp___180 us_rep)) (is_valid__function_guard1
  (is_valid1 temp___180) temp___180)))

(define-fun default_initial_assumption ((temp___expr_177 us_rep)
  (temp___skip_top_level_178 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__dic_and_predicate_checks__r__g
                                            (us_split_fields1
                                            temp___expr_177))) 0)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_178 true))
                                         (= (is_valid1 temp___expr_177) true))))

;; temp___result_184'def
  (assert
  (forall ((temp___183 us_rep)) (is_valid__function_guard
  (is_valid temp___183) temp___183)))

(define-fun dynamic_predicate ((temp___182 us_rep)) Bool (= (is_valid
                                                            temp___182) true))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun is_valid2 (us_rep1) Bool)

(declare-fun is_valid__function_guard2 (Bool us_rep1) Bool)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const dic_and_predicate_checks__nested_2__r__f__first__bit1 Int)

(declare-const dic_and_predicate_checks__nested_2__r__f__last__bit1 Int)

(declare-const dic_and_predicate_checks__nested_2__r__f__position1 Int)

;; dic_and_predicate_checks__nested_2__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__nested_2__r__f__first__bit1))

;; dic_and_predicate_checks__nested_2__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__nested_2__r__f__first__bit1 dic_and_predicate_checks__nested_2__r__f__last__bit1))

;; dic_and_predicate_checks__nested_2__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__nested_2__r__f__position1))

(declare-fun user_eq4 (us_rep1 us_rep1) Bool)

(declare-const dummy4 us_rep1)

(declare-datatypes ((r__ref1 0))
(((r__refqtmk1 (r__content1 us_rep1)))))
(define-fun r__ref_r__content__2__projection ((a r__ref1)) us_rep1 (r__content1
                                                                   a))

(define-fun dynamic_invariant1 ((temp___expr_202 us_rep1)
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)
  (temp___do_typ_inv_201 Bool)) Bool (< 0 (to_rep
                                          (rec__dic_and_predicate_checks__nested_2__r__f
                                          (us_split_fields3 temp___expr_202)))))

;; temp___result_210'def
  (assert
  (forall ((temp___209 us_rep1)) (is_valid__function_guard2
  (is_valid2 temp___209) temp___209)))

(define-fun default_initial_assumption1 ((temp___expr_206 us_rep1)
  (temp___skip_top_level_207 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_207 true))
                                         (= (is_valid2 temp___expr_206) true)))

(define-fun dynamic_predicate1 ((temp___211 us_rep1)) Bool (< 0 (to_rep
                                                                (rec__dic_and_predicate_checks__nested_2__r__f
                                                                (us_split_fields3
                                                                temp___211)))))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const dic_and_predicate_checks__r__f__first__bit2 Int)

(declare-const dic_and_predicate_checks__r__f__last__bit2 Int)

(declare-const dic_and_predicate_checks__r__f__position2 Int)

;; dic_and_predicate_checks__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__first__bit2))

;; dic_and_predicate_checks__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__f__first__bit2 dic_and_predicate_checks__r__f__last__bit2))

;; dic_and_predicate_checks__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__position2))

(declare-const dic_and_predicate_checks__r__g__first__bit2 Int)

(declare-const dic_and_predicate_checks__r__g__last__bit2 Int)

(declare-const dic_and_predicate_checks__r__g__position2 Int)

;; dic_and_predicate_checks__r__g__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__first__bit2))

;; dic_and_predicate_checks__r__g__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__g__first__bit2 dic_and_predicate_checks__r__g__last__bit2))

;; dic_and_predicate_checks__r__g__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__position2))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ((nested_3_t__ref 0))
(((nested_3_t__refqtmk (nested_3_t__content us_rep)))))
(define-fun nested_3_t__ref_nested_3_t__content__projection ((a nested_3_t__ref)) us_rep 
  (nested_3_t__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const dic_and_predicate_checks__r__f__first__bit3 Int)

(declare-const dic_and_predicate_checks__r__f__last__bit3 Int)

(declare-const dic_and_predicate_checks__r__f__position3 Int)

;; dic_and_predicate_checks__r__f__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__first__bit3))

;; dic_and_predicate_checks__r__f__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__f__first__bit3 dic_and_predicate_checks__r__f__last__bit3))

;; dic_and_predicate_checks__r__f__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__f__position3))

(declare-const dic_and_predicate_checks__r__g__first__bit3 Int)

(declare-const dic_and_predicate_checks__r__g__last__bit3 Int)

(declare-const dic_and_predicate_checks__r__g__position3 Int)

;; dic_and_predicate_checks__r__g__first__bit_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__first__bit3))

;; dic_and_predicate_checks__r__g__last__bit_axiom
  (assert
  (< dic_and_predicate_checks__r__g__first__bit3 dic_and_predicate_checks__r__g__last__bit3))

;; dic_and_predicate_checks__r__g__position_axiom
  (assert (<= 0 dic_and_predicate_checks__r__g__position3))

(declare-fun user_eq6 (us_rep us_rep) Bool)

(declare-const dummy6 us_rep)

(declare-datatypes ((p__ref 0))
(((p__refqtmk (p__content us_rep)))))
(define-fun p__ref_p__content__projection ((a p__ref)) us_rep (p__content a))

(declare-fun is_valid3 (us_rep) Bool)

(declare-fun is_valid__function_guard3 (Bool us_rep) Bool)

;; temp___result_232'def
  (assert
  (forall ((temp___231 us_rep)) (is_valid__function_guard3
  (is_valid3 temp___231) temp___231)))

(define-fun dynamic_invariant2 ((temp___expr_230 us_rep)
  (temp___is_init_226 Bool) (temp___skip_constant_227 Bool)
  (temp___do_toplevel_228 Bool)
  (temp___do_typ_inv_229 Bool)) Bool (=> (= temp___do_toplevel_228 true)
                                     (= (is_valid3 temp___expr_230) true)))

;; temp___result_237'def
  (assert
  (forall ((temp___236 us_rep)) (is_valid__function_guard3
  (is_valid3 temp___236) temp___236)))

(define-fun default_initial_assumption2 ((temp___expr_233 us_rep)
  (temp___skip_top_level_234 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__dic_and_predicate_checks__r__g
                                            (us_split_fields1
                                            temp___expr_233))) 0)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_234 true))
                                         (= (is_valid3 temp___expr_233) true))))

;; temp___result_240'def
  (assert
  (forall ((temp___239 us_rep)) (is_valid__function_guard3
  (is_valid3 temp___239) temp___239)))

(define-fun dynamic_predicate2 ((temp___238 us_rep)) Bool (= (is_valid3
                                                             temp___238) true))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep2 0)

(declare-fun bool_eq2 (us_rep2 us_rep2) Bool)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-fun user_eq7 (us_rep2 us_rep2) Bool)

(declare-const dummy7 us_rep2)

(declare-datatypes ((t__ref2 0))
(((t__refqtmk2 (t__content2 us_rep2)))))
(define-fun t__ref_t__content__3__projection ((a t__ref2)) us_rep2 (t__content2
                                                                   a))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun default_initial_assumption3 ((temp___expr_167 us_rep)
  (temp___skip_top_level_168 Bool)) Bool (= (to_rep
                                            (rec__dic_and_predicate_checks__r__g
                                            (us_split_fields1
                                            temp___expr_167))) 0))

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((x us_rep))
  (! (= (= (is_valid x) true)
     (< 0 (to_rep (rec__dic_and_predicate_checks__r__f (us_split_fields1 x))))) :pattern (
  (is_valid x)) )))

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((x us_rep))
  (! (and (forall ((x1 us_rep)) (is_valid__function_guard (is_valid x1) x1))
     (= (= (is_valid1 x) true) (= (is_valid x) true))) :pattern ((is_valid1
                                                                 x)) )))

(define-fun dynamic_invariant4 ((temp___expr_191 us_rep1)
  (temp___is_init_187 Bool) (temp___skip_constant_188 Bool)
  (temp___do_toplevel_189 Bool)
  (temp___do_typ_inv_190 Bool)) Bool (=> (= temp___do_toplevel_189 true)
                                     (=> (= temp___is_init_187 true)
                                     (< 0 (to_rep
                                          (rec__dic_and_predicate_checks__nested_2__r__f
                                          (us_split_fields3 temp___expr_191)))))))

(define-fun dynamic_predicate3 ((temp___196 us_rep1)) Bool (< 0 (to_rep
                                                                (rec__dic_and_predicate_checks__nested_2__r__f
                                                                (us_split_fields3
                                                                temp___196)))))

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((x us_rep1))
  (! (= (= (is_valid2 x) true)
     (< 0 (to_rep
          (rec__dic_and_predicate_checks__nested_2__r__f
          (us_split_fields3 x))))) :pattern ((is_valid2 x)) )))

;; temp___result_223'def
  (assert
  (forall ((temp___222 us_rep)) (is_valid__function_guard3
  (is_valid3 temp___222) temp___222)))

(define-fun default_initial_assumption4 ((temp___expr_219 us_rep)
  (temp___skip_top_level_220 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__dic_and_predicate_checks__r__g
                                            (us_split_fields1
                                            temp___expr_219))) 0)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_220 true))
                                         (= (is_valid3 temp___expr_219) true))))

;; is_valid__post_axiom
  (assert true)

;; is_valid__def_axiom
  (assert
  (forall ((x us_rep))
  (! (and (forall ((x1 us_rep)) (is_valid__function_guard (is_valid x1) x1))
     (= (= (is_valid3 x) true) (= (is_valid x) true))) :pattern ((is_valid3
                                                                 x)) )))

(assert
;; defqtvc
 ;; File "dic_and_predicate_checks.ads", line 1, characters 0-0
  (not
  (forall ((x1__split_fields us_split_fields) (usf integer))
  (=> (default_initial_assumption (us_repqtmk x1__split_fields) false)
  (=> (dynamic_invariant (us_repqtmk x1__split_fields) false false true true)
  (let ((usf1 (us_repqtmk1 (us_split_fieldsqtmk1 usf))))
  (=> (default_initial_assumption1 usf1 true) (dynamic_predicate1 usf1))))))))
(check-sat)
