(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const values__first integer)

(declare-const values__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort index 0)

(declare-fun indexqtint (index) Int)

;; index'axiom
  (assert
  (forall ((i index)) (and (<= 1 (indexqtint i)) (<= (indexqtint i) 100))))

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (index index) Bool)

(declare-const dummy3 index)

(declare-datatypes ((index__ref 0))
(((index__refqtmk (index__content index)))))
(define-fun index__ref_index__content__projection ((a index__ref)) index 
  (index__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range4 low) (in_range4 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length1 ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                   (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ((nat_array__ref 0))
(((nat_array__refqtmk (nat_array__content us_t)))))
(define-fun nat_array__ref_nat_array__content__projection ((a nat_array__ref)) us_t 
  (nat_array__content a))

(declare-fun is_perm (us_t us_t) Bool)

(declare-fun is_perm__function_guard (Bool us_t us_t) Bool)

(declare-fun occ (us_t Int) Int)

(declare-fun occ__function_guard (Int us_t Int) Bool)

(define-fun dynamic_invariant1 ((temp___expr_172 us_t)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (=>
                                     (not (= temp___skip_constant_169 true))
                                     (dynamic_property 1 100
                                     (first1 temp___expr_172)
                                     (last1 temp___expr_172))))

;; is_perm__post_axiom
  (assert true)

;; is_perm__def_axiom
  (assert
  (forall ((a us_t) (b us_t))
  (! (and (forall ((a1 us_t) (e Int)) (occ__function_guard (occ a1 e) a1 e))
     (and (forall ((b1 us_t) (e Int)) (occ__function_guard (occ b1 e) b1 e))
     (= (= (is_perm a b) true)
     (forall ((e Int))
     (=> (and (<= 0 e) (<= e 2147483647)) (= (occ a e) (occ b e))))))) :pattern (
  (is_perm a b)) )))

(declare-fun index_of_minimum (us_t) Int)

(declare-fun index_of_minimum__function_guard (Int us_t) Bool)

;; index_of_minimum__post_axiom
  (assert
  (forall ((values us_t))
  (! (=>
     (and (dynamic_invariant1 values true true true true)
     (< 0 (length1 values)))
     (let ((result (index_of_minimum values)))
     (=> (index_of_minimum__function_guard result values)
     (and
     (and (and (<= (first1 values) result) (<= result (last1 values)))
     (forall ((i Int))
     (=> (and (<= (first1 values) i) (<= i (last1 values)))
     (<= (to_rep (select (to_array values) result)) (to_rep
                                                    (select (to_array values) i))))))
     (dynamic_invariant result true false true true))))) :pattern ((index_of_minimum
                                                                   values)) )))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const previous__first integer)

(declare-const previous__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-datatypes ((tpreviousS__ref 0))
(((tpreviousS__refqtmk (tpreviousS__content us_t)))))
(define-fun tpreviousS__ref_tpreviousS__content__projection ((a tpreviousS__ref)) us_t 
  (tpreviousS__content a))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-const dummy5 integer)

(declare-datatypes ((t25b__ref 0))
(((t25b__refqtmk (t25b__content integer)))))
(define-fun t25b__ref_t25b__content__projection ((a t25b__ref)) integer 
  (t25b__content a))

(declare-datatypes ((t27b__ref 0))
(((t27b__refqtmk (t27b__content us_t)))))
(define-fun t27b__ref_t27b__content__projection ((a t27b__ref)) us_t 
  (t27b__content a))

(define-fun dynamic_invariant2 ((temp___expr_296 us_t)
  (temp___is_init_292 Bool) (temp___skip_constant_293 Bool)
  (temp___do_toplevel_294 Bool)
  (temp___do_typ_inv_295 Bool)) Bool (=>
                                     (not (= temp___skip_constant_293 true))
                                     (and (dynamic_property
                                     (to_rep1 values__first)
                                     (to_rep1 values__last)
                                     (first1 temp___expr_296)
                                     (last1 temp___expr_296))
                                     (and
                                     (= (first1 temp___expr_296) (to_rep1
                                                                 values__first))
                                     (= (last1 temp___expr_296) (to_rep1
                                                                values__last))))))

(define-fun default_initial_assumption ((temp___expr_298 us_t)
  (temp___skip_top_level_299 Bool)) Bool (and
                                         (= (first1 temp___expr_298) 
                                         (to_rep1 values__first))
                                         (= (last1 temp___expr_298) (to_rep1
                                                                    values__last))))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun dynamic_invariant5 ((temp___expr_165 Int)
  (temp___is_init_161 Bool) (temp___skip_constant_162 Bool)
  (temp___do_toplevel_163 Bool)
  (temp___do_typ_inv_164 Bool)) Bool (=>
                                     (or (= temp___is_init_161 true)
                                     (<= 1 100)) (in_range4 temp___expr_165)))

(declare-sort nb_occ 0)

(declare-fun nb_occqtint (nb_occ) Int)

;; nb_occ'axiom
  (assert
  (forall ((i nb_occ)) (and (<= 0 (nb_occqtint i)) (<= (nb_occqtint i) 100))))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (nb_occ nb_occ) Bool)

(declare-const dummy6 nb_occ)

(declare-datatypes ((nb_occ__ref 0))
(((nb_occ__refqtmk (nb_occ__content nb_occ)))))
(define-fun nb_occ__ref_nb_occ__content__projection ((a nb_occ__ref)) nb_occ 
  (nb_occ__content a))

(define-fun dynamic_invariant6 ((temp___expr_178 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)
  (temp___do_typ_inv_177 Bool)) Bool (=>
                                     (or (= temp___is_init_174 true)
                                     (<= 0 100)) (in_range5 temp___expr_178)))

(declare-fun remove_last (us_t) us_t)

(declare-fun remove_last__function_guard (us_t us_t) Bool)

(declare-datatypes ((t17s__ref 0))
(((t17s__refqtmk (t17s__content us_t)))))
(define-fun t17s__ref_t17s__content__projection ((a t17s__ref)) us_t 
  (t17s__content a))

;; remove_last__post_axiom
  (assert
  (forall ((a us_t))
  (! (=> (and (dynamic_invariant1 a true true true true) (< 0 (length1 a)))
     (let ((result (remove_last a)))
     (=> (remove_last__function_guard result a) (dynamic_invariant1 result
     true false true true)))) :pattern ((remove_last a)) )))

;; remove_last__def_axiom
  (assert
  (forall ((a us_t))
  (! (=> (dynamic_invariant1 a true true true true)
     (= (remove_last a) (let ((temp___190 (let ((temp___189 (- (last1 a) 1)))
                                          (let ((temp___188 (first1 a)))
                                          (of_array (to_array a) temp___188
                                          temp___189)))))
                        (of_array (to_array temp___190) (first1 temp___190)
                        (last1 temp___190))))) :pattern ((remove_last a)) )))

(declare-fun occ_def (us_t Int) Int)

(declare-fun occ_def__function_guard (Int us_t Int) Bool)

;; occ_def__def_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and
     (and (dynamic_invariant1 a true true true true) (dynamic_invariant3 e
     true true true true)) (occ_def__function_guard (occ_def a e) a e))
     (and
     (forall ((a1 us_t)) (remove_last__function_guard (remove_last a1) a1))
     (and
     (forall ((a1 us_t)) (remove_last__function_guard (remove_last a1) a1))
     (and
     (forall ((a1 us_t) (e1 Int)) (occ_def__function_guard
     (occ_def (remove_last a1) e1) (remove_last a1) e1))
     (and
     (forall ((a1 us_t)) (remove_last__function_guard (remove_last a1) a1))
     (and
     (forall ((a1 us_t)) (remove_last__function_guard (remove_last a1) a1))
     (and
     (forall ((a1 us_t) (e1 Int)) (occ_def__function_guard
     (occ_def (remove_last a1) e1) (remove_last a1) e1))
     (= (occ_def a e) (ite (= (length1 a) 0) 0
                      (ite (= (to_rep (select (to_array a) (last1 a))) e)
                      (+ (occ_def (remove_last a) e) 1)
                      (occ_def (remove_last a) e))))))))))) :pattern (
  (occ_def a e)) ))))

;; occ_def__post_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant1 a true true true true) (dynamic_invariant3 e
     true true true true))
     (let ((result (occ_def a e)))
     (=> (occ_def__function_guard result a e)
     (and (<= result (length1 a)) (dynamic_invariant6 result true false true
     true))))) :pattern ((occ_def a e)) ))))

;; occ__post_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant1 a true true true true) (dynamic_invariant3 e
     true true true true))
     (let ((result (occ a e)))
     (=> (occ__function_guard result a e)
     (and (<= result (length1 a)) (dynamic_invariant6 result true false true
     true))))) :pattern ((occ a e)) ))))

;; occ__def_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant1 a true true true true) (dynamic_invariant3 e
     true true true true))
     (and
     (forall ((a1 us_t) (e1 Int)) (occ_def__function_guard (occ_def a1 e1) a1
     e1)) (= (occ a e) (occ_def a e)))) :pattern ((occ a e)) ))))

(assert
;; defqtvc
 ;; File "sort.ads", line 7, characters 0-0
  (not
  (forall ((values (Array Int natural)) (smallest Int)
  (previous (Array Int natural)) (o Int) (o1 Int) (spark__branch Bool)
  (temp___304 Int) (o2 Int))
  (=> (dynamic_property 1 100 (to_rep1 values__first) (to_rep1 values__last))
  (=> (dynamic_invariant smallest false false true true)
  (=> (default_initial_assumption
  (of_array previous (to_rep1 previous__first) (to_rep1 previous__last))
  false)
  (=>
  (and (dynamic_property (to_rep1 values__first) (to_rep1 values__last)
  (to_rep1 previous__first) (to_rep1 previous__last))
  (and (= (to_rep1 previous__first) (to_rep1 values__first))
  (= (to_rep1 previous__last) (to_rep1 values__last))))
  (=> (= (to_rep1 values__last) o)
  (=> (= (to_rep1 values__first) o1)
  (=> (= spark__branch (ite (= (length o1 o) 0) true false))
  (=> (not (= spark__branch true))
  (=> (= (to_rep1 values__first) temp___304)
  (=> (= (to_rep1 values__last) o2)
  (let ((o3 (- o2 1)))
  (=> (in_range1 o3)
  (forall ((current Int))
  (=> (= current temp___304)
  (=>
  (= (and (ite (<= temp___304 current) true false) (ite (<= current o3) true
                                                   false)) true)
  (forall ((temp___loop_entry_316 (Array Int natural)))
  (=> (= temp___loop_entry_316 values)
  (forall ((temp___306 Int))
  (=> (= (to_rep1 values__last) temp___306)
  (=>
  (=> (<= current temp___306)
  (and
  (and (<= (to_rep1 values__first) current)
  (<= current (to_rep1 values__last)))
  (and (<= (to_rep1 values__first) temp___306)
  (<= temp___306 (to_rep1 values__last)))))
  (let ((temp___307 (of_array values current temp___306)))
  (let ((o4 (of_array (to_array temp___307) (first1 temp___307)
            (last1 temp___307))))
  (let ((o5 (index_of_minimum o4)))
  (=>
  (and (index_of_minimum__function_guard o5 o4)
  (and (dynamic_invariant o5 true false true true)
  (and (and (<= (first1 o4) o5) (<= o5 (last1 o4)))
  (forall ((i Int))
  (=> (and (<= (first1 o4) i) (<= i (last1 o4)))
  (<= (to_rep (select (to_array o4) o5)) (to_rep (select (to_array o4) i))))))))
  (forall ((smallest1 Int))
  (=> (= smallest1 o5)
  (forall ((spark__branch1 Bool) (values1 (Array Int natural)))
  (=>
  (forall ((values2 (Array Int natural)) (o6 integer) (o7 integer)
  (o8 (Array Int natural))) (is_perm__function_guard
  (is_perm (of_array values2 (to_rep1 o7) (to_rep1 o6))
  (of_array o8 (to_rep1 o7) (to_rep1 o6)))
  (of_array values2 (to_rep1 o7) (to_rep1 o6))
  (of_array o8 (to_rep1 o7) (to_rep1 o6))))
  (=>
  (and (= spark__branch1 (ite (= smallest1 current) false true))
  (ite (= spark__branch1 true)
  (and
  (ite (<= (to_rep1 values__first) (to_rep1 values__last))
  (<= (to_rep1 values__first) (to_rep1 values__last))
  (< (to_rep1 values__last) (to_rep1 values__first)))
  (exists ((o6 Int))
  (and (= (to_rep1 values__last) o6)
  (exists ((o7 Int))
  (and (= (to_rep1 values__first) o7)
  (exists ((o8 Int))
  (and (= (to_rep1 values__first) o8)
  (exists ((o9 Int))
  (and (= (to_rep1 values__first) o9)
  (let ((temp___308 (of_array (slide values o9 o8) o7 o6)))
  (and
  (ite (<= (first1 temp___308) (last1 temp___308))
  (and (<= (to_rep1 previous__first) (to_rep1 previous__last))
  (= (- (last1 temp___308) (first1 temp___308)) (- (to_rep1 previous__last) 
  (to_rep1 previous__first))))
  (< (to_rep1 previous__last) (to_rep1 previous__first)))
  (and (in_range3 current)
  (let ((o10 values__last))
  (let ((o11 values__first))
  (exists ((o12 (Array Int natural)))
  (and (= o12 values1)
  (and
  (and
  (and
  (= (is_perm (of_array values (to_rep1 o11) (to_rep1 o10))
     (of_array o12 (to_rep1 o11) (to_rep1 o10))) true)
  (= (to_rep (select o12 current)) (to_rep (select values smallest1))))
  (= (to_rep (select o12 smallest1)) (to_rep (select values current))))
  (forall ((z Int))
  (=> (and (<= (to_rep1 o11) z) (<= z (to_rep1 o10)))
  (=> (and (not (= z current)) (not (= z smallest1)))
  (= (to_rep (select o12 z)) (to_rep (select values z)))))))))))))))))))))))
  (= values1 values)))
  (forall ((usf Int))
  (forall ((o6 Int))
  (=> (= (to_rep1 values__first) o6)
  (=>
  (= (and (ite (<= o6 usf) true false) (ite (<= usf current) true false)) true)
  (forall ((o7 Int))
  (=> (= (to_rep1 values__last) o7) (in_range1 (+ usf 1))))))))))))))))))))))))))))))))))))))))
(check-sat)
