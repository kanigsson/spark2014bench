;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((node__ref 0))
(((node__refqtmk (node__content us_rep)))))
(define-fun node__ref_node__content__projection ((a node__ref)) us_rep 
  (node__content a))

(declare-const n us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun get_data (us_rep) Int)

(declare-fun get_data__function_guard (Int us_rep) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

;; get_data__post_axiom
  (assert
  (forall ((n1 us_rep))
  (! (let ((result (get_data n1)))
     (=> (get_data__function_guard result n1) (dynamic_invariant result true
     false true true))) :pattern ((get_data n1)) )))

(declare-fun get_next (us_rep) us_rep)

(declare-fun get_next__function_guard (us_rep us_rep) Bool)

;; get_next__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "user_of_types_and_subtypes_legal.ads", line 6, characters 0-0
  (not
  (let ((o n))
  (let ((o1 (get_next o)))
  (=> (get_next__function_guard o1 o)
  (let ((o2 (get_data o1)))
  (=>
  (and (get_data__function_guard o2 o1) (dynamic_invariant o2 true false true
  true))
  (let ((o3 n))
  (let ((o4 (get_data o3)))
  (=>
  (and (get_data__function_guard o4 o3) (dynamic_invariant o4 true false true
  true))
  (forall ((user_of_types_and_subtypes_legal__same_as_next__result Bool))
  (=>
  (= user_of_types_and_subtypes_legal__same_as_next__result (ite (= o4 o2)
                                                            true false))
  (=> (get_data__function_guard (get_data n) n)
  (=> (get_next__function_guard (get_next n) n)
  (=> (get_next__function_guard (get_next n) n)
  (=> (get_data__function_guard (get_data (get_next n)) (get_next n))
  (=> (not (= (get_data n) (get_data (get_next n))))
  (not (= user_of_types_and_subtypes_legal__same_as_next__result true)))))))))))))))))))
(check-sat)
