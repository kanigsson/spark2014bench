(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort dollar_amount 0)

(declare-fun dollar_amountqtint (dollar_amount) Int)

;; dollar_amount'axiom
  (assert
  (forall ((i dollar_amount))
  (and (<= (- 30000) (dollar_amountqtint i))
  (<= (dollar_amountqtint i) 30000))))

(define-fun in_range ((x Int)) Bool (and (<= (- 30000) x) (<= x 30000)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (dollar_amount dollar_amount) Bool)

(declare-const dummy dollar_amount)

(declare-datatypes ((dollar_amount__ref 0))
(((dollar_amount__refqtmk (dollar_amount__content dollar_amount)))))
(define-fun dollar_amount__ref_dollar_amount__content__projection ((a dollar_amount__ref)) dollar_amount 
  (dollar_amount__content a))

(define-fun to_rep ((x dollar_amount)) Int (dollar_amountqtint x))

(declare-fun of_rep (Int) dollar_amount)

;; inversion_axiom
  (assert
  (forall ((x dollar_amount))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x dollar_amount)) (! (in_range
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__c392008_0__account__current_balance dollar_amount)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__c392008_0__account__current_balance__projection ((a us_split_fields)) dollar_amount 
  (rec__c392008_0__account__current_balance a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__c392008_0__account__current_balance
                           (us_split_fields1 a))) (to_rep
                                                  (rec__c392008_0__account__current_balance
                                                  (us_split_fields1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const c392008_0__account__current_balance__first__bit Int)

(declare-const c392008_0__account__current_balance__last__bit Int)

(declare-const c392008_0__account__current_balance__position Int)

;; c392008_0__account__current_balance__first__bit_axiom
  (assert (<= 0 c392008_0__account__current_balance__first__bit))

;; c392008_0__account__current_balance__last__bit_axiom
  (assert
  (< c392008_0__account__current_balance__first__bit c392008_0__account__current_balance__last__bit))

;; c392008_0__account__current_balance__position_axiom
  (assert (<= 0 c392008_0__account__current_balance__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((account__ref 0))
(((account__refqtmk (account__content us_rep)))))
(define-fun account__ref_account__content__projection ((a account__ref)) us_rep 
  (account__content a))

(declare-const a__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun default_initial_assumption ((temp___expr_167 us_rep)
  (temp___skip_top_level_168 Bool)) Bool (= (attr__tag temp___expr_167) 
  us_tag))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort tdollar_amountB 0)

(declare-fun tdollar_amountBqtint (tdollar_amountB) Int)

;; tdollar_amountB'axiom
  (assert
  (forall ((i tdollar_amountB))
  (and (<= (- 32768) (tdollar_amountBqtint i))
  (<= (tdollar_amountBqtint i) 32767))))

(define-fun in_range1 ((x1 Int)) Bool (and (<= (- 32768) x1) (<= x1 32767)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq2 (tdollar_amountB tdollar_amountB) Bool)

(declare-const dummy2 tdollar_amountB)

(declare-datatypes ((tdollar_amountB__ref 0))
(((tdollar_amountB__refqtmk (tdollar_amountB__content tdollar_amountB)))))
(define-fun tdollar_amountB__ref_tdollar_amountB__content__projection ((a tdollar_amountB__ref)) tdollar_amountB 
  (tdollar_amountB__content a))

(define-fun dynamic_invariant ((temp___expr_159 Int)
  (temp___is_init_155 Bool) (temp___skip_constant_156 Bool)
  (temp___do_toplevel_157 Bool)
  (temp___do_typ_inv_158 Bool)) Bool (=>
                                     (or (= temp___is_init_155 true)
                                     (<= (- 30000) 30000)) (in_range
                                     temp___expr_159)))

(assert
;; defqtvc
 ;; File "c392008_0.ads", line 152, characters 0-0
  (not
  (forall ((a__split_fields us_split_fields) (o Int))
  (=> (dynamic_invariant x true false true true)
  (=>
  (= (to_rep (rec__c392008_0__account__current_balance a__split_fields)) o)
  (let ((o1 (+ o x))) (=> (in_range1 o1) (in_range o1))))))))
(check-sat)
