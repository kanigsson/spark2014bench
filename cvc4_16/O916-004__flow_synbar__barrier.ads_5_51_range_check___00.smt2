;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort barrier_limit 0)

(declare-fun barrier_limitqtint (barrier_limit) Int)

;; barrier_limit'axiom
  (assert
  (forall ((i barrier_limit))
  (and (<= 1 (barrier_limitqtint i)) (<= (barrier_limitqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (barrier_limit barrier_limit) Bool)

(declare-const dummy barrier_limit)

(declare-datatypes ((barrier_limit__ref 0))
(((barrier_limit__refqtmk (barrier_limit__content barrier_limit)))))
(define-fun barrier_limit__ref_barrier_limit__content__projection ((a barrier_limit__ref)) barrier_limit 
  (barrier_limit__content a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk
  (rec__synchronous_barriers__synchronous_barrier__release_threshold barrier_limit)))))
(define-fun us_split_discrs_rec__synchronous_barriers__synchronous_barrier__release_threshold__projection ((a us_split_discrs)) barrier_limit 
  (rec__synchronous_barriers__synchronous_barrier__release_threshold a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_discrs1 us_split_discrs)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__first__bit Int)

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__last__bit Int)

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__position Int)

;; synchronous_barriers__synchronous_barrier__release_threshold__first__bit_axiom
  (assert
  (<= 0 synchronous_barriers__synchronous_barrier__release_threshold__first__bit))

;; synchronous_barriers__synchronous_barrier__release_threshold__last__bit_axiom
  (assert
  (< synchronous_barriers__synchronous_barrier__release_threshold__first__bit 
  synchronous_barriers__synchronous_barrier__release_threshold__last__bit))

;; synchronous_barriers__synchronous_barrier__release_threshold__position_axiom
  (assert
  (<= 0 synchronous_barriers__synchronous_barrier__release_threshold__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-datatypes ((synchronous_barrier__ref 0))
(((synchronous_barrier__refqtmk (synchronous_barrier__content us_rep)))))
(define-fun synchronous_barrier__ref_synchronous_barrier__content__projection ((a synchronous_barrier__ref)) us_rep 
  (synchronous_barrier__content a))

(declare-const sb__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun to_rep ((x barrier_limit)) Int (barrier_limitqtint x))

(declare-fun of_rep (Int) barrier_limit)

;; inversion_axiom
  (assert
  (forall ((x barrier_limit))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x barrier_limit)) (! (in_range
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_discrs2 us_split_discrs)))))
(define-fun us_rep___split_discrs__2__projection ((a us_rep1)) us_split_discrs 
  (us_split_discrs2 a))

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk (us_split_discrs2 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1 (us_split_discrs1 r)))

(define-fun in_range1 ((rec__synchronous_barriers__synchronous_barrier__release_threshold1 Int)
  (a us_rep)) Bool (= rec__synchronous_barriers__synchronous_barrier__release_threshold1 
  (to_rep
  (rec__synchronous_barriers__synchronous_barrier__release_threshold
  (us_split_discrs1 a)))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__first__bit1 Int)

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__last__bit1 Int)

(declare-const synchronous_barriers__synchronous_barrier__release_threshold__position1 Int)

;; synchronous_barriers__synchronous_barrier__release_threshold__first__bit_axiom
  (assert
  (<= 0 synchronous_barriers__synchronous_barrier__release_threshold__first__bit1))

;; synchronous_barriers__synchronous_barrier__release_threshold__last__bit_axiom
  (assert
  (< synchronous_barriers__synchronous_barrier__release_threshold__first__bit1 
  synchronous_barriers__synchronous_barrier__release_threshold__last__bit1))

;; synchronous_barriers__synchronous_barrier__release_threshold__position_axiom
  (assert
  (<= 0 synchronous_barriers__synchronous_barrier__release_threshold__position1))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-datatypes ((tTsbSP__ref 0))
(((tTsbSP__refqtmk (tTsbSP__content us_rep1)))))
(define-fun tTsbSP__ref_tTsbSP__content__projection ((a tTsbSP__ref)) us_rep1 
  (tTsbSP__content a))

(define-fun dynamic_invariant ((temp___expr_158 Int)
  (temp___is_init_154 Bool) (temp___skip_constant_155 Bool)
  (temp___do_toplevel_156 Bool)
  (temp___do_typ_inv_157 Bool)) Bool (=>
                                     (or (= temp___is_init_154 true)
                                     (<= 1 2147483647)) (in_range
                                     temp___expr_158)))

(assert
;; defqtvc
 ;; File "barrier.ads", line 3, characters 0-0
  (not (in_range 1)))
(check-sat)
