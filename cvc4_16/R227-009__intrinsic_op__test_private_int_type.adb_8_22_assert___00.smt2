(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((my_int__ref 0))
(((my_int__refqtmk (my_int__content us_rep)))))
(define-fun my_int__ref_my_int__content__projection ((a my_int__ref)) us_rep 
  (my_int__content a))

(declare-fun ole (us_rep us_rep) Bool)

(declare-fun ole__function_guard (Bool us_rep us_rep) Bool)

;; ole__post_axiom
  (assert true)

(declare-const my_zero us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const my_one us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-fun ogt (us_rep us_rep) Bool)

(declare-fun ogt__function_guard (Bool us_rep us_rep) Bool)

;; ogt__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "test_private_int_type.adb", line 3, characters 0-0
  (not
  (let ((o my_one))
  (let ((o1 my_zero))
  (let ((o2 (ole o1 o)))
  (=> (ole__function_guard o2 o1 o)
  (forall ((spark__branch Bool))
  (=> (= spark__branch o2)
  (=> (= spark__branch true)
  (let ((o3 my_one))
  (let ((o4 my_zero))
  (let ((o5 (ogt o4 o3)))
  (=> (ogt__function_guard o5 o4 o3)
  (forall ((x Bool)) (=> (= x o5) (= x true))))))))))))))))
(check-sat)
(exit)
