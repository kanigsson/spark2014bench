;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
;;; SMT-LIB2: real arithmetic
(define-fun fp.isFinite32 ((x Float32)) Bool (not (or (fp.isInfinite x) (fp.isNaN x))))
(define-fun fp.isIntegral32 ((x Float32)) Bool (or (fp.isZero x) (and (fp.isNormal x) (= x (fp.roundToIntegral RNE x)))))
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun pow2 (Int) Int)

(define-fun is_plus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                (fp.isPositive x)))

(define-fun is_minus_infinity ((x Float32)) Bool (and (fp.isInfinite x)
                                                 (fp.isNegative x)))

(define-fun is_plus_zero ((x Float32)) Bool (and (fp.isZero x)
                                            (fp.isPositive x)))

(define-fun is_minus_zero ((x Float32)) Bool (and (fp.isZero x)
                                             (fp.isNegative x)))

(declare-const max_int Int)

(define-fun in_int_range ((i Int)) Bool (and (<= (- max_int) i)
                                        (<= i max_int)))

(define-fun in_safe_int_range ((i Int)) Bool (and (<= (- 16777216) i)
                                             (<= i 16777216)))

(define-fun same_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isPositive y))
                    (and (fp.isNegative x) (fp.isNegative y))))

(define-fun diff_sign ((x Float32)
  (y Float32)) Bool (or (and (fp.isPositive x) (fp.isNegative y))
                    (and (fp.isNegative x) (fp.isPositive y))))

(define-fun product_sign ((z Float32) (x Float32)
  (y Float32)) Bool (and (=> (same_sign x y) (fp.isPositive z))
                    (=> (diff_sign x y) (fp.isNegative z))))

(define-fun sqr ((x Real)) Real (* x x))

(declare-fun sqrt1 (Real) Real)

(define-fun same_sign_real ((x Float32)
  (r Real)) Bool (or (and (fp.isPositive x) (< 0.0 r))
                 (and (fp.isNegative x) (< r 0.0))))

(declare-datatypes ((t__ref 0))
(((t__refqtmk (t__content Float32)))))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort float__ 0)

(declare-fun user_eq (float__ float__) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE1 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Float32)

(declare-const dummy float__)

(declare-datatypes ((float____ref 0))
(((float____refqtmk (float____content float__)))))
(define-fun float____ref_float____content__projection ((a float____ref)) float__ 
  (float____content a))

(define-fun dynamic_invariant ((temp___expr_60 Float32)
  (temp___is_init_56 Bool) (temp___skip_constant_57 Bool)
  (temp___do_toplevel_58 Bool)
  (temp___do_typ_inv_59 Bool)) Bool (=>
                                    (or (= temp___is_init_56 true)
                                    (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111)))
                                    (fp.isFinite32 temp___expr_60)))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((time_span__ref 0))
(((time_span__refqtmk (time_span__content us_rep)))))
(define-fun time_span__ref_time_span__content__projection ((a time_span__ref)) us_rep 
  (time_span__content a))

(declare-sort monitoring_mode_t 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (monitoring_mode_t monitoring_mode_t) Bool)

(declare-const dummy2 monitoring_mode_t)

(declare-datatypes ((monitoring_mode_t__ref 0))
(((monitoring_mode_t__refqtmk (monitoring_mode_t__content monitoring_mode_t)))))
(define-fun monitoring_mode_t__ref_monitoring_mode_t__content__projection ((a monitoring_mode_t__ref)) monitoring_mode_t 
  (monitoring_mode_t__content a))

(declare-fun to_rep (monitoring_mode_t) Int)

(declare-fun of_rep (Int) monitoring_mode_t)

;; inversion_axiom
  (assert
  (forall ((x monitoring_mode_t))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x monitoring_mode_t)) (! (in_range1
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort float_natural1000 0)

(define-fun in_range2 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) x)
                                         (fp.leq x (fp #b0 #b10001000 #b11110100000000000000000)))))

(declare-fun user_eq3 (float_natural1000 float_natural1000) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE3 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Float32)

(declare-const dummy3 float_natural1000)

(declare-datatypes ((float_natural1000__ref 0))
(((float_natural1000__refqtmk (float_natural1000__content float_natural1000)))))
(define-fun float_natural1000__ref_float_natural1000__content__projection ((a float_natural1000__ref)) float_natural1000 
  (float_natural1000__content a))

(declare-fun to_rep1 (float_natural1000) Float32)

(declare-fun of_rep1 (Float32) float_natural1000)

;; inversion_axiom
  (assert
  (forall ((x float_natural1000))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x float_natural1000)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort float_positive10 0)

(define-fun in_range3 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp #b0 #b01111111 #b00000000000000000000000) x)
                                         (fp.leq x (fp #b0 #b10000010 #b01000000000000000000000)))))

(declare-fun user_eq4 (float_positive10 float_positive10) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE4 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Float32)

(declare-const dummy4 float_positive10)

(declare-datatypes ((float_positive10__ref 0))
(((float_positive10__refqtmk (float_positive10__content float_positive10)))))
(define-fun float_positive10__ref_float_positive10__content__projection ((a float_positive10__ref)) float_positive10 
  (float_positive10__content a))

(declare-fun to_rep2 (float_positive10) Float32)

(declare-fun of_rep2 (Float32) float_positive10)

;; inversion_axiom
  (assert
  (forall ((x float_positive10))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x float_positive10)) (! (in_range3
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort float_signed1000 0)

(define-fun in_range4 ((x Float32)) Bool (and (fp.isFinite32 x)
                                         (and
                                         (fp.leq (fp.neg (fp #b0 #b10001000 #b11110100000000000000000)) x)
                                         (fp.leq x (fp #b0 #b10001000 #b11110100000000000000000)))))

(declare-fun user_eq5 (float_signed1000 float_signed1000) Bool)

(declare-fun attr__ATTRIBUTE_IMAGE5 (Float32) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Float32)

(declare-const dummy5 float_signed1000)

(declare-datatypes ((float_signed1000__ref 0))
(((float_signed1000__refqtmk (float_signed1000__content float_signed1000)))))
(define-fun float_signed1000__ref_float_signed1000__content__projection ((a float_signed1000__ref)) float_signed1000 
  (float_signed1000__content a))

(declare-fun to_rep3 (float_signed1000) Float32)

(declare-fun of_rep3 (Float32) float_signed1000)

;; inversion_axiom
  (assert
  (forall ((x float_signed1000))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x float_signed1000)) (! (in_range4
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Float32))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__psu_monitoring__monitor_config_t__monitoring_mode monitoring_mode_t)(rec__psu_monitoring__monitor_config_t__mean float_signed1000)(rec__psu_monitoring__monitor_config_t__maximum_deviation float_natural1000)(rec__psu_monitoring__monitor_config_t__lower_threshold float_signed1000)(rec__psu_monitoring__monitor_config_t__upper_threshold float_signed1000)(rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion float_positive10)(rec__psu_monitoring__monitor_config_t__startup_time us_rep)(rec__psu_monitoring__monitor_config_t__settling_time us_rep)(rec__psu_monitoring__monitor_config_t__violation_time us_rep)(rec__psu_monitoring__monitor_config_t__retry_time us_rep)))))
(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__monitoring_mode__projection ((a us_split_fields)) monitoring_mode_t 
  (rec__psu_monitoring__monitor_config_t__monitoring_mode a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__mean__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__mean a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__maximum_deviation__projection ((a us_split_fields)) float_natural1000 
  (rec__psu_monitoring__monitor_config_t__maximum_deviation a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__lower_threshold__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__lower_threshold a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__upper_threshold__projection ((a us_split_fields)) float_signed1000 
  (rec__psu_monitoring__monitor_config_t__upper_threshold a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion__projection ((a us_split_fields)) float_positive10 
  (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__startup_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__startup_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__settling_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__settling_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__violation_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__violation_time a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_config_t__retry_time__projection ((a us_split_fields)) us_rep 
  (rec__psu_monitoring__monitor_config_t__retry_time a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                            (us_split_fields1 a))) (to_rep
                                                   (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                                   (us_split_fields1 b))))
                         (fp.eq (to_rep3
                                (rec__psu_monitoring__monitor_config_t__mean
                                (us_split_fields1 a))) (to_rep3
                                                       (rec__psu_monitoring__monitor_config_t__mean
                                                       (us_split_fields1 b)))))
                         (and
                         (and
                         (and
                         (fp.eq (to_rep1
                                (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                (us_split_fields1 a))) (to_rep1
                                                       (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                                       (us_split_fields1 b))))
                         (fp.eq (to_rep3
                                (rec__psu_monitoring__monitor_config_t__lower_threshold
                                (us_split_fields1 a))) (to_rep3
                                                       (rec__psu_monitoring__monitor_config_t__lower_threshold
                                                       (us_split_fields1 b)))))
                         (and
                         (fp.eq (to_rep3
                                (rec__psu_monitoring__monitor_config_t__upper_threshold
                                (us_split_fields1 a))) (to_rep3
                                                       (rec__psu_monitoring__monitor_config_t__upper_threshold
                                                       (us_split_fields1 b))))
                         (fp.eq (to_rep2
                                (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                (us_split_fields1 a))) (to_rep2
                                                       (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                                       (us_split_fields1 b))))))
                         (and
                         (and
                         (= (bool_eq
                            (rec__psu_monitoring__monitor_config_t__startup_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__startup_time
                            (us_split_fields1 b))) true)
                         (= (bool_eq
                            (rec__psu_monitoring__monitor_config_t__settling_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__settling_time
                            (us_split_fields1 b))) true))
                         (and
                         (= (bool_eq
                            (rec__psu_monitoring__monitor_config_t__violation_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__violation_time
                            (us_split_fields1 b))) true)
                         (= (bool_eq
                            (rec__psu_monitoring__monitor_config_t__retry_time
                            (us_split_fields1 a))
                            (rec__psu_monitoring__monitor_config_t__retry_time
                            (us_split_fields1 b))) true)))))
                    true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__monitoring_mode__position Int)

;; psu_monitoring__monitor_config_t__monitoring_mode__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__monitoring_mode__first__bit))

;; psu_monitoring__monitor_config_t__monitoring_mode__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__monitoring_mode__first__bit psu_monitoring__monitor_config_t__monitoring_mode__last__bit))

;; psu_monitoring__monitor_config_t__monitoring_mode__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__monitoring_mode__position))

(declare-const psu_monitoring__monitor_config_t__mean__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__mean__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__mean__position Int)

;; psu_monitoring__monitor_config_t__mean__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__mean__first__bit))

;; psu_monitoring__monitor_config_t__mean__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__mean__first__bit psu_monitoring__monitor_config_t__mean__last__bit))

;; psu_monitoring__monitor_config_t__mean__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__mean__position))

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__maximum_deviation__position Int)

;; psu_monitoring__monitor_config_t__maximum_deviation__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__maximum_deviation__first__bit))

;; psu_monitoring__monitor_config_t__maximum_deviation__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__maximum_deviation__first__bit 
  psu_monitoring__monitor_config_t__maximum_deviation__last__bit))

;; psu_monitoring__monitor_config_t__maximum_deviation__position_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__maximum_deviation__position))

(declare-const psu_monitoring__monitor_config_t__lower_threshold__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__lower_threshold__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__lower_threshold__position Int)

;; psu_monitoring__monitor_config_t__lower_threshold__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__lower_threshold__first__bit))

;; psu_monitoring__monitor_config_t__lower_threshold__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__lower_threshold__first__bit psu_monitoring__monitor_config_t__lower_threshold__last__bit))

;; psu_monitoring__monitor_config_t__lower_threshold__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__lower_threshold__position))

(declare-const psu_monitoring__monitor_config_t__upper_threshold__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__upper_threshold__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__upper_threshold__position Int)

;; psu_monitoring__monitor_config_t__upper_threshold__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__upper_threshold__first__bit))

;; psu_monitoring__monitor_config_t__upper_threshold__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__upper_threshold__first__bit psu_monitoring__monitor_config_t__upper_threshold__last__bit))

;; psu_monitoring__monitor_config_t__upper_threshold__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__upper_threshold__position))

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_tolerance_expansion__position Int)

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit))

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__settling_tolerance_expansion__first__bit 
  psu_monitoring__monitor_config_t__settling_tolerance_expansion__last__bit))

;; psu_monitoring__monitor_config_t__settling_tolerance_expansion__position_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__settling_tolerance_expansion__position))

(declare-const psu_monitoring__monitor_config_t__startup_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__startup_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__startup_time__position Int)

;; psu_monitoring__monitor_config_t__startup_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__startup_time__first__bit))

;; psu_monitoring__monitor_config_t__startup_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__startup_time__first__bit psu_monitoring__monitor_config_t__startup_time__last__bit))

;; psu_monitoring__monitor_config_t__startup_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__startup_time__position))

(declare-const psu_monitoring__monitor_config_t__settling_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__settling_time__position Int)

;; psu_monitoring__monitor_config_t__settling_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__settling_time__first__bit))

;; psu_monitoring__monitor_config_t__settling_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__settling_time__first__bit psu_monitoring__monitor_config_t__settling_time__last__bit))

;; psu_monitoring__monitor_config_t__settling_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__settling_time__position))

(declare-const psu_monitoring__monitor_config_t__violation_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__violation_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__violation_time__position Int)

;; psu_monitoring__monitor_config_t__violation_time__first__bit_axiom
  (assert
  (<= 0 psu_monitoring__monitor_config_t__violation_time__first__bit))

;; psu_monitoring__monitor_config_t__violation_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__violation_time__first__bit psu_monitoring__monitor_config_t__violation_time__last__bit))

;; psu_monitoring__monitor_config_t__violation_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__violation_time__position))

(declare-const psu_monitoring__monitor_config_t__retry_time__first__bit Int)

(declare-const psu_monitoring__monitor_config_t__retry_time__last__bit Int)

(declare-const psu_monitoring__monitor_config_t__retry_time__position Int)

;; psu_monitoring__monitor_config_t__retry_time__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__retry_time__first__bit))

;; psu_monitoring__monitor_config_t__retry_time__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_config_t__retry_time__first__bit psu_monitoring__monitor_config_t__retry_time__last__bit))

;; psu_monitoring__monitor_config_t__retry_time__position_axiom
  (assert (<= 0 psu_monitoring__monitor_config_t__retry_time__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((monitor_config_t__ref 0))
(((monitor_config_t__refqtmk (monitor_config_t__content us_rep1)))))
(define-fun monitor_config_t__ref_monitor_config_t__content__projection ((a monitor_config_t__ref)) us_rep1 
  (monitor_config_t__content a))

(declare-sort monitor_state_t 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (monitor_state_t monitor_state_t) Bool)

(declare-const dummy7 monitor_state_t)

(declare-datatypes ((monitor_state_t__ref 0))
(((monitor_state_t__refqtmk (monitor_state_t__content monitor_state_t)))))
(define-fun monitor_state_t__ref_monitor_state_t__content__projection ((a monitor_state_t__ref)) monitor_state_t 
  (monitor_state_t__content a))

(declare-fun to_rep4 (monitor_state_t) Int)

(declare-fun of_rep4 (Int) monitor_state_t)

;; inversion_axiom
  (assert
  (forall ((x monitor_state_t))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x monitor_state_t)) (! (in_range5
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__psu_monitoring__monitor_t__config us_rep1)(rec__psu_monitoring__monitor_t__timer us_rep)(rec__psu_monitoring__monitor_t__current_state monitor_state_t)(rec__psu_monitoring__monitor_t__next_state monitor_state_t)))))
(define-fun us_split_fields_rec__psu_monitoring__monitor_t__config__projection ((a us_split_fields2)) us_rep1 
  (rec__psu_monitoring__monitor_t__config a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__timer__projection ((a us_split_fields2)) us_rep 
  (rec__psu_monitoring__monitor_t__timer a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__current_state__projection ((a us_split_fields2)) monitor_state_t 
  (rec__psu_monitoring__monitor_t__current_state a))

(define-fun us_split_fields_rec__psu_monitoring__monitor_t__next_state__projection ((a us_split_fields2)) monitor_state_t 
  (rec__psu_monitoring__monitor_t__next_state a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep2)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (bool_eq1
                            (rec__psu_monitoring__monitor_t__config
                            (us_split_fields3 a))
                            (rec__psu_monitoring__monitor_t__config
                            (us_split_fields3 b))) true)
                         (= (bool_eq
                            (rec__psu_monitoring__monitor_t__timer
                            (us_split_fields3 a))
                            (rec__psu_monitoring__monitor_t__timer
                            (us_split_fields3 b))) true))
                         (and
                         (= (to_rep4
                            (rec__psu_monitoring__monitor_t__current_state
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__psu_monitoring__monitor_t__current_state
                                                   (us_split_fields3 b))))
                         (= (to_rep4
                            (rec__psu_monitoring__monitor_t__next_state
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__psu_monitoring__monitor_t__next_state
                                                   (us_split_fields3 b))))))
                    true false))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const psu_monitoring__monitor_t__config__first__bit Int)

(declare-const psu_monitoring__monitor_t__config__last__bit Int)

(declare-const psu_monitoring__monitor_t__config__position Int)

;; psu_monitoring__monitor_t__config__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__config__first__bit))

;; psu_monitoring__monitor_t__config__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__config__first__bit psu_monitoring__monitor_t__config__last__bit))

;; psu_monitoring__monitor_t__config__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__config__position))

(declare-const psu_monitoring__monitor_t__timer__first__bit Int)

(declare-const psu_monitoring__monitor_t__timer__last__bit Int)

(declare-const psu_monitoring__monitor_t__timer__position Int)

;; psu_monitoring__monitor_t__timer__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__timer__first__bit))

;; psu_monitoring__monitor_t__timer__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__timer__first__bit psu_monitoring__monitor_t__timer__last__bit))

;; psu_monitoring__monitor_t__timer__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__timer__position))

(declare-const psu_monitoring__monitor_t__current_state__first__bit Int)

(declare-const psu_monitoring__monitor_t__current_state__last__bit Int)

(declare-const psu_monitoring__monitor_t__current_state__position Int)

;; psu_monitoring__monitor_t__current_state__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__current_state__first__bit))

;; psu_monitoring__monitor_t__current_state__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__current_state__first__bit psu_monitoring__monitor_t__current_state__last__bit))

;; psu_monitoring__monitor_t__current_state__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__current_state__position))

(declare-const psu_monitoring__monitor_t__next_state__first__bit Int)

(declare-const psu_monitoring__monitor_t__next_state__last__bit Int)

(declare-const psu_monitoring__monitor_t__next_state__position Int)

;; psu_monitoring__monitor_t__next_state__first__bit_axiom
  (assert (<= 0 psu_monitoring__monitor_t__next_state__first__bit))

;; psu_monitoring__monitor_t__next_state__last__bit_axiom
  (assert
  (< psu_monitoring__monitor_t__next_state__first__bit psu_monitoring__monitor_t__next_state__last__bit))

;; psu_monitoring__monitor_t__next_state__position_axiom
  (assert (<= 0 psu_monitoring__monitor_t__next_state__position))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-const dummy8 us_rep2)

(declare-datatypes ((monitor_t__ref 0))
(((monitor_t__refqtmk (monitor_t__content us_rep2)))))
(define-fun monitor_t__ref_monitor_t__content__projection ((a monitor_t__ref)) us_rep2 
  (monitor_t__content a))

(declare-fun milliseconds (Int) us_rep)

(declare-fun milliseconds__function_guard (us_rep Int) Bool)

(define-fun default_initial_assumption ((temp___expr_236 us_rep2)
  (temp___skip_top_level_237 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) 0)
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236))))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236)))) (milliseconds
                                                                2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236)))) (milliseconds
                                                                5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            (rec__psu_monitoring__monitor_t__config
                                            (us_split_fields3
                                            temp___expr_236)))) (milliseconds
                                                                100))))))
                                         (= (rec__psu_monitoring__monitor_t__timer
                                            (us_split_fields3
                                            temp___expr_236)) (milliseconds
                                                              0)))
                                         (and
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_t__current_state
                                            (us_split_fields3
                                            temp___expr_236))) 0)
                                         (= (to_rep4
                                            (rec__psu_monitoring__monitor_t__next_state
                                            (us_split_fields3
                                            temp___expr_236))) 0))))

(declare-const monitor us_rep2)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const signal_value Float32)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_invariant1 ((temp___expr_214 Float32)
  (temp___is_init_210 Bool) (temp___skip_constant_211 Bool)
  (temp___do_toplevel_212 Bool)
  (temp___do_typ_inv_213 Bool)) Bool (=>
                                     (or (= temp___is_init_210 true)
                                     (fp.leq (fp.neg (fp #b0 #b10001000 #b11110100000000000000000)) (fp #b0 #b10001000 #b11110100000000000000000)))
                                     (in_range4 temp___expr_214)))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-const dummy9 integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range6 temp___expr_18)))

(define-fun dynamic_invariant3 ((temp___expr_186 Int)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (=>
                                     (or (= temp___is_init_182 true)
                                     (<= 0 1)) (in_range1 temp___expr_186)))

(define-fun dynamic_invariant4 ((temp___expr_193 Int)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)
  (temp___do_typ_inv_192 Bool)) Bool (=>
                                     (or (= temp___is_init_189 true)
                                     (<= 0 5)) (in_range5 temp___expr_193)))

(define-fun dynamic_invariant5 ((temp___expr_200 Float32)
  (temp___is_init_196 Bool) (temp___skip_constant_197 Bool)
  (temp___do_toplevel_198 Bool)
  (temp___do_typ_inv_199 Bool)) Bool (=>
                                     (or (= temp___is_init_196 true)
                                     (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b10001000 #b11110100000000000000000)))
                                     (in_range2 temp___expr_200)))

(define-fun dynamic_invariant6 ((temp___expr_207 Float32)
  (temp___is_init_203 Bool) (temp___skip_constant_204 Bool)
  (temp___do_toplevel_205 Bool)
  (temp___do_typ_inv_206 Bool)) Bool (=>
                                     (or (= temp___is_init_203 true)
                                     (fp.leq (fp #b0 #b01111111 #b00000000000000000000000) (fp #b0 #b10000010 #b01000000000000000000000)))
                                     (in_range3 temp___expr_207)))

(define-fun default_initial_assumption1 ((temp___expr_229 us_rep1)
  (temp___skip_top_level_230 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__psu_monitoring__monitor_config_t__monitoring_mode
                                            (us_split_fields1
                                            temp___expr_229))) 0)
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__mean
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__psu_monitoring__monitor_config_t__maximum_deviation
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__lower_threshold
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000)))
                                         (and
                                         (= (to_rep3
                                            (rec__psu_monitoring__monitor_config_t__upper_threshold
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b00000000 #b00000000000000000000000))
                                         (= (to_rep2
                                            (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
                                            (us_split_fields1
                                            temp___expr_229))) (fp #b0 #b01111111 #b00110011001100110011010))))
                                         (and
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__startup_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              5))
                                         (= (rec__psu_monitoring__monitor_config_t__settling_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              2)))
                                         (and
                                         (= (rec__psu_monitoring__monitor_config_t__violation_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              5))
                                         (= (rec__psu_monitoring__monitor_config_t__retry_time
                                            (us_split_fields1
                                            temp___expr_229)) (milliseconds
                                                              100)))))))

;; milliseconds__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "psu_monitoring.ads", line 94, characters 0-0
  (not
  (forall ((expanded_lower_threshold Float32)
  (expanded_upper_threshold Float32) (o Int) (spark__branch Bool)
  (o1 Float32) (spark__branch1 Bool) (o2 Float32) (o3 Float32))
  (=> (dynamic_invariant signal_value true false true true)
  (=> (dynamic_invariant1 expanded_lower_threshold false false true true)
  (=> (dynamic_invariant1 expanded_upper_threshold false false true true)
  (=>
  (= (to_rep
     (rec__psu_monitoring__monitor_config_t__monitoring_mode
     (us_split_fields1
     (rec__psu_monitoring__monitor_t__config (us_split_fields3 monitor))))) o)
  (=> (= spark__branch (ite (= o 0) true false))
  (=> (not (= spark__branch true))
  (=>
  (= (to_rep3
     (rec__psu_monitoring__monitor_config_t__lower_threshold
     (us_split_fields1
     (rec__psu_monitoring__monitor_t__config (us_split_fields3 monitor))))) o1)
  (=>
  (= spark__branch1 (ite (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) o1)
                    true false))
  (=> (not (= spark__branch1 true))
  (=>
  (= (to_rep2
     (rec__psu_monitoring__monitor_config_t__settling_tolerance_expansion
     (us_split_fields1
     (rec__psu_monitoring__monitor_t__config (us_split_fields3 monitor))))) o2)
  (=>
  (= (to_rep3
     (rec__psu_monitoring__monitor_config_t__lower_threshold
     (us_split_fields1
     (rec__psu_monitoring__monitor_t__config (us_split_fields3 monitor))))) o3)
  (in_range4 (fp.mul RNE o3 o2))))))))))))))))
(check-sat)
