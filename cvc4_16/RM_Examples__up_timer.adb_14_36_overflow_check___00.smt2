(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort times 0)

(declare-fun timesqtint (times) Int)

;; times'axiom
  (assert
  (forall ((i times))
  (and (<= 0 (timesqtint i)) (<= (timesqtint i) 9223372036854775807))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x)
                                     (<= x 9223372036854775807)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (times times) Bool)

(declare-const dummy times)

(declare-datatypes ((times__ref 0))
(((times__refqtmk (times__content times)))))
(define-fun times__ref_times__content__projection ((a times__ref)) times 
  (times__content a))

(define-fun to_rep ((x times)) Int (timesqtint x))

(declare-fun of_rep (Int) times)

;; inversion_axiom
  (assert
  (forall ((x times)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x times)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__up_timer__time_register__time times)))))
(define-fun us_split_fields_rec__up_timer__time_register__time__projection ((a us_split_fields)) times 
  (rec__up_timer__time_register__time a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__up_timer__time_register__time
                           (us_split_fields1 a))) (to_rep
                                                  (rec__up_timer__time_register__time
                                                  (us_split_fields1 b))))
                   true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const up_timer__time_register__time__first__bit Int)

(declare-const up_timer__time_register__time__last__bit Int)

(declare-const up_timer__time_register__time__position Int)

;; up_timer__time_register__time__first__bit_axiom
  (assert (<= 0 up_timer__time_register__time__first__bit))

;; up_timer__time_register__time__last__bit_axiom
  (assert
  (< up_timer__time_register__time__first__bit up_timer__time_register__time__last__bit))

;; up_timer__time_register__time__position_axiom
  (assert (<= 0 up_timer__time_register__time__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((time_register__ref 0))
(((time_register__refqtmk (time_register__content us_rep)))))
(define-fun time_register__ref_time_register__content__projection ((a time_register__ref)) us_rep 
  (time_register__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun default_initial_assumption ((temp___expr_167 us_rep)
  (temp___skip_top_level_168 Bool)) Bool (= (to_rep
                                            (rec__up_timer__time_register__time
                                            (us_split_fields1
                                            temp___expr_167))) 0))

(declare-sort ttimesB 0)

(declare-fun ttimesBqtint (ttimesB) Int)

;; ttimesB'axiom
  (assert
  (forall ((i ttimesB))
  (and (<= (- 9223372036854775808) (ttimesBqtint i))
  (<= (ttimesBqtint i) 9223372036854775807))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 9223372036854775808) x)
                                     (<= x 9223372036854775807)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (ttimesB ttimesB) Bool)

(declare-const dummy2 ttimesB)

(declare-datatypes ((ttimesB__ref 0))
(((ttimesB__refqtmk (ttimesB__content ttimesB)))))
(define-fun ttimesB__ref_ttimesB__content__projection ((a ttimesB__ref)) ttimesB 
  (ttimesB__content a))

(define-fun dynamic_invariant ((temp___expr_159 Int)
  (temp___is_init_155 Bool) (temp___skip_constant_156 Bool)
  (temp___do_toplevel_157 Bool)
  (temp___do_typ_inv_158 Bool)) Bool (=>
                                     (or (= temp___is_init_155 true)
                                     (<= 0 9223372036854775807)) (in_range1
                                     temp___expr_159)))

(assert
;; defqtvc
 ;; File "up_timer.ads", line 8, characters 0-0
  (not
  (forall ((up_time__split_fields times) (o Int))
  (=> (< (to_rep up_time__split_fields) 9223372036854775807)
  (=> (= (to_rep up_time__split_fields) o) (in_range2 (+ o 1)))))))
(check-sat)
(exit)
