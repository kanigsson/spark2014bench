;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort us_main_type 0)

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer Bool)(rec__incomplete_types__p1__with_discr_ptr__pointer_address Int)(rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr us_main_type)))))
(define-fun us_rep_rec__incomplete_types__p1__with_discr_ptr__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer a))

(define-fun us_rep_rec__incomplete_types__p1__with_discr_ptr__pointer_address__projection ((a us_rep)) Int 
  (rec__incomplete_types__p1__with_discr_ptr__pointer_address a))

(define-fun us_rep_rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr__projection ((a us_rep)) us_main_type 
  (rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                           a) (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                              b))
                        (=>
                        (not
                        (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                           a) true))
                        (and
                        (= (rec__incomplete_types__p1__with_discr_ptr__pointer_address
                           a) (rec__incomplete_types__p1__with_discr_ptr__pointer_address
                              b))
                        (= (rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr
                           a) (rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr
                              b)))))
                   true false))

(declare-const dummy us_rep)

(declare-datatypes ((with_discr_ptr__ref 0))
(((with_discr_ptr__refqtmk (with_discr_ptr__content us_rep)))))
(define-fun with_discr_ptr__ref_with_discr_ptr__content__projection ((a with_discr_ptr__ref)) us_rep 
  (with_discr_ptr__content a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__incomplete_types__p1__with_discr__x Bool)))))
(define-fun us_split_discrs_rec__incomplete_types__p1__with_discr__x__projection ((a us_split_discrs)) Bool 
  (rec__incomplete_types__p1__with_discr__x a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__incomplete_types__p1__with_discr__y us_rep)))))
(define-fun us_split_fields_rec__incomplete_types__p1__with_discr__y__projection ((a us_split_fields)) us_rep 
  (rec__incomplete_types__p1__with_discr__y a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep1)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (ite (rec__incomplete_types__p1__with_discr__x
                                 (us_split_discrs1 a)) 1 0) (ite (rec__incomplete_types__p1__with_discr__x
                                                                 (us_split_discrs1
                                                                 b)) 1 0))
                         (= (bool_eq
                            (rec__incomplete_types__p1__with_discr__y
                            (us_split_fields1 a))
                            (rec__incomplete_types__p1__with_discr__y
                            (us_split_fields1 b))) true))
                    true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const incomplete_types__p1__with_discr__x__first__bit Int)

(declare-const incomplete_types__p1__with_discr__x__last__bit Int)

(declare-const incomplete_types__p1__with_discr__x__position Int)

;; incomplete_types__p1__with_discr__x__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__first__bit))

;; incomplete_types__p1__with_discr__x__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__x__first__bit incomplete_types__p1__with_discr__x__last__bit))

;; incomplete_types__p1__with_discr__x__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__position))

(declare-const incomplete_types__p1__with_discr__y__first__bit Int)

(declare-const incomplete_types__p1__with_discr__y__last__bit Int)

(declare-const incomplete_types__p1__with_discr__y__position Int)

;; incomplete_types__p1__with_discr__y__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__first__bit))

;; incomplete_types__p1__with_discr__y__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__y__first__bit incomplete_types__p1__with_discr__y__last__bit))

;; incomplete_types__p1__with_discr__y__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__position))

(declare-fun user_eq (us_rep1 us_rep1) Bool)

(declare-const dummy1 us_rep1)

(declare-datatypes ((with_discr__ref 0))
(((with_discr__refqtmk (with_discr__content us_rep1)))))
(define-fun with_discr__ref_with_discr__content__projection ((a with_discr__ref)) us_rep1 
  (with_discr__content a))

(define-fun in_range1 ((rec__incomplete_types__p1__with_discr__x1 Bool)
  (a us_rep1)) Bool (= rec__incomplete_types__p1__with_discr__x1 (rec__incomplete_types__p1__with_discr__x
                                                                 (us_split_discrs1
                                                                 a))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const incomplete_types__p1__with_discr__x__first__bit1 Int)

(declare-const incomplete_types__p1__with_discr__x__last__bit1 Int)

(declare-const incomplete_types__p1__with_discr__x__position1 Int)

;; incomplete_types__p1__with_discr__x__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__first__bit1))

;; incomplete_types__p1__with_discr__x__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__x__first__bit1 incomplete_types__p1__with_discr__x__last__bit1))

;; incomplete_types__p1__with_discr__x__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__position1))

(declare-const incomplete_types__p1__with_discr__y__first__bit1 Int)

(declare-const incomplete_types__p1__with_discr__y__last__bit1 Int)

(declare-const incomplete_types__p1__with_discr__y__position1 Int)

;; incomplete_types__p1__with_discr__y__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__first__bit1))

;; incomplete_types__p1__with_discr__y__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__y__first__bit1 incomplete_types__p1__with_discr__y__last__bit1))

;; incomplete_types__p1__with_discr__y__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__position1))

(declare-fun user_eq1 (us_rep1 us_rep1) Bool)

(declare-const dummy2 us_rep1)

(declare-datatypes ((t1s__ref 0))
(((t1s__refqtmk (t1s__content us_rep1)))))
(define-fun t1s__ref_t1s__content__projection ((a t1s__ref)) us_rep1 
  (t1s__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun us_open (us_main_type) us_rep1)

(declare-fun us_close (us_rep1) us_main_type)

;; close_open
  (assert
  (forall ((x us_main_type))
  (! (= (us_close (us_open x)) x) :pattern ((us_open x)) )))

;; open_close
  (assert
  (forall ((x us_rep1))
  (! (= (us_open (us_close x)) x) :pattern ((us_close x)) )))

(define-fun rec__incomplete_types__p1__with_discr_ptr__pointer_value ((a us_rep)) us_rep1 
  (us_open
  (rec__incomplete_types__p1__with_discr_ptr__pointer_value_abstr a)))

(define-fun rec__incomplete_types__p1__with_discr_ptr__pointer_value__pred ((a us_rep)) Bool 
  (not
  (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
     us_null_pointer) true))

(declare-fun temp___dynamic_invariant_164 (us_rep Bool Bool Bool Bool) Bool)

(define-fun dynamic_invariant ((temp___expr_162 us_rep)
  (temp___is_init_158 Bool) (temp___skip_constant_159 Bool)
  (temp___do_toplevel_160 Bool)
  (temp___do_typ_inv_161 Bool)) Bool (=>
                                     (not
                                     (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                                        temp___expr_162) true))
                                     (and (in_range1 (distinct 1 0)
                                     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
                                     temp___expr_162))
                                     (temp___dynamic_invariant_164
                                     (rec__incomplete_types__p1__with_discr__y
                                     (us_split_fields1
                                     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
                                     temp___expr_162))) true false true
                                     temp___do_typ_inv_161))))

;; def_axiom
  (assert
  (forall ((temp___expr_169 us_rep))
  (forall ((temp___is_init_165 Bool) (temp___skip_constant_166 Bool)
  (temp___do_toplevel_167 Bool) (temp___do_typ_inv_168 Bool))
  (! (= (temp___dynamic_invariant_164 temp___expr_169 temp___is_init_165
     temp___skip_constant_166 temp___do_toplevel_167 temp___do_typ_inv_168)
     (=>
     (not
     (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
        temp___expr_169) true))
     (and (in_range1 (distinct 1 0)
     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
     temp___expr_169)) (temp___dynamic_invariant_164
     (rec__incomplete_types__p1__with_discr__y
     (us_split_fields1
     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
     temp___expr_169))) true false true temp___do_typ_inv_168)))) :pattern ((temp___dynamic_invariant_164
  temp___expr_169 temp___is_init_165 temp___skip_constant_166
  temp___do_toplevel_167 temp___do_typ_inv_168)) ))))

(define-fun default_initial_assumption ((temp___expr_171 us_rep)
  (temp___skip_top_level_172 Bool)) Bool (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                                            temp___expr_171) true))

(define-fun in_range2 ((rec__incomplete_types__p1__with_discr__x1 Bool)
  (a us_rep1)) Bool (= rec__incomplete_types__p1__with_discr__x1 (rec__incomplete_types__p1__with_discr__x
                                                                 (us_split_discrs1
                                                                 a))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const incomplete_types__p1__with_discr__x__first__bit2 Int)

(declare-const incomplete_types__p1__with_discr__x__last__bit2 Int)

(declare-const incomplete_types__p1__with_discr__x__position2 Int)

;; incomplete_types__p1__with_discr__x__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__first__bit2))

;; incomplete_types__p1__with_discr__x__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__x__first__bit2 incomplete_types__p1__with_discr__x__last__bit2))

;; incomplete_types__p1__with_discr__x__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__x__position2))

(declare-const incomplete_types__p1__with_discr__y__first__bit2 Int)

(declare-const incomplete_types__p1__with_discr__y__last__bit2 Int)

(declare-const incomplete_types__p1__with_discr__y__position2 Int)

;; incomplete_types__p1__with_discr__y__first__bit_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__first__bit2))

;; incomplete_types__p1__with_discr__y__last__bit_axiom
  (assert
  (< incomplete_types__p1__with_discr__y__first__bit2 incomplete_types__p1__with_discr__y__last__bit2))

;; incomplete_types__p1__with_discr__y__position_axiom
  (assert (<= 0 incomplete_types__p1__with_discr__y__position2))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-const dummy3 us_rep1)

(declare-datatypes ((t3s__ref 0))
(((t3s__refqtmk (t3s__content us_rep1)))))
(define-fun t3s__ref_t3s__content__projection ((a t3s__ref)) us_rep1 
  (t3s__content a))

(declare-fun oeq (us_rep1 us_rep1) Bool)

(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (and
     (forall ((a1 us_rep1) (b1 us_rep1)) (oeq__function_guard (oeq a1 b1) a1
     b1)) (= (user_eq a b) (oeq a b))) :pattern ((user_eq a b)) )))

(define-fun dynamic_invariant1 ((temp___expr_178 us_rep1)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)
  (temp___do_typ_inv_177 Bool)) Bool (=>
                                     (not
                                     (= (rec__incomplete_types__p1__with_discr_ptr__is_null_pointer
                                        (rec__incomplete_types__p1__with_discr__y
                                        (us_split_fields1 temp___expr_178))) true))
                                     (and (in_range1 (distinct 1 0)
                                     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
                                     (rec__incomplete_types__p1__with_discr__y
                                     (us_split_fields1 temp___expr_178))))
                                     (temp___dynamic_invariant_164
                                     (rec__incomplete_types__p1__with_discr__y
                                     (us_split_fields1
                                     (rec__incomplete_types__p1__with_discr_ptr__pointer_value
                                     (rec__incomplete_types__p1__with_discr__y
                                     (us_split_fields1 temp___expr_178)))))
                                     true false true temp___do_typ_inv_177))))

;; oeq__post_axiom
  (assert true)

;; oeq__def_axiom
  (assert
  (forall ((x us_rep1) (y us_rep1))
  (! (= (oeq x y) true) :pattern ((oeq x y)) )))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (and
     (forall ((a1 us_rep1) (b1 us_rep1)) (oeq__function_guard (oeq a1 b1) a1
     b1)) (= (user_eq1 a b) (oeq a b))) :pattern ((user_eq1 a b)) )))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (and
     (forall ((a1 us_rep1) (b1 us_rep1)) (oeq__function_guard (oeq a1 b1) a1
     b1)) (= (user_eq2 a b) (oeq a b))) :pattern ((user_eq2 a b)) )))

(assert
;; defqtvc
 ;; File "incomplete_types.ads", line 2, characters 0-0
  (not (in_range1 (distinct 1 0)
  (us_repqtmk1 (us_split_discrsqtmk (distinct 0 0))
  (us_split_fieldsqtmk us_null_pointer)))))
(check-sat)
