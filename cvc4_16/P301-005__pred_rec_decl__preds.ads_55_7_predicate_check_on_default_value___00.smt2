;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun length ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort int_ok 0)

(declare-fun int_okqtint (int_ok) Int)

;; int_ok'axiom
  (assert
  (forall ((i int_ok))
  (and (<= (- 2147483648) (int_okqtint i)) (<= (int_okqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (int_ok int_ok) Bool)

(declare-const dummy1 int_ok)

(declare-datatypes ((int_ok__ref 0))
(((int_ok__refqtmk (int_ok__content int_ok)))))
(define-fun int_ok__ref_int_ok__content__projection ((a int_ok__ref)) int_ok 
  (int_ok__content a))

(define-fun to_rep1 ((x int_ok)) Int (int_okqtint x))

(declare-fun of_rep1 (Int) int_ok)

;; inversion_axiom
  (assert
  (forall ((x int_ok))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x int_ok)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep (select a temp___idx_155)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep (select a temp___idx_155)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-const dummy2 (Array Int integer))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq2 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__preds__rec_ok__i integer)(rec__preds__rec_ok__x int_ok)(rec__preds__rec_ok__a (Array Int integer))))))
(define-fun us_split_fields_rec__preds__rec_ok__i__projection ((a us_split_fields)) integer 
  (rec__preds__rec_ok__i a))

(define-fun us_split_fields_rec__preds__rec_ok__x__projection ((a us_split_fields)) int_ok 
  (rec__preds__rec_ok__x a))

(define-fun us_split_fields_rec__preds__rec_ok__a__projection ((a us_split_fields)) (Array Int integer) 
  (rec__preds__rec_ok__a a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__preds__rec_ok__i (us_split_fields1 a))) 
                        (to_rep (rec__preds__rec_ok__i (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__preds__rec_ok__x (us_split_fields1 a))) 
                        (to_rep1
                        (rec__preds__rec_ok__x (us_split_fields1 b)))))
                        (= (bool_eq
                           (rec__preds__rec_ok__a (us_split_fields1 a)) 1 10
                           (rec__preds__rec_ok__a (us_split_fields1 b)) 1 10) true))
                   true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const preds__rec_ok__i__first__bit Int)

(declare-const preds__rec_ok__i__last__bit Int)

(declare-const preds__rec_ok__i__position Int)

;; preds__rec_ok__i__first__bit_axiom
  (assert (<= 0 preds__rec_ok__i__first__bit))

;; preds__rec_ok__i__last__bit_axiom
  (assert (< preds__rec_ok__i__first__bit preds__rec_ok__i__last__bit))

;; preds__rec_ok__i__position_axiom
  (assert (<= 0 preds__rec_ok__i__position))

(declare-const preds__rec_ok__x__first__bit Int)

(declare-const preds__rec_ok__x__last__bit Int)

(declare-const preds__rec_ok__x__position Int)

;; preds__rec_ok__x__first__bit_axiom
  (assert (<= 0 preds__rec_ok__x__first__bit))

;; preds__rec_ok__x__last__bit_axiom
  (assert (< preds__rec_ok__x__first__bit preds__rec_ok__x__last__bit))

;; preds__rec_ok__x__position_axiom
  (assert (<= 0 preds__rec_ok__x__position))

(declare-const preds__rec_ok__a__first__bit Int)

(declare-const preds__rec_ok__a__last__bit Int)

(declare-const preds__rec_ok__a__position Int)

;; preds__rec_ok__a__first__bit_axiom
  (assert (<= 0 preds__rec_ok__a__first__bit))

;; preds__rec_ok__a__last__bit_axiom
  (assert (< preds__rec_ok__a__first__bit preds__rec_ok__a__last__bit))

;; preds__rec_ok__a__position_axiom
  (assert (<= 0 preds__rec_ok__a__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((rec_ok__ref 0))
(((rec_ok__refqtmk (rec_ok__content us_rep)))))
(define-fun rec_ok__ref_rec_ok__content__projection ((a rec_ok__ref)) us_rep 
  (rec_ok__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort tarr_okD1 0)

(declare-fun tarr_okD1qtint (tarr_okD1) Int)

;; tarr_okD1'axiom
  (assert
  (forall ((i tarr_okD1))
  (and (<= 1 (tarr_okD1qtint i)) (<= (tarr_okD1qtint i) 10))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq4 (tarr_okD1 tarr_okD1) Bool)

(declare-const dummy4 tarr_okD1)

(declare-datatypes ((tarr_okD1__ref 0))
(((tarr_okD1__refqtmk (tarr_okD1__content tarr_okD1)))))
(define-fun tarr_okD1__ref_tarr_okD1__content__projection ((a tarr_okD1__ref)) tarr_okD1 
  (tarr_okD1__content a))

(define-fun dynamic_invariant ((temp___expr_282 us_rep)
  (temp___is_init_278 Bool) (temp___skip_constant_279 Bool)
  (temp___do_toplevel_280 Bool)
  (temp___do_typ_inv_281 Bool)) Bool (and
                                     (=> (= temp___do_toplevel_280 true)
                                     (and
                                     (and
                                     (not
                                     (= (to_rep
                                        (rec__preds__rec_ok__i
                                        (us_split_fields1 temp___expr_282))) 0))
                                     (not
                                     (= (to_rep1
                                        (rec__preds__rec_ok__x
                                        (us_split_fields1 temp___expr_282))) 0)))
                                     (forall ((k Int))
                                     (=> (and (<= 1 k) (<= k 10))
                                     (not
                                     (= (to_rep
                                        (let ((temp___284 (rec__preds__rec_ok__a
                                                          (us_split_fields1
                                                          temp___expr_282))))
                                        (select temp___284 k))) 0))))))
                                     (and
                                     (let ((temp___286 (to_rep1
                                                       (rec__preds__rec_ok__x
                                                       (us_split_fields1
                                                       temp___expr_282)))))
                                     (or
                                     (and (<= (- 2147483648) temp___286)
                                     (<= temp___286 (- 1)))
                                     (and (<= 1 temp___286)
                                     (<= temp___286 2147483647))))
                                     (forall ((k Int))
                                     (=> (and (<= 1 k) (<= k 10))
                                     (not
                                     (= (to_rep
                                        (select (rec__preds__rec_ok__a
                                                (us_split_fields1
                                                temp___expr_282)) k)) 0)))))))

(define-fun default_initial_assumption ((temp___expr_289 us_rep)
  (temp___skip_top_level_290 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__preds__rec_ok__i
                                            (us_split_fields1
                                            temp___expr_289))) 1)
                                         (= (to_rep1
                                            (rec__preds__rec_ok__x
                                            (us_split_fields1
                                            temp___expr_289))) 1))
                                         (forall ((temp___293 Int))
                                         (=>
                                         (and (<= 1 temp___293)
                                         (<= temp___293 10))
                                         (= (to_rep
                                            (select (rec__preds__rec_ok__a
                                                    (us_split_fields1
                                                    temp___expr_289)) temp___293)) 1)))))

(define-fun dynamic_predicate ((temp___294 us_rep)) Bool (and
                                                         (and
                                                         (not
                                                         (= (to_rep
                                                            (rec__preds__rec_ok__i
                                                            (us_split_fields1
                                                            temp___294))) 0))
                                                         (not
                                                         (= (to_rep1
                                                            (rec__preds__rec_ok__x
                                                            (us_split_fields1
                                                            temp___294))) 0)))
                                                         (forall ((k Int))
                                                         (=>
                                                         (and (<= 1 k)
                                                         (<= k 10))
                                                         (not
                                                         (= (to_rep
                                                            (let ((temp___296 
                                                            (rec__preds__rec_ok__a
                                                            (us_split_fields1
                                                            temp___294))))
                                                            (select temp___296 k))) 0))))))

(declare-const i7s Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const i19s (Array Int integer))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const i31s us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_invariant1 ((temp___expr_172 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (and
                                     (=>
                                     (or (= temp___is_init_168 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_172))
                                     (=> (= temp___do_toplevel_170 true)
                                     (or
                                     (and (<= (- 2147483648) temp___expr_172)
                                     (<= temp___expr_172 (- 1)))
                                     (and (<= 1 temp___expr_172)
                                     (<= temp___expr_172 2147483647))))))

(define-fun dynamic_predicate1 ((temp___176 Int)) Bool (or
                                                       (and
                                                       (<= (- 2147483648) temp___176)
                                                       (<= temp___176 (- 1)))
                                                       (and (<= 1 temp___176)
                                                       (<= temp___176 2147483647))))

(define-fun dynamic_invariant2 ((temp___expr_256 (Array Int integer))
  (temp___is_init_252 Bool) (temp___skip_constant_253 Bool)
  (temp___do_toplevel_254 Bool)
  (temp___do_typ_inv_255 Bool)) Bool (=> (= temp___do_toplevel_254 true)
                                     (forall ((k Int))
                                     (=> (and (<= 1 k) (<= k 10))
                                     (not
                                     (= (to_rep (select temp___expr_256 k)) 0))))))

(define-fun default_initial_assumption1 ((temp___expr_259 (Array Int integer))
  (temp___skip_top_level_260 Bool)) Bool (forall ((temp___261 Int))
                                         (=>
                                         (and (<= 1 temp___261)
                                         (<= temp___261 10))
                                         (= (to_rep
                                            (select temp___expr_259 temp___261)) 1))))

(define-fun dynamic_predicate2 ((temp___262 (Array Int integer))) Bool 
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep (select temp___262 k)) 0)))))

(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(assert
;; defqtvc
 ;; File "preds.ads", line 66, characters 0-0
  (not
  (forall ((x__split_fields us_split_fields))
  (=> (dynamic_invariant1 i7s true false true true)
  (=> (dynamic_invariant2 i19s true false true true)
  (=> (dynamic_invariant i31s true false true true)
  (=> (dynamic_invariant1 i7s true false true true)
  (=> (dynamic_invariant2 i19s true false true true)
  (=> (dynamic_invariant i31s true false true true)
  (=> (dynamic_invariant (us_repqtmk x__split_fields) false false true true)
  (forall ((usf (Array Int integer)))
  (=> (default_initial_assumption1 usf false) (dynamic_predicate2 usf)))))))))))))
(check-sat)
