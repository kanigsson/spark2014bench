;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

;; Div_unique
  (assert
  (forall ((x Int) (y Int) (q Int))
  (=> (< 0 y) (=> (and (<= (* q y) x) (< x (+ (* q y) y))) (= (div x y) q)))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div x y)) (<= (div x y) x)))))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div x y) 0))))

;; Div_inf_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (< 0 x) (<= x y)) (= (div (- x) y) (- 1)))))

;; Mod_0
  (assert (forall ((y Int)) (=> (not (= y 0)) (= (mod 0 y) 0))))

;; Div_1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (div 1 y) 0))))

;; Div_minus1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (div (- 1) y) (- 1)))))

;; Mod_1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (mod 1 y) 1))))

;; Mod_minus1_left
  (assert
  (forall ((y Int))
  (! (=> (< 1 y) (= (mod (- 1) y) (- y 1))) :pattern ((mod (- 1) y)) )))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (< 0 x) (= (div (+ (* x y) z) x) (+ y (div z x)))) :pattern ((div (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (< 0 x) (= (mod (+ (* x y) z) x) (mod z x))) :pattern ((mod (+ (* x y) z) x)) )))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2nat x) (- (- 256 (bv2nat x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes ((t__ref 0))
(((t__refqtmk (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16))
                                            (bv2nat x)
                                            (- (- 65536 (bv2nat x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes ((t__ref1 0))
(((t__refqtmk1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort channel_number 0)

(declare-fun channel_numberqtint (channel_number) Int)

;; channel_number'axiom
  (assert
  (forall ((i channel_number))
  (and (<= 1 (channel_numberqtint i)) (<= (channel_numberqtint i) 7))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (channel_number channel_number) Bool)

(declare-const dummy channel_number)

(declare-datatypes ((channel_number__ref 0))
(((channel_number__refqtmk (channel_number__content channel_number)))))
(define-fun channel_number__ref_channel_number__content__projection ((a channel_number__ref)) channel_number 
  (channel_number__content a))

(define-fun to_rep ((x channel_number)) Int (channel_numberqtint x))

(declare-fun of_rep (Int) channel_number)

;; inversion_axiom
  (assert
  (forall ((x channel_number))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x channel_number)) (! (in_range1
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort prf_type 0)

(define-fun pos_to_rep ((x Int)) Int (ite (= x 1) 2 1))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (prf_type prf_type) Bool)

(declare-const dummy1 prf_type)

(declare-datatypes ((prf_type__ref 0))
(((prf_type__refqtmk (prf_type__content prf_type)))))
(define-fun prf_type__ref_prf_type__content__projection ((a prf_type__ref)) prf_type 
  (prf_type__content a))

(declare-fun to_rep1 (prf_type) Int)

(declare-fun of_rep1 (Int) prf_type)

;; inversion_axiom
  (assert
  (forall ((x prf_type))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x prf_type)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort preamble_lengths 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (preamble_lengths preamble_lengths) Bool)

(declare-const dummy2 preamble_lengths)

(declare-datatypes ((preamble_lengths__ref 0))
(((preamble_lengths__refqtmk (preamble_lengths__content preamble_lengths)))))
(define-fun preamble_lengths__ref_preamble_lengths__content__projection ((a preamble_lengths__ref)) preamble_lengths 
  (preamble_lengths__content a))

(declare-fun to_rep2 (preamble_lengths) Int)

(declare-fun of_rep2 (Int) preamble_lengths)

;; inversion_axiom
  (assert
  (forall ((x preamble_lengths))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x preamble_lengths)) (! (in_range3
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort preamble_acq_chunk_length 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (preamble_acq_chunk_length
  preamble_acq_chunk_length) Bool)

(declare-const dummy3 preamble_acq_chunk_length)

(declare-datatypes ((preamble_acq_chunk_length__ref 0))
(((preamble_acq_chunk_length__refqtmk
  (preamble_acq_chunk_length__content preamble_acq_chunk_length)))))
(define-fun preamble_acq_chunk_length__ref_preamble_acq_chunk_length__content__projection ((a preamble_acq_chunk_length__ref)) preamble_acq_chunk_length 
  (preamble_acq_chunk_length__content a))

(declare-fun to_rep3 (preamble_acq_chunk_length) Int)

(declare-fun of_rep3 (Int) preamble_acq_chunk_length)

;; inversion_axiom
  (assert
  (forall ((x preamble_acq_chunk_length))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x preamble_acq_chunk_length)) (! (in_range4
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort preamble_code_number 0)

(declare-fun preamble_code_numberqtint (preamble_code_number) Int)

;; preamble_code_number'axiom
  (assert
  (forall ((i preamble_code_number))
  (and (<= 1 (preamble_code_numberqtint i))
  (<= (preamble_code_numberqtint i) 24))))

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (preamble_code_number preamble_code_number) Bool)

(declare-const dummy4 preamble_code_number)

(declare-datatypes ((preamble_code_number__ref 0))
(((preamble_code_number__refqtmk
  (preamble_code_number__content preamble_code_number)))))
(define-fun preamble_code_number__ref_preamble_code_number__content__projection ((a preamble_code_number__ref)) preamble_code_number 
  (preamble_code_number__content a))

(define-fun to_rep4 ((x preamble_code_number)) Int (preamble_code_numberqtint
                                                   x))

(declare-fun of_rep4 (Int) preamble_code_number)

;; inversion_axiom
  (assert
  (forall ((x preamble_code_number))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x preamble_code_number)) (! (in_range5
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort data_rates 0)

(define-fun pos_to_rep1 ((x Int)) Int (ite (= x 2) 2 (ite (= x 1) 1 0)))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq5 (data_rates data_rates) Bool)

(declare-const dummy5 data_rates)

(declare-datatypes ((data_rates__ref 0))
(((data_rates__refqtmk (data_rates__content data_rates)))))
(define-fun data_rates__ref_data_rates__content__projection ((a data_rates__ref)) data_rates 
  (data_rates__content a))

(declare-fun to_rep5 (data_rates) Int)

(declare-fun of_rep5 (Int) data_rates)

;; inversion_axiom
  (assert
  (forall ((x data_rates))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x data_rates)) (! (in_range6
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-sort physical_header_modes 0)

(define-fun pos_to_rep2 ((x Int)) Int (ite (= x 1) 3 0))

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq6 (physical_header_modes physical_header_modes) Bool)

(declare-const dummy6 physical_header_modes)

(declare-datatypes ((physical_header_modes__ref 0))
(((physical_header_modes__refqtmk
  (physical_header_modes__content physical_header_modes)))))
(define-fun physical_header_modes__ref_physical_header_modes__content__projection ((a physical_header_modes__ref)) physical_header_modes 
  (physical_header_modes__content a))

(declare-fun to_rep6 (physical_header_modes) Int)

(declare-fun of_rep6 (Int) physical_header_modes)

;; inversion_axiom
  (assert
  (forall ((x physical_header_modes))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x physical_header_modes)) (! (in_range7
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                              (of_rep6 x))) )))

(declare-sort sfd_timeout_number 0)

(declare-fun sfd_timeout_numberqtint (sfd_timeout_number) Int)

;; sfd_timeout_number'axiom
  (assert
  (forall ((i sfd_timeout_number))
  (and (<= 0 (sfd_timeout_numberqtint i))
  (<= (sfd_timeout_numberqtint i) 65535))))

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 65535)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq7 (sfd_timeout_number sfd_timeout_number) Bool)

(declare-const dummy7 sfd_timeout_number)

(declare-datatypes ((sfd_timeout_number__ref 0))
(((sfd_timeout_number__refqtmk
  (sfd_timeout_number__content sfd_timeout_number)))))
(define-fun sfd_timeout_number__ref_sfd_timeout_number__content__projection ((a sfd_timeout_number__ref)) sfd_timeout_number 
  (sfd_timeout_number__content a))

(define-fun to_rep7 ((x sfd_timeout_number)) Int (sfd_timeout_numberqtint x))

(declare-fun of_rep7 (Int) sfd_timeout_number)

;; inversion_axiom
  (assert
  (forall ((x sfd_timeout_number))
  (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)) )))

;; range_axiom
  (assert
  (forall ((x sfd_timeout_number)) (! (in_range8
  (to_rep7 x)) :pattern ((to_rep7 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7
                                                              (of_rep7 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__decadriver__configuration_type__channel channel_number)(rec__decadriver__configuration_type__prf prf_type)(rec__decadriver__configuration_type__tx_preamble_length preamble_lengths)(rec__decadriver__configuration_type__tx_pac preamble_acq_chunk_length)(rec__decadriver__configuration_type__tx_preamble_code preamble_code_number)(rec__decadriver__configuration_type__rx_preamble_code preamble_code_number)(rec__decadriver__configuration_type__use_nonstandard_sfd Bool)(rec__decadriver__configuration_type__data_rate data_rates)(rec__decadriver__configuration_type__phr_mode physical_header_modes)(rec__decadriver__configuration_type__sfd_timeout sfd_timeout_number)(rec__decadriver__configuration_type__enable_smart_power Bool)))))
(define-fun us_split_fields_rec__decadriver__configuration_type__channel__projection ((a us_split_fields)) channel_number 
  (rec__decadriver__configuration_type__channel a))

(define-fun us_split_fields_rec__decadriver__configuration_type__prf__projection ((a us_split_fields)) prf_type 
  (rec__decadriver__configuration_type__prf a))

(define-fun us_split_fields_rec__decadriver__configuration_type__tx_preamble_length__projection ((a us_split_fields)) preamble_lengths 
  (rec__decadriver__configuration_type__tx_preamble_length a))

(define-fun us_split_fields_rec__decadriver__configuration_type__tx_pac__projection ((a us_split_fields)) preamble_acq_chunk_length 
  (rec__decadriver__configuration_type__tx_pac a))

(define-fun us_split_fields_rec__decadriver__configuration_type__tx_preamble_code__projection ((a us_split_fields)) preamble_code_number 
  (rec__decadriver__configuration_type__tx_preamble_code a))

(define-fun us_split_fields_rec__decadriver__configuration_type__rx_preamble_code__projection ((a us_split_fields)) preamble_code_number 
  (rec__decadriver__configuration_type__rx_preamble_code a))

(define-fun us_split_fields_rec__decadriver__configuration_type__use_nonstandard_sfd__projection ((a us_split_fields)) Bool 
  (rec__decadriver__configuration_type__use_nonstandard_sfd a))

(define-fun us_split_fields_rec__decadriver__configuration_type__data_rate__projection ((a us_split_fields)) data_rates 
  (rec__decadriver__configuration_type__data_rate a))

(define-fun us_split_fields_rec__decadriver__configuration_type__phr_mode__projection ((a us_split_fields)) physical_header_modes 
  (rec__decadriver__configuration_type__phr_mode a))

(define-fun us_split_fields_rec__decadriver__configuration_type__sfd_timeout__projection ((a us_split_fields)) sfd_timeout_number 
  (rec__decadriver__configuration_type__sfd_timeout a))

(define-fun us_split_fields_rec__decadriver__configuration_type__enable_smart_power__projection ((a us_split_fields)) Bool 
  (rec__decadriver__configuration_type__enable_smart_power a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__decadriver__configuration_type__channel
                           (us_split_fields1 a))) (to_rep
                                                  (rec__decadriver__configuration_type__channel
                                                  (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__decadriver__configuration_type__prf
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__decadriver__configuration_type__prf
                                                  (us_split_fields1 b)))))
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep2
                           (rec__decadriver__configuration_type__tx_preamble_length
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__decadriver__configuration_type__tx_preamble_length
                                                  (us_split_fields1 b))))
                        (= (to_rep3
                           (rec__decadriver__configuration_type__tx_pac
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__decadriver__configuration_type__tx_pac
                                                  (us_split_fields1 b)))))
                        (= (to_rep4
                           (rec__decadriver__configuration_type__tx_preamble_code
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__decadriver__configuration_type__tx_preamble_code
                                                  (us_split_fields1 b)))))
                        (and
                        (= (to_rep4
                           (rec__decadriver__configuration_type__rx_preamble_code
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__decadriver__configuration_type__rx_preamble_code
                                                  (us_split_fields1 b))))
                        (= (ite (rec__decadriver__configuration_type__use_nonstandard_sfd
                                (us_split_fields1 a)) 1 0) (ite (rec__decadriver__configuration_type__use_nonstandard_sfd
                                                                (us_split_fields1
                                                                b)) 1 0))))
                        (and
                        (and
                        (= (to_rep5
                           (rec__decadriver__configuration_type__data_rate
                           (us_split_fields1 a))) (to_rep5
                                                  (rec__decadriver__configuration_type__data_rate
                                                  (us_split_fields1 b))))
                        (= (to_rep6
                           (rec__decadriver__configuration_type__phr_mode
                           (us_split_fields1 a))) (to_rep6
                                                  (rec__decadriver__configuration_type__phr_mode
                                                  (us_split_fields1 b)))))
                        (and
                        (= (to_rep7
                           (rec__decadriver__configuration_type__sfd_timeout
                           (us_split_fields1 a))) (to_rep7
                                                  (rec__decadriver__configuration_type__sfd_timeout
                                                  (us_split_fields1 b))))
                        (= (ite (rec__decadriver__configuration_type__enable_smart_power
                                (us_split_fields1 a)) 1 0) (ite (rec__decadriver__configuration_type__enable_smart_power
                                                                (us_split_fields1
                                                                b)) 1 0))))))
                   true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const decadriver__configuration_type__channel__first__bit Int)

(declare-const decadriver__configuration_type__channel__last__bit Int)

(declare-const decadriver__configuration_type__channel__position Int)

;; decadriver__configuration_type__channel__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__channel__first__bit))

;; decadriver__configuration_type__channel__last__bit_axiom
  (assert
  (< decadriver__configuration_type__channel__first__bit decadriver__configuration_type__channel__last__bit))

;; decadriver__configuration_type__channel__position_axiom
  (assert (<= 0 decadriver__configuration_type__channel__position))

(declare-const decadriver__configuration_type__prf__first__bit Int)

(declare-const decadriver__configuration_type__prf__last__bit Int)

(declare-const decadriver__configuration_type__prf__position Int)

;; decadriver__configuration_type__prf__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__prf__first__bit))

;; decadriver__configuration_type__prf__last__bit_axiom
  (assert
  (< decadriver__configuration_type__prf__first__bit decadriver__configuration_type__prf__last__bit))

;; decadriver__configuration_type__prf__position_axiom
  (assert (<= 0 decadriver__configuration_type__prf__position))

(declare-const decadriver__configuration_type__tx_preamble_length__first__bit Int)

(declare-const decadriver__configuration_type__tx_preamble_length__last__bit Int)

(declare-const decadriver__configuration_type__tx_preamble_length__position Int)

;; decadriver__configuration_type__tx_preamble_length__first__bit_axiom
  (assert
  (<= 0 decadriver__configuration_type__tx_preamble_length__first__bit))

;; decadriver__configuration_type__tx_preamble_length__last__bit_axiom
  (assert
  (< decadriver__configuration_type__tx_preamble_length__first__bit decadriver__configuration_type__tx_preamble_length__last__bit))

;; decadriver__configuration_type__tx_preamble_length__position_axiom
  (assert
  (<= 0 decadriver__configuration_type__tx_preamble_length__position))

(declare-const decadriver__configuration_type__tx_pac__first__bit Int)

(declare-const decadriver__configuration_type__tx_pac__last__bit Int)

(declare-const decadriver__configuration_type__tx_pac__position Int)

;; decadriver__configuration_type__tx_pac__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__tx_pac__first__bit))

;; decadriver__configuration_type__tx_pac__last__bit_axiom
  (assert
  (< decadriver__configuration_type__tx_pac__first__bit decadriver__configuration_type__tx_pac__last__bit))

;; decadriver__configuration_type__tx_pac__position_axiom
  (assert (<= 0 decadriver__configuration_type__tx_pac__position))

(declare-const decadriver__configuration_type__tx_preamble_code__first__bit Int)

(declare-const decadriver__configuration_type__tx_preamble_code__last__bit Int)

(declare-const decadriver__configuration_type__tx_preamble_code__position Int)

;; decadriver__configuration_type__tx_preamble_code__first__bit_axiom
  (assert
  (<= 0 decadriver__configuration_type__tx_preamble_code__first__bit))

;; decadriver__configuration_type__tx_preamble_code__last__bit_axiom
  (assert
  (< decadriver__configuration_type__tx_preamble_code__first__bit decadriver__configuration_type__tx_preamble_code__last__bit))

;; decadriver__configuration_type__tx_preamble_code__position_axiom
  (assert (<= 0 decadriver__configuration_type__tx_preamble_code__position))

(declare-const decadriver__configuration_type__rx_preamble_code__first__bit Int)

(declare-const decadriver__configuration_type__rx_preamble_code__last__bit Int)

(declare-const decadriver__configuration_type__rx_preamble_code__position Int)

;; decadriver__configuration_type__rx_preamble_code__first__bit_axiom
  (assert
  (<= 0 decadriver__configuration_type__rx_preamble_code__first__bit))

;; decadriver__configuration_type__rx_preamble_code__last__bit_axiom
  (assert
  (< decadriver__configuration_type__rx_preamble_code__first__bit decadriver__configuration_type__rx_preamble_code__last__bit))

;; decadriver__configuration_type__rx_preamble_code__position_axiom
  (assert (<= 0 decadriver__configuration_type__rx_preamble_code__position))

(declare-const decadriver__configuration_type__use_nonstandard_sfd__first__bit Int)

(declare-const decadriver__configuration_type__use_nonstandard_sfd__last__bit Int)

(declare-const decadriver__configuration_type__use_nonstandard_sfd__position Int)

;; decadriver__configuration_type__use_nonstandard_sfd__first__bit_axiom
  (assert
  (<= 0 decadriver__configuration_type__use_nonstandard_sfd__first__bit))

;; decadriver__configuration_type__use_nonstandard_sfd__last__bit_axiom
  (assert
  (< decadriver__configuration_type__use_nonstandard_sfd__first__bit 
  decadriver__configuration_type__use_nonstandard_sfd__last__bit))

;; decadriver__configuration_type__use_nonstandard_sfd__position_axiom
  (assert
  (<= 0 decadriver__configuration_type__use_nonstandard_sfd__position))

(declare-const decadriver__configuration_type__data_rate__first__bit Int)

(declare-const decadriver__configuration_type__data_rate__last__bit Int)

(declare-const decadriver__configuration_type__data_rate__position Int)

;; decadriver__configuration_type__data_rate__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__data_rate__first__bit))

;; decadriver__configuration_type__data_rate__last__bit_axiom
  (assert
  (< decadriver__configuration_type__data_rate__first__bit decadriver__configuration_type__data_rate__last__bit))

;; decadriver__configuration_type__data_rate__position_axiom
  (assert (<= 0 decadriver__configuration_type__data_rate__position))

(declare-const decadriver__configuration_type__phr_mode__first__bit Int)

(declare-const decadriver__configuration_type__phr_mode__last__bit Int)

(declare-const decadriver__configuration_type__phr_mode__position Int)

;; decadriver__configuration_type__phr_mode__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__phr_mode__first__bit))

;; decadriver__configuration_type__phr_mode__last__bit_axiom
  (assert
  (< decadriver__configuration_type__phr_mode__first__bit decadriver__configuration_type__phr_mode__last__bit))

;; decadriver__configuration_type__phr_mode__position_axiom
  (assert (<= 0 decadriver__configuration_type__phr_mode__position))

(declare-const decadriver__configuration_type__sfd_timeout__first__bit Int)

(declare-const decadriver__configuration_type__sfd_timeout__last__bit Int)

(declare-const decadriver__configuration_type__sfd_timeout__position Int)

;; decadriver__configuration_type__sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__configuration_type__sfd_timeout__first__bit))

;; decadriver__configuration_type__sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__configuration_type__sfd_timeout__first__bit decadriver__configuration_type__sfd_timeout__last__bit))

;; decadriver__configuration_type__sfd_timeout__position_axiom
  (assert (<= 0 decadriver__configuration_type__sfd_timeout__position))

(declare-const decadriver__configuration_type__enable_smart_power__first__bit Int)

(declare-const decadriver__configuration_type__enable_smart_power__last__bit Int)

(declare-const decadriver__configuration_type__enable_smart_power__position Int)

;; decadriver__configuration_type__enable_smart_power__first__bit_axiom
  (assert
  (<= 0 decadriver__configuration_type__enable_smart_power__first__bit))

;; decadriver__configuration_type__enable_smart_power__last__bit_axiom
  (assert
  (< decadriver__configuration_type__enable_smart_power__first__bit decadriver__configuration_type__enable_smart_power__last__bit))

;; decadriver__configuration_type__enable_smart_power__position_axiom
  (assert
  (<= 0 decadriver__configuration_type__enable_smart_power__position))

(declare-fun user_eq8 (us_rep us_rep) Bool)

(declare-const dummy8 us_rep)

(declare-datatypes ((configuration_type__ref 0))
(((configuration_type__refqtmk (configuration_type__content us_rep)))))
(define-fun configuration_type__ref_configuration_type__content__projection ((a configuration_type__ref)) us_rep 
  (configuration_type__content a))

(declare-const config us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort bits_5 0)

(define-fun in_range9 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                              (bvule x #x1F)))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 8))

(declare-fun user_eq9 (bits_5 bits_5) Bool)

(declare-const dummy9 bits_5)

(declare-datatypes ((bits_5__ref 0))
(((bits_5__refqtmk (bits_5__content bits_5)))))
(define-fun bits_5__ref_bits_5__content__projection ((a bits_5__ref)) bits_5 
  (bits_5__content a))

(declare-fun to_rep8 (bits_5) (_ BitVec 8))

(declare-fun of_rep8 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range9 (to_rep8 x)) :pattern ((to_rep8 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x20)))
     (=> (in_range9 y) (= (to_rep8 (of_rep8 x)) y))) :pattern ((to_rep8
                                                               (of_rep8 x))) )))

(define-fun to_int3 ((x bits_5)) Int (bv2nat (to_rep8 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-sort bits_1 0)

(define-fun in_range10 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                               (bvule x #x01)))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE10 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) (_ BitVec 8))

(declare-fun user_eq10 (bits_1 bits_1) Bool)

(declare-const dummy10 bits_1)

(declare-datatypes ((bits_1__ref 0))
(((bits_1__refqtmk (bits_1__content bits_1)))))
(define-fun bits_1__ref_bits_1__content__projection ((a bits_1__ref)) bits_1 
  (bits_1__content a))

(declare-fun to_rep9 (bits_1) (_ BitVec 8))

(declare-fun of_rep9 ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1))
  (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range10 (to_rep9 x)) :pattern ((to_rep9 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x02)))
     (=> (in_range10 y) (= (to_rep9 (of_rep9 x)) y))) :pattern ((to_rep9
                                                                (of_rep9 x))) )))

(define-fun to_int4 ((x bits_1)) Int (bv2nat (to_rep9 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int1
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-sort bits_2 0)

(define-fun in_range11 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                               (bvule x #x03)))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE11 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) (_ BitVec 8))

(declare-fun user_eq11 (bits_2 bits_2) Bool)

(declare-const dummy11 bits_2)

(declare-datatypes ((bits_2__ref 0))
(((bits_2__refqtmk (bits_2__content bits_2)))))
(define-fun bits_2__ref_bits_2__content__projection ((a bits_2__ref)) bits_2 
  (bits_2__content a))

(declare-fun to_rep10 (bits_2) (_ BitVec 8))

(declare-fun of_rep10 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range11
  (to_rep10 x)) :pattern ((to_rep10 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x04)))
     (=> (in_range11 y) (= (to_rep10 (of_rep10 x)) y))) :pattern ((to_rep10
                                                                  (of_rep10
                                                                  x))) )))

(define-fun to_int5 ((x bits_2)) Int (bv2nat (to_rep10 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int2
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_3 0)

(define-fun in_range12 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                               (bvule x #x07)))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE12 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) (_ BitVec 8))

(declare-fun user_eq12 (bits_3 bits_3) Bool)

(declare-const dummy12 bits_3)

(declare-datatypes ((bits_3__ref 0))
(((bits_3__refqtmk (bits_3__content bits_3)))))
(define-fun bits_3__ref_bits_3__content__projection ((a bits_3__ref)) bits_3 
  (bits_3__content a))

(declare-fun to_rep11 (bits_3) (_ BitVec 8))

(declare-fun of_rep11 ((_ BitVec 8)) bits_3)

;; inversion_axiom
  (assert
  (forall ((x bits_3))
  (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_3)) (! (in_range12
  (to_rep11 x)) :pattern ((to_rep11 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x08)))
     (=> (in_range12 y) (= (to_rep11 (of_rep11 x)) y))) :pattern ((to_rep11
                                                                  (of_rep11
                                                                  x))) )))

(define-fun to_int6 ((x bits_3)) Int (bv2nat (to_rep11 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_3)) (! (in_range_int3
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__ada___dw1000__register_types__sys_cfg_type__ffen bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffbc bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffab bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffad bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffaa bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffam bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffar bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffa4 bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__ffa5 bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__spi_edge bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_fce bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_phe bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__phr_mode bits_2)(rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxm110k bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__rxautr bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__autoack bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__aackpend bits_1)(rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 bits_3)(rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffen__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffen a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffbc__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffbc a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffab__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffab a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffad__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffad a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffaa__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffaa a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffam__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffam a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffar__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffar a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffa4__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffa4 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__ffa5__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__ffa5 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__spi_edge__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_fce__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_phe__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__phr_mode__projection ((a us_split_fields2)) bits_2 
  (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxm110k__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__rxautr__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__rxautr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__autoack__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__autoack a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__aackpend__projection ((a us_split_fields2)) bits_1 
  (rec__ada___dw1000__register_types__sys_cfg_type__aackpend a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__reserved_1__projection ((a us_split_fields2)) bits_3 
  (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__sys_cfg_type__reserved_2__projection ((a us_split_fields2)) bits_5 
  (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffen
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffen
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffbc
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffbc
                                                   (us_split_fields3 b)))))
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffab
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffab
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffad
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffad
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffaa
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffaa
                                                   (us_split_fields3 b)))))
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffam
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffam
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffar
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffar
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffa4
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffa4
                                                   (us_split_fields3 b))))))
                         (and
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__ffa5
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__ffa5
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge
                                                   (us_split_fields3 b)))))
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe
                                                   (us_split_fields3 b)))))))
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f
                                                   (us_split_fields3 b)))))
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode
                            (us_split_fields3 a))) (to_rep10
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode
                                                   (us_split_fields3 b)))))
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe
                                                   (us_split_fields3 b))))))
                         (and
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__rxautr
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__rxautr
                                                   (us_split_fields3 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__autoack
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__autoack
                                                   (us_split_fields3 b)))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__sys_cfg_type__aackpend
                            (us_split_fields3 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__aackpend
                                                   (us_split_fields3 b)))))
                         (and
                         (= (to_rep11
                            (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1
                            (us_split_fields3 a))) (to_rep11
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1
                                                   (us_split_fields3 b))))
                         (= (to_rep8
                            (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2
                            (us_split_fields3 a))) (to_rep8
                                                   (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2
                                                   (us_split_fields3 b)))))))))
                    true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffen__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffen__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffen__first__bit ada___dw1000__register_types__sys_cfg_type__ffen__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffen__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffen__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffbc__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffbc__first__bit ada___dw1000__register_types__sys_cfg_type__ffbc__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffbc__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffbc__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffab__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffab__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffab__first__bit ada___dw1000__register_types__sys_cfg_type__ffab__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffab__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffab__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffad__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffad__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffad__first__bit ada___dw1000__register_types__sys_cfg_type__ffad__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffad__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffad__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffaa__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffaa__first__bit ada___dw1000__register_types__sys_cfg_type__ffaa__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffaa__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffaa__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffam__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffam__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffam__first__bit ada___dw1000__register_types__sys_cfg_type__ffam__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffam__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffam__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffar__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffar__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffar__first__bit ada___dw1000__register_types__sys_cfg_type__ffar__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffar__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffar__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa4__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffa4__first__bit ada___dw1000__register_types__sys_cfg_type__ffa4__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa4__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa4__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__ffa5__position Int)

;; ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__ffa5__first__bit ada___dw1000__register_types__sys_cfg_type__ffa5__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__ffa5__position_axiom
  (assert (<= 0 ada___dw1000__register_types__sys_cfg_type__ffa5__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__hirq_pol__position Int)

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__hirq_pol__first__bit 
  ada___dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__hirq_pol__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__spi_edge__position Int)

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__spi_edge__first__bit 
  ada___dw1000__register_types__sys_cfg_type__spi_edge__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__spi_edge__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__spi_edge__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_fce__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_fce__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_fce__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_fce__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_fce__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_drxb__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_drxb__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_drxb__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_phe__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_phe__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_phe__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_phe__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_phe__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_rsde__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_rsde__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_rsde__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position Int)

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit 
  ada___dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__fcs_int2f__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__phr_mode__position Int)

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__phr_mode__first__bit 
  ada___dw1000__register_types__sys_cfg_type__phr_mode__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__phr_mode__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__phr_mode__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__dis_stxp__position Int)

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__dis_stxp__first__bit 
  ada___dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__dis_stxp__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxm110k__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxm110k__first__bit 
  ada___dw1000__register_types__sys_cfg_type__rxm110k__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxm110k__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxm110k__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxwtoe__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxwtoe__first__bit ada___dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxwtoe__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__rxautr__position Int)

;; ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__rxautr__first__bit ada___dw1000__register_types__sys_cfg_type__rxautr__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__rxautr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__rxautr__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__autoack__position Int)

;; ada___dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__autoack__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__autoack__first__bit 
  ada___dw1000__register_types__sys_cfg_type__autoack__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__autoack__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__autoack__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__aackpend__position Int)

;; ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__aackpend__first__bit 
  ada___dw1000__register_types__sys_cfg_type__aackpend__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__aackpend__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__aackpend__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_1__position Int)

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__reserved_1__first__bit 
  ada___dw1000__register_types__sys_cfg_type__reserved_1__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_1__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_1__position))

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit Int)

(declare-const ada___dw1000__register_types__sys_cfg_type__reserved_2__position Int)

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__sys_cfg_type__reserved_2__first__bit 
  ada___dw1000__register_types__sys_cfg_type__reserved_2__last__bit))

;; ada___dw1000__register_types__sys_cfg_type__reserved_2__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__sys_cfg_type__reserved_2__position))

(declare-fun user_eq13 (us_rep1 us_rep1) Bool)

(declare-const dummy13 us_rep1)

(declare-datatypes ((sys_cfg_type__ref 0))
(((sys_cfg_type__refqtmk (sys_cfg_type__content us_rep1)))))
(define-fun sys_cfg_type__ref_sys_cfg_type__content__projection ((a sys_cfg_type__ref)) us_rep1 
  (sys_cfg_type__content a))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int7 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2nat x)
                                            (- (- 4294967296 (bv2nat x)))))

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvlshr x n) (lsr2 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvashr x n) (asr2 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvshl x n) (lsl2 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_left3 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) 
  (rotate_right3 v (bv2nat n)))))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (= (nth_bv2 x i) true)
  (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (nth2 x (bv2nat i)) (nth_bv2 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 32)) (i Int))
  (=> (and (<= 0 i) (< i 4294967296))
  (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
  (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))

(declare-datatypes ((t__ref2 0))
(((t__refqtmk2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort bits_32 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE13 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) (_ BitVec 32))

(declare-fun user_eq14 (bits_32 bits_32) Bool)

(declare-const dummy14 bits_32)

(declare-datatypes ((bits_32__ref 0))
(((bits_32__refqtmk (bits_32__content bits_32)))))
(define-fun bits_32__ref_bits_32__content__projection ((a bits_32__ref)) bits_32 
  (bits_32__content a))

(declare-sort bits_16 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE14 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) (_ BitVec 16))

(declare-fun user_eq15 (bits_16 bits_16) Bool)

(declare-const dummy15 bits_16)

(declare-datatypes ((bits_16__ref 0))
(((bits_16__refqtmk (bits_16__content bits_16)))))
(define-fun bits_16__ref_bits_16__content__projection ((a bits_16__ref)) bits_16 
  (bits_16__content a))

(declare-fun to_rep12 (bits_32) (_ BitVec 32))

(declare-fun of_rep12 ((_ BitVec 32)) bits_32)

;; inversion_axiom
  (assert
  (forall ((x bits_32))
  (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep12 (of_rep12 x)) x) :pattern ((to_rep12 (of_rep12 x))) )))

(define-fun to_int8 ((x bits_32)) Int (bv2nat (to_rep12 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_32)) (! (uint_in_range2
  (to_int8 x)) :pattern ((to_int8 x)) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int bits_32))))))
(declare-fun slide ((Array Int bits_32) Int Int) (Array Int bits_32))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq2 ((a (Array Int bits_32)) (a__first Int) (a__last Int)
  (b (Array Int bits_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_156 Int))
                           (=>
                           (and (<= a__first temp___idx_156)
                           (<= temp___idx_156 a__last))
                           (= (to_rep12 (select a temp___idx_156)) (to_rep12
                                                                   (select b (+ (- b__first a__first) temp___idx_156)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_156 Int))
  (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last))
  (= (to_rep12 (select a temp___idx_156)) (to_rep12
                                          (select b (+ (- b__first a__first) temp___idx_156)))))))))))

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__decadriver__driver_type__part_id bits_32)(rec__decadriver__driver_type__lot_id bits_32)(rec__decadriver__driver_type__antenna_delay_prf_64 bits_16)(rec__decadriver__driver_type__antenna_delay_prf_16 bits_16)(rec__decadriver__driver_type__xtal_trim bits_5)(rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32))(rec__decadriver__driver_type__long_frames Bool)(rec__decadriver__driver_type__sys_cfg_reg us_rep1)(rec__decadriver__driver_type__use_otp_xtal_trim Bool)(rec__decadriver__driver_type__use_otp_antenna_delay Bool)(rec__decadriver__driver_type__detect_frame_timeout Bool)(rec__decadriver__driver_type__detect_sfd_timeout Bool)(rec__decadriver__driver_type__detect_phr_error Bool)(rec__decadriver__driver_type__detect_rs_error Bool)(rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_rec__decadriver__driver_type__part_id__projection ((a us_split_fields4)) bits_32 
  (rec__decadriver__driver_type__part_id a))

(define-fun us_split_fields_rec__decadriver__driver_type__lot_id__projection ((a us_split_fields4)) bits_32 
  (rec__decadriver__driver_type__lot_id a))

(define-fun us_split_fields_rec__decadriver__driver_type__antenna_delay_prf_64__projection ((a us_split_fields4)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_64 a))

(define-fun us_split_fields_rec__decadriver__driver_type__antenna_delay_prf_16__projection ((a us_split_fields4)) bits_16 
  (rec__decadriver__driver_type__antenna_delay_prf_16 a))

(define-fun us_split_fields_rec__decadriver__driver_type__xtal_trim__projection ((a us_split_fields4)) bits_5 
  (rec__decadriver__driver_type__xtal_trim a))

(define-fun us_split_fields_rec__decadriver__driver_type__otp_tx_power_levels__projection ((a us_split_fields4)) (Array Int bits_32) 
  (rec__decadriver__driver_type__otp_tx_power_levels a))

(define-fun us_split_fields_rec__decadriver__driver_type__long_frames__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__long_frames a))

(define-fun us_split_fields_rec__decadriver__driver_type__sys_cfg_reg__projection ((a us_split_fields4)) us_rep1 
  (rec__decadriver__driver_type__sys_cfg_reg a))

(define-fun us_split_fields_rec__decadriver__driver_type__use_otp_xtal_trim__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__use_otp_xtal_trim a))

(define-fun us_split_fields_rec__decadriver__driver_type__use_otp_antenna_delay__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__use_otp_antenna_delay a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_frame_timeout__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__detect_frame_timeout a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_sfd_timeout__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__detect_sfd_timeout a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_phr_error__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__detect_phr_error a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_rs_error__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__detect_rs_error a))

(define-fun us_split_fields_rec__decadriver__driver_type__detect_fcs_error__projection ((a us_split_fields4)) Bool 
  (rec__decadriver__driver_type__detect_fcs_error a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___split_fields__6__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const decadriver__driver_type__part_id__first__bit Int)

(declare-const decadriver__driver_type__part_id__last__bit Int)

(declare-const decadriver__driver_type__part_id__position Int)

;; decadriver__driver_type__part_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__part_id__first__bit))

;; decadriver__driver_type__part_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))

;; decadriver__driver_type__part_id__position_axiom
  (assert (<= 0 decadriver__driver_type__part_id__position))

(declare-const decadriver__driver_type__lot_id__first__bit Int)

(declare-const decadriver__driver_type__lot_id__last__bit Int)

(declare-const decadriver__driver_type__lot_id__position Int)

;; decadriver__driver_type__lot_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__first__bit))

;; decadriver__driver_type__lot_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))

;; decadriver__driver_type__lot_id__position_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__position))

(declare-const decadriver__driver_type__antenna_delay_prf_64__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__position Int)

;; decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))

;; decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))

;; decadriver__driver_type__antenna_delay_prf_64__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))

(declare-const decadriver__driver_type__antenna_delay_prf_16__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__position Int)

;; decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))

;; decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))

;; decadriver__driver_type__antenna_delay_prf_16__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))

(declare-const decadriver__driver_type__xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__xtal_trim__position Int)

;; decadriver__driver_type__xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))

;; decadriver__driver_type__xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))

;; decadriver__driver_type__xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__position))

(declare-const decadriver__driver_type__otp_tx_power_levels__first__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__last__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__position Int)

;; decadriver__driver_type__otp_tx_power_levels__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))

;; decadriver__driver_type__otp_tx_power_levels__last__bit_axiom
  (assert
  (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))

;; decadriver__driver_type__otp_tx_power_levels__position_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))

(declare-const decadriver__driver_type__long_frames__first__bit Int)

(declare-const decadriver__driver_type__long_frames__last__bit Int)

(declare-const decadriver__driver_type__long_frames__position Int)

;; decadriver__driver_type__long_frames__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__first__bit))

;; decadriver__driver_type__long_frames__last__bit_axiom
  (assert
  (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))

;; decadriver__driver_type__long_frames__position_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__position))

(declare-const decadriver__driver_type__sys_cfg_reg__first__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__last__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__position Int)

;; decadriver__driver_type__sys_cfg_reg__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))

;; decadriver__driver_type__sys_cfg_reg__last__bit_axiom
  (assert
  (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))

;; decadriver__driver_type__sys_cfg_reg__position_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))

(declare-const decadriver__driver_type__use_otp_xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__position Int)

;; decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))

;; decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))

;; decadriver__driver_type__use_otp_xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))

(declare-const decadriver__driver_type__use_otp_antenna_delay__first__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__last__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__position Int)

;; decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))

;; decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))

;; decadriver__driver_type__use_otp_antenna_delay__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))

(declare-const decadriver__driver_type__detect_frame_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__position Int)

;; decadriver__driver_type__detect_frame_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))

;; decadriver__driver_type__detect_frame_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))

;; decadriver__driver_type__detect_frame_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))

(declare-const decadriver__driver_type__detect_sfd_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__position Int)

;; decadriver__driver_type__detect_sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))

;; decadriver__driver_type__detect_sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))

;; decadriver__driver_type__detect_sfd_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))

(declare-const decadriver__driver_type__detect_phr_error__first__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__last__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__position Int)

;; decadriver__driver_type__detect_phr_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))

;; decadriver__driver_type__detect_phr_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))

;; decadriver__driver_type__detect_phr_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__position))

(declare-const decadriver__driver_type__detect_rs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__position Int)

;; decadriver__driver_type__detect_rs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))

;; decadriver__driver_type__detect_rs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))

;; decadriver__driver_type__detect_rs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__position))

(declare-const decadriver__driver_type__detect_fcs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__position Int)

;; decadriver__driver_type__detect_fcs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))

;; decadriver__driver_type__detect_fcs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))

;; decadriver__driver_type__detect_fcs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__position))

(declare-fun user_eq16 (us_rep2 us_rep2) Bool)

(declare-datatypes ((driver_type__ref 0))
(((driver_type__refqtmk (driver_type__content us_rep2)))))
(define-fun driver_type__ref_driver_type__content__projection ((a driver_type__ref)) us_rep2 
  (driver_type__content a))

(declare-fun phr_mode (us_rep2) Int)

(declare-fun phr_mode__function_guard (Int us_rep2) Bool)

(declare-fun to_rep13 (bits_16) (_ BitVec 16))

(declare-fun of_rep13 ((_ BitVec 16)) bits_16)

;; inversion_axiom
  (assert
  (forall ((x bits_16))
  (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (= (to_rep13 (of_rep13 x)) x) :pattern ((to_rep13 (of_rep13 x))) )))

(define-fun to_int9 ((x bits_16)) Int (bv2nat (to_rep13 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_16)) (! (uint_in_range1
  (to_int9 x)) :pattern ((to_int9 x)) )))

(declare-fun temp_____aggregate_def_522 ((_ BitVec 32)) (Array Int bits_32))

(define-fun default_initial_assumption ((temp___expr_520 us_rep2)
  (temp___skip_top_level_521 Bool)) Bool (and
                                         (and
                                         (= (to_rep12
                                            (rec__decadriver__driver_type__part_id
                                            (us_split_fields5
                                            temp___expr_520))) #x00000000)
                                         (= (to_rep12
                                            (rec__decadriver__driver_type__lot_id
                                            (us_split_fields5
                                            temp___expr_520))) #x00000000))
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep13
                                            (rec__decadriver__driver_type__antenna_delay_prf_64
                                            (us_split_fields5
                                            temp___expr_520))) #x0000)
                                         (= (to_rep13
                                            (rec__decadriver__driver_type__antenna_delay_prf_16
                                            (us_split_fields5
                                            temp___expr_520))) #x0000))
                                         (and
                                         (= (to_rep8
                                            (rec__decadriver__driver_type__xtal_trim
                                            (us_split_fields5
                                            temp___expr_520))) #x10)
                                         (= (rec__decadriver__driver_type__otp_tx_power_levels
                                            (us_split_fields5
                                            temp___expr_520)) (temp_____aggregate_def_522
                                                              #x00000000))))
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__long_frames
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__sys_cfg_reg
                                            (us_split_fields5
                                            temp___expr_520)) (us_repqtmk1
                                                              (us_split_fieldsqtmk1
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep10 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep9 #x00)
                                                              (of_rep11 #x00)
                                                              (of_rep8 #x00)))))
                                         (= (rec__decadriver__driver_type__use_otp_xtal_trim
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0))))
                                         (and
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__use_otp_antenna_delay
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__detect_frame_timeout
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0)))
                                         (= (rec__decadriver__driver_type__detect_sfd_timeout
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0)))
                                         (and
                                         (and
                                         (= (rec__decadriver__driver_type__detect_phr_error
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0))
                                         (= (rec__decadriver__driver_type__detect_rs_error
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0)))
                                         (= (rec__decadriver__driver_type__detect_fcs_error
                                            (us_split_fields5
                                            temp___expr_520)) (distinct 0 0)))))))

(define-fun dynamic_invariant ((temp___expr_240 Int)
  (temp___is_init_236 Bool) (temp___skip_constant_237 Bool)
  (temp___do_toplevel_238 Bool)
  (temp___do_typ_inv_239 Bool)) Bool (=>
                                     (or (= temp___is_init_236 true)
                                     (<= 0 1)) (in_range7 temp___expr_240)))

;; phr_mode__post_axiom
  (assert
  (forall ((self__ us_rep2))
  (! (let ((result (phr_mode self__)))
     (=> (phr_mode__function_guard result self__) (dynamic_invariant result
     true false true true))) :pattern ((phr_mode self__)) )))

(declare-const i8s Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-datatypes ((map__ref1 0))
(((map__refqtmk1 (map__content1 (Array Int bits_16))))))
(declare-fun slide1 ((Array Int bits_16) Int Int) (Array Int bits_16))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_16)))
  (forall ((first Int))
  (! (= (slide1 a first first) a) :pattern ((slide1 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_16)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq3 ((a (Array Int bits_16)) (a__first Int) (a__last Int)
  (b (Array Int bits_16)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_164 Int))
                           (=>
                           (and (<= a__first temp___idx_164)
                           (<= temp___idx_164 a__last))
                           (= (to_rep13 (select a temp___idx_164)) (to_rep13
                                                                   (select b (+ (- b__first a__first) temp___idx_164)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_16)) (b (Array Int bits_16)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_164 Int))
  (=> (and (<= a__first temp___idx_164) (<= temp___idx_164 a__last))
  (= (to_rep13 (select a temp___idx_164)) (to_rep13
                                          (select b (+ (- b__first a__first) temp___idx_164)))))))))))

(declare-const lde_replica_coeffs (Array Int bits_16))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-datatypes ((us_split_fields6 0))
(((us_split_fieldsqtmk3
  (rec__ada___dw1000__register_types__lde_repc_type__lde_repc bits_16)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__lde_repc_type__lde_repc__projection ((a us_split_fields6)) bits_16 
  (rec__ada___dw1000__register_types__lde_repc_type__lde_repc a))

(declare-datatypes ((us_split_fields__ref3 0))
(((us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__10__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ((us_rep3 0))
(((us_repqtmk3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___split_fields__10__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun bool_eq4 ((a us_rep3)
  (b us_rep3)) Bool (ite (= (to_rep13
                            (rec__ada___dw1000__register_types__lde_repc_type__lde_repc
                            (us_split_fields7 a))) (to_rep13
                                                   (rec__ada___dw1000__register_types__lde_repc_type__lde_repc
                                                   (us_split_fields7 b))))
                    true false))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const ada___dw1000__register_types__lde_repc_type__lde_repc__first__bit Int)

(declare-const ada___dw1000__register_types__lde_repc_type__lde_repc__last__bit Int)

(declare-const ada___dw1000__register_types__lde_repc_type__lde_repc__position Int)

;; ada___dw1000__register_types__lde_repc_type__lde_repc__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__lde_repc_type__lde_repc__first__bit))

;; ada___dw1000__register_types__lde_repc_type__lde_repc__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__lde_repc_type__lde_repc__first__bit 
  ada___dw1000__register_types__lde_repc_type__lde_repc__last__bit))

;; ada___dw1000__register_types__lde_repc_type__lde_repc__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__lde_repc_type__lde_repc__position))

(declare-fun user_eq17 (us_rep3 us_rep3) Bool)

(declare-const dummy16 us_rep3)

(declare-datatypes ((lde_repc_type__ref 0))
(((lde_repc_type__refqtmk (lde_repc_type__content us_rep3)))))
(define-fun lde_repc_type__ref_lde_repc_type__content__projection ((a lde_repc_type__ref)) us_rep3 
  (lde_repc_type__content a))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-datatypes ((register_type__ref 0))
(((register_type__refqtmk (register_type__content us_rep1)))))
(define-fun register_type__ref_register_type__content__3__projection ((a register_type__ref)) us_rep1 
  (register_type__content a))

(declare-datatypes ((register_type__ref1 0))
(((register_type__refqtmk1 (register_type__content1 us_rep3)))))
(define-fun register_type__ref_register_type__content__5__projection ((a register_type__ref1)) us_rep3 
  (register_type__content1 a))

(declare-sort bits_4 0)

(define-fun in_range13 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                               (bvule x #x0F)))

(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 15)))

(declare-fun attr__ATTRIBUTE_IMAGE15 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) (_ BitVec 8))

(declare-fun user_eq18 (bits_4 bits_4) Bool)

(declare-const dummy17 bits_4)

(declare-datatypes ((bits_4__ref 0))
(((bits_4__refqtmk (bits_4__content bits_4)))))
(define-fun bits_4__ref_bits_4__content__projection ((a bits_4__ref)) bits_4 
  (bits_4__content a))

(declare-fun to_rep14 (bits_4) (_ BitVec 8))

(declare-fun of_rep14 ((_ BitVec 8)) bits_4)

;; inversion_axiom
  (assert
  (forall ((x bits_4))
  (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_4)) (! (in_range13
  (to_rep14 x)) :pattern ((to_rep14 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x10)))
     (=> (in_range13 y) (= (to_rep14 (of_rep14 x)) y))) :pattern ((to_rep14
                                                                  (of_rep14
                                                                  x))) )))

(define-fun to_int10 ((x bits_4)) Int (bv2nat (to_rep14 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_4)) (! (in_range_int4
  (to_int10 x)) :pattern ((to_int10 x)) )))

(declare-sort bits_9 0)

(define-fun in_range14 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x)
                                                (bvule x #x01FF)))

(define-fun in_range_int5 ((x Int)) Bool (and (<= 0 x) (<= x 511)))

(declare-fun attr__ATTRIBUTE_IMAGE16 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) (_ BitVec 16))

(declare-fun user_eq19 (bits_9 bits_9) Bool)

(declare-const dummy18 bits_9)

(declare-datatypes ((bits_9__ref 0))
(((bits_9__refqtmk (bits_9__content bits_9)))))
(define-fun bits_9__ref_bits_9__content__projection ((a bits_9__ref)) bits_9 
  (bits_9__content a))

(declare-fun to_rep15 (bits_9) (_ BitVec 16))

(declare-fun of_rep15 ((_ BitVec 16)) bits_9)

;; inversion_axiom
  (assert
  (forall ((x bits_9))
  (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_9)) (! (in_range14
  (to_rep15 x)) :pattern ((to_rep15 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (let ((y (bvurem x #x0200)))
     (=> (in_range14 y) (= (to_rep15 (of_rep15 x)) y))) :pattern ((to_rep15
                                                                  (of_rep15
                                                                  x))) )))

(define-fun to_int11 ((x bits_9)) Int (bv2nat (to_rep15 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_9)) (! (in_range_int5
  (to_int11 x)) :pattern ((to_int11 x)) )))

(declare-datatypes ((us_split_fields8 0))
(((us_split_fieldsqtmk4
  (rec__ada___dw1000__register_types__chan_ctrl_type__tx_chan bits_4)(rec__ada___dw1000__register_types__chan_ctrl_type__rx_chan bits_4)(rec__ada___dw1000__register_types__chan_ctrl_type__dwsfd bits_1)(rec__ada___dw1000__register_types__chan_ctrl_type__rxprf bits_2)(rec__ada___dw1000__register_types__chan_ctrl_type__tnssfd bits_1)(rec__ada___dw1000__register_types__chan_ctrl_type__rnssfd bits_1)(rec__ada___dw1000__register_types__chan_ctrl_type__tx_pcode bits_5)(rec__ada___dw1000__register_types__chan_ctrl_type__rx_pcode bits_5)(rec__ada___dw1000__register_types__chan_ctrl_type__reserved bits_9)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__tx_chan__projection ((a us_split_fields8)) bits_4 
  (rec__ada___dw1000__register_types__chan_ctrl_type__tx_chan a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__rx_chan__projection ((a us_split_fields8)) bits_4 
  (rec__ada___dw1000__register_types__chan_ctrl_type__rx_chan a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__dwsfd__projection ((a us_split_fields8)) bits_1 
  (rec__ada___dw1000__register_types__chan_ctrl_type__dwsfd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__rxprf__projection ((a us_split_fields8)) bits_2 
  (rec__ada___dw1000__register_types__chan_ctrl_type__rxprf a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__tnssfd__projection ((a us_split_fields8)) bits_1 
  (rec__ada___dw1000__register_types__chan_ctrl_type__tnssfd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__rnssfd__projection ((a us_split_fields8)) bits_1 
  (rec__ada___dw1000__register_types__chan_ctrl_type__rnssfd a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__tx_pcode__projection ((a us_split_fields8)) bits_5 
  (rec__ada___dw1000__register_types__chan_ctrl_type__tx_pcode a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__rx_pcode__projection ((a us_split_fields8)) bits_5 
  (rec__ada___dw1000__register_types__chan_ctrl_type__rx_pcode a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__chan_ctrl_type__reserved__projection ((a us_split_fields8)) bits_9 
  (rec__ada___dw1000__register_types__chan_ctrl_type__reserved a))

(declare-datatypes ((us_split_fields__ref4 0))
(((us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__11__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ((us_rep4 0))
(((us_repqtmk4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___split_fields__11__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun bool_eq5 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (= (to_rep14
                            (rec__ada___dw1000__register_types__chan_ctrl_type__tx_chan
                            (us_split_fields9 a))) (to_rep14
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__tx_chan
                                                   (us_split_fields9 b))))
                         (= (to_rep14
                            (rec__ada___dw1000__register_types__chan_ctrl_type__rx_chan
                            (us_split_fields9 a))) (to_rep14
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__rx_chan
                                                   (us_split_fields9 b)))))
                         (and
                         (and
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__chan_ctrl_type__dwsfd
                            (us_split_fields9 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__dwsfd
                                                   (us_split_fields9 b))))
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__chan_ctrl_type__rxprf
                            (us_split_fields9 a))) (to_rep10
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__rxprf
                                                   (us_split_fields9 b)))))
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__chan_ctrl_type__tnssfd
                            (us_split_fields9 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__tnssfd
                                                   (us_split_fields9 b))))
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__chan_ctrl_type__rnssfd
                            (us_split_fields9 a))) (to_rep9
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__rnssfd
                                                   (us_split_fields9 b))))))
                         (and
                         (and
                         (= (to_rep8
                            (rec__ada___dw1000__register_types__chan_ctrl_type__tx_pcode
                            (us_split_fields9 a))) (to_rep8
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__tx_pcode
                                                   (us_split_fields9 b))))
                         (= (to_rep8
                            (rec__ada___dw1000__register_types__chan_ctrl_type__rx_pcode
                            (us_split_fields9 a))) (to_rep8
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__rx_pcode
                                                   (us_split_fields9 b)))))
                         (= (to_rep15
                            (rec__ada___dw1000__register_types__chan_ctrl_type__reserved
                            (us_split_fields9 a))) (to_rep15
                                                   (rec__ada___dw1000__register_types__chan_ctrl_type__reserved
                                                   (us_split_fields9 b)))))))
                    true false))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_chan__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_chan__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_chan__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__tx_chan__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tx_chan__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tx_chan__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__tx_chan__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__tx_chan__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tx_chan__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tx_chan__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_chan__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_chan__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_chan__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__rx_chan__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rx_chan__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rx_chan__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__rx_chan__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__rx_chan__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rx_chan__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rx_chan__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__dwsfd__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__dwsfd__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__dwsfd__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__dwsfd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__dwsfd__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__dwsfd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__dwsfd__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__dwsfd__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__dwsfd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__dwsfd__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__rxprf__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rxprf__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rxprf__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__rxprf__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rxprf__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rxprf__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__rxprf__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__rxprf__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rxprf__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rxprf__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__tnssfd__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tnssfd__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tnssfd__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__tnssfd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tnssfd__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tnssfd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__tnssfd__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__tnssfd__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tnssfd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tnssfd__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__rnssfd__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rnssfd__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rnssfd__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__rnssfd__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rnssfd__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rnssfd__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__rnssfd__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__rnssfd__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rnssfd__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rnssfd__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__tx_pcode__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__tx_pcode__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__tx_pcode__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__rx_pcode__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__rx_pcode__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__rx_pcode__position))

(declare-const ada___dw1000__register_types__chan_ctrl_type__reserved__first__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__reserved__last__bit Int)

(declare-const ada___dw1000__register_types__chan_ctrl_type__reserved__position Int)

;; ada___dw1000__register_types__chan_ctrl_type__reserved__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__reserved__first__bit))

;; ada___dw1000__register_types__chan_ctrl_type__reserved__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__chan_ctrl_type__reserved__first__bit 
  ada___dw1000__register_types__chan_ctrl_type__reserved__last__bit))

;; ada___dw1000__register_types__chan_ctrl_type__reserved__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__chan_ctrl_type__reserved__position))

(declare-fun user_eq20 (us_rep4 us_rep4) Bool)

(declare-const dummy19 us_rep4)

(declare-datatypes ((chan_ctrl_type__ref 0))
(((chan_ctrl_type__refqtmk (chan_ctrl_type__content us_rep4)))))
(define-fun chan_ctrl_type__ref_chan_ctrl_type__content__projection ((a chan_ctrl_type__ref)) us_rep4 
  (chan_ctrl_type__content a))

(declare-datatypes ((register_type__ref2 0))
(((register_type__refqtmk2 (register_type__content2 us_rep4)))))
(define-fun register_type__ref_register_type__content__6__projection ((a register_type__ref2)) us_rep4 
  (register_type__content2 a))

(declare-sort bits_8 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE17 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) (_ BitVec 8))

(declare-fun user_eq21 (bits_8 bits_8) Bool)

(declare-const dummy20 bits_8)

(declare-datatypes ((bits_8__ref 0))
(((bits_8__refqtmk (bits_8__content bits_8)))))
(define-fun bits_8__ref_bits_8__content__projection ((a bits_8__ref)) bits_8 
  (bits_8__content a))

(declare-fun to_rep16 (bits_8) (_ BitVec 8))

(declare-fun of_rep16 ((_ BitVec 8)) bits_8)

;; inversion_axiom
  (assert
  (forall ((x bits_8))
  (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep16 (of_rep16 x)) x) :pattern ((to_rep16 (of_rep16 x))) )))

(define-fun to_int12 ((x bits_8)) Int (bv2nat (to_rep16 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_8)) (! (uint_in_range
  (to_int12 x)) :pattern ((to_int12 x)) )))

(declare-sort bits_7 0)

(define-fun in_range15 ((x (_ BitVec 8))) Bool (and (bvule #x00 x)
                                               (bvule x #x7F)))

(define-fun in_range_int6 ((x Int)) Bool (and (<= 0 x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE18 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) (_ BitVec 8))

(declare-fun user_eq22 (bits_7 bits_7) Bool)

(declare-const dummy21 bits_7)

(declare-datatypes ((bits_7__ref 0))
(((bits_7__refqtmk (bits_7__content bits_7)))))
(define-fun bits_7__ref_bits_7__content__projection ((a bits_7__ref)) bits_7 
  (bits_7__content a))

(declare-fun to_rep17 (bits_7) (_ BitVec 8))

(declare-fun of_rep17 ((_ BitVec 8)) bits_7)

;; inversion_axiom
  (assert
  (forall ((x bits_7))
  (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_7)) (! (in_range15
  (to_rep17 x)) :pattern ((to_rep17 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x #x80)))
     (=> (in_range15 y) (= (to_rep17 (of_rep17 x)) y))) :pattern ((to_rep17
                                                                  (of_rep17
                                                                  x))) )))

(define-fun to_int13 ((x bits_7)) Int (bv2nat (to_rep17 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_7)) (! (in_range_int6
  (to_int13 x)) :pattern ((to_int13 x)) )))

(declare-sort bits_10 0)

(define-fun in_range16 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x)
                                                (bvule x #x03FF)))

(define-fun in_range_int7 ((x Int)) Bool (and (<= 0 x) (<= x 1023)))

(declare-fun attr__ATTRIBUTE_IMAGE19 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) (_ BitVec 16))

(declare-fun user_eq23 (bits_10 bits_10) Bool)

(declare-const dummy22 bits_10)

(declare-datatypes ((bits_10__ref 0))
(((bits_10__refqtmk (bits_10__content bits_10)))))
(define-fun bits_10__ref_bits_10__content__projection ((a bits_10__ref)) bits_10 
  (bits_10__content a))

(declare-fun to_rep18 (bits_10) (_ BitVec 16))

(declare-fun of_rep18 ((_ BitVec 16)) bits_10)

;; inversion_axiom
  (assert
  (forall ((x bits_10))
  (! (= (of_rep18 (to_rep18 x)) x) :pattern ((to_rep18 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_10)) (! (in_range16
  (to_rep18 x)) :pattern ((to_rep18 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (let ((y (bvurem x #x0400)))
     (=> (in_range16 y) (= (to_rep18 (of_rep18 x)) y))) :pattern ((to_rep18
                                                                  (of_rep18
                                                                  x))) )))

(define-fun to_int14 ((x bits_10)) Int (bv2nat (to_rep18 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_10)) (! (in_range_int7
  (to_int14 x)) :pattern ((to_int14 x)) )))

(declare-datatypes ((us_split_fields10 0))
(((us_split_fieldsqtmk5
  (rec__ada___dw1000__register_types__tx_fctrl_type__tflen bits_7)(rec__ada___dw1000__register_types__tx_fctrl_type__tfle bits_3)(rec__ada___dw1000__register_types__tx_fctrl_type__r bits_3)(rec__ada___dw1000__register_types__tx_fctrl_type__txbr bits_2)(rec__ada___dw1000__register_types__tx_fctrl_type__tr bits_1)(rec__ada___dw1000__register_types__tx_fctrl_type__txprf bits_2)(rec__ada___dw1000__register_types__tx_fctrl_type__txpsr bits_2)(rec__ada___dw1000__register_types__tx_fctrl_type__pe bits_2)(rec__ada___dw1000__register_types__tx_fctrl_type__txboffs bits_10)(rec__ada___dw1000__register_types__tx_fctrl_type__ifsdelay bits_8)))))
(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__tflen__projection ((a us_split_fields10)) bits_7 
  (rec__ada___dw1000__register_types__tx_fctrl_type__tflen a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__tfle__projection ((a us_split_fields10)) bits_3 
  (rec__ada___dw1000__register_types__tx_fctrl_type__tfle a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__r__projection ((a us_split_fields10)) bits_3 
  (rec__ada___dw1000__register_types__tx_fctrl_type__r a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__txbr__projection ((a us_split_fields10)) bits_2 
  (rec__ada___dw1000__register_types__tx_fctrl_type__txbr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__tr__projection ((a us_split_fields10)) bits_1 
  (rec__ada___dw1000__register_types__tx_fctrl_type__tr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__txprf__projection ((a us_split_fields10)) bits_2 
  (rec__ada___dw1000__register_types__tx_fctrl_type__txprf a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__txpsr__projection ((a us_split_fields10)) bits_2 
  (rec__ada___dw1000__register_types__tx_fctrl_type__txpsr a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__pe__projection ((a us_split_fields10)) bits_2 
  (rec__ada___dw1000__register_types__tx_fctrl_type__pe a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__txboffs__projection ((a us_split_fields10)) bits_10 
  (rec__ada___dw1000__register_types__tx_fctrl_type__txboffs a))

(define-fun us_split_fields_rec__ada___dw1000__register_types__tx_fctrl_type__ifsdelay__projection ((a us_split_fields10)) bits_8 
  (rec__ada___dw1000__register_types__tx_fctrl_type__ifsdelay a))

(declare-datatypes ((us_split_fields__ref5 0))
(((us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__12__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ((us_rep5 0))
(((us_repqtmk5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___split_fields__12__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun bool_eq6 ((a us_rep5)
  (b us_rep5)) Bool (ite (and
                         (and
                         (= (to_rep17
                            (rec__ada___dw1000__register_types__tx_fctrl_type__tflen
                            (us_split_fields11 a))) (to_rep17
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__tflen
                                                    (us_split_fields11 b))))
                         (= (to_rep11
                            (rec__ada___dw1000__register_types__tx_fctrl_type__tfle
                            (us_split_fields11 a))) (to_rep11
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__tfle
                                                    (us_split_fields11 b)))))
                         (and
                         (and
                         (and
                         (= (to_rep11
                            (rec__ada___dw1000__register_types__tx_fctrl_type__r
                            (us_split_fields11 a))) (to_rep11
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__r
                                                    (us_split_fields11 b))))
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__tx_fctrl_type__txbr
                            (us_split_fields11 a))) (to_rep10
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__txbr
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep9
                            (rec__ada___dw1000__register_types__tx_fctrl_type__tr
                            (us_split_fields11 a))) (to_rep9
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__tr
                                                    (us_split_fields11 b))))
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__tx_fctrl_type__txprf
                            (us_split_fields11 a))) (to_rep10
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__txprf
                                                    (us_split_fields11 b))))))
                         (and
                         (and
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__tx_fctrl_type__txpsr
                            (us_split_fields11 a))) (to_rep10
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__txpsr
                                                    (us_split_fields11 b))))
                         (= (to_rep10
                            (rec__ada___dw1000__register_types__tx_fctrl_type__pe
                            (us_split_fields11 a))) (to_rep10
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__pe
                                                    (us_split_fields11 b)))))
                         (and
                         (= (to_rep18
                            (rec__ada___dw1000__register_types__tx_fctrl_type__txboffs
                            (us_split_fields11 a))) (to_rep18
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__txboffs
                                                    (us_split_fields11 b))))
                         (= (to_rep16
                            (rec__ada___dw1000__register_types__tx_fctrl_type__ifsdelay
                            (us_split_fields11 a))) (to_rep16
                                                    (rec__ada___dw1000__register_types__tx_fctrl_type__ifsdelay
                                                    (us_split_fields11 b))))))))
                    true false))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const ada___dw1000__register_types__tx_fctrl_type__tflen__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tflen__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tflen__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__tflen__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__tflen__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tflen__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__tflen__first__bit ada___dw1000__register_types__tx_fctrl_type__tflen__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tflen__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__tflen__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__tfle__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tfle__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tfle__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__tfle__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__tfle__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tfle__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__tfle__first__bit ada___dw1000__register_types__tx_fctrl_type__tfle__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tfle__position_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__tfle__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__r__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__r__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__r__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__r__first__bit_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__r__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__r__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__r__first__bit ada___dw1000__register_types__tx_fctrl_type__r__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__r__position_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__r__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__txbr__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txbr__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txbr__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__txbr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txbr__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txbr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__txbr__first__bit ada___dw1000__register_types__tx_fctrl_type__txbr__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txbr__position_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__txbr__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__tr__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tr__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__tr__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__tr__first__bit_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__tr__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__tr__first__bit ada___dw1000__register_types__tx_fctrl_type__tr__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__tr__position_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__tr__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__txprf__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txprf__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txprf__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__txprf__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txprf__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txprf__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__txprf__first__bit ada___dw1000__register_types__tx_fctrl_type__txprf__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txprf__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txprf__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__txpsr__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txpsr__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txpsr__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__txpsr__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txpsr__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txpsr__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__txpsr__first__bit ada___dw1000__register_types__tx_fctrl_type__txpsr__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txpsr__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txpsr__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__pe__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__pe__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__pe__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__pe__first__bit_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__pe__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__pe__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__pe__first__bit ada___dw1000__register_types__tx_fctrl_type__pe__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__pe__position_axiom
  (assert (<= 0 ada___dw1000__register_types__tx_fctrl_type__pe__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__txboffs__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txboffs__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__txboffs__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__txboffs__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txboffs__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txboffs__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__txboffs__first__bit 
  ada___dw1000__register_types__tx_fctrl_type__txboffs__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__txboffs__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__txboffs__position))

(declare-const ada___dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit Int)

(declare-const ada___dw1000__register_types__tx_fctrl_type__ifsdelay__position Int)

;; ada___dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit))

;; ada___dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit_axiom
  (assert
  (< ada___dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit 
  ada___dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit))

;; ada___dw1000__register_types__tx_fctrl_type__ifsdelay__position_axiom
  (assert
  (<= 0 ada___dw1000__register_types__tx_fctrl_type__ifsdelay__position))

(declare-fun user_eq24 (us_rep5 us_rep5) Bool)

(declare-const dummy23 us_rep5)

(declare-datatypes ((tx_fctrl_type__ref 0))
(((tx_fctrl_type__refqtmk (tx_fctrl_type__content us_rep5)))))
(define-fun tx_fctrl_type__ref_tx_fctrl_type__content__projection ((a tx_fctrl_type__ref)) us_rep5 
  (tx_fctrl_type__content a))

(declare-datatypes ((register_type__ref3 0))
(((register_type__refqtmk3 (register_type__content3 us_rep5)))))
(define-fun register_type__ref_register_type__content__7__projection ((a register_type__ref3)) us_rep5 
  (register_type__content3 a))

(define-fun dynamic_invariant1 ((temp___expr_195 Int)
  (temp___is_init_191 Bool) (temp___skip_constant_192 Bool)
  (temp___do_toplevel_193 Bool)
  (temp___do_typ_inv_194 Bool)) Bool (and
                                     (=>
                                     (or (= temp___is_init_191 true)
                                     (<= 1 7)) (in_range1 temp___expr_195))
                                     (=> (= temp___do_toplevel_193 true)
                                     (=> (= temp___is_init_191 true)
                                     (or
                                     (and (<= 1 temp___expr_195)
                                     (<= temp___expr_195 5))
                                     (and (<= 7 temp___expr_195)
                                     (<= temp___expr_195 7)))))))

(define-fun dynamic_predicate ((temp___199 Int)) Bool (or
                                                      (and (<= 1 temp___199)
                                                      (<= temp___199 5))
                                                      (and (<= 7 temp___199)
                                                      (<= temp___199 7))))

(define-fun dynamic_invariant2 ((temp___expr_247 Int)
  (temp___is_init_243 Bool) (temp___skip_constant_244 Bool)
  (temp___do_toplevel_245 Bool)
  (temp___do_typ_inv_246 Bool)) Bool (=>
                                     (or (= temp___is_init_243 true)
                                     (<= 0 65535)) (in_range8
                                     temp___expr_247)))

(define-fun dynamic_invariant3 ((temp___expr_254 us_rep)
  (temp___is_init_250 Bool) (temp___skip_constant_251 Bool)
  (temp___do_toplevel_252 Bool)
  (temp___do_typ_inv_253 Bool)) Bool (=> (= temp___is_init_250 true)
                                     (let ((temp___256 (to_rep
                                                       (rec__decadriver__configuration_type__channel
                                                       (us_split_fields1
                                                       temp___expr_254)))))
                                     (or
                                     (and (<= 1 temp___256)
                                     (<= temp___256 5))
                                     (and (<= 7 temp___256)
                                     (<= temp___256 7))))))

(declare-fun decadriver__lde_replica_coeffs__aggregate_def ((_ BitVec 16)
  (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) (Array Int bits_16))

;; lde_replica_coeffs__def_axiom
  (assert
  (= lde_replica_coeffs (decadriver__lde_replica_coeffs__aggregate_def #x599A
                        #x599A #x51EC #x428F #x451F #x2E14 #x8000 #x51EC
                        #x28F6 #x3333 #x3AE1 #x3D71 #x3AE1 #x35C3 #x451F
                        #x35C3 #x3333 #x35C3 #x35C3 #x47AE #x3AE1 #x3852
                        #x30A4 #x3852)))

(define-fun dynamic_invariant4 ((temp___expr_451 (_ BitVec 16))
  (temp___is_init_447 Bool) (temp___skip_constant_448 Bool)
  (temp___do_toplevel_449 Bool) (temp___do_typ_inv_450 Bool)) Bool true)

;; def_axiom
  (assert
  (forall ((temp___166 (_ BitVec 16)) (temp___167 (_ BitVec 16))
  (temp___168 (_ BitVec 16)) (temp___169 (_ BitVec 16))
  (temp___170 (_ BitVec 16)) (temp___171 (_ BitVec 16))
  (temp___172 (_ BitVec 16)) (temp___173 (_ BitVec 16))
  (temp___174 (_ BitVec 16)) (temp___175 (_ BitVec 16))
  (temp___176 (_ BitVec 16)) (temp___177 (_ BitVec 16))
  (temp___178 (_ BitVec 16)) (temp___179 (_ BitVec 16))
  (temp___180 (_ BitVec 16)) (temp___181 (_ BitVec 16))
  (temp___182 (_ BitVec 16)) (temp___183 (_ BitVec 16))
  (temp___184 (_ BitVec 16)) (temp___185 (_ BitVec 16))
  (temp___186 (_ BitVec 16)) (temp___187 (_ BitVec 16))
  (temp___188 (_ BitVec 16)) (temp___189 (_ BitVec 16)))
  (let ((temp___165 (decadriver__lde_replica_coeffs__aggregate_def temp___166
                    temp___167 temp___168 temp___169 temp___170 temp___171
                    temp___172 temp___173 temp___174 temp___175 temp___176
                    temp___177 temp___178 temp___179 temp___180 temp___181
                    temp___182 temp___183 temp___184 temp___185 temp___186
                    temp___187 temp___188 temp___189)))
  (=>
  (and
  (and (dynamic_invariant4 temp___166 true true true true)
  (dynamic_invariant4 temp___167 true true true true))
  (and
  (and
  (and
  (and
  (and (dynamic_invariant4 temp___168 true true true true)
  (dynamic_invariant4 temp___169 true true true true)) (dynamic_invariant4
  temp___170 true true true true))
  (and
  (and (dynamic_invariant4 temp___171 true true true true)
  (dynamic_invariant4 temp___172 true true true true)) (dynamic_invariant4
  temp___173 true true true true)))
  (and
  (and
  (and (dynamic_invariant4 temp___174 true true true true)
  (dynamic_invariant4 temp___175 true true true true)) (dynamic_invariant4
  temp___176 true true true true))
  (and (dynamic_invariant4 temp___177 true true true true)
  (dynamic_invariant4 temp___178 true true true true))))
  (and
  (and
  (and
  (and (dynamic_invariant4 temp___179 true true true true)
  (dynamic_invariant4 temp___180 true true true true)) (dynamic_invariant4
  temp___181 true true true true))
  (and
  (and (dynamic_invariant4 temp___182 true true true true)
  (dynamic_invariant4 temp___183 true true true true)) (dynamic_invariant4
  temp___184 true true true true)))
  (and
  (and
  (and (dynamic_invariant4 temp___185 true true true true)
  (dynamic_invariant4 temp___186 true true true true)) (dynamic_invariant4
  temp___187 true true true true))
  (and (dynamic_invariant4 temp___188 true true true true)
  (dynamic_invariant4 temp___189 true true true true))))))
  (and
  (and (= (to_rep13 (select temp___165 1)) temp___166)
  (= (to_rep13 (select temp___165 2)) temp___167))
  (and
  (and
  (and
  (and
  (and (= (to_rep13 (select temp___165 3)) temp___168)
  (= (to_rep13 (select temp___165 4)) temp___169))
  (= (to_rep13 (select temp___165 5)) temp___170))
  (and
  (and (= (to_rep13 (select temp___165 6)) temp___171)
  (= (to_rep13 (select temp___165 7)) temp___172))
  (= (to_rep13 (select temp___165 8)) temp___173)))
  (and
  (and
  (and (= (to_rep13 (select temp___165 9)) temp___174)
  (= (to_rep13 (select temp___165 10)) temp___175))
  (= (to_rep13 (select temp___165 11)) temp___176))
  (and (= (to_rep13 (select temp___165 12)) temp___177)
  (= (to_rep13 (select temp___165 13)) temp___178))))
  (and
  (and
  (and
  (and (= (to_rep13 (select temp___165 14)) temp___179)
  (= (to_rep13 (select temp___165 15)) temp___180))
  (= (to_rep13 (select temp___165 16)) temp___181))
  (and
  (and (= (to_rep13 (select temp___165 17)) temp___182)
  (= (to_rep13 (select temp___165 18)) temp___183))
  (= (to_rep13 (select temp___165 19)) temp___184)))
  (and
  (and
  (and (= (to_rep13 (select temp___165 20)) temp___185)
  (= (to_rep13 (select temp___165 21)) temp___186))
  (= (to_rep13 (select temp___165 22)) temp___187))
  (and (= (to_rep13 (select temp___165 23)) temp___188)
  (= (to_rep13 (select temp___165 24)) temp___189))))))))))

(define-fun dynamic_invariant5 ((temp___expr_357 (_ BitVec 32))
  (temp___is_init_353 Bool) (temp___skip_constant_354 Bool)
  (temp___do_toplevel_355 Bool) (temp___do_typ_inv_356 Bool)) Bool true)

;; def_axiom
  (assert
  (forall ((temp___524 (_ BitVec 32)))
  (=> (dynamic_invariant5 temp___524 true true true true)
  (forall ((temp___525 Int))
  (= (to_rep12 (select (temp_____aggregate_def_522 temp___524) temp___525)) temp___524)))))

(define-fun dynamic_invariant6 ((temp___expr_465 (_ BitVec 8))
  (temp___is_init_461 Bool) (temp___skip_constant_462 Bool)
  (temp___do_toplevel_463 Bool)
  (temp___do_typ_inv_464 Bool)) Bool (=>
                                     (or (= temp___is_init_461 true)
                                     (bvule #x00 #x01)) (in_range10
                                     temp___expr_465)))

(define-fun dynamic_invariant7 ((temp___expr_472 (_ BitVec 8))
  (temp___is_init_468 Bool) (temp___skip_constant_469 Bool)
  (temp___do_toplevel_470 Bool)
  (temp___do_typ_inv_471 Bool)) Bool (=>
                                     (or (= temp___is_init_468 true)
                                     (bvule #x00 #x03)) (in_range11
                                     temp___expr_472)))

(define-fun dynamic_invariant8 ((temp___expr_479 (_ BitVec 8))
  (temp___is_init_475 Bool) (temp___skip_constant_476 Bool)
  (temp___do_toplevel_477 Bool)
  (temp___do_typ_inv_478 Bool)) Bool (=>
                                     (or (= temp___is_init_475 true)
                                     (bvule #x00 #x07)) (in_range12
                                     temp___expr_479)))

(define-fun dynamic_invariant9 ((temp___expr_792 (_ BitVec 8))
  (temp___is_init_788 Bool) (temp___skip_constant_789 Bool)
  (temp___do_toplevel_790 Bool)
  (temp___do_typ_inv_791 Bool)) Bool (=>
                                     (or (= temp___is_init_788 true)
                                     (bvule #x00 #x0F)) (in_range13
                                     temp___expr_792)))

(define-fun dynamic_invariant10 ((temp___expr_458 (_ BitVec 8))
  (temp___is_init_454 Bool) (temp___skip_constant_455 Bool)
  (temp___do_toplevel_456 Bool)
  (temp___do_typ_inv_457 Bool)) Bool (=>
                                     (or (= temp___is_init_454 true)
                                     (bvule #x00 #x1F)) (in_range9
                                     temp___expr_458)))

(define-fun dynamic_invariant11 ((temp___expr_541 (_ BitVec 8))
  (temp___is_init_537 Bool) (temp___skip_constant_538 Bool)
  (temp___do_toplevel_539 Bool)
  (temp___do_typ_inv_540 Bool)) Bool (=>
                                     (or (= temp___is_init_537 true)
                                     (bvule #x00 #x7F)) (in_range15
                                     temp___expr_541)))

(define-fun dynamic_invariant12 ((temp___expr_295 (_ BitVec 8))
  (temp___is_init_291 Bool) (temp___skip_constant_292 Bool)
  (temp___do_toplevel_293 Bool) (temp___do_typ_inv_294 Bool)) Bool true)

(define-fun dynamic_invariant13 ((temp___expr_799 (_ BitVec 16))
  (temp___is_init_795 Bool) (temp___skip_constant_796 Bool)
  (temp___do_toplevel_797 Bool)
  (temp___do_typ_inv_798 Bool)) Bool (=>
                                     (or (= temp___is_init_795 true)
                                     (bvule #x0000 #x01FF)) (in_range14
                                     temp___expr_799)))

(define-fun dynamic_invariant14 ((temp___expr_838 (_ BitVec 16))
  (temp___is_init_834 Bool) (temp___skip_constant_835 Bool)
  (temp___do_toplevel_836 Bool)
  (temp___do_typ_inv_837 Bool)) Bool (=>
                                     (or (= temp___is_init_834 true)
                                     (bvule #x0000 #x03FF)) (in_range16
                                     temp___expr_838)))

(define-fun dynamic_invariant15 ((temp___expr_233 Int)
  (temp___is_init_229 Bool) (temp___skip_constant_230 Bool)
  (temp___do_toplevel_231 Bool)
  (temp___do_typ_inv_232 Bool)) Bool (=>
                                     (or (= temp___is_init_229 true)
                                     (<= 0 2)) (in_range6 temp___expr_233)))

(define-fun dynamic_invariant16 ((temp___expr_205 Int)
  (temp___is_init_201 Bool) (temp___skip_constant_202 Bool)
  (temp___do_toplevel_203 Bool)
  (temp___do_typ_inv_204 Bool)) Bool (=>
                                     (or (= temp___is_init_201 true)
                                     (<= 0 1)) (in_range2 temp___expr_205)))

(define-fun dynamic_invariant17 ((temp___expr_212 Int)
  (temp___is_init_208 Bool) (temp___skip_constant_209 Bool)
  (temp___do_toplevel_210 Bool)
  (temp___do_typ_inv_211 Bool)) Bool (=>
                                     (or (= temp___is_init_208 true)
                                     (<= 0 7)) (in_range3 temp___expr_212)))

(define-fun dynamic_invariant18 ((temp___expr_219 Int)
  (temp___is_init_215 Bool) (temp___skip_constant_216 Bool)
  (temp___do_toplevel_217 Bool)
  (temp___do_typ_inv_218 Bool)) Bool (=>
                                     (or (= temp___is_init_215 true)
                                     (<= 0 3)) (in_range4 temp___expr_219)))

(define-fun dynamic_invariant19 ((temp___expr_226 Int)
  (temp___is_init_222 Bool) (temp___skip_constant_223 Bool)
  (temp___do_toplevel_224 Bool)
  (temp___do_typ_inv_225 Bool)) Bool (=>
                                     (or (= temp___is_init_222 true)
                                     (<= 1 24)) (in_range5 temp___expr_226)))

(assert
;; defqtvc
 ;; File "decadriver.ads", line 286, characters 0-0
  (not
  (forall ((sfd_timeout Int) (self__ us_split_fields4) (o Int)
  (o1 (_ BitVec 16)) (o2 bits_16) (lde_repc_reg__split_fields bits_16)
  (spark__branch Bool) (lde_repc_reg__split_fields1 bits_16)
  (self__1 us_split_fields4) (o3 Int) (self__2 us_split_fields4))
  (=>
  (= (decadriver__lde_replica_coeffs__aggregate_def #x599A #x599A #x51EC
     #x428F #x451F #x2E14 #x8000 #x51EC #x28F6 #x3333 #x3AE1 #x3D71 #x3AE1
     #x35C3 #x451F #x35C3 #x3333 #x35C3 #x35C3 #x47AE #x3AE1 #x3852 #x30A4
     #x3852) lde_replica_coeffs)
  (=> (dynamic_invariant1 i8s true false true true)
  (=> (dynamic_invariant1 i8s true false true true)
  (=> (dynamic_invariant3 config true false true true)
  (=> (dynamic_invariant2 sfd_timeout false false true true)
  (=>
  (= (to_rep4
     (rec__decadriver__configuration_type__rx_preamble_code
     (us_split_fields1 config))) o)
  (=> (= (to_rep13 (select lde_replica_coeffs o)) o1)
  (=> (= (to_rep13 o2) o1)
  (=> (= lde_repc_reg__split_fields o2)
  (=>
  (exists ((o4 Int))
  (and
  (= (to_rep5
     (rec__decadriver__configuration_type__data_rate
     (us_split_fields1 config))) o4)
  (and (= spark__branch (ite (= o4 0) true false))
  (ite (= spark__branch true)
  (let ((q_ (us_split_fields3
            (rec__decadriver__driver_type__sys_cfg_reg self__))))
  (exists ((o5 bits_1))
  (and (= (to_rep9 o5) #x01)
  (and
  (= self__1 (us_split_fieldsqtmk2
             (rec__decadriver__driver_type__part_id self__)
             (rec__decadriver__driver_type__lot_id self__)
             (rec__decadriver__driver_type__antenna_delay_prf_64 self__)
             (rec__decadriver__driver_type__antenna_delay_prf_16 self__)
             (rec__decadriver__driver_type__xtal_trim self__)
             (rec__decadriver__driver_type__otp_tx_power_levels self__)
             (rec__decadriver__driver_type__long_frames self__)
             (us_repqtmk1
             (us_split_fieldsqtmk1
             (rec__ada___dw1000__register_types__sys_cfg_type__ffen q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffbc q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffab q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffad q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffaa q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffam q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffar q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa4 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa5 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp q_)
             o5 (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__rxautr q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__autoack q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__aackpend q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 q_)))
             (rec__decadriver__driver_type__use_otp_xtal_trim self__)
             (rec__decadriver__driver_type__use_otp_antenna_delay self__)
             (rec__decadriver__driver_type__detect_frame_timeout self__)
             (rec__decadriver__driver_type__detect_sfd_timeout self__)
             (rec__decadriver__driver_type__detect_phr_error self__)
             (rec__decadriver__driver_type__detect_rs_error self__)
             (rec__decadriver__driver_type__detect_fcs_error self__)))
  (exists ((o6 (_ BitVec 16)))
  (and (= (to_rep13 lde_repc_reg__split_fields) o6)
  (exists ((o7 bits_16))
  (and (= (to_rep13 o7) (bvudiv o6 #x0008))
  (= lde_repc_reg__split_fields1 o7)))))))))
  (and
  (let ((q_ (us_split_fields3
            (rec__decadriver__driver_type__sys_cfg_reg self__))))
  (exists ((o5 bits_1))
  (and (= (to_rep9 o5) #x00)
  (= self__1 (us_split_fieldsqtmk2
             (rec__decadriver__driver_type__part_id self__)
             (rec__decadriver__driver_type__lot_id self__)
             (rec__decadriver__driver_type__antenna_delay_prf_64 self__)
             (rec__decadriver__driver_type__antenna_delay_prf_16 self__)
             (rec__decadriver__driver_type__xtal_trim self__)
             (rec__decadriver__driver_type__otp_tx_power_levels self__)
             (rec__decadriver__driver_type__long_frames self__)
             (us_repqtmk1
             (us_split_fieldsqtmk1
             (rec__ada___dw1000__register_types__sys_cfg_type__ffen q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffbc q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffab q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffad q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffaa q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffam q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffar q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa4 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa5 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__phr_mode q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp q_)
             o5 (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__rxautr q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__autoack q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__aackpend q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 q_)))
             (rec__decadriver__driver_type__use_otp_xtal_trim self__)
             (rec__decadriver__driver_type__use_otp_antenna_delay self__)
             (rec__decadriver__driver_type__detect_frame_timeout self__)
             (rec__decadriver__driver_type__detect_sfd_timeout self__)
             (rec__decadriver__driver_type__detect_phr_error self__)
             (rec__decadriver__driver_type__detect_rs_error self__)
             (rec__decadriver__driver_type__detect_fcs_error self__))))))
  (= lde_repc_reg__split_fields1 lde_repc_reg__split_fields))))))
  (=>
  (= (to_rep6
     (rec__decadriver__configuration_type__phr_mode
     (us_split_fields1 config))) o3)
  (=>
  (= self__2 (us_split_fieldsqtmk2
             (rec__decadriver__driver_type__part_id self__1)
             (rec__decadriver__driver_type__lot_id self__1)
             (rec__decadriver__driver_type__antenna_delay_prf_64 self__1)
             (rec__decadriver__driver_type__antenna_delay_prf_16 self__1)
             (rec__decadriver__driver_type__xtal_trim self__1)
             (rec__decadriver__driver_type__otp_tx_power_levels self__1)
             (ite (= o3 1) true false)
             (rec__decadriver__driver_type__sys_cfg_reg self__1)
             (rec__decadriver__driver_type__use_otp_xtal_trim self__1)
             (rec__decadriver__driver_type__use_otp_antenna_delay self__1)
             (rec__decadriver__driver_type__detect_frame_timeout self__1)
             (rec__decadriver__driver_type__detect_sfd_timeout self__1)
             (rec__decadriver__driver_type__detect_phr_error self__1)
             (rec__decadriver__driver_type__detect_rs_error self__1)
             (rec__decadriver__driver_type__detect_fcs_error self__1)))
  (let ((q_ (us_split_fields3
            (rec__decadriver__driver_type__sys_cfg_reg self__2))))
  (forall ((o4 Int))
  (=>
  (= (to_rep6
     (rec__decadriver__configuration_type__phr_mode
     (us_split_fields1 config))) o4)
  (forall ((o5 bits_2))
  (=> (= (to_rep10 o5) ((_ int2bv 8) o4))
  (forall ((self__3 us_split_fields4))
  (=>
  (= self__3 (us_split_fieldsqtmk2
             (rec__decadriver__driver_type__part_id self__2)
             (rec__decadriver__driver_type__lot_id self__2)
             (rec__decadriver__driver_type__antenna_delay_prf_64 self__2)
             (rec__decadriver__driver_type__antenna_delay_prf_16 self__2)
             (rec__decadriver__driver_type__xtal_trim self__2)
             (rec__decadriver__driver_type__otp_tx_power_levels self__2)
             (rec__decadriver__driver_type__long_frames self__2)
             (us_repqtmk1
             (us_split_fieldsqtmk1
             (rec__ada___dw1000__register_types__sys_cfg_type__ffen q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffbc q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffab q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffad q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffaa q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffam q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffar q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa4 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__ffa5 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__hirq_pol q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__spi_edge q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_fce q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_drxb q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_phe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_rsde q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__fcs_int2f q_)
             o5
             (rec__ada___dw1000__register_types__sys_cfg_type__dis_stxp q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__rxm110k q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__rxwtoe q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__rxautr q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__autoack q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__aackpend q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_1 q_)
             (rec__ada___dw1000__register_types__sys_cfg_type__reserved_2 q_)))
             (rec__decadriver__driver_type__use_otp_xtal_trim self__2)
             (rec__decadriver__driver_type__use_otp_antenna_delay self__2)
             (rec__decadriver__driver_type__detect_frame_timeout self__2)
             (rec__decadriver__driver_type__detect_sfd_timeout self__2)
             (rec__decadriver__driver_type__detect_phr_error self__2)
             (rec__decadriver__driver_type__detect_rs_error self__2)
             (rec__decadriver__driver_type__detect_fcs_error self__2)))
  (=>
  (exists ((o6 Int))
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o6))
  (=>
  (exists ((o6 Int))
  (= (to_rep
     (rec__decadriver__configuration_type__channel (us_split_fields1 config))) o6))
  (=>
  (exists ((o6 Int))
  (= (to_rep
     (rec__decadriver__configuration_type__channel (us_split_fields1 config))) o6))
  (forall ((o6 Int))
  (=>
  (exists ((o7 Int))
  (and
  (= (to_rep7
     (rec__decadriver__configuration_type__sfd_timeout
     (us_split_fields1 config))) o7)
  (ite (= o7 0) (= o6 4161)
  (= (to_rep7
     (rec__decadriver__configuration_type__sfd_timeout
     (us_split_fields1 config))) o6))))
  (forall ((sfd_timeout1 Int))
  (=> (= sfd_timeout1 o6)
  (=>
  (exists ((o7 Int))
  (= (to_rep3
     (rec__decadriver__configuration_type__tx_pac (us_split_fields1 config))) o7))
  (=>
  (exists ((o7 Int))
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o7))
  (=>
  (exists ((o7 Int))
  (= (to_rep5
     (rec__decadriver__configuration_type__data_rate
     (us_split_fields1 config))) o7))
  (=>
  (exists ((o7 Int))
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o7))
  (=>
  (exists ((o7 Int))
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o7))
  (forall ((spark__branch1 Bool))
  (=>
  (and
  (= spark__branch1 (rec__decadriver__configuration_type__use_nonstandard_sfd
                    (us_split_fields1 config)))
  (or (not (= spark__branch1 true))
  (exists ((o7 Int))
  (= (to_rep5
     (rec__decadriver__configuration_type__data_rate
     (us_split_fields1 config))) o7))))
  (forall ((o7 bits_9))
  (=> (= (to_rep15 o7) #x0000)
  (forall ((o8 Int))
  (=>
  (= (to_rep4
     (rec__decadriver__configuration_type__rx_preamble_code
     (us_split_fields1 config))) o8)
  (forall ((o9 bits_5))
  (=> (= (to_rep8 o9) ((_ int2bv 8) o8))
  (forall ((o10 Int))
  (=>
  (= (to_rep4
     (rec__decadriver__configuration_type__tx_preamble_code
     (us_split_fields1 config))) o10)
  (forall ((o11 bits_5))
  (=> (= (to_rep8 o11) ((_ int2bv 8) o10))
  (forall ((o12 bits_1))
  (=>
  (ite (= (rec__decadriver__configuration_type__use_nonstandard_sfd
          (us_split_fields1 config)) true)
  (= (to_rep9 o12) #x01) (= (to_rep9 o12) #x00))
  (forall ((o13 bits_1))
  (=>
  (ite (= (rec__decadriver__configuration_type__use_nonstandard_sfd
          (us_split_fields1 config)) true)
  (= (to_rep9 o13) #x01) (= (to_rep9 o13) #x00))
  (forall ((o14 bits_2))
  (=>
  (exists ((o15 Int))
  (and
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o15)
  (ite (= o15 0) (= (to_rep10 o14) #x01) (= (to_rep10 o14) #x02))))
  (forall ((o15 bits_1))
  (=>
  (ite (= (rec__decadriver__configuration_type__use_nonstandard_sfd
          (us_split_fields1 config)) true)
  (= (to_rep9 o15) #x01) (= (to_rep9 o15) #x00))
  (forall ((o16 Int))
  (=>
  (= (to_rep
     (rec__decadriver__configuration_type__channel (us_split_fields1 config))) o16)
  (forall ((o17 bits_4))
  (=> (= (to_rep14 o17) ((_ int2bv 8) o16))
  (forall ((o18 Int))
  (=>
  (= (to_rep
     (rec__decadriver__configuration_type__channel (us_split_fields1 config))) o18)
  (forall ((o19 bits_4))
  (=> (= (to_rep14 o19) ((_ int2bv 8) o18))
  (forall ((o20 bits_8))
  (=> (= (to_rep16 o20) #x00)
  (forall ((o21 bits_10))
  (=> (= (to_rep18 o21) #x0000)
  (forall ((o22 bits_2))
  (=>
  (exists ((o23 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o23)
  (exists ((o24 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o24)
  (exists ((o25 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o25)
  (ite (= (or (or (ite (= o25 0) true false) (ite (= o24 4) true false)) 
  (ite (= o23 7) true false)) true) (= (to_rep10 o22) #x00)
  (exists ((o26 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o26)
  (exists ((o27 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o27)
  (ite (= (or (ite (= o27 1) true false) (ite (= o26 5) true false)) true)
  (= (to_rep10 o22) #x01)
  (exists ((o28 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o28)
  (exists ((o29 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o29)
  (ite (= (or (ite (= o29 2) true false) (ite (= o28 6) true false)) true)
  (= (to_rep10 o22) #x02) (= (to_rep10 o22) #x03))))))))))))))))))
  (forall ((o23 bits_2))
  (=>
  (exists ((o24 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o24)
  (exists ((o25 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o25)
  (exists ((o26 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o26)
  (exists ((o27 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o27)
  (ite (= (or (or (or (ite (= o27 0) true false) (ite (= o26 1) true false)) 
  (ite (= o25 2) true false)) (ite (= o24 3) true false)) true)
  (= (to_rep10 o23) #x01)
  (exists ((o28 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o28)
  (exists ((o29 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o29)
  (exists ((o30 Int))
  (and
  (= (to_rep2
     (rec__decadriver__configuration_type__tx_preamble_length
     (us_split_fields1 config))) o30)
  (ite (= (or (or (ite (= o30 4) true false) (ite (= o29 5) true false)) 
  (ite (= o28 6) true false)) true) (= (to_rep10 o23) #x02)
  (= (to_rep10 o23) #x03)))))))))))))))))
  (forall ((o24 bits_2))
  (=>
  (exists ((o25 Int))
  (and
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o25)
  (ite (= o25 0) (= (to_rep10 o24) #x01) (= (to_rep10 o24) #x02))))
  (forall ((o25 bits_1))
  (=> (= (to_rep9 o25) #x01)
  (forall ((o26 Int))
  (=>
  (= (to_rep5
     (rec__decadriver__configuration_type__data_rate
     (us_split_fields1 config))) o26)
  (forall ((o27 bits_2))
  (=> (= (to_rep10 o27) ((_ int2bv 8) o26))
  (forall ((o28 bits_3))
  (=> (= (to_rep11 o28) #x00)
  (forall ((o29 bits_3))
  (=> (= (to_rep11 o29) #x00)
  (forall ((o30 bits_7))
  (=> (= (to_rep17 o30) #x00)
  (forall ((spark__branch2 Bool))
  (=>
  (and
  (= spark__branch2 (rec__decadriver__driver_type__use_otp_xtal_trim self__3))
  (or (not (= spark__branch2 true))
  (exists ((o31 (_ BitVec 8)))
  (= (to_rep8 (rec__decadriver__driver_type__xtal_trim self__3)) o31))))
  (=>
  (exists ((spark__branch3 Bool))
  (and
  (= spark__branch3 (rec__decadriver__driver_type__use_otp_antenna_delay
                    self__3))
  (or (not (= spark__branch3 true))
  (exists ((o31 Int))
  (and
  (= (to_rep1
     (rec__decadriver__configuration_type__prf (us_split_fields1 config))) o31)
  (exists ((spark__branch4 Bool))
  (and (= spark__branch4 (ite (= o31 0) true false))
  (ite (= spark__branch4 true)
  (exists ((o32 (_ BitVec 16)))
  (= (to_rep13 (rec__decadriver__driver_type__antenna_delay_prf_16 self__3)) o32))
  (exists ((o32 (_ BitVec 16)))
  (= (to_rep13 (rec__decadriver__driver_type__antenna_delay_prf_64 self__3)) o32))))))))))
  (=>
  (forall ((self__4 us_split_fields4)) (phr_mode__function_guard
  (phr_mode (us_repqtmk2 self__4)) (us_repqtmk2 self__4)))
  (= (phr_mode (us_repqtmk2 self__3)) (to_rep6
                                      (rec__decadriver__configuration_type__phr_mode
                                      (us_split_fields1 config))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
