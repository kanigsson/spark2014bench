;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

;; id__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true true)
     (let ((result (id x)))
     (=> (id__function_guard result x) (dynamic_invariant result true false
     true true)))) :pattern ((id x)) )))

;; id__def_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true true) (= (id x) x)) :pattern (
  (id x)) )))

(declare-const zero Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-const first Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ((my_natural__ref 0))
(((my_natural__refqtmk (my_natural__content integer)))))
(define-fun my_natural__ref_my_natural__content__projection ((a my_natural__ref)) integer 
  (my_natural__content a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__subtype_check__r__d integer)))))
(define-fun us_split_discrs_rec__subtype_check__r__d__projection ((a us_split_discrs)) integer 
  (rec__subtype_check__r__d a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__subtype_check__r__f integer)))))
(define-fun us_split_fields_rec__subtype_check__r__f__projection ((a us_split_fields)) integer 
  (rec__subtype_check__r__f a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__subtype_check__r__d (us_split_discrs1 a))) 
                        (to_rep
                        (rec__subtype_check__r__d (us_split_discrs1 b))))
                        (= (to_rep
                           (rec__subtype_check__r__f (us_split_fields1 a))) 
                        (to_rep
                        (rec__subtype_check__r__f (us_split_fields1 b)))))
                   true false))

(define-fun in_range1 ((rec__subtype_check__r__d1 Int)
  (a us_split_discrs)) Bool (= rec__subtype_check__r__d1 (to_rep
                                                         (rec__subtype_check__r__d
                                                         a))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const subtype_check__r__d__first__bit Int)

(declare-const subtype_check__r__d__last__bit Int)

(declare-const subtype_check__r__d__position Int)

;; subtype_check__r__d__first__bit_axiom
  (assert (<= 0 subtype_check__r__d__first__bit))

;; subtype_check__r__d__last__bit_axiom
  (assert (< subtype_check__r__d__first__bit subtype_check__r__d__last__bit))

;; subtype_check__r__d__position_axiom
  (assert (<= 0 subtype_check__r__d__position))

(declare-const subtype_check__r__f__first__bit Int)

(declare-const subtype_check__r__f__last__bit Int)

(declare-const subtype_check__r__f__position Int)

;; subtype_check__r__f__first__bit_axiom
  (assert (<= 0 subtype_check__r__f__first__bit))

;; subtype_check__r__f__last__bit_axiom
  (assert (< subtype_check__r__f__first__bit subtype_check__r__f__last__bit))

;; subtype_check__r__f__position_axiom
  (assert (<= 0 subtype_check__r__f__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((r__ref 0))
(((r__refqtmk (r__content us_rep)))))
(define-fun r__ref_r__content__projection ((a r__ref)) us_rep (r__content a))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun in_range2 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (rec__subtype_check__r_acc__is_null_pointer Bool)(rec__subtype_check__r_acc__pointer_address Int)(rec__subtype_check__r_acc__pointer_value us_rep)))))
(define-fun us_rep_rec__subtype_check__r_acc__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__subtype_check__r_acc__is_null_pointer a))

(define-fun us_rep_rec__subtype_check__r_acc__pointer_address__projection ((a us_rep1)) Int 
  (rec__subtype_check__r_acc__pointer_address a))

(define-fun us_rep_rec__subtype_check__r_acc__pointer_value__projection ((a us_rep1)) us_rep 
  (rec__subtype_check__r_acc__pointer_value a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep1)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep1 
  (us_rep__content a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__subtype_check__r_acc__is_null_pointer a) 
                         (rec__subtype_check__r_acc__is_null_pointer b))
                         (=>
                         (not
                         (= (rec__subtype_check__r_acc__is_null_pointer a) true))
                         (and
                         (= (rec__subtype_check__r_acc__pointer_address a) 
                         (rec__subtype_check__r_acc__pointer_address b))
                         (= (rec__subtype_check__r_acc__pointer_value a) 
                         (rec__subtype_check__r_acc__pointer_value b)))))
                    true false))

(define-fun rec__subtype_check__r_acc__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__subtype_check__r_acc__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep1)

;; __null_pointer__def_axiom
  (assert
  (= (rec__subtype_check__r_acc__is_null_pointer us_null_pointer) true))

(declare-const dummy3 us_rep1)

(declare-datatypes ((r_acc__ref 0))
(((r_acc__refqtmk (r_acc__content us_rep1)))))
(define-fun r_acc__ref_r_acc__content__projection ((a r_acc__ref)) us_rep1 
  (r_acc__content a))

(define-fun dynamic_invariant1 ((temp___expr_173 us_rep1)
  (temp___is_init_169 Bool) (temp___skip_constant_170 Bool)
  (temp___do_toplevel_171 Bool)
  (temp___do_typ_inv_172 Bool)) Bool (=>
                                     (not
                                     (= (rec__subtype_check__r_acc__is_null_pointer
                                        temp___expr_173) true))
                                     (dynamic_property first 100
                                     (to_rep
                                     (rec__subtype_check__r__d
                                     (us_split_discrs1
                                     (rec__subtype_check__r_acc__pointer_value
                                     temp___expr_173)))))))

(define-fun default_initial_assumption ((temp___expr_175 us_rep1)
  (temp___skip_top_level_176 Bool)) Bool (= (rec__subtype_check__r_acc__is_null_pointer
                                            temp___expr_175) true))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const subtype_check__r__d__first__bit1 Int)

(declare-const subtype_check__r__d__last__bit1 Int)

(declare-const subtype_check__r__d__position1 Int)

;; subtype_check__r__d__first__bit_axiom
  (assert (<= 0 subtype_check__r__d__first__bit1))

;; subtype_check__r__d__last__bit_axiom
  (assert
  (< subtype_check__r__d__first__bit1 subtype_check__r__d__last__bit1))

;; subtype_check__r__d__position_axiom
  (assert (<= 0 subtype_check__r__d__position1))

(declare-const subtype_check__r__f__first__bit1 Int)

(declare-const subtype_check__r__f__last__bit1 Int)

(declare-const subtype_check__r__f__position1 Int)

;; subtype_check__r__f__first__bit_axiom
  (assert (<= 0 subtype_check__r__f__first__bit1))

;; subtype_check__r__f__last__bit_axiom
  (assert
  (< subtype_check__r__f__first__bit1 subtype_check__r__f__last__bit1))

;; subtype_check__r__f__position_axiom
  (assert (<= 0 subtype_check__r__f__position1))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((s1s__ref 0))
(((s1s__refqtmk (s1s__content us_rep)))))
(define-fun s1s__ref_s1s__content__projection ((a s1s__ref)) us_rep (s1s__content
                                                                    a))

(define-fun dynamic_invariant2 ((temp___expr_181 us_rep)
  (temp___is_init_177 Bool) (temp___skip_constant_178 Bool)
  (temp___do_toplevel_179 Bool)
  (temp___do_typ_inv_180 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_178 true))
                                     (in_range1 (- 1)
                                     (us_split_discrs1 temp___expr_181)))
                                     (dynamic_property first 100
                                     (to_rep
                                     (rec__subtype_check__r__d
                                     (us_split_discrs1 temp___expr_181))))))

(define-fun default_initial_assumption1 ((temp___expr_183 us_rep)
  (temp___skip_top_level_184 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__subtype_check__r__d
                                            (us_split_discrs1
                                            temp___expr_183))) (- 1))
                                         (= (to_rep
                                            (rec__subtype_check__r__f
                                            (us_split_fields1
                                            temp___expr_183))) 10)))

;; zero__def_axiom
  (assert (and (id__function_guard (id 0) 0) (= zero (id 0))))

(define-fun dynamic_invariant3 ((temp___expr_160 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)
  (temp___do_typ_inv_159 Bool)) Bool (=>
                                     (or (= temp___is_init_156 true)
                                     (<= first 100)) (dynamic_property 
                                     first 100 temp___expr_160)))

;; first__def_axiom
  (assert (= first zero))

(define-fun dynamic_invariant4 ((temp___expr_167 us_rep)
  (temp___is_init_163 Bool) (temp___skip_constant_164 Bool)
  (temp___do_toplevel_165 Bool)
  (temp___do_typ_inv_166 Bool)) Bool (dynamic_property first 100
  (to_rep (rec__subtype_check__r__d (us_split_discrs1 temp___expr_167)))))

(assert
;; defqtvc
 ;; File "subtype_check.ads", line 1, characters 0-0
  (not
  (let ((subtype_check__zero__assume (id 0)))
  (=>
  (and (id__function_guard subtype_check__zero__assume 0)
  (and (dynamic_invariant subtype_check__zero__assume true false true true)
  (= subtype_check__zero__assume 0)))
  (=> (= subtype_check__zero__assume zero)
  (=> (dynamic_invariant zero true false true true) (dynamic_property 
  first 100 (- 1))))))))
(check-sat)
