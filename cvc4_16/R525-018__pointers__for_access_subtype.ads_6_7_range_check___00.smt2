;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-const dummy2 us_t)

(declare-datatypes ((tab__ref 0))
(((tab__refqtmk (tab__content us_t)))))
(define-fun tab__ref_tab__content__projection ((a tab__ref)) us_t (tab__content
                                                                  a))

(declare-datatypes ((t4s__ref 0))
(((t4s__refqtmk (t4s__content us_t)))))
(define-fun t4s__ref_t4s__content__projection ((a t4s__ref)) us_t (t4s__content
                                                                  a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__for_access_subtype__l__n integer)))))
(define-fun us_split_discrs_rec__for_access_subtype__l__n__projection ((a us_split_discrs)) integer 
  (rec__for_access_subtype__l__n a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__for_access_subtype__l__t us_t)))))
(define-fun us_split_fields_rec__for_access_subtype__l__t__projection ((a us_split_fields)) us_t 
  (rec__for_access_subtype__l__t a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__for_access_subtype__l__n
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__for_access_subtype__l__n
                                                  (us_split_discrs1 b))))
                        (= (bool_eq1
                           (rec__for_access_subtype__l__t
                           (us_split_fields1 a))
                           (rec__for_access_subtype__l__t
                           (us_split_fields1 b))) true))
                   true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const for_access_subtype__l__n__first__bit Int)

(declare-const for_access_subtype__l__n__last__bit Int)

(declare-const for_access_subtype__l__n__position Int)

;; for_access_subtype__l__n__first__bit_axiom
  (assert (<= 0 for_access_subtype__l__n__first__bit))

;; for_access_subtype__l__n__last__bit_axiom
  (assert
  (< for_access_subtype__l__n__first__bit for_access_subtype__l__n__last__bit))

;; for_access_subtype__l__n__position_axiom
  (assert (<= 0 for_access_subtype__l__n__position))

(declare-const for_access_subtype__l__t__first__bit Int)

(declare-const for_access_subtype__l__t__last__bit Int)

(declare-const for_access_subtype__l__t__position Int)

;; for_access_subtype__l__t__first__bit_axiom
  (assert (<= 0 for_access_subtype__l__t__first__bit))

;; for_access_subtype__l__t__last__bit_axiom
  (assert
  (< for_access_subtype__l__t__first__bit for_access_subtype__l__t__last__bit))

;; for_access_subtype__l__t__position_axiom
  (assert (<= 0 for_access_subtype__l__t__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((t5s__ref 0))
(((t5s__refqtmk (t5s__content us_rep)))))
(define-fun t5s__ref_t5s__content__projection ((a t5s__ref)) us_rep (t5s__content
                                                                    a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun in_range2 ((rec__for_access_subtype__l__n1 Int)
  (a us_split_discrs)) Bool (= rec__for_access_subtype__l__n1 (to_rep
                                                              (rec__for_access_subtype__l__n
                                                              a))))

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const for_access_subtype__l__n__first__bit1 Int)

(declare-const for_access_subtype__l__n__last__bit1 Int)

(declare-const for_access_subtype__l__n__position1 Int)

;; for_access_subtype__l__n__first__bit_axiom
  (assert (<= 0 for_access_subtype__l__n__first__bit1))

;; for_access_subtype__l__n__last__bit_axiom
  (assert
  (< for_access_subtype__l__n__first__bit1 for_access_subtype__l__n__last__bit1))

;; for_access_subtype__l__n__position_axiom
  (assert (<= 0 for_access_subtype__l__n__position1))

(declare-const for_access_subtype__l__t__first__bit1 Int)

(declare-const for_access_subtype__l__t__last__bit1 Int)

(declare-const for_access_subtype__l__t__position1 Int)

;; for_access_subtype__l__t__first__bit_axiom
  (assert (<= 0 for_access_subtype__l__t__first__bit1))

;; for_access_subtype__l__t__last__bit_axiom
  (assert
  (< for_access_subtype__l__t__first__bit1 for_access_subtype__l__t__last__bit1))

;; for_access_subtype__l__t__position_axiom
  (assert (<= 0 for_access_subtype__l__t__position1))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((l__ref 0))
(((l__refqtmk (l__content us_rep)))))
(define-fun l__ref_l__content__projection ((a l__ref)) us_rep (l__content a))

(define-fun in_range3 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (rec__for_access_subtype__l_ptr__is_null_pointer Bool)(rec__for_access_subtype__l_ptr__pointer_address Int)(rec__for_access_subtype__l_ptr__pointer_value us_rep)))))
(define-fun us_rep_rec__for_access_subtype__l_ptr__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__for_access_subtype__l_ptr__is_null_pointer a))

(define-fun us_rep_rec__for_access_subtype__l_ptr__pointer_address__projection ((a us_rep1)) Int 
  (rec__for_access_subtype__l_ptr__pointer_address a))

(define-fun us_rep_rec__for_access_subtype__l_ptr__pointer_value__projection ((a us_rep1)) us_rep 
  (rec__for_access_subtype__l_ptr__pointer_value a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep1)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep1 
  (us_rep__content a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__for_access_subtype__l_ptr__is_null_pointer
                            a) (rec__for_access_subtype__l_ptr__is_null_pointer
                               b))
                         (=>
                         (not
                         (= (rec__for_access_subtype__l_ptr__is_null_pointer
                            a) true))
                         (and
                         (= (rec__for_access_subtype__l_ptr__pointer_address
                            a) (rec__for_access_subtype__l_ptr__pointer_address
                               b))
                         (= (rec__for_access_subtype__l_ptr__pointer_value a) 
                         (rec__for_access_subtype__l_ptr__pointer_value b)))))
                    true false))

(define-fun rec__for_access_subtype__l_ptr__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__for_access_subtype__l_ptr__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep1)

;; __null_pointer__def_axiom
  (assert
  (= (rec__for_access_subtype__l_ptr__is_null_pointer us_null_pointer) true))

(declare-const dummy5 us_rep1)

(declare-datatypes ((l_ptr__ref 0))
(((l_ptr__refqtmk (l_ptr__content us_rep1)))))
(define-fun l_ptr__ref_l_ptr__content__projection ((a l_ptr__ref)) us_rep1 
  (l_ptr__content a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2
  (rec__for_access_subtype__l_ptr__is_null_pointer1 Bool)(rec__for_access_subtype__l_ptr__pointer_address1 Int)(rec__for_access_subtype__l_ptr__pointer_value1 us_rep)))))
(define-fun us_rep_rec__for_access_subtype__l_ptr__is_null_pointer__2__projection ((a us_rep2)) Bool 
  (rec__for_access_subtype__l_ptr__is_null_pointer1 a))

(define-fun us_rep_rec__for_access_subtype__l_ptr__pointer_address__2__projection ((a us_rep2)) Int 
  (rec__for_access_subtype__l_ptr__pointer_address1 a))

(define-fun us_rep_rec__for_access_subtype__l_ptr__pointer_value__2__projection ((a us_rep2)) us_rep 
  (rec__for_access_subtype__l_ptr__pointer_value1 a))

(declare-datatypes ((us_rep__ref1 0))
(((us_rep__refqtmk1 (us_rep__content1 us_rep2)))))
(define-fun us_rep__ref___rep__content__2__projection ((a us_rep__ref1)) us_rep2 
  (us_rep__content1 a))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (rec__for_access_subtype__l_ptr__is_null_pointer1
                            a) (rec__for_access_subtype__l_ptr__is_null_pointer1
                               b))
                         (=>
                         (not
                         (= (rec__for_access_subtype__l_ptr__is_null_pointer1
                            a) true))
                         (and
                         (= (rec__for_access_subtype__l_ptr__pointer_address1
                            a) (rec__for_access_subtype__l_ptr__pointer_address1
                               b))
                         (= (rec__for_access_subtype__l_ptr__pointer_value1
                            a) (rec__for_access_subtype__l_ptr__pointer_value1
                               b)))))
                    true false))

(define-fun rec__for_access_subtype__Tl3S__pointer_value__pred ((a us_rep2)) Bool 
  (not (= (rec__for_access_subtype__l_ptr__is_null_pointer1 a) true)))

(declare-const us_null_pointer1 us_rep2)

;; __null_pointer__def_axiom
  (assert
  (= (rec__for_access_subtype__l_ptr__is_null_pointer1 us_null_pointer1) true))

(define-fun to_base ((a us_rep2)) us_rep1 (us_repqtmk1
                                          (rec__for_access_subtype__l_ptr__is_null_pointer1
                                          a)
                                          (rec__for_access_subtype__l_ptr__pointer_address1
                                          a)
                                          (rec__for_access_subtype__l_ptr__pointer_value1
                                          a)))

(define-fun of_base ((r us_rep1)) us_rep2 (us_repqtmk2
                                          (rec__for_access_subtype__l_ptr__is_null_pointer
                                          r)
                                          (rec__for_access_subtype__l_ptr__pointer_address
                                          r)
                                          (rec__for_access_subtype__l_ptr__pointer_value
                                          r)))

(define-fun in_range4 ((rec__for_access_subtype__l__n1 Int)
  (r us_rep1)) Bool (=>
                    (not
                    (= (rec__for_access_subtype__l_ptr__is_null_pointer r) true))
                    (in_range2 rec__for_access_subtype__l__n1
                    (us_split_discrs1
                    (rec__for_access_subtype__l_ptr__pointer_value r)))))

(declare-const dummy6 us_rep2)

(declare-datatypes ((tl3S__ref 0))
(((tl3S__refqtmk (tl3S__content us_rep2)))))
(define-fun tl3S__ref_tl3S__content__projection ((a tl3S__ref)) us_rep2 
  (tl3S__content a))

(define-fun dynamic_invariant1 ((temp___expr_181 us_rep2)
  (temp___is_init_177 Bool) (temp___skip_constant_178 Bool)
  (temp___do_toplevel_179 Bool)
  (temp___do_typ_inv_180 Bool)) Bool (=>
                                     (not
                                     (= (rec__for_access_subtype__l_ptr__is_null_pointer1
                                        temp___expr_181) true))
                                     (and (in_range2 14
                                     (us_split_discrs1
                                     (rec__for_access_subtype__l_ptr__pointer_value1
                                     temp___expr_181)))
                                     (let ((temp___182 (rec__for_access_subtype__l__n
                                                       (us_split_discrs1
                                                       (rec__for_access_subtype__l_ptr__pointer_value1
                                                       temp___expr_181)))))
                                     (and (dynamic_property 1
                                     (to_rep temp___182)
                                     (first1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1
                                     (rec__for_access_subtype__l_ptr__pointer_value1
                                     temp___expr_181))))
                                     (last1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1
                                     (rec__for_access_subtype__l_ptr__pointer_value1
                                     temp___expr_181)))))
                                     (and
                                     (= (first1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1
                                        (rec__for_access_subtype__l_ptr__pointer_value1
                                        temp___expr_181)))) 1)
                                     (= (last1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1
                                        (rec__for_access_subtype__l_ptr__pointer_value1
                                        temp___expr_181)))) (to_rep
                                                            temp___182))))))))

(define-fun default_initial_assumption ((temp___expr_184 us_rep2)
  (temp___skip_top_level_185 Bool)) Bool (= (rec__for_access_subtype__l_ptr__is_null_pointer1
                                            temp___expr_184) true))

(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun dynamic_invariant3 ((temp___expr_165 us_rep)
  (temp___is_init_161 Bool) (temp___skip_constant_162 Bool)
  (temp___do_toplevel_163 Bool)
  (temp___do_typ_inv_164 Bool)) Bool (let ((temp___166 (rec__for_access_subtype__l__n
                                                       (us_split_discrs1
                                                       temp___expr_165))))
                                     (and (dynamic_property 1
                                     (to_rep temp___166)
                                     (first1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1 temp___expr_165)))
                                     (last1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1 temp___expr_165))))
                                     (and
                                     (= (first1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1 temp___expr_165))) 1)
                                     (= (last1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1 temp___expr_165))) 
                                     (to_rep temp___166))))))

(define-fun dynamic_invariant4 ((temp___expr_172 us_rep1)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (=>
                                     (not
                                     (= (rec__for_access_subtype__l_ptr__is_null_pointer
                                        temp___expr_172) true))
                                     (let ((temp___173 (rec__for_access_subtype__l__n
                                                       (us_split_discrs1
                                                       (rec__for_access_subtype__l_ptr__pointer_value
                                                       temp___expr_172)))))
                                     (and (dynamic_property 1
                                     (to_rep temp___173)
                                     (first1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1
                                     (rec__for_access_subtype__l_ptr__pointer_value
                                     temp___expr_172))))
                                     (last1
                                     (rec__for_access_subtype__l__t
                                     (us_split_fields1
                                     (rec__for_access_subtype__l_ptr__pointer_value
                                     temp___expr_172)))))
                                     (and
                                     (= (first1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1
                                        (rec__for_access_subtype__l_ptr__pointer_value
                                        temp___expr_172)))) 1)
                                     (= (last1
                                        (rec__for_access_subtype__l__t
                                        (us_split_fields1
                                        (rec__for_access_subtype__l_ptr__pointer_value
                                        temp___expr_172)))) (to_rep
                                                            temp___173)))))))

(define-fun default_initial_assumption1 ((temp___expr_175 us_rep1)
  (temp___skip_top_level_176 Bool)) Bool (= (rec__for_access_subtype__l_ptr__is_null_pointer
                                            temp___expr_175) true))

(assert
;; defqtvc
 ;; File "for_access_subtype.ads", line 1, characters 0-0
  (not
  (forall ((usf Int) (usf1 us_rep))
  (=> (dynamic_invariant usf true true true true)
  (=>
  (= (to_rep (rec__for_access_subtype__l__n (us_split_discrs1 usf1))) usf)
  (=> (<= 1 usf) (<= 1 1)))))))
(check-sat)
