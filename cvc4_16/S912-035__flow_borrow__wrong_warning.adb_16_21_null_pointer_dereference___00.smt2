(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range2
                                    temp___expr_46)))

(define-fun to_rep1 ((x positive)) Int (positiveqtint x))

(declare-fun of_rep1 (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (rec__wrong_warning__int_acc__is_null_pointer Bool)(rec__wrong_warning__int_acc__pointer_address Int)(rec__wrong_warning__int_acc__pointer_value integer)))))
(define-fun us_rep_rec__wrong_warning__int_acc__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__wrong_warning__int_acc__is_null_pointer a))

(define-fun us_rep_rec__wrong_warning__int_acc__pointer_address__projection ((a us_rep)) Int 
  (rec__wrong_warning__int_acc__pointer_address a))

(define-fun us_rep_rec__wrong_warning__int_acc__pointer_value__projection ((a us_rep)) integer 
  (rec__wrong_warning__int_acc__pointer_value a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__wrong_warning__int_acc__is_null_pointer a) 
                        (rec__wrong_warning__int_acc__is_null_pointer b))
                        (=>
                        (not
                        (= (rec__wrong_warning__int_acc__is_null_pointer a) true))
                        (and
                        (= (rec__wrong_warning__int_acc__pointer_address a) 
                        (rec__wrong_warning__int_acc__pointer_address b))
                        (= (rec__wrong_warning__int_acc__pointer_value a) 
                        (rec__wrong_warning__int_acc__pointer_value b)))))
                   true false))

(define-fun rec__wrong_warning__int_acc__pointer_value__pred ((a us_rep)) Bool 
  (not (= (rec__wrong_warning__int_acc__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__wrong_warning__int_acc__is_null_pointer us_null_pointer) true))

(declare-const dummy2 us_rep)

(declare-datatypes ((int_acc__ref 0))
(((int_acc__refqtmk (int_acc__content us_rep)))))
(define-fun int_acc__ref_int_acc__content__projection ((a int_acc__ref)) us_rep 
  (int_acc__content a))

(declare-sort us_main_type 0)

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (rec__wrong_warning__map_acc__is_null_pointer Bool)(rec__wrong_warning__map_acc__pointer_address Int)(rec__wrong_warning__map_acc__pointer_value_abstr us_main_type)))))
(define-fun us_rep_rec__wrong_warning__map_acc__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__wrong_warning__map_acc__is_null_pointer a))

(define-fun us_rep_rec__wrong_warning__map_acc__pointer_address__projection ((a us_rep1)) Int 
  (rec__wrong_warning__map_acc__pointer_address a))

(define-fun us_rep_rec__wrong_warning__map_acc__pointer_value_abstr__projection ((a us_rep1)) us_main_type 
  (rec__wrong_warning__map_acc__pointer_value_abstr a))

(declare-datatypes ((us_rep__ref1 0))
(((us_rep__refqtmk1 (us_rep__content1 us_rep1)))))
(define-fun us_rep__ref___rep__content__2__projection ((a us_rep__ref1)) us_rep1 
  (us_rep__content1 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__wrong_warning__map_acc__is_null_pointer a) 
                         (rec__wrong_warning__map_acc__is_null_pointer b))
                         (=>
                         (not
                         (= (rec__wrong_warning__map_acc__is_null_pointer a) true))
                         (and
                         (= (rec__wrong_warning__map_acc__pointer_address a) 
                         (rec__wrong_warning__map_acc__pointer_address b))
                         (= (rec__wrong_warning__map_acc__pointer_value_abstr
                            a) (rec__wrong_warning__map_acc__pointer_value_abstr
                               b)))))
                    true false))

(declare-const dummy3 us_rep1)

(declare-datatypes ((map_acc__ref 0))
(((map_acc__refqtmk (map_acc__content us_rep1)))))
(define-fun map_acc__ref_map_acc__content__projection ((a map_acc__ref)) us_rep1 
  (map_acc__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__wrong_warning__map__key positive)(rec__wrong_warning__map__value us_rep)(rec__wrong_warning__map__next us_rep1)))))
(define-fun us_split_fields_rec__wrong_warning__map__key__projection ((a us_split_fields)) positive 
  (rec__wrong_warning__map__key a))

(define-fun us_split_fields_rec__wrong_warning__map__value__projection ((a us_split_fields)) us_rep 
  (rec__wrong_warning__map__value a))

(define-fun us_split_fields_rec__wrong_warning__map__next__projection ((a us_split_fields)) us_rep1 
  (rec__wrong_warning__map__next a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep2)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep1
                            (rec__wrong_warning__map__key
                            (us_split_fields1 a))) (to_rep1
                                                   (rec__wrong_warning__map__key
                                                   (us_split_fields1 b))))
                         (= (bool_eq
                            (rec__wrong_warning__map__value
                            (us_split_fields1 a))
                            (rec__wrong_warning__map__value
                            (us_split_fields1 b))) true))
                         (= (bool_eq1
                            (rec__wrong_warning__map__next
                            (us_split_fields1 a))
                            (rec__wrong_warning__map__next
                            (us_split_fields1 b))) true))
                    true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const wrong_warning__map__key__first__bit Int)

(declare-const wrong_warning__map__key__last__bit Int)

(declare-const wrong_warning__map__key__position Int)

;; wrong_warning__map__key__first__bit_axiom
  (assert (<= 0 wrong_warning__map__key__first__bit))

;; wrong_warning__map__key__last__bit_axiom
  (assert
  (< wrong_warning__map__key__first__bit wrong_warning__map__key__last__bit))

;; wrong_warning__map__key__position_axiom
  (assert (<= 0 wrong_warning__map__key__position))

(declare-const wrong_warning__map__value__first__bit Int)

(declare-const wrong_warning__map__value__last__bit Int)

(declare-const wrong_warning__map__value__position Int)

;; wrong_warning__map__value__first__bit_axiom
  (assert (<= 0 wrong_warning__map__value__first__bit))

;; wrong_warning__map__value__last__bit_axiom
  (assert
  (< wrong_warning__map__value__first__bit wrong_warning__map__value__last__bit))

;; wrong_warning__map__value__position_axiom
  (assert (<= 0 wrong_warning__map__value__position))

(declare-const wrong_warning__map__next__first__bit Int)

(declare-const wrong_warning__map__next__last__bit Int)

(declare-const wrong_warning__map__next__position Int)

;; wrong_warning__map__next__first__bit_axiom
  (assert (<= 0 wrong_warning__map__next__first__bit))

;; wrong_warning__map__next__last__bit_axiom
  (assert
  (< wrong_warning__map__next__first__bit wrong_warning__map__next__last__bit))

;; wrong_warning__map__next__position_axiom
  (assert (<= 0 wrong_warning__map__next__position))

(declare-fun user_eq2 (us_rep2 us_rep2) Bool)

(declare-const dummy4 us_rep2)

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content us_rep2)))))
(define-fun map__ref_map__content__projection ((a map__ref)) us_rep2 
  (map__content a))

(declare-const m__pointer_address Int)

(declare-const m__is_null_pointer Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const k Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const v Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const dummy5 us_rep1)

(declare-datatypes ((t2b__ref 0))
(((t2b__refqtmk (t2b__content us_rep1)))))
(define-fun t2b__ref_t2b__content__projection ((a t2b__ref)) us_rep1 
  (t2b__content a))

(declare-const dummy6 us_rep1)

(declare-datatypes ((t4b__ref 0))
(((t4b__refqtmk (t4b__content us_rep1)))))
(define-fun t4b__ref_t4b__content__projection ((a t4b__ref)) us_rep1 
  (t4b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort us_pledge_ty 0)

(declare-datatypes ((us_pledge_ty__ref 0))
(((us_pledge_ty__refqtmk (us_pledge_ty__content us_pledge_ty)))))
(declare-fun us_pledge_get (us_pledge_ty us_rep1 us_rep1) Bool)

(declare-fun us_open (us_main_type) us_rep2)

(declare-fun us_close (us_rep2) us_main_type)

;; close_open
  (assert
  (forall ((x us_main_type))
  (! (= (us_close (us_open x)) x) :pattern ((us_open x)) )))

;; open_close
  (assert
  (forall ((x us_rep2))
  (! (= (us_open (us_close x)) x) :pattern ((us_close x)) )))

(define-fun rec__wrong_warning__map_acc__pointer_value ((a us_rep1)) us_rep2 
  (us_open (rec__wrong_warning__map_acc__pointer_value_abstr a)))

(define-fun rec__wrong_warning__map_acc__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__wrong_warning__map_acc__is_null_pointer a) true)))

(declare-const us_null_pointer1 us_rep1)

;; __null_pointer__def_axiom
  (assert
  (= (rec__wrong_warning__map_acc__is_null_pointer us_null_pointer1) true))

(declare-fun temp___dynamic_invariant_187 (us_rep1 Bool Bool Bool Bool) Bool)

(define-fun dynamic_invariant2 ((temp___expr_186 us_rep1)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (=>
                                     (not
                                     (= (rec__wrong_warning__map_acc__is_null_pointer
                                        temp___expr_186) true))
                                     (and
                                     (not
                                     (= (rec__wrong_warning__int_acc__is_null_pointer
                                        (rec__wrong_warning__map__value
                                        (us_split_fields1
                                        (rec__wrong_warning__map_acc__pointer_value
                                        temp___expr_186)))) true))
                                     (temp___dynamic_invariant_187
                                     (rec__wrong_warning__map__next
                                     (us_split_fields1
                                     (rec__wrong_warning__map_acc__pointer_value
                                     temp___expr_186))) true false true
                                     temp___do_typ_inv_185))))

;; def_axiom
  (assert
  (forall ((temp___expr_192 us_rep1))
  (forall ((temp___is_init_188 Bool) (temp___skip_constant_189 Bool)
  (temp___do_toplevel_190 Bool) (temp___do_typ_inv_191 Bool))
  (! (= (temp___dynamic_invariant_187 temp___expr_192 temp___is_init_188
     temp___skip_constant_189 temp___do_toplevel_190 temp___do_typ_inv_191)
     (=>
     (not
     (= (rec__wrong_warning__map_acc__is_null_pointer temp___expr_192) true))
     (and
     (not
     (= (rec__wrong_warning__int_acc__is_null_pointer
        (rec__wrong_warning__map__value
        (us_split_fields1
        (rec__wrong_warning__map_acc__pointer_value temp___expr_192)))) true))
     (temp___dynamic_invariant_187
     (rec__wrong_warning__map__next
     (us_split_fields1
     (rec__wrong_warning__map_acc__pointer_value temp___expr_192))) true
     false true temp___do_typ_inv_191)))) :pattern ((temp___dynamic_invariant_187
  temp___expr_192 temp___is_init_188 temp___skip_constant_189
  temp___do_toplevel_190 temp___do_typ_inv_191)) ))))

(define-fun default_initial_assumption ((temp___expr_193 us_rep1)
  (temp___skip_top_level_194 Bool)) Bool (= (rec__wrong_warning__map_acc__is_null_pointer
                                            temp___expr_193) true))

(define-fun dynamic_invariant3 ((temp___expr_199 us_rep2)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)
  (temp___do_typ_inv_198 Bool)) Bool (and
                                     (not
                                     (= (rec__wrong_warning__int_acc__is_null_pointer
                                        (rec__wrong_warning__map__value
                                        (us_split_fields1 temp___expr_199))) true))
                                     (=>
                                     (not
                                     (= (rec__wrong_warning__map_acc__is_null_pointer
                                        (rec__wrong_warning__map__next
                                        (us_split_fields1 temp___expr_199))) true))
                                     (and
                                     (not
                                     (= (rec__wrong_warning__int_acc__is_null_pointer
                                        (rec__wrong_warning__map__value
                                        (us_split_fields1
                                        (rec__wrong_warning__map_acc__pointer_value
                                        (rec__wrong_warning__map__next
                                        (us_split_fields1 temp___expr_199)))))) true))
                                     (temp___dynamic_invariant_187
                                     (rec__wrong_warning__map__next
                                     (us_split_fields1
                                     (rec__wrong_warning__map_acc__pointer_value
                                     (rec__wrong_warning__map__next
                                     (us_split_fields1 temp___expr_199)))))
                                     true false true temp___do_typ_inv_198)))))

(define-fun default_initial_assumption1 ((temp___expr_200 us_rep2)
  (temp___skip_top_level_201 Bool)) Bool (and
                                         (= (rec__wrong_warning__int_acc__is_null_pointer
                                            (rec__wrong_warning__map__value
                                            (us_split_fields1
                                            temp___expr_200))) true)
                                         (= (rec__wrong_warning__map_acc__is_null_pointer
                                            (rec__wrong_warning__map__next
                                            (us_split_fields1
                                            temp___expr_200))) true)))

(define-fun dynamic_invariant4 ((temp___expr_179 us_rep)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (not
                                     (= (rec__wrong_warning__int_acc__is_null_pointer
                                        temp___expr_179) true)))

(define-fun default_initial_assumption2 ((temp___expr_180 us_rep)
  (temp___skip_top_level_181 Bool)) Bool (= (rec__wrong_warning__int_acc__is_null_pointer
                                            temp___expr_180) true))

(assert
;; defqtvc
 ;; File "wrong_warning.adb", line 11, characters 0-0
  (not
  (forall ((m__pointer_value us_split_fields) (usf us_pledge_ty)
  (x__pointer_value us_split_fields) (x__pointer_address Int)
  (x__is_null_pointer Bool) (x__pointer_value1 us_split_fields)
  (x__pointer_address1 Int) (x__is_null_pointer1 Bool))
  (=>
  (=> (not (= m__is_null_pointer true)) (dynamic_invariant3
  (rec__wrong_warning__map_acc__pointer_value
  (us_repqtmk1 m__is_null_pointer m__pointer_address
  (us_close (us_repqtmk2 m__pointer_value)))) true false true true))
  (=> (dynamic_invariant1 k true false true true)
  (=> (dynamic_invariant v true false true true)
  (=>
  (forall ((temp___borrowed_207 us_rep1))
  (forall ((temp___brower_206 us_rep1))
  (! (= (= (us_pledge_get usf temp___borrowed_207 temp___brower_206) true)
     (= temp___borrowed_207 temp___brower_206)) :pattern ((us_pledge_get usf
                                                          temp___borrowed_207
                                                          temp___brower_206)) )))
  (=>
  (= (us_repqtmk2 x__pointer_value) (rec__wrong_warning__map_acc__pointer_value
                                    (us_repqtmk1 m__is_null_pointer
                                    m__pointer_address
                                    (us_close (us_repqtmk2 m__pointer_value)))))
  (=> (= x__pointer_address m__pointer_address)
  (=> (= x__is_null_pointer m__is_null_pointer)
  (=>
  (=> (not (= x__is_null_pointer true)) (dynamic_invariant3
  (rec__wrong_warning__map_acc__pointer_value
  (us_repqtmk1 x__is_null_pointer x__pointer_address
  (us_close (us_repqtmk2 x__pointer_value)))) true false true true))
  (=>
  (= (not (bool_eq1
          (us_repqtmk1 x__is_null_pointer x__pointer_address
          (us_close (us_repqtmk2 x__pointer_value))) us_null_pointer1)) true)
  (=>
  (= (and (ite (=> (not (= x__is_null_pointer1 true)) (dynamic_invariant3
               (rec__wrong_warning__map_acc__pointer_value
               (us_repqtmk1 x__is_null_pointer1 x__pointer_address1
               (us_close (us_repqtmk2 x__pointer_value1)))) true false true
               true))
          true false) (ite (not
                           (= (bool_eq1
                              (us_repqtmk1 x__is_null_pointer1
                              x__pointer_address1
                              (us_close (us_repqtmk2 x__pointer_value1)))
                              us_null_pointer1) true))
                      true false)) true)
  (forall ((o Int))
  (=>
  (= (to_rep1
     (rec__wrong_warning__map__key
     (us_split_fields1
     (rec__wrong_warning__map_acc__pointer_value
     (us_repqtmk1 x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk2 x__pointer_value1))))))) o)
  (forall ((spark__branch Bool))
  (=> (= spark__branch (ite (= o k) true false))
  (=> (= spark__branch true)
  (rec__wrong_warning__int_acc__pointer_value__pred
  (rec__wrong_warning__map__value
  (us_split_fields1
  (rec__wrong_warning__map_acc__pointer_value
  (us_repqtmk1 x__is_null_pointer1 x__pointer_address1
  (us_close (us_repqtmk2 x__pointer_value1)))))))))))))))))))))))))
(check-sat)
