(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__membership_discr__root__c natural)))))
(define-fun us_split_discrs_rec__membership_discr__root__c__projection ((a us_split_discrs)) natural 
  (rec__membership_discr__root__c a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__ext__ us_private)))))
(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__membership_discr__root__c
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__membership_discr__root__c
                                                  (us_split_discrs1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(define-fun in_range2 ((rec__membership_discr__root__c1 Int)
  (a us_split_discrs)) Bool (= rec__membership_discr__root__c1 (to_rep
                                                               (rec__membership_discr__root__c
                                                               a))))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const membership_discr__root__c__first__bit Int)

(declare-const membership_discr__root__c__last__bit Int)

(declare-const membership_discr__root__c__position Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit membership_discr__root__c__last__bit))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((root__ref 0))
(((root__refqtmk (root__content us_rep)))))
(define-fun root__ref_root__content__projection ((a root__ref)) us_rep 
  (root__content a))

(declare-const us_tag1 Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const membership_discr__root__c__first__bit1 Int)

(declare-const membership_discr__root__c__last__bit1 Int)

(declare-const membership_discr__root__c__position1 Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit1))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit1 membership_discr__root__c__last__bit1))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position1))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((root_01__ref 0))
(((root_01__refqtmk (root_01__content us_rep)))))
(define-fun root_01__ref_root_01__content__projection ((a root_01__ref)) us_rep 
  (root_01__content a))

(declare-const r01__split_discrs us_split_discrs)

(declare-const r01__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant ((temp___expr_185 us_rep)
  (temp___is_init_181 Bool) (temp___skip_constant_182 Bool)
  (temp___do_toplevel_183 Bool)
  (temp___do_typ_inv_184 Bool)) Bool (=>
                                     (not (= temp___skip_constant_182 true))
                                     (in_range2 0
                                     (us_split_discrs1 temp___expr_185))))

(define-fun default_initial_assumption ((temp___expr_187 us_rep)
  (temp___skip_top_level_188 Bool)) Bool (and
                                         (= (attr__tag temp___expr_187) 
                                         us_tag1)
                                         (= (to_rep
                                            (rec__membership_discr__root__c
                                            (us_split_discrs1
                                            temp___expr_187))) 0)))

(declare-const us_tag2 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const membership_discr__root__c__first__bit2 Int)

(declare-const membership_discr__root__c__last__bit2 Int)

(declare-const membership_discr__root__c__position2 Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit2))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit2 membership_discr__root__c__last__bit2))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position2))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((root_02__ref 0))
(((root_02__refqtmk (root_02__content us_rep)))))
(define-fun root_02__ref_root_02__content__projection ((a root_02__ref)) us_rep 
  (root_02__content a))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_194 us_rep)
  (temp___is_init_190 Bool) (temp___skip_constant_191 Bool)
  (temp___do_toplevel_192 Bool)
  (temp___do_typ_inv_193 Bool)) Bool (=>
                                     (not (= temp___skip_constant_191 true))
                                     (in_range2 0
                                     (us_split_discrs1 temp___expr_194))))

(define-fun default_initial_assumption1 ((temp___expr_196 us_rep)
  (temp___skip_top_level_197 Bool)) Bool (and
                                         (= (attr__tag temp___expr_196) 
                                         us_tag2)
                                         (= (to_rep
                                            (rec__membership_discr__root__c
                                            (us_split_discrs1
                                            temp___expr_196))) 0)))

(assert
;; defqtvc
 ;; File "membership_discr.adb", line 17, characters 0-0
  (not
  (forall ((r01__split_fields us_private))
  (=> (default_initial_assumption
  (us_repqtmk r01__split_discrs (us_split_fieldsqtmk r01__split_fields)
  r01__attr__tag) false)
  (=> (dynamic_invariant
  (us_repqtmk r01__split_discrs (us_split_fieldsqtmk r01__split_fields)
  r01__attr__tag) false false true true)
  (=> (in_range2 0 r01__split_discrs)
  (=> (= r01__attr__tag us_tag1) (in_range2 0 r01__split_discrs))))))))
(check-sat)
