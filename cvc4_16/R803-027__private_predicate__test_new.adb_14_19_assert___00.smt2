;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__pred_vis__root__f1 integer)(rec__pred_vis__root__g1 integer)(rec__pred_vis__root__g2 integer)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__pred_vis__root__f1__projection ((a us_split_fields)) integer 
  (rec__pred_vis__root__f1 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__projection ((a us_split_fields)) integer 
  (rec__pred_vis__root__g1 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__projection ((a us_split_fields)) integer 
  (rec__pred_vis__root__g2 a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__pred_vis__root__f1 (us_split_fields1 a))) 
                        (to_rep
                        (rec__pred_vis__root__f1 (us_split_fields1 b))))
                        (= (to_rep
                           (rec__pred_vis__root__g1 (us_split_fields1 a))) 
                        (to_rep
                        (rec__pred_vis__root__g1 (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__pred_vis__root__g2 (us_split_fields1 a))) 
                        (to_rep
                        (rec__pred_vis__root__g2 (us_split_fields1 b)))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const pred_vis__root__f1__first__bit Int)

(declare-const pred_vis__root__f1__last__bit Int)

(declare-const pred_vis__root__f1__position Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit pred_vis__root__f1__last__bit))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position))

(declare-const pred_vis__root__g1__first__bit Int)

(declare-const pred_vis__root__g1__last__bit Int)

(declare-const pred_vis__root__g1__position Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit pred_vis__root__g1__last__bit))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position))

(declare-const pred_vis__root__g2__first__bit Int)

(declare-const pred_vis__root__g2__last__bit Int)

(declare-const pred_vis__root__g2__position Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit pred_vis__root__g2__last__bit))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((root__ref 0))
(((root__refqtmk (root__content us_rep)))))
(define-fun root__ref_root__content__projection ((a root__ref)) us_rep 
  (root__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__pred_vis__grand_grand_child us_main_type)(rec__pred_vis__root__f11 integer)(rec__pred_vis__root__g11 integer)(rec__pred_vis__root__g21 integer)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__pred_vis__grand_grand_child__projection ((a us_split_fields2)) us_main_type 
  (rec__pred_vis__grand_grand_child a))

(define-fun us_split_fields_rec__pred_vis__root__f1__2__projection ((a us_split_fields2)) integer 
  (rec__pred_vis__root__f11 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__2__projection ((a us_split_fields2)) integer 
  (rec__pred_vis__root__g11 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__2__projection ((a us_split_fields2)) integer 
  (rec__pred_vis__root__g21 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (us_main_type us_private) us_private)

(declare-fun extract__pred_vis__grand_grand_child (us_private) us_main_type)

;; extract__pred_vis__grand_grand_child__conv
  (assert
  (forall ((pred_vis__grand_grand_child us_main_type))
  (forall ((rec__ext__2 us_private))
  (= (extract__pred_vis__grand_grand_child
     (hide_ext__ pred_vis__grand_grand_child rec__ext__2)) pred_vis__grand_grand_child))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__pred_vis__root__f11
                                         (us_split_fields3 a))
                                         (rec__pred_vis__root__g11
                                         (us_split_fields3 a))
                                         (rec__pred_vis__root__g21
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__pred_vis__grand_grand_child
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                         (extract__pred_vis__grand_grand_child
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__pred_vis__root__f1
                                         (us_split_fields1 r))
                                         (rec__pred_vis__root__g1
                                         (us_split_fields1 r))
                                         (rec__pred_vis__root__g2
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (us_main_eq
                            (rec__pred_vis__grand_grand_child
                            (us_split_fields3 a))
                            (rec__pred_vis__grand_grand_child
                            (us_split_fields3 b))) true)
                         (= (to_rep
                            (rec__pred_vis__root__f11 (us_split_fields3 a))) 
                         (to_rep
                         (rec__pred_vis__root__f11 (us_split_fields3 b)))))
                         (and
                         (= (to_rep
                            (rec__pred_vis__root__g11 (us_split_fields3 a))) 
                         (to_rep
                         (rec__pred_vis__root__g11 (us_split_fields3 b))))
                         (= (to_rep
                            (rec__pred_vis__root__g21 (us_split_fields3 a))) 
                         (to_rep
                         (rec__pred_vis__root__g21 (us_split_fields3 b))))))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const pred_vis__root__f1__first__bit1 Int)

(declare-const pred_vis__root__f1__last__bit1 Int)

(declare-const pred_vis__root__f1__position1 Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit1))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit1 pred_vis__root__f1__last__bit1))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position1))

(declare-const pred_vis__root__g1__first__bit1 Int)

(declare-const pred_vis__root__g1__last__bit1 Int)

(declare-const pred_vis__root__g1__position1 Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit1))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit1 pred_vis__root__g1__last__bit1))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position1))

(declare-const pred_vis__root__g2__first__bit1 Int)

(declare-const pred_vis__root__g2__last__bit1 Int)

(declare-const pred_vis__root__g2__position1 Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit1))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit1 pred_vis__root__g2__last__bit1))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position1))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-const dummy2 us_rep1)

(declare-datatypes ((grand_grand_child__ref 0))
(((grand_grand_child__refqtmk (grand_grand_child__content us_rep1)))))
(define-fun grand_grand_child__ref_grand_grand_child__content__projection ((a grand_grand_child__ref)) us_rep1 
  (grand_grand_child__content a))

(declare-const x us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__pred_vis__grand_child us_main_type1)(rec__pred_vis__root__f12 integer)(rec__pred_vis__root__g12 integer)(rec__pred_vis__root__g22 integer)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__pred_vis__grand_child__projection ((a us_split_fields4)) us_main_type1 
  (rec__pred_vis__grand_child a))

(define-fun us_split_fields_rec__pred_vis__root__f1__3__projection ((a us_split_fields4)) integer 
  (rec__pred_vis__root__f12 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__3__projection ((a us_split_fields4)) integer 
  (rec__pred_vis__root__g12 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__3__projection ((a us_split_fields4)) integer 
  (rec__pred_vis__root__g22 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (us_main_type1 us_private) us_private)

(declare-fun extract__pred_vis__grand_child (us_private) us_main_type1)

;; extract__pred_vis__grand_child__conv
  (assert
  (forall ((pred_vis__grand_child us_main_type1))
  (forall ((rec__ext__3 us_private))
  (= (extract__pred_vis__grand_child
     (hide_ext__1 pred_vis__grand_child rec__ext__3)) pred_vis__grand_child))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__pred_vis__root__f12
                                          (us_split_fields5 a))
                                          (rec__pred_vis__root__g12
                                          (us_split_fields5 a))
                                          (rec__pred_vis__root__g22
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__pred_vis__grand_child
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2
                                          (us_split_fieldsqtmk2
                                          (extract__pred_vis__grand_child
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g2
                                          (us_split_fields1 r))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (us_main_eq1
                            (rec__pred_vis__grand_child (us_split_fields5 a))
                            (rec__pred_vis__grand_child (us_split_fields5 b))) true)
                         (= (to_rep
                            (rec__pred_vis__root__f12 (us_split_fields5 a))) 
                         (to_rep
                         (rec__pred_vis__root__f12 (us_split_fields5 b)))))
                         (and
                         (= (to_rep
                            (rec__pred_vis__root__g12 (us_split_fields5 a))) 
                         (to_rep
                         (rec__pred_vis__root__g12 (us_split_fields5 b))))
                         (= (to_rep
                            (rec__pred_vis__root__g22 (us_split_fields5 a))) 
                         (to_rep
                         (rec__pred_vis__root__g22 (us_split_fields5 b))))))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const pred_vis__root__f1__first__bit2 Int)

(declare-const pred_vis__root__f1__last__bit2 Int)

(declare-const pred_vis__root__f1__position2 Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit2))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit2 pred_vis__root__f1__last__bit2))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position2))

(declare-const pred_vis__root__g1__first__bit2 Int)

(declare-const pred_vis__root__g1__last__bit2 Int)

(declare-const pred_vis__root__g1__position2 Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit2))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit2 pred_vis__root__g1__last__bit2))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position2))

(declare-const pred_vis__root__g2__first__bit2 Int)

(declare-const pred_vis__root__g2__last__bit2 Int)

(declare-const pred_vis__root__g2__position2 Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit2))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit2 pred_vis__root__g2__last__bit2))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position2))

(declare-fun user_eq3 (us_rep2 us_rep2) Bool)

(declare-const dummy3 us_rep2)

(declare-datatypes ((grand_child__ref 0))
(((grand_child__refqtmk (grand_child__content us_rep2)))))
(define-fun grand_child__ref_grand_child__content__projection ((a grand_child__ref)) us_rep2 
  (grand_child__content a))

(declare-sort us_main_type2 0)

(declare-fun us_main_eq2 (us_main_type2 us_main_type2) Bool)

(declare-datatypes ((us_split_fields6 0))
(((us_split_fieldsqtmk3
  (rec__pred_vis__grand_child1 us_main_type1)(rec__pred_vis__grand_grand_child_2 us_main_type2)(rec__pred_vis__root__f13 integer)(rec__pred_vis__root__g13 integer)(rec__pred_vis__root__g23 integer)(rec__ext__3 us_private)))))
(define-fun us_split_fields_rec__pred_vis__grand_child__2__projection ((a us_split_fields6)) us_main_type1 
  (rec__pred_vis__grand_child1 a))

(define-fun us_split_fields_rec__pred_vis__grand_grand_child_2__projection ((a us_split_fields6)) us_main_type2 
  (rec__pred_vis__grand_grand_child_2 a))

(define-fun us_split_fields_rec__pred_vis__root__f1__4__projection ((a us_split_fields6)) integer 
  (rec__pred_vis__root__f13 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__4__projection ((a us_split_fields6)) integer 
  (rec__pred_vis__root__g13 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__4__projection ((a us_split_fields6)) integer 
  (rec__pred_vis__root__g23 a))

(define-fun us_split_fields_rec__ext____4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ((us_split_fields__ref3 0))
(((us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ((us_rep3 0))
(((us_repqtmk3 (us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___split_fields__4__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun us_rep_attr__tag__4__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (us_main_type1 us_main_type2 us_private) us_private)

;; extract__pred_vis__grand_child__conv
  (assert
  (forall ((pred_vis__grand_child us_main_type1))
  (forall ((pred_vis__grand_grand_child_2 us_main_type2))
  (forall ((rec__ext__4 us_private))
  (= (extract__pred_vis__grand_child
     (hide_ext__2 pred_vis__grand_child pred_vis__grand_grand_child_2
     rec__ext__4)) pred_vis__grand_child)))))

(declare-fun extract__pred_vis__grand_grand_child_2 (us_private) us_main_type2)

;; extract__pred_vis__grand_grand_child_2__conv
  (assert
  (forall ((pred_vis__grand_child us_main_type1))
  (forall ((pred_vis__grand_grand_child_2 us_main_type2))
  (forall ((rec__ext__4 us_private))
  (= (extract__pred_vis__grand_grand_child_2
     (hide_ext__2 pred_vis__grand_child pred_vis__grand_grand_child_2
     rec__ext__4)) pred_vis__grand_grand_child_2)))))

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__pred_vis__root__f13
                                          (us_split_fields7 a))
                                          (rec__pred_vis__root__g13
                                          (us_split_fields7 a))
                                          (rec__pred_vis__root__g23
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__pred_vis__grand_child1
                                          (us_split_fields7 a))
                                          (rec__pred_vis__grand_grand_child_2
                                          (us_split_fields7 a))
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (us_repqtmk3
                                          (us_split_fieldsqtmk3
                                          (extract__pred_vis__grand_child
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__pred_vis__grand_grand_child_2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g2
                                          (us_split_fields1 r))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq3 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (us_main_eq1
                            (rec__pred_vis__grand_child1
                            (us_split_fields7 a))
                            (rec__pred_vis__grand_child1
                            (us_split_fields7 b))) true)
                         (= (us_main_eq2
                            (rec__pred_vis__grand_grand_child_2
                            (us_split_fields7 a))
                            (rec__pred_vis__grand_grand_child_2
                            (us_split_fields7 b))) true))
                         (and
                         (and
                         (= (to_rep
                            (rec__pred_vis__root__f13 (us_split_fields7 a))) 
                         (to_rep
                         (rec__pred_vis__root__f13 (us_split_fields7 b))))
                         (= (to_rep
                            (rec__pred_vis__root__g13 (us_split_fields7 a))) 
                         (to_rep
                         (rec__pred_vis__root__g13 (us_split_fields7 b)))))
                         (= (to_rep
                            (rec__pred_vis__root__g23 (us_split_fields7 a))) 
                         (to_rep
                         (rec__pred_vis__root__g23 (us_split_fields7 b))))))
                    true false))

(declare-const us_tag3 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const pred_vis__root__f1__first__bit3 Int)

(declare-const pred_vis__root__f1__last__bit3 Int)

(declare-const pred_vis__root__f1__position3 Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit3))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit3 pred_vis__root__f1__last__bit3))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position3))

(declare-const pred_vis__root__g1__first__bit3 Int)

(declare-const pred_vis__root__g1__last__bit3 Int)

(declare-const pred_vis__root__g1__position3 Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit3))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit3 pred_vis__root__g1__last__bit3))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position3))

(declare-const pred_vis__root__g2__first__bit3 Int)

(declare-const pred_vis__root__g2__last__bit3 Int)

(declare-const pred_vis__root__g2__position3 Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit3))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit3 pred_vis__root__g2__last__bit3))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position3))

(declare-fun user_eq4 (us_rep3 us_rep3) Bool)

(declare-const dummy4 us_rep3)

(declare-datatypes ((grand_grand_child_2__ref 0))
(((grand_grand_child_2__refqtmk (grand_grand_child_2__content us_rep3)))))
(define-fun grand_grand_child_2__ref_grand_grand_child_2__content__projection ((a grand_grand_child_2__ref)) us_rep3 
  (grand_grand_child_2__content a))

(declare-const y us_rep3)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-datatypes ((us_split_fields8 0))
(((us_split_fieldsqtmk4
  (rec__pred_vis__child__f2 integer)(rec__pred_vis__root__f14 integer)(rec__pred_vis__root__g14 integer)(rec__pred_vis__root__g24 integer)(rec__ext__4 us_private)))))
(define-fun us_split_fields_rec__pred_vis__child__f2__projection ((a us_split_fields8)) integer 
  (rec__pred_vis__child__f2 a))

(define-fun us_split_fields_rec__pred_vis__root__f1__5__projection ((a us_split_fields8)) integer 
  (rec__pred_vis__root__f14 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__5__projection ((a us_split_fields8)) integer 
  (rec__pred_vis__root__g14 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__5__projection ((a us_split_fields8)) integer 
  (rec__pred_vis__root__g24 a))

(define-fun us_split_fields_rec__ext____5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ((us_split_fields__ref4 0))
(((us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ((us_rep4 0))
(((us_repqtmk4 (us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep___split_fields__5__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun us_rep_attr__tag__5__projection ((a us_rep4)) Int (attr__tag4 a))

(declare-fun hide_ext__3 (integer us_private) us_private)

(declare-fun extract__pred_vis__child__f2 (us_private) integer)

;; extract__pred_vis__child__f2__conv
  (assert
  (forall ((pred_vis__child__f2 integer))
  (forall ((rec__ext__5 us_private))
  (= (extract__pred_vis__child__f2
     (hide_ext__3 pred_vis__child__f2 rec__ext__5)) pred_vis__child__f2))))

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep4)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__pred_vis__root__f14
                                          (us_split_fields9 a))
                                          (rec__pred_vis__root__g14
                                          (us_split_fields9 a))
                                          (rec__pred_vis__root__g24
                                          (us_split_fields9 a))
                                          (hide_ext__3
                                          (rec__pred_vis__child__f2
                                          (us_split_fields9 a))
                                          (rec__ext__4 (us_split_fields9 a))))
                                          (attr__tag4 a)))

(define-fun of_base3 ((r us_rep)) us_rep4 (us_repqtmk4
                                          (us_split_fieldsqtmk4
                                          (extract__pred_vis__child__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g2
                                          (us_split_fields1 r))
                                          (extract__ext__3
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq4 ((a us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__pred_vis__child__f2 (us_split_fields9 a))) 
                         (to_rep
                         (rec__pred_vis__child__f2 (us_split_fields9 b))))
                         (= (to_rep
                            (rec__pred_vis__root__f14 (us_split_fields9 a))) 
                         (to_rep
                         (rec__pred_vis__root__f14 (us_split_fields9 b)))))
                         (and
                         (= (to_rep
                            (rec__pred_vis__root__g14 (us_split_fields9 a))) 
                         (to_rep
                         (rec__pred_vis__root__g14 (us_split_fields9 b))))
                         (= (to_rep
                            (rec__pred_vis__root__g24 (us_split_fields9 a))) 
                         (to_rep
                         (rec__pred_vis__root__g24 (us_split_fields9 b))))))
                    true false))

(declare-const us_tag4 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const pred_vis__child__f2__first__bit Int)

(declare-const pred_vis__child__f2__last__bit Int)

(declare-const pred_vis__child__f2__position Int)

;; pred_vis__child__f2__first__bit_axiom
  (assert (<= 0 pred_vis__child__f2__first__bit))

;; pred_vis__child__f2__last__bit_axiom
  (assert (< pred_vis__child__f2__first__bit pred_vis__child__f2__last__bit))

;; pred_vis__child__f2__position_axiom
  (assert (<= 0 pred_vis__child__f2__position))

(declare-const pred_vis__root__f1__first__bit4 Int)

(declare-const pred_vis__root__f1__last__bit4 Int)

(declare-const pred_vis__root__f1__position4 Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit4))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit4 pred_vis__root__f1__last__bit4))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position4))

(declare-const pred_vis__root__g1__first__bit4 Int)

(declare-const pred_vis__root__g1__last__bit4 Int)

(declare-const pred_vis__root__g1__position4 Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit4))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit4 pred_vis__root__g1__last__bit4))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position4))

(declare-const pred_vis__root__g2__first__bit4 Int)

(declare-const pred_vis__root__g2__last__bit4 Int)

(declare-const pred_vis__root__g2__position4 Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit4))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit4 pred_vis__root__g2__last__bit4))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position4))

(declare-fun user_eq5 (us_rep4 us_rep4) Bool)

(declare-const dummy5 us_rep4)

(declare-datatypes ((child__ref 0))
(((child__refqtmk (child__content us_rep4)))))
(define-fun child__ref_child__content__projection ((a child__ref)) us_rep4 
  (child__content a))

(declare-sort us_main_type3 0)

(declare-fun us_main_eq3 (us_main_type3 us_main_type3) Bool)

(declare-datatypes ((us_split_fields10 0))
(((us_split_fieldsqtmk5
  (rec__pred_vis__grand_grand_child_3 us_main_type3)(rec__pred_vis__root__f15 integer)(rec__pred_vis__root__g15 integer)(rec__pred_vis__root__g25 integer)(rec__pred_vis__child__f21 integer)(rec__ext__5 us_private)))))
(define-fun us_split_fields_rec__pred_vis__grand_grand_child_3__projection ((a us_split_fields10)) us_main_type3 
  (rec__pred_vis__grand_grand_child_3 a))

(define-fun us_split_fields_rec__pred_vis__root__f1__6__projection ((a us_split_fields10)) integer 
  (rec__pred_vis__root__f15 a))

(define-fun us_split_fields_rec__pred_vis__root__g1__6__projection ((a us_split_fields10)) integer 
  (rec__pred_vis__root__g15 a))

(define-fun us_split_fields_rec__pred_vis__root__g2__6__projection ((a us_split_fields10)) integer 
  (rec__pred_vis__root__g25 a))

(define-fun us_split_fields_rec__pred_vis__child__f2__2__projection ((a us_split_fields10)) integer 
  (rec__pred_vis__child__f21 a))

(define-fun us_split_fields_rec__ext____6__projection ((a us_split_fields10)) us_private 
  (rec__ext__5 a))

(declare-datatypes ((us_split_fields__ref5 0))
(((us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ((us_rep5 0))
(((us_repqtmk5 (us_split_fields11 us_split_fields10)(attr__tag5 Int)))))
(define-fun us_rep___split_fields__6__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun us_rep_attr__tag__6__projection ((a us_rep5)) Int (attr__tag5 a))

(declare-fun hide_ext__4 (us_main_type3 integer us_private) us_private)

(declare-fun extract__pred_vis__grand_grand_child_3 (us_private) us_main_type3)

;; extract__pred_vis__grand_grand_child_3__conv
  (assert
  (forall ((pred_vis__grand_grand_child_3 us_main_type3))
  (forall ((pred_vis__grand_grand_child_3__f2 integer))
  (forall ((rec__ext__6 us_private))
  (= (extract__pred_vis__grand_grand_child_3
     (hide_ext__4 pred_vis__grand_grand_child_3
     pred_vis__grand_grand_child_3__f2 rec__ext__6)) pred_vis__grand_grand_child_3)))))

;; extract__pred_vis__child__f2__conv
  (assert
  (forall ((pred_vis__grand_grand_child_3 us_main_type3))
  (forall ((pred_vis__grand_grand_child_3__f2 integer))
  (forall ((rec__ext__6 us_private))
  (= (extract__pred_vis__child__f2
     (hide_ext__4 pred_vis__grand_grand_child_3
     pred_vis__grand_grand_child_3__f2 rec__ext__6)) pred_vis__grand_grand_child_3__f2)))))

(declare-fun extract__ext__4 (us_private) us_private)

(define-fun to_base4 ((a us_rep5)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__pred_vis__root__f15
                                          (us_split_fields11 a))
                                          (rec__pred_vis__root__g15
                                          (us_split_fields11 a))
                                          (rec__pred_vis__root__g25
                                          (us_split_fields11 a))
                                          (hide_ext__4
                                          (rec__pred_vis__grand_grand_child_3
                                          (us_split_fields11 a))
                                          (rec__pred_vis__child__f21
                                          (us_split_fields11 a))
                                          (rec__ext__5 (us_split_fields11 a))))
                                          (attr__tag5 a)))

(define-fun of_base4 ((r us_rep)) us_rep5 (us_repqtmk5
                                          (us_split_fieldsqtmk5
                                          (extract__pred_vis__grand_grand_child_3
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g1
                                          (us_split_fields1 r))
                                          (rec__pred_vis__root__g2
                                          (us_split_fields1 r))
                                          (extract__pred_vis__child__f2
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__4
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq5 ((a us_rep5)
  (b us_rep5)) Bool (ite (and
                         (and
                         (= (us_main_eq3
                            (rec__pred_vis__grand_grand_child_3
                            (us_split_fields11 a))
                            (rec__pred_vis__grand_grand_child_3
                            (us_split_fields11 b))) true)
                         (= (to_rep
                            (rec__pred_vis__root__f15 (us_split_fields11 a))) 
                         (to_rep
                         (rec__pred_vis__root__f15 (us_split_fields11 b)))))
                         (and
                         (and
                         (= (to_rep
                            (rec__pred_vis__root__g15 (us_split_fields11 a))) 
                         (to_rep
                         (rec__pred_vis__root__g15 (us_split_fields11 b))))
                         (= (to_rep
                            (rec__pred_vis__root__g25 (us_split_fields11 a))) 
                         (to_rep
                         (rec__pred_vis__root__g25 (us_split_fields11 b)))))
                         (= (to_rep
                            (rec__pred_vis__child__f21 (us_split_fields11 a))) 
                         (to_rep
                         (rec__pred_vis__child__f21 (us_split_fields11 b))))))
                    true false))

(declare-const us_tag5 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const pred_vis__root__f1__first__bit5 Int)

(declare-const pred_vis__root__f1__last__bit5 Int)

(declare-const pred_vis__root__f1__position5 Int)

;; pred_vis__root__f1__first__bit_axiom
  (assert (<= 0 pred_vis__root__f1__first__bit5))

;; pred_vis__root__f1__last__bit_axiom
  (assert (< pred_vis__root__f1__first__bit5 pred_vis__root__f1__last__bit5))

;; pred_vis__root__f1__position_axiom
  (assert (<= 0 pred_vis__root__f1__position5))

(declare-const pred_vis__root__g1__first__bit5 Int)

(declare-const pred_vis__root__g1__last__bit5 Int)

(declare-const pred_vis__root__g1__position5 Int)

;; pred_vis__root__g1__first__bit_axiom
  (assert (<= 0 pred_vis__root__g1__first__bit5))

;; pred_vis__root__g1__last__bit_axiom
  (assert (< pred_vis__root__g1__first__bit5 pred_vis__root__g1__last__bit5))

;; pred_vis__root__g1__position_axiom
  (assert (<= 0 pred_vis__root__g1__position5))

(declare-const pred_vis__root__g2__first__bit5 Int)

(declare-const pred_vis__root__g2__last__bit5 Int)

(declare-const pred_vis__root__g2__position5 Int)

;; pred_vis__root__g2__first__bit_axiom
  (assert (<= 0 pred_vis__root__g2__first__bit5))

;; pred_vis__root__g2__last__bit_axiom
  (assert (< pred_vis__root__g2__first__bit5 pred_vis__root__g2__last__bit5))

;; pred_vis__root__g2__position_axiom
  (assert (<= 0 pred_vis__root__g2__position5))

(declare-const pred_vis__child__f2__first__bit1 Int)

(declare-const pred_vis__child__f2__last__bit1 Int)

(declare-const pred_vis__child__f2__position1 Int)

;; pred_vis__child__f2__first__bit_axiom
  (assert (<= 0 pred_vis__child__f2__first__bit1))

;; pred_vis__child__f2__last__bit_axiom
  (assert
  (< pred_vis__child__f2__first__bit1 pred_vis__child__f2__last__bit1))

;; pred_vis__child__f2__position_axiom
  (assert (<= 0 pred_vis__child__f2__position1))

(declare-fun user_eq6 (us_rep5 us_rep5) Bool)

(declare-const dummy6 us_rep5)

(declare-datatypes ((grand_grand_child_3__ref 0))
(((grand_grand_child_3__refqtmk (grand_grand_child_3__content us_rep5)))))
(define-fun grand_grand_child_3__ref_grand_grand_child_3__content__projection ((a grand_grand_child_3__ref)) us_rep5 
  (grand_grand_child_3__content a))

(declare-const z us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const i1s us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const i14s us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const i4s us_rep4)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const i3s us_rep5)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(define-fun dynamic_invariant ((temp___expr_162 us_rep)
  (temp___is_init_158 Bool) (temp___skip_constant_159 Bool)
  (temp___do_toplevel_160 Bool)
  (temp___do_typ_inv_161 Bool)) Bool (=> (= temp___do_toplevel_160 true)
                                     (=> (= temp___is_init_158 true)
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1 temp___expr_162)))))))

(define-fun default_initial_assumption ((temp___expr_164 us_rep)
  (temp___skip_top_level_165 Bool)) Bool (= (attr__tag temp___expr_164) 
  us_tag))

(define-fun dynamic_predicate ((temp___169 us_rep)) Bool (< 0 (to_rep
                                                              (rec__pred_vis__root__f1
                                                              (us_split_fields1
                                                              temp___169)))))

(define-fun dynamic_invariant1 ((temp___expr_175 us_rep1)
  (temp___is_init_171 Bool) (temp___skip_constant_172 Bool)
  (temp___do_toplevel_173 Bool)
  (temp___do_typ_inv_174 Bool)) Bool (ite (= temp___do_toplevel_173 true)
                                     (=> (= temp___is_init_171 true)
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base temp___expr_175)))))
                                     (< 15 (to_rep
                                           (rec__pred_vis__root__g21
                                           (us_split_fields3 temp___expr_175))))))
                                     (=> (= temp___is_init_171 true)
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base temp___expr_175))))))))

(define-fun default_initial_assumption1 ((temp___expr_179 us_rep1)
  (temp___skip_top_level_180 Bool)) Bool (= (attr__tag1 temp___expr_179) 
  us_tag1))

(define-fun dynamic_predicate1 ((temp___184 us_rep1)) Bool (and
                                                           (< 0 (to_rep
                                                                (rec__pred_vis__root__f1
                                                                (us_split_fields1
                                                                (to_base
                                                                temp___184)))))
                                                           (< 15 (to_rep
                                                                 (rec__pred_vis__root__g21
                                                                 (us_split_fields3
                                                                 temp___184))))))

(define-fun dynamic_invariant2 ((temp___expr_205 us_rep3)
  (temp___is_init_201 Bool) (temp___skip_constant_202 Bool)
  (temp___do_toplevel_203 Bool)
  (temp___do_typ_inv_204 Bool)) Bool (=> (= temp___is_init_201 true)
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base2 temp___expr_205)))))))

(define-fun default_initial_assumption2 ((temp___expr_208 us_rep3)
  (temp___skip_top_level_209 Bool)) Bool (= (attr__tag3 temp___expr_208) 
  us_tag3))

(define-fun dynamic_predicate2 ((temp___213 us_rep3)) Bool (< 0 (to_rep
                                                                (rec__pred_vis__root__f1
                                                                (us_split_fields1
                                                                (to_base2
                                                                temp___213))))))

(define-fun dynamic_invariant3 ((temp___expr_219 us_rep4)
  (temp___is_init_215 Bool) (temp___skip_constant_216 Bool)
  (temp___do_toplevel_217 Bool)
  (temp___do_typ_inv_218 Bool)) Bool (ite (= temp___do_toplevel_217 true)
                                     (=> (= temp___is_init_215 true)
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base3 temp___expr_219)))))
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__child__f2
                                          (us_split_fields9 temp___expr_219))))
                                     (< (to_rep
                                        (rec__pred_vis__root__f14
                                        (us_split_fields9 temp___expr_219))) 100))))
                                     (=> (= temp___is_init_215 true)
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base3 temp___expr_219))))))))

(define-fun default_initial_assumption3 ((temp___expr_223 us_rep4)
  (temp___skip_top_level_224 Bool)) Bool (= (attr__tag4 temp___expr_223) 
  us_tag4))

(define-fun dynamic_predicate3 ((temp___229 us_rep4)) Bool (and
                                                           (< 0 (to_rep
                                                                (rec__pred_vis__root__f1
                                                                (us_split_fields1
                                                                (to_base3
                                                                temp___229)))))
                                                           (and
                                                           (< 0 (to_rep
                                                                (rec__pred_vis__child__f2
                                                                (us_split_fields9
                                                                temp___229))))
                                                           (< (to_rep
                                                              (rec__pred_vis__root__f14
                                                              (us_split_fields9
                                                              temp___229))) 100))))

(define-fun dynamic_invariant4 ((temp___expr_236 us_rep5)
  (temp___is_init_232 Bool) (temp___skip_constant_233 Bool)
  (temp___do_toplevel_234 Bool)
  (temp___do_typ_inv_235 Bool)) Bool (ite (= temp___do_toplevel_234 true)
                                     (=> (= temp___is_init_232 true)
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base4 temp___expr_236)))))
                                     (and
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__child__f2
                                          (us_split_fields9
                                          (of_base3
                                          (to_base4 temp___expr_236))))))
                                     (< (to_rep
                                        (rec__pred_vis__root__f14
                                        (us_split_fields9
                                        (of_base3 (to_base4 temp___expr_236))))) 100))
                                     (< 15 (to_rep
                                           (rec__pred_vis__root__g25
                                           (us_split_fields11
                                           temp___expr_236)))))))
                                     (=> (= temp___is_init_232 true)
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base4 temp___expr_236)))))
                                     (and
                                     (< 0 (to_rep
                                          (rec__pred_vis__child__f2
                                          (us_split_fields9
                                          (of_base3
                                          (to_base4 temp___expr_236))))))
                                     (< (to_rep
                                        (rec__pred_vis__root__f14
                                        (us_split_fields9
                                        (of_base3 (to_base4 temp___expr_236))))) 100))))))

(define-fun default_initial_assumption4 ((temp___expr_242 us_rep5)
  (temp___skip_top_level_243 Bool)) Bool (= (attr__tag5 temp___expr_242) 
  us_tag5))

(define-fun dynamic_predicate4 ((temp___248 us_rep5)) Bool (and
                                                           (< 0 (to_rep
                                                                (rec__pred_vis__root__f1
                                                                (us_split_fields1
                                                                (to_base4
                                                                temp___248)))))
                                                           (and
                                                           (and
                                                           (< 0 (to_rep
                                                                (rec__pred_vis__child__f2
                                                                (us_split_fields9
                                                                (of_base3
                                                                (to_base4
                                                                temp___248))))))
                                                           (< (to_rep
                                                              (rec__pred_vis__root__f14
                                                              (us_split_fields9
                                                              (of_base3
                                                              (to_base4
                                                              temp___248))))) 100))
                                                           (< 15 (to_rep
                                                                 (rec__pred_vis__root__g25
                                                                 (us_split_fields11
                                                                 temp___248)))))))

(define-fun dynamic_invariant5 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun dynamic_invariant6 ((temp___expr_191 us_rep2)
  (temp___is_init_187 Bool) (temp___skip_constant_188 Bool)
  (temp___do_toplevel_189 Bool)
  (temp___do_typ_inv_190 Bool)) Bool (=> (= temp___is_init_187 true)
                                     (< 0 (to_rep
                                          (rec__pred_vis__root__f1
                                          (us_split_fields1
                                          (to_base1 temp___expr_191)))))))

(define-fun default_initial_assumption5 ((temp___expr_194 us_rep2)
  (temp___skip_top_level_195 Bool)) Bool (= (attr__tag2 temp___expr_194) 
  us_tag2))

(define-fun dynamic_predicate5 ((temp___199 us_rep2)) Bool (< 0 (to_rep
                                                                (rec__pred_vis__root__f1
                                                                (us_split_fields1
                                                                (to_base1
                                                                temp___199))))))

(assert
;; defqtvc
 ;; File "test_new.adb", line 2, characters 0-0
  (not
  (=> (dynamic_invariant i1s true false true true)
  (=> (dynamic_invariant4 i3s true false true true)
  (=> (dynamic_invariant3 i4s true false true true)
  (=> (dynamic_invariant1 i14s true false true true)
  (=> (dynamic_invariant i1s true false true true)
  (=> (dynamic_invariant4 i3s true false true true)
  (=> (dynamic_invariant3 i4s true false true true)
  (=> (dynamic_invariant1 i14s true false true true)
  (=> (dynamic_invariant1 x true false true true)
  (=> (dynamic_invariant2 y true false true true)
  (=> (dynamic_invariant4 z true false true true)
  (=> (< 0 (to_rep (rec__pred_vis__root__f11 (us_split_fields3 x))))
  (=> (< 10 (to_rep (rec__pred_vis__root__g11 (us_split_fields3 x))))
  (=> (< 15 (to_rep (rec__pred_vis__root__g21 (us_split_fields3 x))))
  (=> (< (to_rep (rec__pred_vis__root__f11 (us_split_fields3 x))) 100)
  (=> (< 0 (to_rep (rec__pred_vis__root__f13 (us_split_fields7 y))))
  (=> (< 10 (to_rep (rec__pred_vis__root__g13 (us_split_fields7 y))))
  (=> (< 15 (to_rep (rec__pred_vis__root__g23 (us_split_fields7 y))))
  (=> (< (to_rep (rec__pred_vis__root__f13 (us_split_fields7 y))) 100)
  (=> (< 0 (to_rep (rec__pred_vis__root__f15 (us_split_fields11 z))))
  (=> (< 10 (to_rep (rec__pred_vis__root__g15 (us_split_fields11 z))))
  (=> (< 15 (to_rep (rec__pred_vis__root__g25 (us_split_fields11 z))))
  (< 0 (to_rep (rec__pred_vis__child__f21 (us_split_fields11 z))))))))))))))))))))))))))))
(check-sat)
