;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__dic__parent__b Bool)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__dic__parent__b__projection ((a us_split_fields)) Bool 
  (rec__dic__parent__b a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (ite (rec__dic__parent__b (us_split_fields1 a)) 1 0) (ite 
                   (rec__dic__parent__b (us_split_fields1 b)) 1 0)) true
                   false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const dic__parent__b__first__bit Int)

(declare-const dic__parent__b__last__bit Int)

(declare-const dic__parent__b__position Int)

;; dic__parent__b__first__bit_axiom
  (assert (<= 0 dic__parent__b__first__bit))

;; dic__parent__b__last__bit_axiom
  (assert (< dic__parent__b__first__bit dic__parent__b__last__bit))

;; dic__parent__b__position_axiom
  (assert (<= 0 dic__parent__b__position))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((child__ref 0))
(((child__refqtmk (child__content us_rep)))))
(define-fun child__ref_child__content__projection ((a child__ref)) us_rep 
  (child__content a))

(declare-fun is_ok (us_rep) Bool)

(declare-fun is_ok__function_guard (Bool us_rep) Bool)

(declare-fun is_ok1 (Int us_rep) Bool)

(declare-fun is_ok__function_guard1 (Bool Int us_rep) Bool)

;; temp___result_175'def
  (assert
  (forall ((temp___174 us_rep)) (is_ok__function_guard (is_ok temp___174)
  temp___174)))

(define-fun default_initial_assumption ((temp___expr_172 us_rep)
  (temp___skip_top_level_173 Bool)) Bool (and
                                         (and
                                         (= (attr__tag temp___expr_172) 
                                         us_tag)
                                         (= (rec__dic__parent__b
                                            (us_split_fields1
                                            temp___expr_172)) (distinct 1 0)))
                                         (=>
                                         (not
                                         (= temp___skip_top_level_173 true))
                                         (= (is_ok temp___expr_172) true))))

;; is_ok__post_axiom
  (assert true)

;; is_ok__post__dispatch_axiom
  (assert true)

;; dic__child__compat_axiom
  (assert
  (forall ((obj us_rep))
  (! (=> (is_ok__function_guard1 (is_ok1 us_tag obj) us_tag obj)
     (and (forall ((obj1 us_rep)) (is_ok__function_guard (is_ok obj1) obj1))
     (= (ite (is_ok obj) 1 0) (ite (is_ok1 us_tag obj) 1 0)))) :pattern (
  (is_ok1 us_tag obj)) )))

;; is_ok__def_axiom
  (assert
  (forall ((obj us_rep))
  (! (= (= (is_ok obj) true)
     (not (= (rec__dic__parent__b (us_split_fields1 obj)) true))) :pattern (
  (is_ok obj)) )))

(assert
;; defqtvc
 ;; File "/home/kanig/dev/spark2014/benchmark_script/data/tmp-test-PA19-039__inherited_dic-25845/src/gnatprove/dic__child.mlw", line 296, characters 5-8
  (not
  (forall ((usf us_rep))
  (=> (= (attr__tag usf) us_tag)
  (=> (= (rec__dic__parent__b (us_split_fields1 usf)) (distinct 1 0))
  (=> (forall ((usf1 us_rep)) (is_ok__function_guard (is_ok usf1) usf1))
  (=> (forall ((usf1 us_rep)) (is_ok__function_guard (is_ok usf1) usf1))
  (= (is_ok usf) true))))))))
(check-sat)
