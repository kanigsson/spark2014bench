(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort us_main_type 0)

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (rec__traversals__list2_acc__is_null_pointer Bool)(rec__traversals__list2_acc__pointer_address Int)(rec__traversals__list2_acc__pointer_value_abstr us_main_type)))))
(define-fun us_rep_rec__traversals__list2_acc__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__traversals__list2_acc__is_null_pointer a))

(define-fun us_rep_rec__traversals__list2_acc__pointer_address__projection ((a us_rep)) Int 
  (rec__traversals__list2_acc__pointer_address a))

(define-fun us_rep_rec__traversals__list2_acc__pointer_value_abstr__projection ((a us_rep)) us_main_type 
  (rec__traversals__list2_acc__pointer_value_abstr a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__2__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__traversals__list2_acc__is_null_pointer a) 
                        (rec__traversals__list2_acc__is_null_pointer b))
                        (=>
                        (not
                        (= (rec__traversals__list2_acc__is_null_pointer a) true))
                        (and
                        (= (rec__traversals__list2_acc__pointer_address a) 
                        (rec__traversals__list2_acc__pointer_address b))
                        (= (rec__traversals__list2_acc__pointer_value_abstr
                           a) (rec__traversals__list2_acc__pointer_value_abstr
                              b)))))
                   true false))

(declare-const dummy1 us_rep)

(declare-datatypes ((t5b__ref 0))
(((t5b__refqtmk (t5b__content us_rep)))))
(define-fun t5b__ref_t5b__content__projection ((a t5b__ref)) us_rep (t5b__content
                                                                    a))

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy2 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-sort us_main_type1 0)

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (rec__traversals__list1_acc__is_null_pointer Bool)(rec__traversals__list1_acc__pointer_address Int)(rec__traversals__list1_acc__pointer_value_abstr us_main_type1)))))
(define-fun us_rep_rec__traversals__list1_acc__is_null_pointer__projection ((a us_rep1)) Bool 
  (rec__traversals__list1_acc__is_null_pointer a))

(define-fun us_rep_rec__traversals__list1_acc__pointer_address__projection ((a us_rep1)) Int 
  (rec__traversals__list1_acc__pointer_address a))

(define-fun us_rep_rec__traversals__list1_acc__pointer_value_abstr__projection ((a us_rep1)) us_main_type1 
  (rec__traversals__list1_acc__pointer_value_abstr a))

(declare-datatypes ((us_rep__ref1 0))
(((us_rep__refqtmk1 (us_rep__content1 us_rep1)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref1)) us_rep1 
  (us_rep__content1 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__traversals__list1_acc__is_null_pointer a) 
                         (rec__traversals__list1_acc__is_null_pointer b))
                         (=>
                         (not
                         (= (rec__traversals__list1_acc__is_null_pointer a) true))
                         (and
                         (= (rec__traversals__list1_acc__pointer_address a) 
                         (rec__traversals__list1_acc__pointer_address b))
                         (= (rec__traversals__list1_acc__pointer_value_abstr
                            a) (rec__traversals__list1_acc__pointer_value_abstr
                               b)))))
                    true false))

(declare-const dummy3 us_rep1)

(declare-datatypes ((t2b__ref 0))
(((t2b__refqtmk (t2b__content us_rep1)))))
(define-fun t2b__ref_t2b__content__projection ((a t2b__ref)) us_rep1 
  (t2b__content a))

(declare-fun length1 (us_rep1) Int)

(declare-fun length__function_guard1 (Int us_rep1) Bool)

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-const dummy4 us_rep)

(declare-datatypes ((list2_acc__ref 0))
(((list2_acc__refqtmk (list2_acc__content us_rep)))))
(define-fun list2_acc__ref_list2_acc__content__projection ((a list2_acc__ref)) us_rep 
  (list2_acc__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__traversals__list1__v integer)(rec__traversals__list1__n us_rep)))))
(define-fun us_split_fields_rec__traversals__list1__v__projection ((a us_split_fields)) integer 
  (rec__traversals__list1__v a))

(define-fun us_split_fields_rec__traversals__list1__n__projection ((a us_split_fields)) us_rep 
  (rec__traversals__list1__n a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep2)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__traversals__list1__v (us_split_fields1 a))) 
                         (to_rep
                         (rec__traversals__list1__v (us_split_fields1 b))))
                         (= (bool_eq
                            (rec__traversals__list1__n (us_split_fields1 a))
                            (rec__traversals__list1__n (us_split_fields1 b))) true))
                    true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const traversals__list1__v__first__bit Int)

(declare-const traversals__list1__v__last__bit Int)

(declare-const traversals__list1__v__position Int)

;; traversals__list1__v__first__bit_axiom
  (assert (<= 0 traversals__list1__v__first__bit))

;; traversals__list1__v__last__bit_axiom
  (assert
  (< traversals__list1__v__first__bit traversals__list1__v__last__bit))

;; traversals__list1__v__position_axiom
  (assert (<= 0 traversals__list1__v__position))

(declare-const traversals__list1__n__first__bit Int)

(declare-const traversals__list1__n__last__bit Int)

(declare-const traversals__list1__n__position Int)

;; traversals__list1__n__first__bit_axiom
  (assert (<= 0 traversals__list1__n__first__bit))

;; traversals__list1__n__last__bit_axiom
  (assert
  (< traversals__list1__n__first__bit traversals__list1__n__last__bit))

;; traversals__list1__n__position_axiom
  (assert (<= 0 traversals__list1__n__position))

(declare-fun user_eq2 (us_rep2 us_rep2) Bool)

(declare-const dummy5 us_rep2)

(declare-datatypes ((list1__ref 0))
(((list1__refqtmk (list1__content us_rep2)))))
(define-fun list1__ref_list1__content__projection ((a list1__ref)) us_rep2 
  (list1__content a))

(declare-const dummy6 us_rep1)

(declare-datatypes ((list1_acc__ref 0))
(((list1_acc__refqtmk (list1_acc__content us_rep1)))))
(define-fun list1_acc__ref_list1_acc__content__projection ((a list1_acc__ref)) us_rep1 
  (list1_acc__content a))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__traversals__list2__v integer)(rec__traversals__list2__n us_rep1)))))
(define-fun us_split_fields_rec__traversals__list2__v__projection ((a us_split_fields2)) integer 
  (rec__traversals__list2__v a))

(define-fun us_split_fields_rec__traversals__list2__n__projection ((a us_split_fields2)) us_rep1 
  (rec__traversals__list2__n a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep3 0))
(((us_repqtmk3 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep3)) us_split_fields2 
  (us_split_fields3 a))

(define-fun bool_eq3 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (= (to_rep
                            (rec__traversals__list2__v (us_split_fields3 a))) 
                         (to_rep
                         (rec__traversals__list2__v (us_split_fields3 b))))
                         (= (bool_eq1
                            (rec__traversals__list2__n (us_split_fields3 a))
                            (rec__traversals__list2__n (us_split_fields3 b))) true))
                    true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const traversals__list2__v__first__bit Int)

(declare-const traversals__list2__v__last__bit Int)

(declare-const traversals__list2__v__position Int)

;; traversals__list2__v__first__bit_axiom
  (assert (<= 0 traversals__list2__v__first__bit))

;; traversals__list2__v__last__bit_axiom
  (assert
  (< traversals__list2__v__first__bit traversals__list2__v__last__bit))

;; traversals__list2__v__position_axiom
  (assert (<= 0 traversals__list2__v__position))

(declare-const traversals__list2__n__first__bit Int)

(declare-const traversals__list2__n__last__bit Int)

(declare-const traversals__list2__n__position Int)

;; traversals__list2__n__first__bit_axiom
  (assert (<= 0 traversals__list2__n__first__bit))

;; traversals__list2__n__last__bit_axiom
  (assert
  (< traversals__list2__n__first__bit traversals__list2__n__last__bit))

;; traversals__list2__n__position_axiom
  (assert (<= 0 traversals__list2__n__position))

(declare-fun user_eq3 (us_rep3 us_rep3) Bool)

(declare-const dummy7 us_rep3)

(declare-datatypes ((list2__ref 0))
(((list2__refqtmk (list2__content us_rep3)))))
(define-fun list2__ref_list2__content__projection ((a list2__ref)) us_rep3 
  (list2__content a))

(declare-fun us_open (us_main_type1) us_rep2)

(declare-fun us_close (us_rep2) us_main_type1)

;; close_open
  (assert
  (forall ((x us_main_type1))
  (! (= (us_close (us_open x)) x) :pattern ((us_open x)) )))

;; open_close
  (assert
  (forall ((x us_rep2))
  (! (= (us_open (us_close x)) x) :pattern ((us_close x)) )))

(define-fun rec__traversals__list1_acc__pointer_value ((a us_rep1)) us_rep2 
  (us_open (rec__traversals__list1_acc__pointer_value_abstr a)))

(define-fun rec__traversals__list1_acc__pointer_value__pred ((a us_rep1)) Bool 
  (not (= (rec__traversals__list1_acc__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep1)

;; __null_pointer__def_axiom
  (assert
  (= (rec__traversals__list1_acc__is_null_pointer us_null_pointer) true))

(declare-fun us_open1 (us_main_type) us_rep3)

(declare-fun us_close1 (us_rep3) us_main_type)

;; close_open
  (assert
  (forall ((x us_main_type))
  (! (= (us_close1 (us_open1 x)) x) :pattern ((us_open1 x)) )))

;; open_close
  (assert
  (forall ((x us_rep3))
  (! (= (us_open1 (us_close1 x)) x) :pattern ((us_close1 x)) )))

(define-fun rec__traversals__list2_acc__pointer_value ((a us_rep)) us_rep3 
  (us_open1 (rec__traversals__list2_acc__pointer_value_abstr a)))

(define-fun rec__traversals__list2_acc__pointer_value__pred ((a us_rep)) Bool 
  (not (= (rec__traversals__list2_acc__is_null_pointer a) true)))

(declare-const us_null_pointer1 us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__traversals__list2_acc__is_null_pointer us_null_pointer1) true))

;; length__def_axiom
  (assert
  (forall ((l us_rep))
  (! (=> (length__function_guard (length l) l)
     (and
     (forall ((l1 us_rep)) (length__function_guard
     (length
     (rec__traversals__list1__n
     (us_split_fields1
     (rec__traversals__list1_acc__pointer_value
     (rec__traversals__list2__n
     (us_split_fields3 (rec__traversals__list2_acc__pointer_value l1)))))))
     (rec__traversals__list1__n
     (us_split_fields1
     (rec__traversals__list1_acc__pointer_value
     (rec__traversals__list2__n
     (us_split_fields3 (rec__traversals__list2_acc__pointer_value l1))))))))
     (= (length l) (ite (= (bool_eq l us_null_pointer1) true) 0
                   (ite (= (bool_eq1
                           (rec__traversals__list2__n
                           (us_split_fields3
                           (rec__traversals__list2_acc__pointer_value l)))
                           us_null_pointer) true)
                   1
                   (+ (min 2147483645
                      (length
                      (rec__traversals__list1__n
                      (us_split_fields1
                      (rec__traversals__list1_acc__pointer_value
                      (rec__traversals__list2__n
                      (us_split_fields3
                      (rec__traversals__list2_acc__pointer_value l)))))))) 2)))))) :pattern (
  (length l)) )))

;; length__def_axiom
  (assert
  (forall ((l us_rep1))
  (! (=> (length__function_guard1 (length1 l) l)
     (and
     (forall ((l1 us_rep1)) (length__function_guard1
     (length1
     (rec__traversals__list2__n
     (us_split_fields3
     (rec__traversals__list2_acc__pointer_value
     (rec__traversals__list1__n
     (us_split_fields1 (rec__traversals__list1_acc__pointer_value l1)))))))
     (rec__traversals__list2__n
     (us_split_fields3
     (rec__traversals__list2_acc__pointer_value
     (rec__traversals__list1__n
     (us_split_fields1 (rec__traversals__list1_acc__pointer_value l1))))))))
     (= (length1 l) (ite (= (bool_eq1 l us_null_pointer) true) 0
                    (ite (= (bool_eq
                            (rec__traversals__list1__n
                            (us_split_fields1
                            (rec__traversals__list1_acc__pointer_value l)))
                            us_null_pointer1) true)
                    1
                    (+ (min 2147483645
                       (length1
                       (rec__traversals__list2__n
                       (us_split_fields3
                       (rec__traversals__list2_acc__pointer_value
                       (rec__traversals__list1__n
                       (us_split_fields1
                       (rec__traversals__list1_acc__pointer_value l)))))))) 2)))))) :pattern (
  (length1 l)) )))

(declare-const dummy8 us_rep1)

(declare-datatypes ((t7b__ref 0))
(((t7b__refqtmk (t7b__content us_rep1)))))
(define-fun t7b__ref_t7b__content__projection ((a t7b__ref)) us_rep1 
  (t7b__content a))

(declare-const x us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const dummy9 us_rep)

(declare-datatypes ((t8b__ref 0))
(((t8b__refqtmk (t8b__content us_rep)))))
(define-fun t8b__ref_t8b__content__projection ((a t8b__ref)) us_rep (t8b__content
                                                                    a))

(declare-fun next (us_rep1) us_rep)

(declare-fun next__function_guard (us_rep us_rep1) Bool)

(declare-sort us_pledge_ty 0)

(declare-datatypes ((us_pledge_ty__ref 0))
(((us_pledge_ty__refqtmk (us_pledge_ty__content us_pledge_ty)))))
(declare-fun us_pledge_get (us_pledge_ty us_rep1 us_rep) Bool)

(declare-fun traversals__next__pledge (us_rep1) us_pledge_ty)

(declare-const dummy10 us_rep1)

(declare-datatypes ((t10b__ref 0))
(((t10b__refqtmk (t10b__content us_rep1)))))
(define-fun t10b__ref_t10b__content__projection ((a t10b__ref)) us_rep1 
  (t10b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort us_pledge_ty1 0)

(declare-datatypes ((us_pledge_ty__ref1 0))
(((us_pledge_ty__refqtmk1 (us_pledge_ty__content1 us_pledge_ty1)))))
(declare-fun us_pledge_get1 (us_pledge_ty1 us_rep1 us_rep1) Bool)

(declare-const dummy11 us_rep)

(declare-datatypes ((t11b__ref 0))
(((t11b__refqtmk (t11b__content us_rep)))))
(define-fun t11b__ref_t11b__content__projection ((a t11b__ref)) us_rep 
  (t11b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort us_pledge_ty2 0)

(declare-datatypes ((us_pledge_ty__ref2 0))
(((us_pledge_ty__refqtmk2 (us_pledge_ty__content2 us_pledge_ty2)))))
(declare-fun us_pledge_get2 (us_pledge_ty2 us_rep1 us_rep) Bool)

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun default_initial_assumption ((temp___expr_184 us_rep1)
  (temp___skip_top_level_185 Bool)) Bool (= (rec__traversals__list1_acc__is_null_pointer
                                            temp___expr_184) true))

(define-fun default_initial_assumption1 ((temp___expr_191 us_rep)
  (temp___skip_top_level_192 Bool)) Bool (= (rec__traversals__list2_acc__is_null_pointer
                                            temp___expr_191) true))

(define-fun default_initial_assumption2 ((temp___expr_198 us_rep2)
  (temp___skip_top_level_199 Bool)) Bool (= (rec__traversals__list2_acc__is_null_pointer
                                            (rec__traversals__list1__n
                                            (us_split_fields1
                                            temp___expr_198))) true))

(define-fun default_initial_assumption3 ((temp___expr_207 us_rep3)
  (temp___skip_top_level_208 Bool)) Bool (= (rec__traversals__list1_acc__is_null_pointer
                                            (rec__traversals__list2__n
                                            (us_split_fields3
                                            temp___expr_207))) true))

;; length__post_axiom
  (assert
  (forall ((l us_rep1))
  (! (let ((result (length1 l)))
     (and
     (forall ((l1 us_rep1)) (length__function_guard
     (length
     (rec__traversals__list1__n
     (us_split_fields1 (rec__traversals__list1_acc__pointer_value l1))))
     (rec__traversals__list1__n
     (us_split_fields1 (rec__traversals__list1_acc__pointer_value l1)))))
     (=> (length__function_guard1 result l)
     (and
     (=> (not (= (bool_eq1 l us_null_pointer) true))
     (= result (+ (min 2147483646
                  (length
                  (rec__traversals__list1__n
                  (us_split_fields1
                  (rec__traversals__list1_acc__pointer_value l))))) 1)))
     (dynamic_invariant result true false true true))))) :pattern ((length1
                                                                   l)) )))

;; length__post_axiom
  (assert
  (forall ((l us_rep))
  (! (let ((result (length l)))
     (and
     (forall ((l1 us_rep)) (length__function_guard1
     (length1
     (rec__traversals__list2__n
     (us_split_fields3 (rec__traversals__list2_acc__pointer_value l1))))
     (rec__traversals__list2__n
     (us_split_fields3 (rec__traversals__list2_acc__pointer_value l1)))))
     (=> (length__function_guard result l)
     (and
     (=> (not (= (bool_eq l us_null_pointer1) true))
     (= result (+ (min 2147483646
                  (length1
                  (rec__traversals__list2__n
                  (us_split_fields3
                  (rec__traversals__list2_acc__pointer_value l))))) 1)))
     (dynamic_invariant result true false true true))))) :pattern ((length l)) )))

;; next__post_axiom
  (assert
  (forall ((x1 us_rep1))
  (! (and (forall ((x2 us_rep1)) (length__function_guard1 (length1 x2) x2))
     (=> (< (length1 x1) 2147483647)
     (let ((result (next x1)))
     (and
     (forall ((result1 us_rep)) (length__function_guard (length result1)
     result1))
     (and (forall ((x2 us_rep1)) (length__function_guard1 (length1 x2) x2))
     (and
     (forall ((temp___borrowed_232 us_rep1)) (length__function_guard1
     (length1 temp___borrowed_232) temp___borrowed_232))
     (and
     (forall ((temp___brower_231 us_rep)) (length__function_guard
     (length temp___brower_231) temp___brower_231))
     (=> (next__function_guard result x1)
     (let ((us_result_pledge (traversals__next__pledge x1)))
     (and
     (ite (= (bool_eq1 x1 us_null_pointer) true)
     (and (= (bool_eq result us_null_pointer1) true)
     (= (ite (forall ((temp___borrowed_236 us_rep1))
             (forall ((temp___brower_235 us_rep))
             (! (=>
                (and
                (= (us_pledge_get us_result_pledge temp___borrowed_236
                   temp___brower_235) true)
                (and
                (= (rec__traversals__list1_acc__is_null_pointer x1) (rec__traversals__list1_acc__is_null_pointer
                                                                    temp___borrowed_236))
                (= (rec__traversals__list2_acc__is_null_pointer result) 
                (rec__traversals__list2_acc__is_null_pointer
                temp___brower_235))))
                (= (bool_eq1 temp___borrowed_236 us_null_pointer) true)) :pattern (
             (us_pledge_get us_result_pledge temp___borrowed_236
             temp___brower_235)) )))
        true false) true))
     (and (= (length result) (- (length1 x1) 1))
     (= (ite (forall ((temp___borrowed_232 us_rep1))
             (forall ((temp___brower_231 us_rep))
             (! (=>
                (and
                (= (us_pledge_get us_result_pledge temp___borrowed_232
                   temp___brower_231) true)
                (and
                (= (rec__traversals__list1_acc__is_null_pointer x1) (rec__traversals__list1_acc__is_null_pointer
                                                                    temp___borrowed_232))
                (= (rec__traversals__list2_acc__is_null_pointer result) 
                (rec__traversals__list2_acc__is_null_pointer
                temp___brower_231))))
                (= (length1 temp___borrowed_232) (+ (min 2147483646
                                                    (length
                                                    temp___brower_231)) 1))) :pattern (
             (us_pledge_get us_result_pledge temp___borrowed_232
             temp___brower_231)) )))
        true false) true)))
     (= (us_pledge_get us_result_pledge x1 result) true))))))))))) :pattern (
  (next x1)) )))

(assert
;; defqtvc
 ;; File "traversals.adb", line 36, characters 0-0
  (not
  (=> (length__function_guard1 (length1 x) x)
  (=> (< (length1 x) 2147483647)
  (let ((traversals__next__y__assume x))
  (forall ((usf us_pledge_ty1))
  (=>
  (forall ((temp___borrowed_244 us_rep1))
  (forall ((temp___brower_243 us_rep1))
  (! (= (= (us_pledge_get1 usf temp___borrowed_244 temp___brower_243) true)
     (= temp___brower_243 temp___borrowed_244)) :pattern ((us_pledge_get1 usf
                                                          temp___borrowed_244
                                                          temp___brower_243)) )))
  (forall ((traversals__next__y__pledge us_pledge_ty1))
  (=> (= traversals__next__y__pledge usf)
  (forall ((y__pointer_value us_split_fields))
  (=>
  (= (us_repqtmk2 y__pointer_value) (rec__traversals__list1_acc__pointer_value
                                    traversals__next__y__assume))
  (forall ((y__pointer_address Int))
  (=>
  (= y__pointer_address (rec__traversals__list1_acc__pointer_address
                        traversals__next__y__assume))
  (forall ((y__is_null_pointer Bool))
  (=>
  (= y__is_null_pointer (rec__traversals__list1_acc__is_null_pointer
                        traversals__next__y__assume))
  (forall ((spark__branch Bool))
  (=>
  (= spark__branch (not (bool_eq1
                        (us_repqtmk1 y__is_null_pointer y__pointer_address
                        (us_close (us_repqtmk2 y__pointer_value)))
                        us_null_pointer)))
  (=> (= spark__branch true) (rec__traversals__list1_acc__pointer_value__pred
  (us_repqtmk1 y__is_null_pointer y__pointer_address
  (us_close (us_repqtmk2 y__pointer_value))))))))))))))))))))))
(check-sat)
