(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep (select a temp___idx_155)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep (select a temp___idx_155)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq1 (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((time__ref 0))
(((time__refqtmk (time__content us_rep)))))
(define-fun time__ref_time__content__projection ((a time__ref)) us_rep 
  (time__content a))

(declare-sort device_enum 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq3 (device_enum device_enum) Bool)

(declare-const dummy3 device_enum)

(declare-datatypes ((device_enum__ref 0))
(((device_enum__refqtmk (device_enum__content device_enum)))))
(define-fun device_enum__ref_device_enum__content__projection ((a device_enum__ref)) device_enum 
  (device_enum__content a))

(declare-fun to_rep1 (device_enum) Int)

(declare-fun of_rep1 (Int) device_enum)

;; inversion_axiom
  (assert
  (forall ((x device_enum))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x device_enum)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__c3900060__alert_type__arrival_time us_rep)(rec__c3900060__alert_type__display_on device_enum)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__c3900060__alert_type__arrival_time__projection ((a us_split_fields)) us_rep 
  (rec__c3900060__alert_type__arrival_time a))

(define-fun us_split_fields_rec__c3900060__alert_type__display_on__projection ((a us_split_fields)) device_enum 
  (rec__c3900060__alert_type__display_on a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep1)) Int (attr__tag a))

(define-fun bool_eq2 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (bool_eq1
                            (rec__c3900060__alert_type__arrival_time
                            (us_split_fields1 a))
                            (rec__c3900060__alert_type__arrival_time
                            (us_split_fields1 b))) true)
                         (= (to_rep1
                            (rec__c3900060__alert_type__display_on
                            (us_split_fields1 a))) (to_rep1
                                                   (rec__c3900060__alert_type__display_on
                                                   (us_split_fields1 b)))))
                    true false))

(declare-fun us_dispatch_eq (us_rep1 us_rep1) Bool)

(declare-const us_tag Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const c3900060__alert_type__arrival_time__first__bit Int)

(declare-const c3900060__alert_type__arrival_time__last__bit Int)

(declare-const c3900060__alert_type__arrival_time__position Int)

;; c3900060__alert_type__arrival_time__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__first__bit))

;; c3900060__alert_type__arrival_time__last__bit_axiom
  (assert
  (< c3900060__alert_type__arrival_time__first__bit c3900060__alert_type__arrival_time__last__bit))

;; c3900060__alert_type__arrival_time__position_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__position))

(declare-const c3900060__alert_type__display_on__first__bit Int)

(declare-const c3900060__alert_type__display_on__last__bit Int)

(declare-const c3900060__alert_type__display_on__position Int)

;; c3900060__alert_type__display_on__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__display_on__first__bit))

;; c3900060__alert_type__display_on__last__bit_axiom
  (assert
  (< c3900060__alert_type__display_on__first__bit c3900060__alert_type__display_on__last__bit))

;; c3900060__alert_type__display_on__position_axiom
  (assert (<= 0 c3900060__alert_type__display_on__position))

(declare-fun user_eq4 (us_rep1 us_rep1) Bool)

(declare-const dummy4 us_rep1)

(declare-datatypes ((alert_type__ref 0))
(((alert_type__refqtmk (alert_type__content us_rep1)))))
(define-fun alert_type__ref_alert_type__content__projection ((a alert_type__ref)) us_rep1 
  (alert_type__content a))

(declare-const default_time us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption ((temp___expr_217 us_rep1)
  (temp___skip_top_level_218 Bool)) Bool (and
                                         (= (attr__tag temp___expr_217) 
                                         us_tag)
                                         (and
                                         (= (rec__c3900060__alert_type__arrival_time
                                            (us_split_fields1
                                            temp___expr_217)) default_time)
                                         (= (to_rep1
                                            (rec__c3900060__alert_type__display_on
                                            (us_split_fields1
                                            temp___expr_217))) 0))))

(declare-const a us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-fun time_of (Int Int Int Int) us_rep)

(declare-fun time_of__function_guard (us_rep Int Int Int Int) Bool)

;; default_time__def_axiom
  (assert (= default_time (time_of 1901 1 1 0)))

(define-fun dynamic_invariant2 ((temp___expr_199 Int)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)
  (temp___do_typ_inv_198 Bool)) Bool (=>
                                     (or (= temp___is_init_195 true)
                                     (<= 0 3)) (in_range2 temp___expr_199)))

(declare-sort year_number 0)

(declare-fun year_numberqtint (year_number) Int)

;; year_number'axiom
  (assert
  (forall ((i year_number))
  (and (<= 1901 (year_numberqtint i)) (<= (year_numberqtint i) 2399))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1901 x) (<= x 2399)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq5 (year_number year_number) Bool)

(declare-const dummy5 year_number)

(declare-datatypes ((year_number__ref 0))
(((year_number__refqtmk (year_number__content year_number)))))
(define-fun year_number__ref_year_number__content__projection ((a1 year_number__ref)) year_number 
  (year_number__content a1))

(define-fun dynamic_invariant3 ((temp___expr_171 Int)
  (temp___is_init_167 Bool) (temp___skip_constant_168 Bool)
  (temp___do_toplevel_169 Bool)
  (temp___do_typ_inv_170 Bool)) Bool (=>
                                     (or (= temp___is_init_167 true)
                                     (<= 1901 2399)) (in_range3
                                     temp___expr_171)))

(declare-sort month_number 0)

(declare-fun month_numberqtint (month_number) Int)

;; month_number'axiom
  (assert
  (forall ((i month_number))
  (and (<= 1 (month_numberqtint i)) (<= (month_numberqtint i) 12))))

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq6 (month_number month_number) Bool)

(declare-const dummy6 month_number)

(declare-datatypes ((month_number__ref 0))
(((month_number__refqtmk (month_number__content month_number)))))
(define-fun month_number__ref_month_number__content__projection ((a1 month_number__ref)) month_number 
  (month_number__content a1))

(define-fun dynamic_invariant4 ((temp___expr_178 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)
  (temp___do_typ_inv_177 Bool)) Bool (=>
                                     (or (= temp___is_init_174 true)
                                     (<= 1 12)) (in_range4 temp___expr_178)))

(declare-sort day_number 0)

(declare-fun day_numberqtint (day_number) Int)

;; day_number'axiom
  (assert
  (forall ((i day_number))
  (and (<= 1 (day_numberqtint i)) (<= (day_numberqtint i) 31))))

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (day_number day_number) Bool)

(declare-const dummy7 day_number)

(declare-datatypes ((day_number__ref 0))
(((day_number__refqtmk (day_number__content day_number)))))
(define-fun day_number__ref_day_number__content__projection ((a1 day_number__ref)) day_number 
  (day_number__content a1))

(define-fun dynamic_invariant5 ((temp___expr_185 Int)
  (temp___is_init_181 Bool) (temp___skip_constant_182 Bool)
  (temp___do_toplevel_183 Bool)
  (temp___do_typ_inv_184 Bool)) Bool (=>
                                     (or (= temp___is_init_181 true)
                                     (<= 1 31)) (in_range5 temp___expr_185)))

(declare-sort day_duration 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 86400000000000)))

(declare-const dummy8 day_duration)

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (day_duration day_duration) Bool)

(declare-datatypes ((day_duration__ref 0))
(((day_duration__refqtmk (day_duration__content day_duration)))))
(define-fun day_duration__ref_day_duration__content__projection ((a1 day_duration__ref)) day_duration 
  (day_duration__content a1))

(define-fun dynamic_invariant6 ((temp___expr_192 Int)
  (temp___is_init_188 Bool) (temp___skip_constant_189 Bool)
  (temp___do_toplevel_190 Bool)
  (temp___do_typ_inv_191 Bool)) Bool (=>
                                     (or (= temp___is_init_188 true)
                                     (<= 0 86400000000000)) (in_range6
                                     temp___expr_192)))

;; time_of__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "c3900060.ads", line 76, characters 0-0
  (not
  (forall ((display_count_for (Array Int natural)) (o Int) (o1 Int))
  (=>
  (= (to_rep1 (rec__c3900060__alert_type__display_on (us_split_fields1 a))) o)
  (=> (= (to_rep (select display_count_for o)) o1) (in_range (+ o1 1)))))))
(check-sat)
