;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const d Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_155 Int))
                           (=>
                           (and (<= a__first temp___idx_155)
                           (<= temp___idx_155 a__last))
                           (= (to_rep (select a temp___idx_155)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_155)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_155 Int))
  (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last))
  (= (to_rep (select a temp___idx_155)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_155)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ((nat_array__ref 0))
(((nat_array__refqtmk (nat_array__content us_t)))))
(define-fun nat_array__ref_nat_array__content__projection ((a nat_array__ref)) us_t 
  (nat_array__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const r27b Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r28b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (rec__counterexamples__nat_array_access__is_null_pointer Bool)(rec__counterexamples__nat_array_access__pointer_address Int)(rec__counterexamples__nat_array_access__pointer_value us_t)))))
(define-fun us_rep_rec__counterexamples__nat_array_access__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__counterexamples__nat_array_access__is_null_pointer a))

(define-fun us_rep_rec__counterexamples__nat_array_access__pointer_address__projection ((a us_rep)) Int 
  (rec__counterexamples__nat_array_access__pointer_address a))

(define-fun us_rep_rec__counterexamples__nat_array_access__pointer_value__projection ((a us_rep)) us_t 
  (rec__counterexamples__nat_array_access__pointer_value a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__3__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__counterexamples__nat_array_access__is_null_pointer
                           a) (rec__counterexamples__nat_array_access__is_null_pointer
                              b))
                        (=>
                        (not
                        (= (rec__counterexamples__nat_array_access__is_null_pointer
                           a) true))
                        (and
                        (= (rec__counterexamples__nat_array_access__pointer_address
                           a) (rec__counterexamples__nat_array_access__pointer_address
                              b))
                        (= (rec__counterexamples__nat_array_access__pointer_value
                           a) (rec__counterexamples__nat_array_access__pointer_value
                              b)))))
                   true false))

(define-fun rec__counterexamples__nat_array_access__pointer_value__pred ((a us_rep)) Bool 
  (not (= (rec__counterexamples__nat_array_access__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__counterexamples__nat_array_access__is_null_pointer
     us_null_pointer) true))

(declare-const dummy4 us_rep)

(declare-datatypes ((nat_array_access__ref 0))
(((nat_array_access__refqtmk (nat_array_access__content us_rep)))))
(define-fun nat_array_access__ref_nat_array_access__content__projection ((a nat_array_access__ref)) us_rep 
  (nat_array_access__content a))

(define-fun dynamic_invariant2 ((temp___expr_197 us_rep)
  (temp___is_init_193 Bool) (temp___skip_constant_194 Bool)
  (temp___do_toplevel_195 Bool)
  (temp___do_typ_inv_196 Bool)) Bool (=>
                                     (not
                                     (= (rec__counterexamples__nat_array_access__is_null_pointer
                                        temp___expr_197) true))
                                     (dynamic_property 1 2147483647
                                     (first1
                                     (rec__counterexamples__nat_array_access__pointer_value
                                     temp___expr_197))
                                     (last1
                                     (rec__counterexamples__nat_array_access__pointer_value
                                     temp___expr_197)))))

(define-fun default_initial_assumption ((temp___expr_199 us_rep)
  (temp___skip_top_level_200 Bool)) Bool (= (rec__counterexamples__nat_array_access__is_null_pointer
                                            temp___expr_199) true))

(declare-datatypes ((t26b__ref 0))
(((t26b__refqtmk (t26b__content us_t)))))
(define-fun t26b__ref_t26b__content__projection ((a t26b__ref)) us_t 
  (t26b__content a))

(declare-fun temp_____aggregate_def_233 (Int Int Int) us_t)

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_191 us_t)
  (temp___is_init_187 Bool) (temp___skip_constant_188 Bool)
  (temp___do_toplevel_189 Bool)
  (temp___do_typ_inv_190 Bool)) Bool (=>
                                     (not (= temp___skip_constant_188 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_191)
                                     (last1 temp___expr_191))))

(declare-const rliteral natural)

;; rliteral_axiom
  (assert (= (naturalqtint rliteral) 1))

;; def_axiom
  (assert
  (forall ((temp___235 Int) (temp___236 Int) (temp___237 Int))
  (let ((temp___234 (temp_____aggregate_def_233 temp___235 temp___236
                    temp___237)))
  (=> (dynamic_invariant3 temp___235 true true true true)
  (and
  (=> (dynamic_property 1 2147483647 temp___236 temp___237)
  (and (= (first1 temp___234) temp___236) (= (last1 temp___234) temp___237)))
  (forall ((temp___238 Int))
  (= (select (to_array temp___234) temp___238) rliteral)))))))

(assert
;; defqtvc
 ;; File "counterexamples.adb", line 51, characters 0-0
  (not
  (=> (dynamic_invariant c true false true true)
  (=> (dynamic_invariant c true false true true)
  (=> (dynamic_invariant1 d true false true true)
  (let ((temp___239 (temp_____aggregate_def_233 1 1 d)))
  (=> (= (first1 temp___239) 1)
  (=> (= (last1 temp___239) d)
  (forall ((us_next_pointer_address Int))
  (forall ((counterexamples__bad_6__a__assume us_rep))
  (=>
  (= (and (ite (and
               (not
               (= (rec__counterexamples__nat_array_access__is_null_pointer
                  counterexamples__bad_6__a__assume) true))
               (= (rec__counterexamples__nat_array_access__pointer_address
                  counterexamples__bad_6__a__assume) us_next_pointer_address))
          true false) (ite (= (rec__counterexamples__nat_array_access__pointer_value
                              counterexamples__bad_6__a__assume) (of_array
                                                                 (to_array
                                                                 temp___239)
                                                                 (first1
                                                                 temp___239)
                                                                 (last1
                                                                 temp___239)))
                      true false)) true)
  (forall ((a__pointer_value us_t))
  (=>
  (= a__pointer_value (rec__counterexamples__nat_array_access__pointer_value
                      counterexamples__bad_6__a__assume))
  (forall ((a__pointer_address Int))
  (=>
  (= a__pointer_address (rec__counterexamples__nat_array_access__pointer_address
                        counterexamples__bad_6__a__assume))
  (forall ((a__is_null_pointer Bool))
  (=>
  (= a__is_null_pointer (rec__counterexamples__nat_array_access__is_null_pointer
                        counterexamples__bad_6__a__assume))
  (=> (dynamic_invariant2
  (us_repqtmk a__is_null_pointer a__pointer_address a__pointer_value) true
  false true true)
  (=> (= (first1 a__pointer_value) r27b)
  (=> (dynamic_invariant r27b true false true true)
  (=> (= (last1 a__pointer_value) r28b)
  (=> (dynamic_invariant r28b true false true true)
  (=> (and (<= r27b c) (<= c r28b))
  (rec__counterexamples__nat_array_access__pointer_value__pred
  (us_repqtmk a__is_null_pointer a__pointer_address a__pointer_value)))))))))))))))))))))))))
(check-sat)
