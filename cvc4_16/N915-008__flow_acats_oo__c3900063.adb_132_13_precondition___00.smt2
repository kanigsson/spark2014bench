(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep (select a temp___idx_91)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep (select a temp___idx_91)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ((string____ref 0))
(((string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq2 (us_rep us_rep) Bool)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((time__ref 0))
(((time__refqtmk (time__content us_rep)))))
(define-fun time__ref_time__content__projection ((a time__ref)) us_rep 
  (time__content a))

(declare-sort device_enum 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq5 (device_enum device_enum) Bool)

(declare-const dummy5 device_enum)

(declare-datatypes ((device_enum__ref 0))
(((device_enum__refqtmk (device_enum__content device_enum)))))
(define-fun device_enum__ref_device_enum__content__projection ((a device_enum__ref)) device_enum 
  (device_enum__content a))

(declare-fun to_rep2 (device_enum) Int)

(declare-fun of_rep2 (Int) device_enum)

;; inversion_axiom
  (assert
  (forall ((x device_enum))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x device_enum)) (! (in_range3
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__c3900060__alert_type__arrival_time us_rep)(rec__c3900060__alert_type__display_on device_enum)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__c3900060__alert_type__arrival_time__projection ((a us_split_fields)) us_rep 
  (rec__c3900060__alert_type__arrival_time a))

(define-fun us_split_fields_rec__c3900060__alert_type__display_on__projection ((a us_split_fields)) device_enum 
  (rec__c3900060__alert_type__display_on a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep1)) Int (attr__tag a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (bool_eq2
                            (rec__c3900060__alert_type__arrival_time
                            (us_split_fields1 a))
                            (rec__c3900060__alert_type__arrival_time
                            (us_split_fields1 b))) true)
                         (= (to_rep2
                            (rec__c3900060__alert_type__display_on
                            (us_split_fields1 a))) (to_rep2
                                                   (rec__c3900060__alert_type__display_on
                                                   (us_split_fields1 b)))))
                    true false))

(declare-fun us_dispatch_eq (us_rep1 us_rep1) Bool)

(declare-const us_tag Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const c3900060__alert_type__arrival_time__first__bit Int)

(declare-const c3900060__alert_type__arrival_time__last__bit Int)

(declare-const c3900060__alert_type__arrival_time__position Int)

;; c3900060__alert_type__arrival_time__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__first__bit))

;; c3900060__alert_type__arrival_time__last__bit_axiom
  (assert
  (< c3900060__alert_type__arrival_time__first__bit c3900060__alert_type__arrival_time__last__bit))

;; c3900060__alert_type__arrival_time__position_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__position))

(declare-const c3900060__alert_type__display_on__first__bit Int)

(declare-const c3900060__alert_type__display_on__last__bit Int)

(declare-const c3900060__alert_type__display_on__position Int)

;; c3900060__alert_type__display_on__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__display_on__first__bit))

;; c3900060__alert_type__display_on__last__bit_axiom
  (assert
  (< c3900060__alert_type__display_on__first__bit c3900060__alert_type__display_on__last__bit))

;; c3900060__alert_type__display_on__position_axiom
  (assert (<= 0 c3900060__alert_type__display_on__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((alert_type__ref 0))
(((alert_type__refqtmk (alert_type__content us_rep1)))))
(define-fun alert_type__ref_alert_type__content__projection ((a alert_type__ref)) us_rep1 
  (alert_type__content a))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__c3900060__alert_type__arrival_time1 us_rep)(rec__c3900060__alert_type__display_on1 device_enum)(rec__c3900061__low_alert_type__level integer)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__c3900060__alert_type__arrival_time__2__projection ((a us_split_fields2)) us_rep 
  (rec__c3900060__alert_type__arrival_time1 a))

(define-fun us_split_fields_rec__c3900060__alert_type__display_on__2__projection ((a us_split_fields2)) device_enum 
  (rec__c3900060__alert_type__display_on1 a))

(define-fun us_split_fields_rec__c3900061__low_alert_type__level__projection ((a us_split_fields2)) integer 
  (rec__c3900061__low_alert_type__level a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep2)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep2)) Int (attr__tag1 a))

(declare-fun hide_ext__ (integer us_private) us_private)

(declare-fun extract__c3900061__low_alert_type__level (us_private) integer)

;; extract__c3900061__low_alert_type__level__conv
  (assert
  (forall ((c3900061__low_alert_type__level integer))
  (forall ((rec__ext__2 us_private))
  (= (extract__c3900061__low_alert_type__level
     (hide_ext__ c3900061__low_alert_type__level rec__ext__2)) c3900061__low_alert_type__level))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep2)) us_rep1 (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__c3900060__alert_type__arrival_time1
                                          (us_split_fields3 a))
                                          (rec__c3900060__alert_type__display_on1
                                          (us_split_fields3 a))
                                          (hide_ext__
                                          (rec__c3900061__low_alert_type__level
                                          (us_split_fields3 a))
                                          (rec__ext__1 (us_split_fields3 a))))
                                          (attr__tag1 a)))

(define-fun of_base ((r us_rep1)) us_rep2 (us_repqtmk1
                                          (us_split_fieldsqtmk1
                                          (rec__c3900060__alert_type__arrival_time
                                          (us_split_fields1 r))
                                          (rec__c3900060__alert_type__display_on
                                          (us_split_fields1 r))
                                          (extract__c3900061__low_alert_type__level
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (bool_eq2
                            (rec__c3900060__alert_type__arrival_time1
                            (us_split_fields3 a))
                            (rec__c3900060__alert_type__arrival_time1
                            (us_split_fields3 b))) true)
                         (= (to_rep2
                            (rec__c3900060__alert_type__display_on1
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__c3900060__alert_type__display_on1
                                                   (us_split_fields3 b)))))
                         (= (to_rep1
                            (rec__c3900061__low_alert_type__level
                            (us_split_fields3 a))) (to_rep1
                                                   (rec__c3900061__low_alert_type__level
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const c3900060__alert_type__arrival_time__first__bit1 Int)

(declare-const c3900060__alert_type__arrival_time__last__bit1 Int)

(declare-const c3900060__alert_type__arrival_time__position1 Int)

;; c3900060__alert_type__arrival_time__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__first__bit1))

;; c3900060__alert_type__arrival_time__last__bit_axiom
  (assert
  (< c3900060__alert_type__arrival_time__first__bit1 c3900060__alert_type__arrival_time__last__bit1))

;; c3900060__alert_type__arrival_time__position_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__position1))

(declare-const c3900060__alert_type__display_on__first__bit1 Int)

(declare-const c3900060__alert_type__display_on__last__bit1 Int)

(declare-const c3900060__alert_type__display_on__position1 Int)

;; c3900060__alert_type__display_on__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__display_on__first__bit1))

;; c3900060__alert_type__display_on__last__bit_axiom
  (assert
  (< c3900060__alert_type__display_on__first__bit1 c3900060__alert_type__display_on__last__bit1))

;; c3900060__alert_type__display_on__position_axiom
  (assert (<= 0 c3900060__alert_type__display_on__position1))

(declare-const c3900061__low_alert_type__level__first__bit Int)

(declare-const c3900061__low_alert_type__level__last__bit Int)

(declare-const c3900061__low_alert_type__level__position Int)

;; c3900061__low_alert_type__level__first__bit_axiom
  (assert (<= 0 c3900061__low_alert_type__level__first__bit))

;; c3900061__low_alert_type__level__last__bit_axiom
  (assert
  (< c3900061__low_alert_type__level__first__bit c3900061__low_alert_type__level__last__bit))

;; c3900061__low_alert_type__level__position_axiom
  (assert (<= 0 c3900061__low_alert_type__level__position))

(declare-fun user_eq7 (us_rep2 us_rep2) Bool)

(declare-const dummy7 us_rep2)

(declare-datatypes ((low_alert_type__ref 0))
(((low_alert_type__refqtmk (low_alert_type__content us_rep2)))))
(define-fun low_alert_type__ref_low_alert_type__content__projection ((a low_alert_type__ref)) us_rep2 
  (low_alert_type__content a))

(declare-sort person_enum 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq8 (person_enum person_enum) Bool)

(declare-const dummy8 person_enum)

(declare-datatypes ((person_enum__ref 0))
(((person_enum__refqtmk (person_enum__content person_enum)))))
(define-fun person_enum__ref_person_enum__content__projection ((a person_enum__ref)) person_enum 
  (person_enum__content a))

(declare-fun to_rep3 (person_enum) Int)

(declare-fun of_rep3 (Int) person_enum)

;; inversion_axiom
  (assert
  (forall ((x person_enum))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x person_enum)) (! (in_range4
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__c3900060__alert_type__arrival_time2 us_rep)(rec__c3900060__alert_type__display_on2 device_enum)(rec__c3900062__medium_alert_type__action_officer person_enum)(rec__c3900061__low_alert_type__level1 integer)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__c3900060__alert_type__arrival_time__3__projection ((a us_split_fields4)) us_rep 
  (rec__c3900060__alert_type__arrival_time2 a))

(define-fun us_split_fields_rec__c3900060__alert_type__display_on__3__projection ((a us_split_fields4)) device_enum 
  (rec__c3900060__alert_type__display_on2 a))

(define-fun us_split_fields_rec__c3900062__medium_alert_type__action_officer__projection ((a us_split_fields4)) person_enum 
  (rec__c3900062__medium_alert_type__action_officer a))

(define-fun us_split_fields_rec__c3900061__low_alert_type__level__2__projection ((a us_split_fields4)) integer 
  (rec__c3900061__low_alert_type__level1 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep3 0))
(((us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep3)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep3)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (person_enum integer us_private) us_private)

(declare-fun extract__c3900062__medium_alert_type__action_officer (us_private) person_enum)

;; extract__c3900062__medium_alert_type__action_officer__conv
  (assert
  (forall ((c3900062__medium_alert_type__action_officer person_enum))
  (forall ((c3900061__low_alert_type__level integer))
  (forall ((rec__ext__3 us_private))
  (= (extract__c3900062__medium_alert_type__action_officer
     (hide_ext__1 c3900062__medium_alert_type__action_officer
     c3900061__low_alert_type__level rec__ext__3)) c3900062__medium_alert_type__action_officer)))))

;; extract__c3900061__low_alert_type__level__conv
  (assert
  (forall ((c3900062__medium_alert_type__action_officer person_enum))
  (forall ((c3900061__low_alert_type__level integer))
  (forall ((rec__ext__3 us_private))
  (= (extract__c3900061__low_alert_type__level
     (hide_ext__1 c3900062__medium_alert_type__action_officer
     c3900061__low_alert_type__level rec__ext__3)) c3900061__low_alert_type__level)))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep3)) us_rep1 (us_repqtmk
                                           (us_split_fieldsqtmk
                                           (rec__c3900060__alert_type__arrival_time2
                                           (us_split_fields5 a))
                                           (rec__c3900060__alert_type__display_on2
                                           (us_split_fields5 a))
                                           (hide_ext__1
                                           (rec__c3900062__medium_alert_type__action_officer
                                           (us_split_fields5 a))
                                           (rec__c3900061__low_alert_type__level1
                                           (us_split_fields5 a))
                                           (rec__ext__2 (us_split_fields5 a))))
                                           (attr__tag2 a)))

(define-fun of_base1 ((r us_rep1)) us_rep3 (us_repqtmk2
                                           (us_split_fieldsqtmk2
                                           (rec__c3900060__alert_type__arrival_time
                                           (us_split_fields1 r))
                                           (rec__c3900060__alert_type__display_on
                                           (us_split_fields1 r))
                                           (extract__c3900062__medium_alert_type__action_officer
                                           (rec__ext__ (us_split_fields1 r)))
                                           (extract__c3900061__low_alert_type__level
                                           (rec__ext__ (us_split_fields1 r)))
                                           (extract__ext__1
                                           (rec__ext__ (us_split_fields1 r))))
                                           (attr__tag r)))

(define-fun bool_eq5 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (bool_eq2
                            (rec__c3900060__alert_type__arrival_time2
                            (us_split_fields5 a))
                            (rec__c3900060__alert_type__arrival_time2
                            (us_split_fields5 b))) true)
                         (= (to_rep2
                            (rec__c3900060__alert_type__display_on2
                            (us_split_fields5 a))) (to_rep2
                                                   (rec__c3900060__alert_type__display_on2
                                                   (us_split_fields5 b)))))
                         (and
                         (= (to_rep3
                            (rec__c3900062__medium_alert_type__action_officer
                            (us_split_fields5 a))) (to_rep3
                                                   (rec__c3900062__medium_alert_type__action_officer
                                                   (us_split_fields5 b))))
                         (= (to_rep1
                            (rec__c3900061__low_alert_type__level1
                            (us_split_fields5 a))) (to_rep1
                                                   (rec__c3900061__low_alert_type__level1
                                                   (us_split_fields5 b))))))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const c3900060__alert_type__arrival_time__first__bit2 Int)

(declare-const c3900060__alert_type__arrival_time__last__bit2 Int)

(declare-const c3900060__alert_type__arrival_time__position2 Int)

;; c3900060__alert_type__arrival_time__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__first__bit2))

;; c3900060__alert_type__arrival_time__last__bit_axiom
  (assert
  (< c3900060__alert_type__arrival_time__first__bit2 c3900060__alert_type__arrival_time__last__bit2))

;; c3900060__alert_type__arrival_time__position_axiom
  (assert (<= 0 c3900060__alert_type__arrival_time__position2))

(declare-const c3900060__alert_type__display_on__first__bit2 Int)

(declare-const c3900060__alert_type__display_on__last__bit2 Int)

(declare-const c3900060__alert_type__display_on__position2 Int)

;; c3900060__alert_type__display_on__first__bit_axiom
  (assert (<= 0 c3900060__alert_type__display_on__first__bit2))

;; c3900060__alert_type__display_on__last__bit_axiom
  (assert
  (< c3900060__alert_type__display_on__first__bit2 c3900060__alert_type__display_on__last__bit2))

;; c3900060__alert_type__display_on__position_axiom
  (assert (<= 0 c3900060__alert_type__display_on__position2))

(declare-const c3900062__medium_alert_type__action_officer__first__bit Int)

(declare-const c3900062__medium_alert_type__action_officer__last__bit Int)

(declare-const c3900062__medium_alert_type__action_officer__position Int)

;; c3900062__medium_alert_type__action_officer__first__bit_axiom
  (assert (<= 0 c3900062__medium_alert_type__action_officer__first__bit))

;; c3900062__medium_alert_type__action_officer__last__bit_axiom
  (assert
  (< c3900062__medium_alert_type__action_officer__first__bit c3900062__medium_alert_type__action_officer__last__bit))

;; c3900062__medium_alert_type__action_officer__position_axiom
  (assert (<= 0 c3900062__medium_alert_type__action_officer__position))

(declare-const c3900061__low_alert_type__level__first__bit1 Int)

(declare-const c3900061__low_alert_type__level__last__bit1 Int)

(declare-const c3900061__low_alert_type__level__position1 Int)

;; c3900061__low_alert_type__level__first__bit_axiom
  (assert (<= 0 c3900061__low_alert_type__level__first__bit1))

;; c3900061__low_alert_type__level__last__bit_axiom
  (assert
  (< c3900061__low_alert_type__level__first__bit1 c3900061__low_alert_type__level__last__bit1))

;; c3900061__low_alert_type__level__position_axiom
  (assert (<= 0 c3900061__low_alert_type__level__position1))

(declare-fun user_eq9 (us_rep3 us_rep3) Bool)

(declare-const dummy9 us_rep3)

(declare-datatypes ((medium_alert_type__ref 0))
(((medium_alert_type__refqtmk (medium_alert_type__content us_rep3)))))
(define-fun medium_alert_type__ref_medium_alert_type__content__projection ((a medium_alert_type__ref)) us_rep3 
  (medium_alert_type__content a))

(declare-const medium_alarm__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const default_time us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption ((temp___expr_258 us_rep3)
  (temp___skip_top_level_259 Bool)) Bool (and
                                         (= (attr__tag2 temp___expr_258) 
                                         us_tag2)
                                         (and
                                         (and
                                         (= (rec__c3900060__alert_type__arrival_time2
                                            (us_split_fields5
                                            temp___expr_258)) default_time)
                                         (= (to_rep2
                                            (rec__c3900060__alert_type__display_on2
                                            (us_split_fields5
                                            temp___expr_258))) 0))
                                         (and
                                         (= (to_rep3
                                            (rec__c3900062__medium_alert_type__action_officer
                                            (us_split_fields5
                                            temp___expr_258))) 0)
                                         (= (to_rep1
                                            (rec__c3900061__low_alert_type__level1
                                            (us_split_fields5
                                            temp___expr_258))) 0)))))

(define-fun in_range5 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Bool)

(declare-fun initial_values_okay (us_rep3) Bool)

(declare-fun initial_values_okay__function_guard (Bool us_rep3) Bool)

(declare-fun initial_values_okay1 (Int us_rep3) Bool)

(declare-fun initial_values_okay__function_guard1 (Bool Int us_rep3) Bool)

;; initial_values_okay__post_axiom
  (assert true)

;; initial_values_okay__post__dispatch_axiom
  (assert true)

;; c3900062__medium_alert_type__compat_axiom
  (assert
  (forall ((ma us_rep3))
  (! (=> (initial_values_okay__function_guard1
     (initial_values_okay1 us_tag2 ma) us_tag2 ma)
     (and
     (forall ((ma1 us_rep3)) (initial_values_okay__function_guard
     (initial_values_okay ma1) ma1))
     (= (ite (initial_values_okay ma) 1 0) (ite (initial_values_okay1 
                                                us_tag2 ma) 1 0)))) :pattern (
  (initial_values_okay1 us_tag2 ma)) )))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq10 (natural natural) Bool)

(declare-const dummy10 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun to_rep4 ((x natural)) Int (naturalqtint x))

(declare-fun of_rep4 (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-datatypes ((map__ref1 0))
(((map__refqtmk1 (map__content1 (Array Int natural))))))
(declare-fun slide1 ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(define-fun bool_eq6 ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_157 Int))
                           (=>
                           (and (<= a__first temp___idx_157)
                           (<= temp___idx_157 a__last))
                           (= (to_rep4 (select a temp___idx_157)) (to_rep4
                                                                  (select b (+ (- b__first a__first) temp___idx_157)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq6 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_157 Int))
  (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last))
  (= (to_rep4 (select a temp___idx_157)) (to_rep4
                                         (select b (+ (- b__first a__first) temp___idx_157)))))))))))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-fun handle__specific_post (Int us_split_fields4 Int
  (Array Int natural) us_split_fields4 (Array Int natural)) Bool)

;; c3900062__medium_alert_type__compat_axiom
  (assert true)

(declare-fun bad_final_values (us_rep3) Bool)

(declare-fun bad_final_values__function_guard (Bool us_rep3) Bool)

(declare-fun bad_final_values1 (Int us_rep3) Bool)

(declare-fun bad_final_values__function_guard1 (Bool Int us_rep3) Bool)

;; bad_final_values__post_axiom
  (assert true)

;; bad_final_values__post__dispatch_axiom
  (assert true)

;; c3900062__medium_alert_type__compat_axiom
  (assert
  (forall ((ma us_rep3))
  (! (=> (bad_final_values__function_guard1 (bad_final_values1 us_tag2 ma)
     us_tag2 ma)
     (and
     (forall ((ma1 us_rep3)) (bad_final_values__function_guard
     (bad_final_values ma1) ma1))
     (= (ite (bad_final_values ma) 1 0) (ite (bad_final_values1 us_tag2 ma) 1 0)))) :pattern (
  (bad_final_values1 us_tag2 ma)) )))

(declare-sort t5b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq11 (t5b t5b) Bool)

(declare-const dummy11 t5b)

(declare-datatypes ((t5b__ref 0))
(((t5b__refqtmk (t5b__content t5b)))))
(define-fun t5b__ref_t5b__content__projection ((a t5b__ref)) t5b (t5b__content
                                                                 a))

(declare-fun temp___String_Literal_309 (tuple0) (Array Int character))

;; temp___String_Literal_309__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 2)) 51))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 3)) 57)
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 4)) 48))
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 5)) 48))
     (and
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 6)) 48)
     (= (to_rep (select (temp___String_Literal_309 us_void_param) 7)) 54)))) :pattern (
  (temp___String_Literal_309 us_void_param)) )))

(declare-fun temp___String_Literal_310 (tuple0) (Array Int character))

;; temp___String_Literal_310__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 1)) 80)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 2)) 114))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 3)) 105)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 4)) 109))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 5)) 105))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 6)) 116)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 7)) 105))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 8)) 118)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 9)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 11)) 111))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 12)) 112)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 13)) 101))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 14)) 114)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 15)) 97))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 16)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 17)) 105)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 18)) 111))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 19)) 110)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 20)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 21)) 105))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 22)) 110))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 23)) 104)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 24)) 101)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 25)) 114)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 26)) 105))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 27)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 28)) 97)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 29)) 110))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 30)) 99)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 31)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 33)) 98))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 34)) 121)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 35)) 32))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 36)) 116)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 37)) 121))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 38)) 112))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 39)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 40)) 32)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 41)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 42)) 120))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 43)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 44)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 45)) 110))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 46)) 115)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 47)) 105))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 48)) 111))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 49)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 50)) 115))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 51)) 58)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 52)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 53)) 97))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 54)) 108))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 55)) 108)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 56)) 32))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 57)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 58)) 120))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 59)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 60)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 61)) 110))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 62)) 115)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 63)) 105)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 64)) 111))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 65)) 110))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 66)) 115)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 67)) 32)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 68)) 100)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 69)) 101))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 70)) 99))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 71)) 108)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 72)) 97))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 73)) 114)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 74)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 75)) 100))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 76)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 77)) 105)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 78)) 110))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 79)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 80)) 100))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 81)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 82)) 102)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 83)) 102)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 84)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 85)) 114))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 86)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 87)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 88)) 116)))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 89)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 90)) 112))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 91)) 97))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 92)) 99)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 93)) 107))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 94)) 97)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 95)) 103)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 96)) 101))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 97)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 98)) 59)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 99)) 32))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 100)) 114)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 101)) 111))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 102)) 111))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 103)) 116)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 104)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 105)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 106)) 121)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 107)) 112))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 108)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 109)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 110)) 97)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 111)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 112)) 100))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 113)) 32))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 114)) 49)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 115)) 115))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 116)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 117)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 118)) 101))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 119)) 120))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 120)) 116)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 121)) 101))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 122)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 123)) 115))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 124)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 125)) 111)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 126)) 110)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 127)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 128)) 97))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 129)) 114))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 130)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 131)) 32))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 132)) 112)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 133)) 114))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 134)) 105))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 135)) 118)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 136)) 97))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 137)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 138)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 139)) 44))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 140)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 141)) 50)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 142)) 110))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 143)) 100)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 144)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 145)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 146)) 120)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 147)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 148)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 149)) 110))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 150)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 151)) 105)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 152)) 111)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 153)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 154)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 155)) 105))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 156)) 115)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 157)) 32))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 158)) 114)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 159)) 101)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 160)) 99))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 161)) 111))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 162)) 114)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 163)) 100))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 164)) 32)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 165)) 101))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 166)) 120))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 167)) 116)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 168)) 101)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 169)) 110)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 170)) 115))
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 171)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 172)) 111)
     (= (to_rep (select (temp___String_Literal_310 us_void_param) 173)) 110))))))))) :pattern (
  (temp___String_Literal_310 us_void_param)) )))

(declare-fun temp___String_Literal_311 (tuple0) (Array Int character))

;; temp___String_Literal_311__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 1)) 87)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 2)) 114))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 3)) 111)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 4)) 110))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 5)) 103))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 6)) 32)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 7)) 105)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 8)) 110)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 10)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 11)) 105)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 12)) 97))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 13)) 108)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 15)) 118))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 16)) 97)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 17)) 108)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 18)) 117)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 19)) 101))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 20)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 21)) 32)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 22)) 102)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 23)) 111)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 24)) 114))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 25)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 26)) 77)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 27)) 101)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 28)) 100)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 29)) 105))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 30)) 117))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 31)) 109)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 32)) 95))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 33)) 65)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 34)) 108))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 35)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 36)) 114)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 37)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 38)) 95)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 39)) 84))
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 40)) 121))
     (and
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 41)) 112)
     (= (to_rep (select (temp___String_Literal_311 us_void_param) 42)) 101))))))) :pattern (
  (temp___String_Literal_311 us_void_param)) )))

(declare-fun temp___String_Literal_312 (tuple0) (Array Int character))

;; temp___String_Literal_312__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 1)) 87)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 2)) 114))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 3)) 111)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 4)) 110))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 5)) 103))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 6)) 32)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 7)) 118))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 8)) 97)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 9)) 108)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 10)) 117))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 11)) 101))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 12)) 115)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 14)) 102))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 15)) 111)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 16)) 114))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 17)) 32))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 18)) 77)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 19)) 101))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 20)) 100)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 21)) 105)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 22)) 117))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 23)) 109))
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 24)) 95)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 25)) 65)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 26)) 108)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 27)) 101))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 28)) 114))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 29)) 116)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 30)) 95))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 31)) 84)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 32)) 121)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 33)) 112))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 34)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 35)) 32)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 36)) 97))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 37)) 102)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 38)) 116))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 39)) 101))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 40)) 114)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 41)) 32))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 42)) 72)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 43)) 97)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 44)) 110))
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 45)) 100))
     (and
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 46)) 108)
     (= (to_rep (select (temp___String_Literal_312 us_void_param) 47)) 101))))))) :pattern (
  (temp___String_Literal_312 us_void_param)) )))

(declare-fun temp___String_Literal_315 (tuple0) (Array Int character))

;; temp___String_Literal_315__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 1)) 87)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 2)) 114))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 3)) 111)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 4)) 110))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 5)) 103))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 6)) 32)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 7)) 100))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 8)) 105)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 9)) 115)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 10)) 112))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 11)) 108))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 12)) 97)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 13)) 121))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 14)) 32)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 15)) 99))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 16)) 111))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 17)) 117)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 18)) 110)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 19)) 116)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 20)) 115))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 21)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 22)) 97)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 23)) 102)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 24)) 116)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 25)) 101))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 26)) 114))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 27)) 32)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 28)) 77))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 29)) 101)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 30)) 100)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 31)) 105))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 32)) 117))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 33)) 109)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 34)) 95))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 35)) 65)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 36)) 108))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 37)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 38)) 114)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 39)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 40)) 95)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 41)) 84))
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 42)) 121))
     (and
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 43)) 112)
     (= (to_rep (select (temp___String_Literal_315 us_void_param) 44)) 101))))))) :pattern (
  (temp___String_Literal_315 us_void_param)) )))

(declare-fun temp_____aggregate_def_316 (Int Int Int
  Int) (Array Int natural))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range6
                                    temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range1
                                    temp___expr_46)))

(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range2 temp___expr_74)))

(define-fun dynamic_invariant4 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(declare-const rliteral natural)

;; rliteral_axiom
  (assert (= (naturalqtint rliteral) 1))

(declare-const rliteral1 natural)

;; rliteral_axiom
  (assert (= (naturalqtint rliteral1) 0))

;; def_axiom
  (assert
  (forall ((temp___318 Int) (temp___319 Int) (temp___320 Int)
  (temp___321 Int))
  (let ((temp___317 (temp_____aggregate_def_316 temp___318 temp___319
                    temp___320 temp___321)))
  (=>
  (and
  (and (dynamic_invariant1 temp___318 true true true true)
  (dynamic_invariant1 temp___319 true true true true))
  (and (dynamic_invariant1 temp___320 true true true true)
  (dynamic_invariant1 temp___321 true true true true)))
  (and
  (and (= (select temp___317 0) rliteral) (= (select temp___317 1) rliteral))
  (and (= (select temp___317 2) rliteral)
  (= (select temp___317 3) rliteral1)))))))

(declare-fun time_of (Int Int Int Int) us_rep)

(declare-fun time_of__function_guard (us_rep Int Int Int Int) Bool)

;; default_time__def_axiom
  (assert (= default_time (time_of 1901 1 1 0)))

(define-fun dynamic_invariant5 ((temp___expr_201 Int)
  (temp___is_init_197 Bool) (temp___skip_constant_198 Bool)
  (temp___do_toplevel_199 Bool)
  (temp___do_typ_inv_200 Bool)) Bool (=>
                                     (or (= temp___is_init_197 true)
                                     (<= 0 3)) (in_range3 temp___expr_201)))

(define-fun default_initial_assumption1 ((temp___expr_237 us_rep1)
  (temp___skip_top_level_238 Bool)) Bool (and
                                         (= (attr__tag temp___expr_237) 
                                         us_tag)
                                         (and
                                         (= (rec__c3900060__alert_type__arrival_time
                                            (us_split_fields1
                                            temp___expr_237)) default_time)
                                         (= (to_rep2
                                            (rec__c3900060__alert_type__display_on
                                            (us_split_fields1
                                            temp___expr_237))) 0))))

(declare-sort year_number 0)

(declare-fun year_numberqtint (year_number) Int)

;; year_number'axiom
  (assert
  (forall ((i year_number))
  (and (<= 1901 (year_numberqtint i)) (<= (year_numberqtint i) 2399))))

(define-fun in_range8 ((x Int)) Bool (and (<= 1901 x) (<= x 2399)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq12 (year_number year_number) Bool)

(declare-const dummy12 year_number)

(declare-datatypes ((year_number__ref 0))
(((year_number__refqtmk (year_number__content year_number)))))
(define-fun year_number__ref_year_number__content__projection ((a year_number__ref)) year_number 
  (year_number__content a))

(define-fun dynamic_invariant6 ((temp___expr_208 Int)
  (temp___is_init_204 Bool) (temp___skip_constant_205 Bool)
  (temp___do_toplevel_206 Bool)
  (temp___do_typ_inv_207 Bool)) Bool (=>
                                     (or (= temp___is_init_204 true)
                                     (<= 1901 2399)) (in_range8
                                     temp___expr_208)))

(declare-sort month_number 0)

(declare-fun month_numberqtint (month_number) Int)

;; month_number'axiom
  (assert
  (forall ((i month_number))
  (and (<= 1 (month_numberqtint i)) (<= (month_numberqtint i) 12))))

(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq13 (month_number month_number) Bool)

(declare-const dummy13 month_number)

(declare-datatypes ((month_number__ref 0))
(((month_number__refqtmk (month_number__content month_number)))))
(define-fun month_number__ref_month_number__content__projection ((a month_number__ref)) month_number 
  (month_number__content a))

(define-fun dynamic_invariant7 ((temp___expr_215 Int)
  (temp___is_init_211 Bool) (temp___skip_constant_212 Bool)
  (temp___do_toplevel_213 Bool)
  (temp___do_typ_inv_214 Bool)) Bool (=>
                                     (or (= temp___is_init_211 true)
                                     (<= 1 12)) (in_range9 temp___expr_215)))

(declare-sort day_number 0)

(declare-fun day_numberqtint (day_number) Int)

;; day_number'axiom
  (assert
  (forall ((i day_number))
  (and (<= 1 (day_numberqtint i)) (<= (day_numberqtint i) 31))))

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq14 (day_number day_number) Bool)

(declare-const dummy14 day_number)

(declare-datatypes ((day_number__ref 0))
(((day_number__refqtmk (day_number__content day_number)))))
(define-fun day_number__ref_day_number__content__projection ((a day_number__ref)) day_number 
  (day_number__content a))

(define-fun dynamic_invariant8 ((temp___expr_222 Int)
  (temp___is_init_218 Bool) (temp___skip_constant_219 Bool)
  (temp___do_toplevel_220 Bool)
  (temp___do_typ_inv_221 Bool)) Bool (=>
                                     (or (= temp___is_init_218 true)
                                     (<= 1 31)) (in_range10 temp___expr_222)))

(declare-sort day_duration 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 86400000000000)))

(declare-const dummy15 day_duration)

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq15 (day_duration day_duration) Bool)

(declare-datatypes ((day_duration__ref 0))
(((day_duration__refqtmk (day_duration__content day_duration)))))
(define-fun day_duration__ref_day_duration__content__projection ((a day_duration__ref)) day_duration 
  (day_duration__content a))

(define-fun dynamic_invariant9 ((temp___expr_229 Int)
  (temp___is_init_225 Bool) (temp___skip_constant_226 Bool)
  (temp___do_toplevel_227 Bool)
  (temp___do_typ_inv_228 Bool)) Bool (=>
                                     (or (= temp___is_init_225 true)
                                     (<= 0 86400000000000)) (in_range11
                                     temp___expr_229)))

;; time_of__post_axiom
  (assert true)

(define-fun dynamic_invariant10 ((temp___expr_250 Int)
  (temp___is_init_246 Bool) (temp___skip_constant_247 Bool)
  (temp___do_toplevel_248 Bool)
  (temp___do_typ_inv_249 Bool)) Bool (=>
                                     (or (= temp___is_init_246 true)
                                     (<= 0 3)) (in_range4 temp___expr_250)))

(define-fun default_initial_assumption2 ((temp___expr_244 us_rep2)
  (temp___skip_top_level_245 Bool)) Bool (and
                                         (= (attr__tag1 temp___expr_244) 
                                         us_tag1)
                                         (and
                                         (and
                                         (= (rec__c3900060__alert_type__arrival_time1
                                            (us_split_fields3
                                            temp___expr_244)) default_time)
                                         (= (to_rep2
                                            (rec__c3900060__alert_type__display_on1
                                            (us_split_fields3
                                            temp___expr_244))) 0))
                                         (= (to_rep1
                                            (rec__c3900061__low_alert_type__level
                                            (us_split_fields3
                                            temp___expr_244))) 0))))

(assert
;; defqtvc
 ;; File "c3900063.adb", line 94, characters 0-0
  (not
  (forall ((medium_alarm__split_fields us_split_fields4) (spark__branch Bool)
  (display_count_for (Array Int natural)) (spark__branch1 Bool))
  (=> (default_initial_assumption
  (us_repqtmk2 medium_alarm__split_fields medium_alarm__attr__tag) false)
  (=>
  (exists ((spark__branch2 Bool))
  (and
  (let ((o (us_repqtmk2 medium_alarm__split_fields medium_alarm__attr__tag)))
  (let ((o1 (initial_values_okay o)))
  (and (initial_values_okay__function_guard o1 o)
  (= spark__branch2 (ite (= o1 true) false true)))))
  (exists ((medium_alarm__split_fields1 us_split_fields4))
  (let ((o (us_repqtmk2 medium_alarm__split_fields1 medium_alarm__attr__tag)))
  (let ((o1 (bad_final_values o)))
  (and (bad_final_values__function_guard o1 o) (= spark__branch o1)))))))
  (=>
  (= spark__branch1 (ite (= (bool_eq6 display_count_for 0 3
                            (temp_____aggregate_def_316 1 1 1 0) 0 3) true)
                    false true))
  (not (= spark__branch1 true))))))))
(check-sat)
