;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int Bool))))))
(declare-fun slide ((Array Int Bool) Int Int) (Array Int Bool))

;; slide_eq
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int Bool)) (a__first Int) (a__last Int)
  (b (Array Int Bool)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (ite (select a temp___idx_154) 1 0) (ite (select b (+ (- b__first a__first) temp___idx_154)) 1 0)))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (ite (select a temp___idx_154) 1 0) (ite (select b (+ (- b__first a__first) temp___idx_154)) 1 0)))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun always_set_until_now (Int (Array Int Bool)) Bool)

(declare-fun always_set_until_now__function_guard (Bool Int
  (Array Int Bool)) Bool)

(declare-sort past_time 0)

(declare-fun past_timeqtint (past_time) Int)

;; past_time'axiom
  (assert
  (forall ((i past_time))
  (and (<= 0 (past_timeqtint i)) (<= (past_timeqtint i) 50))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 50)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (past_time past_time) Bool)

(declare-const dummy1 past_time)

(declare-datatypes ((past_time__ref 0))
(((past_time__refqtmk (past_time__content past_time)))))
(define-fun past_time__ref_past_time__content__projection ((a past_time__ref)) past_time 
  (past_time__content a))

(define-fun dynamic_invariant1 ((temp___expr_161 Int)
  (temp___is_init_157 Bool) (temp___skip_constant_158 Bool)
  (temp___do_toplevel_159 Bool)
  (temp___do_typ_inv_160 Bool)) Bool (=>
                                     (or (= temp___is_init_157 true)
                                     (<= 0 50)) (in_range2 temp___expr_161)))

;; always_set_until_now__post_axiom
  (assert true)

;; always_set_until_now__def_axiom
  (assert
  (forall ((from Int))
  (forall ((time_triggered_response__history__idle_history (Array Int Bool)))
  (! (=
     (= (always_set_until_now from
        time_triggered_response__history__idle_history) true)
     (forall ((t Int))
     (=> (and (<= 0 t) (<= t from))
     (= (select time_triggered_response__history__idle_history t) true)))) :pattern (
  (always_set_until_now from time_triggered_response__history__idle_history)) ))))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun valid (Int (Array Int Bool)) Bool)

(declare-fun valid__function_guard (Bool Int (Array Int Bool)) Bool)

(define-fun min ((x Int) (y Int)) Int (ite (<= x y) x y))

(define-fun max ((x Int) (y Int)) Int (ite (<= x y) y x))

;; Min_r
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (min x y) y))))

;; Max_l
  (assert (forall ((x Int) (y Int)) (=> (<= y x) (= (max x y) x))))

;; Min_comm
  (assert (forall ((x Int) (y Int)) (= (min x y) (min y x))))

;; Max_comm
  (assert (forall ((x Int) (y Int)) (= (max x y) (max y x))))

;; Min_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (min (min x y) z) (min x (min y z)))))

;; Max_assoc
  (assert
  (forall ((x Int) (y Int) (z Int)) (= (max (max x y) z) (max x (max y z)))))

;; valid__post_axiom
  (assert true)

;; valid__def_axiom
  (assert
  (forall ((time_triggered_response__time_idle Int))
  (forall ((time_triggered_response__history__idle_history (Array Int Bool)))
  (! (and
     (forall ((time_triggered_response__time_idle1 Int)
     (time_triggered_response__history__idle_history1 (Array Int Bool)))
     (always_set_until_now__function_guard
     (always_set_until_now (min 50 (- time_triggered_response__time_idle1 1))
     time_triggered_response__history__idle_history1)
     (min 50 (- time_triggered_response__time_idle1 1))
     time_triggered_response__history__idle_history1))
     (=
     (= (valid time_triggered_response__time_idle
        time_triggered_response__history__idle_history) true)
     (and
     (=> (not (= time_triggered_response__time_idle 0))
     (= (always_set_until_now
        (min 50 (- time_triggered_response__time_idle 1))
        time_triggered_response__history__idle_history) true))
     (=> (<= time_triggered_response__time_idle 50)
     (not
     (= (select time_triggered_response__history__idle_history time_triggered_response__time_idle) true)))))) :pattern (
  (valid time_triggered_response__time_idle
  time_triggered_response__history__idle_history)) ))))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(assert
;; defqtvc
 ;; File "time_triggered_response.ads", line 18, characters 0-0
  (not
  (forall ((idle_history (Array Int Bool)) (time_idle Int))
  (=> (dynamic_invariant time_idle true false true true)
  (=>
  (forall ((idle_history1 (Array Int Bool)) (time_idle1 Int))
  (valid__function_guard (valid time_idle1 idle_history1) time_idle1
  idle_history1))
  (=> (= (valid time_idle idle_history) true)
  (=>
  (forall ((idle_history1 (Array Int Bool)))
  (always_set_until_now__function_guard
  (always_set_until_now 9 idle_history1) 9 idle_history1))
  (forall ((status Bool))
  (=>
  (exists ((spark__branch Bool))
  (and (= spark__branch (ite (<= 10 time_idle) true false))
  (ite (= spark__branch true) (= status (distinct 1 0))
  (= status (distinct 0 0)))))
  (=> (= (always_set_until_now 9 idle_history) true) (= status true)))))))))))
(check-sat)
