;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun get (Bool) Bool)

(declare-fun get__function_guard (Bool Bool) Bool)

;; get__post_axiom
  (assert
  (forall ((proc__nested__x Bool))
  (! (let ((result (get proc__nested__x)))
     (=> (get__function_guard result proc__nested__x) (= result true))) :pattern (
  (get proc__nested__x)) )))

;; get__def_axiom
  (assert
  (forall ((proc__nested__x Bool))
  (! (= (= (get proc__nested__x) true) (= proc__nested__x true)) :pattern (
  (get proc__nested__x)) )))

(assert
;; defqtvc
 ;; File "proc.adb", line 1, characters 0-0
  (not
  (forall ((x Bool))
  (=> (forall ((x1 Bool)) (get__function_guard (get x1) x1))
  (= (get x) true)))))
(check-sat)
