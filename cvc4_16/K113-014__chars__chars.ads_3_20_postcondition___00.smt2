(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort character 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (character character) Bool)

(declare-const dummy character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range temp___expr_74)))

(declare-sort wide_character 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 65535)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (wide_character wide_character) Bool)

(declare-const dummy1 wide_character)

(declare-datatypes ((wide_character__ref 0))
(((wide_character__refqtmk (wide_character__content wide_character)))))
(define-fun wide_character__ref_wide_character__content__projection ((a wide_character__ref)) wide_character 
  (wide_character__content a))

(define-fun dynamic_invariant1 ((temp___expr_81 Int) (temp___is_init_77 Bool)
  (temp___skip_constant_78 Bool) (temp___do_toplevel_79 Bool)
  (temp___do_typ_inv_80 Bool)) Bool (=>
                                    (or (= temp___is_init_77 true)
                                    (<= 0 65535)) (in_range1 temp___expr_81)))

(declare-sort wide_wide_character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (wide_wide_character wide_wide_character) Bool)

(declare-const dummy2 wide_wide_character)

(declare-datatypes ((wide_wide_character__ref 0))
(((wide_wide_character__refqtmk
  (wide_wide_character__content wide_wide_character)))))
(define-fun wide_wide_character__ref_wide_wide_character__content__projection ((a wide_wide_character__ref)) wide_wide_character 
  (wide_wide_character__content a))

(define-fun dynamic_invariant2 ((temp___expr_88 Int) (temp___is_init_84 Bool)
  (temp___skip_constant_85 Bool) (temp___do_toplevel_86 Bool)
  (temp___do_typ_inv_87 Bool)) Bool (=>
                                    (or (= temp___is_init_84 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_88)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(assert
;; defqtvc
 ;; File "chars.ads", line 2, characters 0-0
  (not
  (forall ((x Int) (y Int) (wx Int) (wy Int) (wwx Int) (wwy Int) (z Bool)
  (wz Bool) (wwz Bool) (f Int) (wf Int) (wwf Int) (chars__doit__result Bool))
  (=> (= x 65)
  (=> (dynamic_invariant x true false true true)
  (=> (= y 97)
  (=> (dynamic_invariant y true false true true)
  (=> (= wx 65)
  (=> (dynamic_invariant1 wx true false true true)
  (=> (= wy 97)
  (=> (dynamic_invariant1 wy true false true true)
  (=> (= wwx 65)
  (=> (dynamic_invariant2 wwx true false true true)
  (=> (= wwy 97)
  (=> (dynamic_invariant2 wwy true false true true)
  (=> (= z (ite (< x y) true false))
  (=> (= wz (ite (< wx wy) true false))
  (=> (= wwz (ite (< wwx wwy) true false))
  (=> (= f 0)
  (=> (dynamic_invariant f true false true true)
  (=> (= wf 0)
  (=> (dynamic_invariant1 wf true false true true)
  (=> (= wwf 0)
  (=> (dynamic_invariant2 wwf true false true true)
  (=>
  (= chars__doit__result (ite (= (ite (= z true) wz false) true) wwz false))
  (= chars__doit__result true))))))))))))))))))))))))))
(check-sat)
