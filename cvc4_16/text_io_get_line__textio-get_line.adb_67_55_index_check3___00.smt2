;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun abs1 ((x Int)) Int (ite (<= 0 x) x (- x)))

;; Abs_le
  (assert
  (forall ((x Int) (y Int)) (= (<= (abs1 x) y) (and (<= (- y) x) (<= x y)))))

;; Abs_pos
  (assert (forall ((x Int)) (<= 0 (abs1 x))))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0))
  (and (< (- (abs1 y)) (mod1 x y)) (< (mod1 x y) (abs1 y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs1 (* (div1 x y) y)) (abs1 x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

;; Div_unique
  (assert
  (forall ((x Int) (y Int) (q Int))
  (=> (< 0 y) (=> (and (<= (* q y) x) (< x (+ (* q y) y))) (= (div x y) q)))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div x y)) (<= (div x y) x)))))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div x y) 0))))

;; Div_inf_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (< 0 x) (<= x y)) (= (div (- x) y) (- 1)))))

;; Mod_0
  (assert (forall ((y Int)) (=> (not (= y 0)) (= (mod 0 y) 0))))

;; Div_1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (div 1 y) 0))))

;; Div_minus1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (div (- 1) y) (- 1)))))

;; Mod_1_left
  (assert (forall ((y Int)) (=> (< 1 y) (= (mod 1 y) 1))))

;; Mod_minus1_left
  (assert
  (forall ((y Int))
  (! (=> (< 1 y) (= (mod (- 1) y) (- y 1))) :pattern ((mod (- 1) y)) )))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (< 0 x) (= (div (+ (* x y) z) x) (+ y (div z x)))) :pattern ((div (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (< 0 x) (= (mod (+ (* x y) z) x) (mod z x))) :pattern ((mod (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(declare-sort character 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (character character) Bool)

(declare-const dummy3 character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range4 temp___expr_74)))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range4 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep (select a temp___idx_91)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep (select a temp___idx_91)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ((string____ref 0))
(((string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(define-fun dynamic_invariant3 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(declare-sort file_descr 0)

(declare-fun file_descrqtint (file_descr) Int)

;; file_descr'axiom
  (assert
  (forall ((i file_descr))
  (and (<= (- 2147483648) (file_descrqtint i))
  (<= (file_descrqtint i) 2147483647))))

(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (file_descr file_descr) Bool)

(declare-const dummy5 file_descr)

(declare-datatypes ((file_descr__ref 0))
(((file_descr__refqtmk (file_descr__content file_descr)))))
(define-fun file_descr__ref_file_descr__content__projection ((a file_descr__ref)) file_descr 
  (file_descr__content a))

(define-fun to_rep2 ((x file_descr)) Int (file_descrqtint x))

(declare-fun of_rep2 (Int) file_descr)

;; inversion_axiom
  (assert
  (forall ((x file_descr))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x file_descr)) (! (in_range5
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort count 0)

(declare-fun countqtint (count) Int)

;; count'axiom
  (assert
  (forall ((i count))
  (and (<= 0 (countqtint i)) (<= (countqtint i) 2147483647))))

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (count count) Bool)

(declare-const dummy6 count)

(declare-datatypes ((count__ref 0))
(((count__refqtmk (count__content count)))))
(define-fun count__ref_count__content__projection ((a count__ref)) count 
  (count__content a))

(define-fun to_rep3 ((x count)) Int (countqtint x))

(declare-fun of_rep3 (Int) count)

;; inversion_axiom
  (assert
  (forall ((x count))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x count)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__textio__file_type__descr file_descr)(rec__textio__file_type__before_lm Bool)(rec__textio__file_type__before_lm_pm Bool)(rec__textio__file_type__col count)(rec__textio__file_type__line count)(rec__textio__file_type__page count)(rec__textio__file_type__is_regular_file Bool)))))
(define-fun us_split_fields_rec__textio__file_type__descr__projection ((a us_split_fields)) file_descr 
  (rec__textio__file_type__descr a))

(define-fun us_split_fields_rec__textio__file_type__before_lm__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__before_lm a))

(define-fun us_split_fields_rec__textio__file_type__before_lm_pm__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__before_lm_pm a))

(define-fun us_split_fields_rec__textio__file_type__col__projection ((a us_split_fields)) count 
  (rec__textio__file_type__col a))

(define-fun us_split_fields_rec__textio__file_type__line__projection ((a us_split_fields)) count 
  (rec__textio__file_type__line a))

(define-fun us_split_fields_rec__textio__file_type__page__projection ((a us_split_fields)) count 
  (rec__textio__file_type__page a))

(define-fun us_split_fields_rec__textio__file_type__is_regular_file__projection ((a us_split_fields)) Bool 
  (rec__textio__file_type__is_regular_file a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep2
                           (rec__textio__file_type__descr
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__textio__file_type__descr
                                                  (us_split_fields1 b))))
                        (= (ite (rec__textio__file_type__before_lm
                                (us_split_fields1 a)) 1 0) (ite (rec__textio__file_type__before_lm
                                                                (us_split_fields1
                                                                b)) 1 0)))
                        (and
                        (and
                        (and
                        (= (ite (rec__textio__file_type__before_lm_pm
                                (us_split_fields1 a)) 1 0) (ite (rec__textio__file_type__before_lm_pm
                                                                (us_split_fields1
                                                                b)) 1 0))
                        (= (to_rep3
                           (rec__textio__file_type__col (us_split_fields1 a))) 
                        (to_rep3
                        (rec__textio__file_type__col (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__textio__file_type__line
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__textio__file_type__line
                                                  (us_split_fields1 b)))))
                        (and
                        (= (to_rep3
                           (rec__textio__file_type__page
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__textio__file_type__page
                                                  (us_split_fields1 b))))
                        (= (ite (rec__textio__file_type__is_regular_file
                                (us_split_fields1 a)) 1 0) (ite (rec__textio__file_type__is_regular_file
                                                                (us_split_fields1
                                                                b)) 1 0)))))
                   true false))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const textio__file_type__descr__first__bit Int)

(declare-const textio__file_type__descr__last__bit Int)

(declare-const textio__file_type__descr__position Int)

;; textio__file_type__descr__first__bit_axiom
  (assert (<= 0 textio__file_type__descr__first__bit))

;; textio__file_type__descr__last__bit_axiom
  (assert
  (< textio__file_type__descr__first__bit textio__file_type__descr__last__bit))

;; textio__file_type__descr__position_axiom
  (assert (<= 0 textio__file_type__descr__position))

(declare-const textio__file_type__before_lm__first__bit Int)

(declare-const textio__file_type__before_lm__last__bit Int)

(declare-const textio__file_type__before_lm__position Int)

;; textio__file_type__before_lm__first__bit_axiom
  (assert (<= 0 textio__file_type__before_lm__first__bit))

;; textio__file_type__before_lm__last__bit_axiom
  (assert
  (< textio__file_type__before_lm__first__bit textio__file_type__before_lm__last__bit))

;; textio__file_type__before_lm__position_axiom
  (assert (<= 0 textio__file_type__before_lm__position))

(declare-const textio__file_type__before_lm_pm__first__bit Int)

(declare-const textio__file_type__before_lm_pm__last__bit Int)

(declare-const textio__file_type__before_lm_pm__position Int)

;; textio__file_type__before_lm_pm__first__bit_axiom
  (assert (<= 0 textio__file_type__before_lm_pm__first__bit))

;; textio__file_type__before_lm_pm__last__bit_axiom
  (assert
  (< textio__file_type__before_lm_pm__first__bit textio__file_type__before_lm_pm__last__bit))

;; textio__file_type__before_lm_pm__position_axiom
  (assert (<= 0 textio__file_type__before_lm_pm__position))

(declare-const textio__file_type__col__first__bit Int)

(declare-const textio__file_type__col__last__bit Int)

(declare-const textio__file_type__col__position Int)

;; textio__file_type__col__first__bit_axiom
  (assert (<= 0 textio__file_type__col__first__bit))

;; textio__file_type__col__last__bit_axiom
  (assert
  (< textio__file_type__col__first__bit textio__file_type__col__last__bit))

;; textio__file_type__col__position_axiom
  (assert (<= 0 textio__file_type__col__position))

(declare-const textio__file_type__line__first__bit Int)

(declare-const textio__file_type__line__last__bit Int)

(declare-const textio__file_type__line__position Int)

;; textio__file_type__line__first__bit_axiom
  (assert (<= 0 textio__file_type__line__first__bit))

;; textio__file_type__line__last__bit_axiom
  (assert
  (< textio__file_type__line__first__bit textio__file_type__line__last__bit))

;; textio__file_type__line__position_axiom
  (assert (<= 0 textio__file_type__line__position))

(declare-const textio__file_type__page__first__bit Int)

(declare-const textio__file_type__page__last__bit Int)

(declare-const textio__file_type__page__position Int)

;; textio__file_type__page__first__bit_axiom
  (assert (<= 0 textio__file_type__page__first__bit))

;; textio__file_type__page__last__bit_axiom
  (assert
  (< textio__file_type__page__first__bit textio__file_type__page__last__bit))

;; textio__file_type__page__position_axiom
  (assert (<= 0 textio__file_type__page__position))

(declare-const textio__file_type__is_regular_file__first__bit Int)

(declare-const textio__file_type__is_regular_file__last__bit Int)

(declare-const textio__file_type__is_regular_file__position Int)

;; textio__file_type__is_regular_file__first__bit_axiom
  (assert (<= 0 textio__file_type__is_regular_file__first__bit))

;; textio__file_type__is_regular_file__last__bit_axiom
  (assert
  (< textio__file_type__is_regular_file__first__bit textio__file_type__is_regular_file__last__bit))

;; textio__file_type__is_regular_file__position_axiom
  (assert (<= 0 textio__file_type__is_regular_file__position))

(declare-fun user_eq7 (us_rep us_rep) Bool)

(declare-const dummy7 us_rep)

(declare-datatypes ((file_type__ref 0))
(((file_type__refqtmk (file_type__content us_rep)))))
(define-fun file_type__ref_file_type__content__projection ((a file_type__ref)) us_rep 
  (file_type__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const item__first integer)

(declare-const item__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const eof Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const eof_ch Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-fun end_of_file (us_rep Int (Array Int character)) Bool)

(declare-fun end_of_file__function_guard (Bool us_rep Int
  (Array Int character)) Bool)

(declare-fun fpeek (us_rep Int (Array Int character)) Int)

(declare-fun fpeek__function_guard (Int us_rep Int
  (Array Int character)) Bool)

;; end_of_file__post_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (dynamic_invariant1 helpers__cur_position true true true true)
     (= (= (end_of_file file helpers__cur_position helpers__the_file) true)
     (= (fpeek file helpers__cur_position helpers__the_file) eof))) :pattern (
  (end_of_file file helpers__cur_position helpers__the_file)) )))))

(declare-fun ferror (Int) Int)

(declare-fun ferror__function_guard (Int Int) Bool)

(define-fun dynamic_invariant4 ((temp___expr_172 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (=>
                                     (or (= temp___is_init_168 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range5 temp___expr_172)))

(declare-sort int__ 0)

(declare-fun int__qtint (int__) Int)

;; int__'axiom
  (assert
  (forall ((i int__))
  (and (<= (- 2147483648) (int__qtint i)) (<= (int__qtint i) 2147483647))))

(define-fun in_range7 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (int__ int__) Bool)

(declare-const dummy8 int__)

(declare-datatypes ((int____ref 0))
(((int____refqtmk (int____content int__)))))
(define-fun int____ref_int____content__2__projection ((a int____ref)) int__ 
  (int____content a))

(define-fun dynamic_invariant5 ((temp___expr_207 Int)
  (temp___is_init_203 Bool) (temp___skip_constant_204 Bool)
  (temp___do_toplevel_205 Bool)
  (temp___do_typ_inv_206 Bool)) Bool (=>
                                     (or (= temp___is_init_203 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range7 temp___expr_207)))

;; ferror__post_axiom
  (assert
  (forall ((stream Int))
  (! (=> (dynamic_invariant4 stream true true true true) (dynamic_invariant5
     (ferror stream) true false true true)) :pattern ((ferror stream)) )))

(define-fun length1 ((x Int) (y Int)) Int (ite (<= x y) (+ (- y x) 1) 0))

(declare-fun has_char_in_string (us_t Int Int) Bool)

(declare-fun has_char_in_string__function_guard (Bool us_t Int Int) Bool)

(declare-fun find_char_in_string (us_t Int Int) Int)

(declare-fun find_char_in_string__function_guard (Int us_t Int Int) Bool)

(declare-fun memchr (us_t Int Int) Int)

(declare-fun memchr__function_guard (Int us_t Int Int) Bool)

;; memchr__post_axiom
  (assert
  (forall ((s us_t))
  (forall ((ch Int) (n Int))
  (! (=>
     (and
     (and
     (and (dynamic_invariant3 s true true true true) (dynamic_invariant2 ch
     true true true true)) (dynamic_invariant n true true true true))
     (<= n (length s)))
     (let ((result (memchr s ch n)))
     (and
     (ite (= (has_char_in_string s ch n) true)
     (= result (find_char_in_string s ch n)) (= result 0)) (dynamic_invariant
     result true false true true)))) :pattern ((memchr s ch n)) ))))

(declare-const n Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-fun no_char_in_slice (Int Int Int (Array Int character)) Bool)

(declare-fun no_char_in_slice__function_guard (Bool Int Int Int
  (Array Int character)) Bool)

;; no_char_in_slice__post_axiom
  (assert true)

;; no_char_in_slice__def_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (= (= (no_char_in_slice ch from to__ helpers__the_file) true)
     (forall ((idx Int))
     (=> (and (<= from idx) (<= idx to__))
     (not (= (to_rep (select helpers__the_file idx)) ch))))) :pattern (
  (no_char_in_slice ch from to__ helpers__the_file)) ))))

(declare-fun find_char_in_slice (Int Int Int (Array Int character)) Int)

(declare-fun find_char_in_slice__function_guard (Int Int Int Int
  (Array Int character)) Bool)

(declare-fun has_char_in_slice (Int Int Int (Array Int character)) Bool)

(declare-fun has_char_in_slice__function_guard (Bool Int Int Int
  (Array Int character)) Bool)

;; find_char_in_slice__post_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and
     (and
     (and (dynamic_invariant2 ch true true true true) (dynamic_invariant1
     from true true true true)) (dynamic_invariant1 to__ true true true
     true)) (= (has_char_in_slice ch from to__ helpers__the_file) true))
     (let ((result (find_char_in_slice ch from to__ helpers__the_file)))
     (and
     (and
     (and (and (<= from result) (<= result to__))
     (= (no_char_in_slice ch from (- result 1) helpers__the_file) true))
     (= (to_rep (select helpers__the_file result)) ch)) (dynamic_invariant1
     result true false true true)))) :pattern ((find_char_in_slice ch from
                                               to__ helpers__the_file)) ))))

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const eof_at_start Bool)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const last_at_start Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const cur_position_at_start Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const item_at_start us_t)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-fun fpeek1 (Int Int (Array Int character)) Int)

(declare-fun fpeek__function_guard1 (Int Int Int (Array Int character)) Bool)

(declare-fun no_char_in_string (us_t Int Int) Bool)

(declare-fun no_char_in_string__function_guard (Bool us_t Int Int) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-sort tTbufSP1 0)

(declare-fun tTbufSP1qtint (tTbufSP1) Int)

;; tTbufSP1'axiom
  (assert
  (forall ((i tTbufSP1))
  (and (<= 1 (tTbufSP1qtint i)) (<= (tTbufSP1qtint i) 80))))

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 80)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (tTbufSP1 tTbufSP1) Bool)

(declare-const dummy9 tTbufSP1)

(declare-datatypes ((tTbufSP1__ref 0))
(((tTbufSP1__refqtmk (tTbufSP1__content tTbufSP1)))))
(define-fun tTbufSP1__ref_tTbufSP1__content__projection ((a tTbufSP1__ref)) tTbufSP1 
  (tTbufSP1__content a))

(declare-fun temp_____aggregate_def_419 (Int) (Array Int character))

(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun dynamic_invariant7 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= 0 2147483647)) (in_range6
                                     temp___expr_179)))

;; fpeek__post_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (dynamic_invariant1 helpers__cur_position true true true true)
     (dynamic_invariant5 (fpeek file helpers__cur_position helpers__the_file)
     true false true true)) :pattern ((fpeek file helpers__cur_position
                                      helpers__the_file)) )))))

;; fpeek__def_axiom
  (assert
  (forall ((file us_rep))
  (forall ((helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=> (dynamic_invariant1 helpers__cur_position true true true true)
     (= (fpeek file helpers__cur_position helpers__the_file) (fpeek1
                                                             (to_rep2
                                                             (rec__textio__file_type__descr
                                                             (us_split_fields1
                                                             file)))
                                                             helpers__cur_position
                                                             helpers__the_file))) :pattern (
  (fpeek file helpers__cur_position helpers__the_file)) )))))

;; eof_ch__def_axiom
  (assert (= eof_ch (mod2 eof 256)))

;; fpeek__post_axiom
  (assert
  (forall ((stream Int) (helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and (dynamic_invariant4 stream true true true true) (dynamic_invariant1
     helpers__cur_position true true true true)) (dynamic_invariant5
     (fpeek1 stream helpers__cur_position helpers__the_file) true false true
     true)) :pattern ((fpeek1 stream helpers__cur_position helpers__the_file)) ))))

;; fpeek__def_axiom
  (assert
  (forall ((stream Int) (helpers__cur_position Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (=>
     (and (dynamic_invariant4 stream true true true true) (dynamic_invariant1
     helpers__cur_position true true true true))
     (= (fpeek1 stream helpers__cur_position helpers__the_file) (ite (= 
                                                                (to_rep
                                                                (select helpers__the_file helpers__cur_position)) 
                                                                eof_ch) 
                                                                eof
                                                                (to_rep
                                                                (select helpers__the_file helpers__cur_position))))) :pattern (
  (fpeek1 stream helpers__cur_position helpers__the_file)) ))))

;; has_char_in_slice__post_axiom
  (assert true)

;; has_char_in_slice__def_axiom
  (assert
  (forall ((ch Int) (from Int) (to__ Int))
  (forall ((helpers__the_file (Array Int character)))
  (! (= (= (has_char_in_slice ch from to__ helpers__the_file) true)
     (exists ((idx Int))
     (and (and (<= from idx) (<= idx to__))
     (= (to_rep (select helpers__the_file idx)) ch)))) :pattern ((has_char_in_slice
                                                                 ch from to__
                                                                 helpers__the_file)) ))))

;; no_char_in_string__post_axiom
  (assert true)

;; no_char_in_string__def_axiom
  (assert
  (forall ((s us_t))
  (forall ((ch Int) (n1 Int))
  (! (= (= (no_char_in_string s ch n1) true)
     (forall ((idx Int))
     (=> (and (<= (first1 s) idx) (<= idx (+ (- (first1 s) 1) n1)))
     (not (= (to_rep (select (to_array s) idx)) ch))))) :pattern ((no_char_in_string
                                                                  s ch n1)) ))))

;; has_char_in_string__post_axiom
  (assert true)

;; has_char_in_string__def_axiom
  (assert
  (forall ((s us_t))
  (forall ((ch Int) (n1 Int))
  (! (= (= (has_char_in_string s ch n1) true)
     (exists ((idx Int))
     (and (and (<= (first1 s) idx) (<= idx (+ (- (first1 s) 1) n1)))
     (= (to_rep (select (to_array s) idx)) ch)))) :pattern ((has_char_in_string
                                                            s ch n1)) ))))

;; find_char_in_string__post_axiom
  (assert
  (forall ((s us_t))
  (forall ((ch Int) (n1 Int))
  (! (=>
     (and
     (and
     (and (dynamic_invariant3 s true true true true) (dynamic_invariant2 ch
     true true true true)) (dynamic_invariant n1 true true true true))
     (and (<= (- (+ (first1 s) n1) 1) (last1 s))
     (= (has_char_in_string s ch n1) true)))
     (let ((result (find_char_in_string s ch n1)))
     (and
     (and
     (and (and (<= (first1 s) result) (<= result (+ (- (first1 s) 1) n1)))
     (= (no_char_in_string s ch (- result 1)) true))
     (= (to_rep (select (to_array s) result)) ch)) (dynamic_invariant1 result
     true false true true)))) :pattern ((find_char_in_string s ch n1)) ))))

;; def_axiom
  (assert
  (forall ((temp___421 Int))
  (=> (dynamic_invariant2 temp___421 true true true true)
  (forall ((temp___422 Int))
  (= (to_rep (select (temp_____aggregate_def_419 temp___421) temp___422)) temp___421)))))

(assert
;; defqtvc
 ;; File "textio-get_line.adb", line 25, characters 0-0
  (not
  (forall ((file__split_fields us_split_fields) (item (Array Int character))
  (last2 Int) (the_file (Array Int character)) (cur_position Int) (rest Int)
  (p Int) (item1 (Array Int character)) (last3 Int) (cur_position1 Int)
  (rest1 Int) (o Bool))
  (=> (dynamic_property 1 2147483647 (to_rep1 item__first)
  (to_rep1 item__last))
  (=> (dynamic_invariant last2 true false true true)
  (=> (dynamic_invariant1 cur_position true false true true)
  (=> (dynamic_invariant2 eof_ch true false true true)
  (=> (= (mod2 eof 256) eof_ch)
  (=> (dynamic_invariant5 eof true false true true)
  (=> (dynamic_invariant1 n true false true true)
  (=> (dynamic_invariant rest false false true true)
  (=> (<= n 80)
  (=> (<= (- (to_rep1 item__first) 1) last2)
  (=> (<= last2 (to_rep1 item__last))
  (=>
  (=> (< 1 n)
  (and (<= (to_rep1 item__first) (+ last2 1))
  (<= (- (+ last2 n) 1) (to_rep1 item__last))))
  (=>
  (=>
  (= (end_of_file (us_repqtmk file__split_fields) cur_position the_file) true)
  (<= (to_rep1 item__first) last2))
  (=> (<= cur_position 10000)
  (=> (dynamic_invariant p false false true true)
  (=>
  (let ((o1 (us_repqtmk file__split_fields)))
  (let ((textio__get_line__get_chunk__eof_at_start__assume (end_of_file o1
                                                           cur_position
                                                           the_file)))
  (and
  (= (= textio__get_line__get_chunk__eof_at_start__assume true)
  (= (fpeek o1 cur_position the_file) eof))
  (and (= textio__get_line__get_chunk__eof_at_start__assume eof_at_start)
  (and (= last2 last_at_start)
  (and (dynamic_invariant last_at_start true false true true)
  (and (= cur_position cur_position_at_start)
  (and (dynamic_invariant1 cur_position_at_start true false true true)
  (exists ((o2 Int))
  (and (= (to_rep1 item__last) o2)
  (exists ((o3 Int))
  (and (= (to_rep1 item__first) o3)
  (and (= (of_array item o3 o2) item_at_start)
  (and (dynamic_invariant3 item_at_start true false true true)
  (exists ((buf (Array Int character)))
  (and (= buf (temp_____aggregate_def_419 32))
  (exists ((spark__branch Bool))
  (and (= spark__branch (ite (= n 1) true false))
  (ite (= spark__branch true)
  (and (and (and (= rest1 n) (= item1 item)) (= last3 last2))
  (= cur_position1 cur_position))
  (exists ((o4 integer))
  (and (= (to_rep1 o4) 80)
  (exists ((o5 integer))
  (and (= (to_rep1 o5) 1)
  (exists ((textio__memset__b (Array Int character)))
  (and
  (forall ((idx Int))
  (=> (and (<= (to_rep1 o5) idx) (<= idx (to_rep1 o4)))
  (ite (< idx (+ (to_rep1 o5) n))
  (= (to_rep (select textio__memset__b idx)) 10)
  (= (to_rep (select textio__memset__b idx)) (to_rep (select buf idx))))))
  (let ((temp___423 (of_array textio__memset__b 1 80)))
  (exists ((buf1 (Array Int character)))
  (and (= buf1 (slide (to_array temp___423) (first1 temp___423) 1))
  (and (= (to_rep (select buf1 n)) 10)
  (exists ((o6 Int))
  (and (= (to_rep2 (rec__textio__file_type__descr file__split_fields)) o6)
  (let ((o7 n))
  (exists ((o8 integer))
  (and (= (to_rep1 o8) 80)
  (exists ((o9 integer))
  (and (= (to_rep1 o9) 1)
  (exists ((cur_position2 Int))
  (and (= cur_position2 cur_position)
  (exists ((the_file1 (Array Int character)))
  (and (= the_file1 the_file)
  (exists ((success Bool) (helpers__fgets__strng (Array Int character)))
  (and
  (and
  (ite (= success true)
  (and
  (and (= (ferror o6) 0) (not (= (fpeek1 o6 cur_position2 the_file1) eof)))
  (ite (and
       (= (no_char_in_slice 10 cur_position2 (- (+ cur_position2 o7) 2)
          the_file) true)
       (= (no_char_in_slice eof_ch cur_position2 (- (+ cur_position2 o7) 2)
          the_file) true))
  (and
  (and
  (and (= cur_position1 (- (+ cur_position2 o7) 1))
  (forall ((idx Int))
  (=> (and (<= 1 idx) (<= idx (- o7 1)))
  (= (to_rep (select helpers__fgets__strng idx)) (to_rep
                                                 (select the_file (- (+ cur_position2 idx) 1)))))))
  (= (to_rep (select helpers__fgets__strng o7)) 0))
  (forall ((idx Int))
  (=> (and (<= (+ o7 1) idx) (<= idx (to_rep1 o8)))
  (= (to_rep (select helpers__fgets__strng idx)) (to_rep (select buf1 idx))))))
  (ite (and
       (= (has_char_in_slice 10 cur_position2 (- (+ cur_position2 o7) 2)
          the_file) true)
       (= (no_char_in_slice eof_ch cur_position2 (- (+ cur_position2 o7) 2)
          the_file) true))
  (and
  (and
  (and
  (and
  (= cur_position1 (find_char_in_slice 10 cur_position2
                   (- (+ cur_position2 o7) 2) the_file))
  (forall ((idx Int))
  (=>
  (and (<= cur_position2 idx)
  (<= idx (- (find_char_in_slice 10 cur_position2 (- (+ cur_position2 o7) 2)
             the_file) 1)))
  (= (to_rep (select helpers__fgets__strng (+ (- idx cur_position2) 1))) 
  (to_rep (select the_file idx))))))
  (= (to_rep
     (select helpers__fgets__strng (+ (- (find_char_in_slice 10 cur_position2
                                         (- (+ cur_position2 o7) 2) the_file) cur_position2) 1))) 10))
  (= (to_rep
     (select helpers__fgets__strng (+ (- (find_char_in_slice 10 cur_position2
                                         (- (+ cur_position2 o7) 2) the_file) cur_position2) 2))) 0))
  (forall ((idx Int))
  (=>
  (and
  (<= (+ (- (find_char_in_slice 10 cur_position2 (- (+ cur_position2 o7) 2)
            the_file) cur_position2) 3) idx)
  (<= idx (to_rep1 o8)))
  (= (to_rep (select helpers__fgets__strng idx)) (to_rep (select buf1 idx))))))
  (and
  (and
  (= (no_char_in_slice 10 cur_position2 (- (+ cur_position2 o7) 2) the_file) true)
  (= (has_char_in_slice eof_ch cur_position2 (- (+ cur_position2 o7) 2)
     the_file) true))
  (and
  (and
  (and
  (and
  (= cur_position1 (find_char_in_slice eof_ch cur_position2
                   (- (+ cur_position2 o7) 2) the_file))
  (forall ((idx Int))
  (=>
  (and (<= cur_position2 idx)
  (<= idx (- (find_char_in_slice eof_ch cur_position2
             (- (+ cur_position2 o7) 2) the_file) 1)))
  (= (to_rep (select helpers__fgets__strng (+ (- idx cur_position2) 1))) 
  (to_rep (select the_file idx))))))
  (= (to_rep
     (select helpers__fgets__strng (+ (- (find_char_in_slice eof_ch
                                         cur_position2
                                         (- (+ cur_position2 o7) 2) the_file) cur_position2) 1))) 0))
  (forall ((idx Int))
  (=>
  (and
  (<= (+ (- (find_char_in_slice eof_ch cur_position2
            (- (+ cur_position2 o7) 2) the_file) cur_position2) 2) idx)
  (<= idx (to_rep1 o8)))
  (= (to_rep (select helpers__fgets__strng idx)) (to_rep (select buf1 idx))))))
  (= (no_char_in_string
     (of_array helpers__fgets__strng (to_rep1 o9) (to_rep1 o8)) 10
     (+ (- (find_char_in_slice eof_ch cur_position2
           (- (+ cur_position2 o7) 2) the_file) cur_position2) 1)) true))))))
  (or (not (= (ferror o6) 0))
  (and (= (fpeek1 o6 cur_position2 the_file1) eof)
  (= cur_position1 cur_position2)))) (dynamic_invariant1 cur_position1 true
  true true true))
  (let ((temp___424 (of_array helpers__fgets__strng 1 80)))
  (exists ((buf2 (Array Int character)))
  (and (= buf2 (slide (to_array temp___424) (first1 temp___424) 1))
  (exists ((spark__branch1 Bool))
  (and (= spark__branch1 (ite (= success true) false true))
  (ite (= spark__branch1 true)
  (and
  (and
  (exists ((o10 Int))
  (and (= (to_rep2 (rec__textio__file_type__descr file__split_fields)) o10)
  (let ((o11 (ferror o10)))
  (and (dynamic_invariant5 o11 true false true true)
  (exists ((spark__branch2 Bool))
  (and (= spark__branch2 (ite (= o11 0) false true))
  (and (not (= spark__branch2 true))
  (exists ((o12 Int))
  (and (= (to_rep1 item__first) o12)
  (exists ((spark__branch3 Bool))
  (and (= spark__branch3 (ite (<= o12 last2) true false))
  (and (= spark__branch3 true) (= rest1 0))))))))))))) (= item1 item))
  (= last3 last2))
  (let ((o10 n))
  (let ((o11 (of_array buf2 1 80)))
  (let ((o12 (memchr o11 10 o10)))
  (and
  (and (dynamic_invariant o12 true false true true)
  (ite (= (has_char_in_string o11 10 o10) true)
  (= o12 (find_char_in_string o11 10 o10)) (= o12 0)))
  (exists ((p1 Int))
  (and (= p1 o12)
  (exists ((spark__branch2 Bool))
  (and (= spark__branch2 (ite (= p1 0) true false))
  (ite (= spark__branch2 true)
  (let ((o13 (- n 1)))
  (let ((o14 (+ last2 1)))
  (and (in_range1 o14)
  (let ((o15 item__last))
  (let ((o16 item__first))
  (exists ((o17 (Array Int character)))
  (and (= o17 item1)
  (and
  (ite (= (= o13 0) true)
  (= (bool_eq o17 (to_rep1 o16) (to_rep1 o15) item (to_rep1 o16)
     (to_rep1 o15)) true)
  (=> (= (not (= o13 0)) true)
  (forall ((idx Int))
  (=> (and (<= (to_rep1 o16) idx) (<= idx (to_rep1 o15)))
  (ite (and (<= o14 idx) (<= idx (- (+ o14 o13) 1)))
  (= (to_rep (select o17 idx)) (to_rep
                               (select (to_array (of_array buf2 1 80)) (+ (- idx o14) 1))))
  (= (to_rep (select o17 idx)) (to_rep (select item idx))))))))
  (let ((o18 (+ (- last2 1) n)))
  (and (in_range1 o18) (and (= last3 o18) (= rest1 1))))))))))))
  (let ((o13 (- p1 1)))
  (and (in_range2 o13)
  (exists ((k Int))
  (and (= k o13)
  (and (dynamic_invariant k true false true true)
  (and
  (=>
  (= (no_char_in_slice eof_ch cur_position_at_start
     (- (+ cur_position_at_start n) 2) the_file) true)
  (= k (- (find_char_in_slice 10 cur_position_at_start
          (- (+ cur_position_at_start n) 2) the_file) cur_position_at_start)))
  (exists ((k1 Int))
  (and
  (exists ((o14 Bool))
  (and
  (let ((o15 (+ k 2)))
  (and (in_range1 o15)
  (ite (< n o15) (= o14 true)
  (let ((o16 (+ k 2)))
  (and (in_range1 o16)
  (and (and (<= 1 o16) (<= o16 80))
  (exists ((o17 Int))
  (and (= (to_rep (select buf2 o16)) o17) (= o14 (ite (= o17 0) false true))))))))))
  (exists ((spark__branch3 Bool))
  (and (= spark__branch3 o14)
  (ite (= spark__branch3 true)
  (and (= (to_rep (select buf2 k)) 0)
  (let ((o15 (- k 1))) (and (in_range2 o15) (= k1 o15)))) (= k1 k))))))
  (let ((o14 (+ last2 1)))
  (and (in_range1 o14)
  (let ((o15 item__last))
  (let ((o16 item__first))
  (exists ((o17 (Array Int character)))
  (and (= o17 item1)
  (and
  (ite (= (= k1 0) true)
  (= (bool_eq o17 (to_rep1 o16) (to_rep1 o15) item (to_rep1 o16)
     (to_rep1 o15)) true)
  (=> (= (not (= k1 0)) true)
  (forall ((idx Int))
  (=> (and (<= (to_rep1 o16) idx) (<= idx (to_rep1 o15)))
  (ite (and (<= o14 idx) (<= idx (- (+ o14 k1) 1)))
  (= (to_rep (select o17 idx)) (to_rep
                               (select (to_array (of_array buf2 1 80)) (+ (- idx o14) 1))))
  (= (to_rep (select o17 idx)) (to_rep (select item idx))))))))
  (let ((o18 (+ last2 k1)))
  (and (in_range1 o18) (and (= last3 o18) (= rest1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (=> (exists ((o1 Int)) (= (to_rep1 item__first) o1))
  (=>
  (ite (and
       (forall ((idx Int))
       (=> (and (<= (to_rep1 item__first) idx) (<= idx last2))
       (= (to_rep (select item1 idx)) (to_rep (select item idx)))))
       (= (- cur_position1 cur_position) (- last3 last2)))
  (= o (ite (forall ((idx Int))
            (=> (and (<= (+ last2 1) idx) (<= idx last3))
            (= (to_rep (select item1 idx)) (to_rep
                                           (select the_file (+ (- (- idx last2) 1) cur_position))))))
       true false))
  (= o false))
  (=> (= o true)
  (=> (not (= n 1))
  (=>
  (not
  (= (end_of_file (us_repqtmk file__split_fields) cur_position the_file) true))
  (let ((o1 (- (+ cur_position n) 2)))
  (=> (in_range3 o1)
  (let ((o2 (no_char_in_slice 10 cur_position o1 the_file)))
  (=>
  (= (= o2 true)
  (forall ((idx Int))
  (=> (and (<= cur_position idx) (<= idx o1))
  (not (= (to_rep (select the_file idx)) 10)))))
  (=> (or (not (= o2 true)) (in_range3 (- (+ cur_position n) 2)))
  (let ((o3 (ite (= o2 true)
            (no_char_in_slice eof_ch cur_position (- (+ cur_position 
            n) 2) the_file) false)))
  (=>
  (or (not (= o2 true))
  (= (= o3 true)
  (forall ((idx Int))
  (=> (and (<= cur_position idx) (<= idx (- (+ cur_position n) 2)))
  (not (= (to_rep (select the_file idx)) eof_ch))))))
  (=> (not (= o3 true))
  (let ((o4 (- (+ cur_position n) 2)))
  (=> (in_range3 o4)
  (let ((o5 eof_ch))
  (let ((o6 (no_char_in_slice o5 cur_position o4 the_file)))
  (=>
  (= (= o6 true)
  (forall ((idx Int))
  (=> (and (<= cur_position idx) (<= idx o4))
  (not (= (to_rep (select the_file idx)) o5)))))
  (=> (not (= o6 true))
  (let ((o7 (- (+ cur_position n) 2)))
  (=> (in_range3 o7)
  (let ((o8 eof_ch))
  (let ((o9 (find_char_in_slice o8 cur_position o7 the_file)))
  (=>
  (and (dynamic_invariant1 o9 true false true true)
  (and
  (and (and (<= cur_position o9) (<= o9 o7))
  (= (no_char_in_slice o8 cur_position (- o9 1) the_file) true))
  (= (to_rep (select the_file o9)) o8)))
  (=> (= last3 (- (+ last2 o9) cur_position))
  (forall ((usf Int))
  (let ((o10 (- (+ cur_position n) 2)))
  (=> (in_range3 o10)
  (let ((o11 eof_ch))
  (let ((o12 (find_char_in_slice o11 cur_position o10 the_file)))
  (=>
  (and (dynamic_invariant1 o12 true false true true)
  (and
  (and (and (<= cur_position o12) (<= o12 o10))
  (= (no_char_in_slice o11 cur_position (- o12 1) the_file) true))
  (= (to_rep (select the_file o12)) o11)))
  (=>
  (= (and (ite (<= cur_position usf) true false) (ite (<= usf (- o12 1)) true
                                                 false)) true)
  (=> (and (<= 1 usf) (<= usf 2147483647))
  (forall ((o13 Int))
  (=> (= (to_rep (select the_file usf)) o13)
  (<= (+ (- (+ last2 usf) cur_position) 1) (to_rep1 item__last))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
