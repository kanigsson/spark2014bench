(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort us_main_type 0)

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (rec__binary_search__tree_acc__is_null_pointer Bool)(rec__binary_search__tree_acc__pointer_address Int)(rec__binary_search__tree_acc__pointer_value_abstr us_main_type)))))
(define-fun us_rep_rec__binary_search__tree_acc__is_null_pointer__projection ((a us_rep)) Bool 
  (rec__binary_search__tree_acc__is_null_pointer a))

(define-fun us_rep_rec__binary_search__tree_acc__pointer_address__projection ((a us_rep)) Int 
  (rec__binary_search__tree_acc__pointer_address a))

(define-fun us_rep_rec__binary_search__tree_acc__pointer_value_abstr__projection ((a us_rep)) us_main_type 
  (rec__binary_search__tree_acc__pointer_value_abstr a))

(declare-datatypes ((us_rep__ref 0))
(((us_rep__refqtmk (us_rep__content us_rep)))))
(define-fun us_rep__ref___rep__content__projection ((a us_rep__ref)) us_rep 
  (us_rep__content a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__binary_search__tree_acc__is_null_pointer a) 
                        (rec__binary_search__tree_acc__is_null_pointer b))
                        (=>
                        (not
                        (= (rec__binary_search__tree_acc__is_null_pointer a) true))
                        (and
                        (= (rec__binary_search__tree_acc__pointer_address a) 
                        (rec__binary_search__tree_acc__pointer_address b))
                        (= (rec__binary_search__tree_acc__pointer_value_abstr
                           a) (rec__binary_search__tree_acc__pointer_value_abstr
                              b)))))
                   true false))

(declare-const dummy1 us_rep)

(declare-datatypes ((t2b__ref 0))
(((t2b__refqtmk (t2b__content us_rep)))))
(define-fun t2b__ref_t2b__content__projection ((a t2b__ref)) us_rep (t2b__content
                                                                    a))

(declare-fun m_contains (us_rep Int) Bool)

(declare-fun m_contains__function_guard (Bool us_rep Int) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((tree_acc__ref 0))
(((tree_acc__refqtmk (tree_acc__content us_rep)))))
(define-fun tree_acc__ref_tree_acc__content__projection ((a tree_acc__ref)) us_rep 
  (tree_acc__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__binary_search__tree__data integer)(rec__binary_search__tree__left us_rep)(rec__binary_search__tree__right us_rep)))))
(define-fun us_split_fields_rec__binary_search__tree__data__projection ((a us_split_fields)) integer 
  (rec__binary_search__tree__data a))

(define-fun us_split_fields_rec__binary_search__tree__left__projection ((a us_split_fields)) us_rep 
  (rec__binary_search__tree__left a))

(define-fun us_split_fields_rec__binary_search__tree__right__projection ((a us_split_fields)) us_rep 
  (rec__binary_search__tree__right a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep1)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__binary_search__tree__data
                            (us_split_fields1 a))) (to_rep
                                                   (rec__binary_search__tree__data
                                                   (us_split_fields1 b))))
                         (= (bool_eq
                            (rec__binary_search__tree__left
                            (us_split_fields1 a))
                            (rec__binary_search__tree__left
                            (us_split_fields1 b))) true))
                         (= (bool_eq
                            (rec__binary_search__tree__right
                            (us_split_fields1 a))
                            (rec__binary_search__tree__right
                            (us_split_fields1 b))) true))
                    true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const binary_search__tree__data__first__bit Int)

(declare-const binary_search__tree__data__last__bit Int)

(declare-const binary_search__tree__data__position Int)

;; binary_search__tree__data__first__bit_axiom
  (assert (<= 0 binary_search__tree__data__first__bit))

;; binary_search__tree__data__last__bit_axiom
  (assert
  (< binary_search__tree__data__first__bit binary_search__tree__data__last__bit))

;; binary_search__tree__data__position_axiom
  (assert (<= 0 binary_search__tree__data__position))

(declare-const binary_search__tree__left__first__bit Int)

(declare-const binary_search__tree__left__last__bit Int)

(declare-const binary_search__tree__left__position Int)

;; binary_search__tree__left__first__bit_axiom
  (assert (<= 0 binary_search__tree__left__first__bit))

;; binary_search__tree__left__last__bit_axiom
  (assert
  (< binary_search__tree__left__first__bit binary_search__tree__left__last__bit))

;; binary_search__tree__left__position_axiom
  (assert (<= 0 binary_search__tree__left__position))

(declare-const binary_search__tree__right__first__bit Int)

(declare-const binary_search__tree__right__last__bit Int)

(declare-const binary_search__tree__right__position Int)

;; binary_search__tree__right__first__bit_axiom
  (assert (<= 0 binary_search__tree__right__first__bit))

;; binary_search__tree__right__last__bit_axiom
  (assert
  (< binary_search__tree__right__first__bit binary_search__tree__right__last__bit))

;; binary_search__tree__right__position_axiom
  (assert (<= 0 binary_search__tree__right__position))

(declare-fun user_eq1 (us_rep1 us_rep1) Bool)

(declare-const dummy3 us_rep1)

(declare-datatypes ((tree__ref 0))
(((tree__refqtmk (tree__content us_rep1)))))
(define-fun tree__ref_tree__content__projection ((a tree__ref)) us_rep1 
  (tree__content a))

(declare-fun us_open (us_main_type) us_rep1)

(declare-fun us_close (us_rep1) us_main_type)

;; close_open
  (assert
  (forall ((x us_main_type))
  (! (= (us_close (us_open x)) x) :pattern ((us_open x)) )))

;; open_close
  (assert
  (forall ((x us_rep1))
  (! (= (us_open (us_close x)) x) :pattern ((us_close x)) )))

(define-fun rec__binary_search__tree_acc__pointer_value ((a us_rep)) us_rep1 
  (us_open (rec__binary_search__tree_acc__pointer_value_abstr a)))

(define-fun rec__binary_search__tree_acc__pointer_value__pred ((a us_rep)) Bool 
  (not (= (rec__binary_search__tree_acc__is_null_pointer a) true)))

(declare-const us_null_pointer us_rep)

;; __null_pointer__def_axiom
  (assert
  (= (rec__binary_search__tree_acc__is_null_pointer us_null_pointer) true))

;; m_contains__def_axiom
  (assert
  (forall ((t us_rep))
  (forall ((v Int))
  (! (= (= (m_contains t v) true)
     (and (not (= (bool_eq t us_null_pointer) true))
     (or
     (or
     (= v (to_rep
          (rec__binary_search__tree__data
          (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))))
     (= (m_contains
        (rec__binary_search__tree__left
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))
        v) true))
     (= (m_contains
        (rec__binary_search__tree__right
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))
        v) true)))) :pattern ((m_contains t v)) ))))

(declare-const dummy4 us_rep)

(declare-datatypes ((t17b__ref 0))
(((t17b__refqtmk (t17b__content us_rep)))))
(define-fun t17b__ref_t17b__content__projection ((a t17b__ref)) us_rep 
  (t17b__content a))

(declare-fun sorted (us_rep) Bool)

(declare-fun sorted__function_guard (Bool us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ((t3b__ref 0))
(((t3b__refqtmk (t3b__content us_rep)))))
(define-fun t3b__ref_t3b__content__projection ((a t3b__ref)) us_rep (t3b__content
                                                                    a))

(declare-fun olt (Int us_rep) Bool)

(declare-fun olt__function_guard (Bool Int us_rep) Bool)

(declare-const dummy6 us_rep)

(declare-datatypes ((t10b__ref 0))
(((t10b__refqtmk (t10b__content us_rep)))))
(define-fun t10b__ref_t10b__content__projection ((a t10b__ref)) us_rep 
  (t10b__content a))

(declare-fun olt1 (us_rep Int) Bool)

(declare-fun olt__function_guard1 (Bool us_rep Int) Bool)

;; sorted__def_axiom
  (assert
  (forall ((t us_rep))
  (! (= (= (sorted t) true)
     (=> (not (= (bool_eq t us_null_pointer) true))
     (and
     (and
     (and
     (= (olt1
        (rec__binary_search__tree__left
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))
        (to_rep
        (rec__binary_search__tree__data
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t))))) true)
     (= (olt
        (to_rep
        (rec__binary_search__tree__data
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t))))
        (rec__binary_search__tree__right
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) true))
     (= (sorted
        (rec__binary_search__tree__left
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) true))
     (= (sorted
        (rec__binary_search__tree__right
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) true)))) :pattern (
  (sorted t)) )))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__binary_search__int_option__present Bool)))))
(define-fun us_split_discrs_rec__binary_search__int_option__present__projection ((a us_split_discrs)) Bool 
  (rec__binary_search__int_option__present a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1 (rec__binary_search__int_option__value integer)))))
(define-fun us_split_fields_rec__binary_search__int_option__value__projection ((a us_split_fields2)) integer 
  (rec__binary_search__int_option__value a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2
  (us_split_discrs1 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___split_discrs__projection ((a us_rep2)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__2__projection ((a us_rep2)) us_split_fields2 
  (us_split_fields3 a))

(define-fun binary_search__int_option__value__pred ((a us_rep2)) Bool (= (ite 
  (rec__binary_search__int_option__present (us_split_discrs1 a)) 1 0) 1))

(define-fun bool_eq2 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (ite (rec__binary_search__int_option__present
                                 (us_split_discrs1 a)) 1 0) (ite (rec__binary_search__int_option__present
                                                                 (us_split_discrs1
                                                                 b)) 1 0))
                         (=> (binary_search__int_option__value__pred a)
                         (= (to_rep
                            (rec__binary_search__int_option__value
                            (us_split_fields3 a))) (to_rep
                                                   (rec__binary_search__int_option__value
                                                   (us_split_fields3 b))))))
                    true false))

(define-fun in_range2 ((rec__binary_search__int_option__present1 Bool)
  (a us_split_discrs)) Bool (= rec__binary_search__int_option__present1 
  (rec__binary_search__int_option__present a)))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const binary_search__int_option__present__first__bit Int)

(declare-const binary_search__int_option__present__last__bit Int)

(declare-const binary_search__int_option__present__position Int)

;; binary_search__int_option__present__first__bit_axiom
  (assert (<= 0 binary_search__int_option__present__first__bit))

;; binary_search__int_option__present__last__bit_axiom
  (assert
  (< binary_search__int_option__present__first__bit binary_search__int_option__present__last__bit))

;; binary_search__int_option__present__position_axiom
  (assert (<= 0 binary_search__int_option__present__position))

(declare-const binary_search__int_option__value__first__bit Int)

(declare-const binary_search__int_option__value__last__bit Int)

(declare-const binary_search__int_option__value__position Int)

;; binary_search__int_option__value__first__bit_axiom
  (assert (<= 0 binary_search__int_option__value__first__bit))

;; binary_search__int_option__value__last__bit_axiom
  (assert
  (< binary_search__int_option__value__first__bit binary_search__int_option__value__last__bit))

;; binary_search__int_option__value__position_axiom
  (assert (<= 0 binary_search__int_option__value__position))

(declare-fun user_eq2 (us_rep2 us_rep2) Bool)

(declare-const dummy7 us_rep2)

(declare-datatypes ((int_option__ref 0))
(((int_option__refqtmk (int_option__content us_rep2)))))
(define-fun int_option__ref_int_option__content__projection ((a int_option__ref)) us_rep2 
  (int_option__content a))

(declare-const dummy8 us_rep)

(declare-datatypes ((t25b__ref 0))
(((t25b__refqtmk (t25b__content us_rep)))))
(define-fun t25b__ref_t25b__content__projection ((a t25b__ref)) us_rep 
  (t25b__content a))

(declare-fun olt2 (us_rep2 us_rep) Bool)

(declare-fun olt__function_guard2 (Bool us_rep2 us_rep) Bool)

(define-fun default_initial_assumption ((temp___expr_230 us_rep2)
  (temp___skip_top_level_231 Bool)) Bool (= (rec__binary_search__int_option__present
                                            (us_split_discrs1
                                            temp___expr_230)) (distinct 0 0)))

;; olt__post_axiom
  (assert true)

;; olt__def_axiom
  (assert
  (forall ((v us_rep2))
  (forall ((t us_rep))
  (! (= (= (olt2 v t) true)
     (=>
     (= (rec__binary_search__int_option__present (us_split_discrs1 v)) true)
     (= (olt
        (to_rep (rec__binary_search__int_option__value (us_split_fields3 v)))
        t) true))) :pattern ((olt2 v t)) ))))

(declare-const dummy9 us_rep)

(declare-datatypes ((t27b__ref 0))
(((t27b__refqtmk (t27b__content us_rep)))))
(define-fun t27b__ref_t27b__content__projection ((a t27b__ref)) us_rep 
  (t27b__content a))

(declare-fun olt3 (us_rep us_rep2) Bool)

(declare-fun olt__function_guard3 (Bool us_rep us_rep2) Bool)

;; olt__post_axiom
  (assert true)

;; olt__def_axiom
  (assert
  (forall ((t us_rep))
  (forall ((v us_rep2))
  (! (= (= (olt3 t v) true)
     (=>
     (= (rec__binary_search__int_option__present (us_split_discrs1 v)) true)
     (= (olt1 t
        (to_rep (rec__binary_search__int_option__value (us_split_fields3 v)))) true))) :pattern (
  (olt3 t v)) ))))

(declare-fun olt4 (us_rep2 Int) Bool)

(declare-fun olt__function_guard4 (Bool us_rep2 Int) Bool)

;; olt__post_axiom
  (assert true)

;; olt__def_axiom
  (assert
  (forall ((v us_rep2))
  (forall ((i Int))
  (! (= (= (olt4 v i) true)
     (=>
     (= (rec__binary_search__int_option__present (us_split_discrs1 v)) true)
     (< (to_rep (rec__binary_search__int_option__value (us_split_fields3 v))) i))) :pattern (
  (olt4 v i)) ))))

(declare-fun olt5 (Int us_rep2) Bool)

(declare-fun olt__function_guard5 (Bool Int us_rep2) Bool)

;; olt__post_axiom
  (assert true)

;; olt__def_axiom
  (assert
  (forall ((i Int))
  (forall ((v us_rep2))
  (! (= (= (olt5 i v) true)
     (=>
     (= (rec__binary_search__int_option__present (us_split_discrs1 v)) true)
     (< i (to_rep
          (rec__binary_search__int_option__value (us_split_fields3 v)))))) :pattern (
  (olt5 i v)) ))))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq (us_main_type1 us_main_type1) Bool)

(declare-sort us_rep3 0)

(declare-fun bool_eq3 (us_rep3 us_rep3) Bool)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-fun user_eq3 (us_rep3 us_rep3) Bool)

(declare-const dummy10 us_rep3)

(declare-datatypes ((set__ref 0))
(((set__refqtmk (set__content us_rep3)))))
(define-fun set__ref_set__content__projection ((a set__ref)) us_rep3 
  (set__content a))

(declare-fun contains (us_rep3 Int) Bool)

(declare-fun contains__function_guard (Bool us_rep3 Int) Bool)

(declare-sort element_type 0)

(declare-fun element_typeqtint (element_type) Int)

;; element_type'axiom
  (assert
  (forall ((i element_type))
  (and (<= (- 2147483648) (element_typeqtint i))
  (<= (element_typeqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq4 (element_type element_type) Bool)

(declare-const dummy11 element_type)

(declare-datatypes ((element_type__ref 0))
(((element_type__refqtmk (element_type__content element_type)))))
(define-fun element_type__ref_element_type__content__projection ((a element_type__ref)) element_type 
  (element_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_238 Int)
  (temp___is_init_234 Bool) (temp___skip_constant_235 Bool)
  (temp___do_toplevel_236 Bool)
  (temp___do_typ_inv_237 Bool)) Bool (=>
                                     (or (= temp___is_init_234 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range3 temp___expr_238)))

(declare-fun oeq (us_rep3 us_rep3) Bool)

(declare-fun oeq__function_guard (Bool us_rep3 us_rep3) Bool)

(declare-fun is_empty (us_rep3) Bool)

(declare-fun is_empty__function_guard (Bool us_rep3) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq3 a b) (oeq a b)) :pattern ((user_eq3 a b)) )))

(define-fun default_initial_assumption1 ((temp___expr_246 us_rep3)
  (temp___skip_top_level_247 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_247 true))
                                         (= (is_empty temp___expr_246) true)))

;; contains__post_axiom
  (assert
  (forall ((container us_rep3))
  (forall ((item Int))
  (! (=> (dynamic_invariant1 item true true true true)
     (=> (= (distinct 1 0) true)
     (=>
     (exists ((e Int))
     (and (and (in_range3 e) (= (contains container e) true)) (= e item)))
     (= (contains container item) true)))) :pattern ((contains container
                                                     item)) ))))

(declare-fun length (us_rep3) Int)

(declare-fun length__function_guard (Int us_rep3) Bool)

(declare-sort count_type 0)

(declare-fun count_typeqtint (count_type) Int)

;; count_type'axiom
  (assert
  (forall ((i count_type))
  (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq5 (count_type count_type) Bool)

(declare-const dummy12 count_type)

(declare-datatypes ((count_type__ref 0))
(((count_type__refqtmk (count_type__content count_type)))))
(define-fun count_type__ref_count_type__content__projection ((a count_type__ref)) count_type 
  (count_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_260 Int)
  (temp___is_init_256 Bool) (temp___skip_constant_257 Bool)
  (temp___do_toplevel_258 Bool)
  (temp___do_typ_inv_259 Bool)) Bool (=>
                                     (or (= temp___is_init_256 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_260)))

;; length__post_axiom
  (assert
  (forall ((container us_rep3)) (! (dynamic_invariant2 (length container)
  true false true true) :pattern ((length container)) )))

(declare-fun ole (us_rep3 us_rep3) Bool)

(declare-fun ole__function_guard (Bool us_rep3 us_rep3) Bool)

(declare-fun included_except (us_rep3 us_rep3 Int) Bool)

(declare-fun included_except__function_guard (Bool us_rep3 us_rep3 Int) Bool)

(declare-fun add (us_rep3 Int) us_rep3)

(declare-fun add__function_guard (us_rep3 us_rep3 Int) Bool)

;; add__post_axiom
  (assert
  (forall ((container us_rep3))
  (forall ((item Int))
  (! (=>
     (and (dynamic_invariant1 item true true true true)
     (and (not (= (contains container item) true))
     (< (length container) 2147483647)))
     (let ((result (add container item)))
     (and
     (and
     (and (= (length result) (+ (length container) 1))
     (= (contains result item) true)) (= (ole container result) true))
     (= (included_except result container item) true)))) :pattern ((add
                                                                   container
                                                                   item)) ))))

(declare-fun included_in_union (us_rep3 us_rep3 us_rep3) Bool)

(declare-fun included_in_union__function_guard (Bool us_rep3 us_rep3
  us_rep3) Bool)

(declare-fun num_overlaps (us_rep3 us_rep3) Int)

(declare-fun num_overlaps__function_guard (Int us_rep3 us_rep3) Bool)

(declare-fun union1 (us_rep3 us_rep3) us_rep3)

(declare-fun union__function_guard (us_rep3 us_rep3 us_rep3) Bool)

;; union__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (=>
     (<= (- (length left) (num_overlaps left right)) (- 2147483647 (length
                                                                   right)))
     (let ((result (union1 left right)))
     (and
     (and
     (and
     (= (length result) (+ (- (length left) (num_overlaps left right)) 
     (length right))) (= (ole left result) true))
     (= (ole right result) true))
     (= (included_in_union result left right) true)))) :pattern ((union1 left
                                                                 right)) )))

(declare-const dummy13 us_rep)

(declare-datatypes ((t70b__ref 0))
(((t70b__refqtmk (t70b__content us_rep)))))
(define-fun t70b__ref_t70b__content__projection ((a t70b__ref)) us_rep 
  (t70b__content a))

(declare-fun size (us_rep) Int)

(declare-fun size__function_guard (Int us_rep) Bool)

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq6 (natural natural) Bool)

(declare-const dummy14 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range5
                                    temp___expr_39)))

;; size__def_axiom
  (assert
  (forall ((t us_rep))
  (! (= (size t) (ite (= (bool_eq t us_null_pointer) true) 0
                 (ite (< (size
                         (rec__binary_search__tree__left
                         (us_split_fields1
                         (rec__binary_search__tree_acc__pointer_value t)))) (- 2147483647 
                 (size
                 (rec__binary_search__tree__right
                 (us_split_fields1
                 (rec__binary_search__tree_acc__pointer_value t))))))
                 (+ (+ (size
                       (rec__binary_search__tree__left
                       (us_split_fields1
                       (rec__binary_search__tree_acc__pointer_value t)))) 
                 (size
                 (rec__binary_search__tree__right
                 (us_split_fields1
                 (rec__binary_search__tree_acc__pointer_value t))))) 1)
                 2147483647))) :pattern ((size t)) )))

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-fun user_eq7 (us_rep3 us_rep3) Bool)

(declare-const dummy15 us_rep3)

(declare-datatypes ((int_set__ref 0))
(((int_set__refqtmk (int_set__content us_rep3)))))
(define-fun int_set__ref_int_set__content__projection ((a int_set__ref)) us_rep3 
  (int_set__content a))

(declare-const dummy16 us_rep)

(declare-datatypes ((t71b__ref 0))
(((t71b__refqtmk (t71b__content us_rep)))))
(define-fun t71b__ref_t71b__content__projection ((a t71b__ref)) us_rep 
  (t71b__content a))

(declare-fun all_v (us_rep) us_rep3)

(declare-fun all_v__function_guard (us_rep3 us_rep) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq7 a b) (oeq a b)) :pattern ((user_eq7 a b)) )))

(define-fun default_initial_assumption2 ((temp___expr_268 us_rep3)
  (temp___skip_top_level_269 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_269 true))
                                         (= (is_empty temp___expr_268) true)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const v Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const l__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const h__attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const t_old us_rep3)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const dummy17 us_rep)

(declare-datatypes ((t84b__ref 0))
(((t84b__refqtmk (t84b__content us_rep)))))
(define-fun t84b__ref_t84b__content__projection ((a t84b__ref)) us_rep 
  (t84b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-sort us_pledge_ty 0)

(declare-datatypes ((us_pledge_ty__ref 0))
(((us_pledge_ty__refqtmk (us_pledge_ty__content us_pledge_ty)))))
(declare-fun us_pledge_get (us_pledge_ty us_rep us_rep) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(define-fun default_initial_assumption3 ((temp___expr_212 us_rep)
  (temp___skip_top_level_213 Bool)) Bool (= (rec__binary_search__tree_acc__is_null_pointer
                                            temp___expr_212) true))

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const binary_search__int_option__present__first__bit1 Int)

(declare-const binary_search__int_option__present__last__bit1 Int)

(declare-const binary_search__int_option__present__position1 Int)

;; binary_search__int_option__present__first__bit_axiom
  (assert (<= 0 binary_search__int_option__present__first__bit1))

;; binary_search__int_option__present__last__bit_axiom
  (assert
  (< binary_search__int_option__present__first__bit1 binary_search__int_option__present__last__bit1))

;; binary_search__int_option__present__position_axiom
  (assert (<= 0 binary_search__int_option__present__position1))

(declare-const binary_search__int_option__value__first__bit1 Int)

(declare-const binary_search__int_option__value__last__bit1 Int)

(declare-const binary_search__int_option__value__position1 Int)

;; binary_search__int_option__value__first__bit_axiom
  (assert (<= 0 binary_search__int_option__value__first__bit1))

;; binary_search__int_option__value__last__bit_axiom
  (assert
  (< binary_search__int_option__value__first__bit1 binary_search__int_option__value__last__bit1))

;; binary_search__int_option__value__position_axiom
  (assert (<= 0 binary_search__int_option__value__position1))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-const dummy18 us_rep2)

(declare-datatypes ((t80b__ref 0))
(((t80b__refqtmk (t80b__content us_rep2)))))
(define-fun t80b__ref_t80b__content__projection ((a t80b__ref)) us_rep2 
  (t80b__content a))

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const binary_search__int_option__present__first__bit2 Int)

(declare-const binary_search__int_option__present__last__bit2 Int)

(declare-const binary_search__int_option__present__position2 Int)

;; binary_search__int_option__present__first__bit_axiom
  (assert (<= 0 binary_search__int_option__present__first__bit2))

;; binary_search__int_option__present__last__bit_axiom
  (assert
  (< binary_search__int_option__present__first__bit2 binary_search__int_option__present__last__bit2))

;; binary_search__int_option__present__position_axiom
  (assert (<= 0 binary_search__int_option__present__position2))

(declare-const binary_search__int_option__value__first__bit2 Int)

(declare-const binary_search__int_option__value__last__bit2 Int)

(declare-const binary_search__int_option__value__position2 Int)

;; binary_search__int_option__value__first__bit_axiom
  (assert (<= 0 binary_search__int_option__value__first__bit2))

;; binary_search__int_option__value__last__bit_axiom
  (assert
  (< binary_search__int_option__value__first__bit2 binary_search__int_option__value__last__bit2))

;; binary_search__int_option__value__position_axiom
  (assert (<= 0 binary_search__int_option__value__position2))

(declare-fun user_eq9 (us_rep2 us_rep2) Bool)

(declare-const dummy19 us_rep2)

(declare-datatypes ((t81b__ref 0))
(((t81b__refqtmk (t81b__content us_rep2)))))
(define-fun t81b__ref_t81b__content__projection ((a t81b__ref)) us_rep2 
  (t81b__content a))

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const binary_search__int_option__present__first__bit3 Int)

(declare-const binary_search__int_option__present__last__bit3 Int)

(declare-const binary_search__int_option__present__position3 Int)

;; binary_search__int_option__present__first__bit_axiom
  (assert (<= 0 binary_search__int_option__present__first__bit3))

;; binary_search__int_option__present__last__bit_axiom
  (assert
  (< binary_search__int_option__present__first__bit3 binary_search__int_option__present__last__bit3))

;; binary_search__int_option__present__position_axiom
  (assert (<= 0 binary_search__int_option__present__position3))

(declare-const binary_search__int_option__value__first__bit3 Int)

(declare-const binary_search__int_option__value__last__bit3 Int)

(declare-const binary_search__int_option__value__position3 Int)

;; binary_search__int_option__value__first__bit_axiom
  (assert (<= 0 binary_search__int_option__value__first__bit3))

;; binary_search__int_option__value__last__bit_axiom
  (assert
  (< binary_search__int_option__value__first__bit3 binary_search__int_option__value__last__bit3))

;; binary_search__int_option__value__position_axiom
  (assert (<= 0 binary_search__int_option__value__position3))

(declare-fun user_eq10 (us_rep2 us_rep2) Bool)

(declare-const dummy20 us_rep2)

(declare-datatypes ((t102b__ref 0))
(((t102b__refqtmk (t102b__content us_rep2)))))
(define-fun t102b__ref_t102b__content__projection ((a t102b__ref)) us_rep2 
  (t102b__content a))

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const binary_search__int_option__present__first__bit4 Int)

(declare-const binary_search__int_option__present__last__bit4 Int)

(declare-const binary_search__int_option__present__position4 Int)

;; binary_search__int_option__present__first__bit_axiom
  (assert (<= 0 binary_search__int_option__present__first__bit4))

;; binary_search__int_option__present__last__bit_axiom
  (assert
  (< binary_search__int_option__present__first__bit4 binary_search__int_option__present__last__bit4))

;; binary_search__int_option__present__position_axiom
  (assert (<= 0 binary_search__int_option__present__position4))

(declare-const binary_search__int_option__value__first__bit4 Int)

(declare-const binary_search__int_option__value__last__bit4 Int)

(declare-const binary_search__int_option__value__position4 Int)

;; binary_search__int_option__value__first__bit_axiom
  (assert (<= 0 binary_search__int_option__value__first__bit4))

;; binary_search__int_option__value__last__bit_axiom
  (assert
  (< binary_search__int_option__value__first__bit4 binary_search__int_option__value__last__bit4))

;; binary_search__int_option__value__position_axiom
  (assert (<= 0 binary_search__int_option__value__position4))

(declare-fun user_eq11 (us_rep2 us_rep2) Bool)

(declare-const dummy21 us_rep2)

(declare-datatypes ((t105b__ref 0))
(((t105b__refqtmk (t105b__content us_rep2)))))
(define-fun t105b__ref_t105b__content__projection ((a t105b__ref)) us_rep2 
  (t105b__content a))

(define-fun default_initial_assumption4 ((temp___expr_219 us_rep1)
  (temp___skip_top_level_220 Bool)) Bool (and
                                         (= (rec__binary_search__tree_acc__is_null_pointer
                                            (rec__binary_search__tree__left
                                            (us_split_fields1
                                            temp___expr_219))) true)
                                         (= (rec__binary_search__tree_acc__is_null_pointer
                                            (rec__binary_search__tree__right
                                            (us_split_fields1
                                            temp___expr_219))) true)))

;; m_contains__post_axiom
  (assert true)

;; olt__post_axiom
  (assert
  (forall ((v1 Int))
  (forall ((t us_rep))
  (! (=> (dynamic_invariant v1 true true true true)
     (let ((result (olt v1 t)))
     (and
     (= (= result true)
     (forall ((i Int))
     (=> (and (<= (- 2147483648) i) (<= i 2147483647))
     (=> (= (m_contains t i) true) (< v1 i)))))
     (= (= result true)
     (or (= (bool_eq t us_null_pointer) true)
     (and
     (and
     (< v1 (to_rep
           (rec__binary_search__tree__data
           (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))))
     (= (olt v1
        (rec__binary_search__tree__left
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) true))
     (= (olt v1
        (rec__binary_search__tree__right
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) true))))))) :pattern (
  (olt v1 t)) ))))

;; olt__post_axiom
  (assert
  (forall ((t us_rep))
  (forall ((v1 Int))
  (! (=> (dynamic_invariant v1 true true true true)
     (let ((result (olt1 t v1)))
     (and
     (= (= result true)
     (forall ((i Int))
     (=> (and (<= (- 2147483648) i) (<= i 2147483647))
     (=> (= (m_contains t i) true) (< i v1)))))
     (= (= result true)
     (or (= (bool_eq t us_null_pointer) true)
     (and
     (and
     (< (to_rep
        (rec__binary_search__tree__data
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))) v1)
     (= (olt1
        (rec__binary_search__tree__left
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))
        v1) true))
     (= (olt1
        (rec__binary_search__tree__right
        (us_split_fields1 (rec__binary_search__tree_acc__pointer_value t)))
        v1) true))))))) :pattern ((olt1 t v1)) ))))

;; sorted__post_axiom
  (assert true)

;; size__post_axiom
  (assert
  (forall ((t us_rep)) (! (dynamic_invariant3 (size t) true false true
  true) :pattern ((size t)) )))

;; all_v__post_axiom
  (assert
  (forall ((t us_rep))
  (! (=> (< (size t) 2147483647)
     (let ((result (all_v t)))
     (and (<= (length result) (size t))
     (forall ((i Int))
     (=> (and (<= (- 2147483648) i) (<= i 2147483647))
     (= (= (m_contains t i) true) (= (contains result i) true))))))) :pattern (
  (all_v t)) )))

;; ole__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (= (= (ole left right) true)
     (forall ((item Int))
     (=> (and (in_range3 item) (= (contains left item) true))
     (= (contains right item) true)))) :pattern ((ole left right)) )))

;; oeq__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (= (= (oeq left right) true)
     (and (= (ole left right) true) (= (ole right left) true))) :pattern (
  (oeq left right)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep3))
  (! (let ((result (is_empty container)))
     (and
     (= (= result true)
     (forall ((item Int))
     (not (and (in_range3 item) (= (contains container item) true)))))
     (= (= result true) (= (length container) 0)))) :pattern ((is_empty
                                                              container)) )))

;; included_except__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (forall ((item Int))
  (! (=> (dynamic_invariant1 item true true true true)
     (= (= (included_except left right item) true)
     (forall ((e Int))
     (=> (and (in_range3 e) (= (contains left e) true))
     (or (= (contains right e) true) (= e item)))))) :pattern ((included_except
                                                               left right
                                                               item)) ))))

(declare-fun includes_intersection (us_rep3 us_rep3 us_rep3) Bool)

(declare-fun includes_intersection__function_guard (Bool us_rep3 us_rep3
  us_rep3) Bool)

;; includes_intersection__post_axiom
  (assert
  (forall ((container us_rep3) (left us_rep3) (right us_rep3))
  (! (= (= (includes_intersection container left right) true)
     (forall ((item Int))
     (=> (and (in_range3 item) (= (contains left item) true))
     (=> (= (contains right item) true) (= (contains container item) true))))) :pattern (
  (includes_intersection container left right)) )))

;; included_in_union__post_axiom
  (assert
  (forall ((container us_rep3) (left us_rep3) (right us_rep3))
  (! (= (= (included_in_union container left right) true)
     (forall ((item Int))
     (=> (and (in_range3 item) (= (contains container item) true))
     (or (= (contains left item) true) (= (contains right item) true))))) :pattern (
  (included_in_union container left right)) )))

(declare-fun no_overlap (us_rep3 us_rep3) Bool)

(declare-fun no_overlap__function_guard (Bool us_rep3 us_rep3) Bool)

;; no_overlap__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (= (= (no_overlap left right) true)
     (forall ((item Int))
     (=> (and (in_range3 item) (= (contains left item) true))
     (not (= (contains right item) true))))) :pattern ((no_overlap left
                                                       right)) )))

(declare-fun intersection1 (us_rep3 us_rep3) us_rep3)

(declare-fun intersection__function_guard (us_rep3 us_rep3 us_rep3) Bool)

;; num_overlaps__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (let ((result (num_overlaps left right)))
     (and
     (and
     (and
     (and (= result (length (intersection1 left right)))
     (ite (= (ole left right) true) (= result (length left))
     (< result (length left))))
     (ite (= (ole right left) true) (= result (length right))
     (< result (length right))))
     (= (= result 0) (= (no_overlap left right) true))) (dynamic_invariant2
     result true false true true))) :pattern ((num_overlaps left right)) )))

;; intersection__post_axiom
  (assert
  (forall ((left us_rep3) (right us_rep3))
  (! (let ((result (intersection1 left right)))
     (and (and (= (ole result left) true) (= (ole result right) true))
     (= (includes_intersection result left right) true))) :pattern ((intersection1
                                                                    left
                                                                    right)) )))

(assert
;; defqtvc
 ;; File "binary_search.adb", line 147, characters 0-0
  (not
  (forall ((t__pointer_value us_split_fields) (t__pointer_address Int)
  (t__is_null_pointer Bool) (seen us_rep3))
  (=> (dynamic_invariant v true false true true)
  (=>
  (= (sorted
     (us_repqtmk t__is_null_pointer t__pointer_address
     (us_close (us_repqtmk1 t__pointer_value)))) true)
  (=>
  (< (size
     (us_repqtmk t__is_null_pointer t__pointer_address
     (us_close (us_repqtmk1 t__pointer_value)))) 2147483647)
  (forall ((l__split_fields integer))
  (=> (= l__split_fields dummy)
  (forall ((l__split_discrs Bool))
  (=> (= l__split_discrs (distinct 0 0))
  (=> (= l__attr__constrained false)
  (forall ((h__split_fields integer))
  (=> (= h__split_fields dummy)
  (forall ((h__split_discrs Bool))
  (=> (= h__split_discrs (distinct 0 0))
  (=> (= h__attr__constrained false)
  (forall ((spark__branch Bool))
  (=>
  (= spark__branch (bool_eq
                   (us_repqtmk t__is_null_pointer t__pointer_address
                   (us_close (us_repqtmk1 t__pointer_value)))
                   us_null_pointer))
  (=> (not (= spark__branch true))
  (let ((o (us_repqtmk t__is_null_pointer t__pointer_address
           (us_close (us_repqtmk1 t__pointer_value)))))
  (let ((binary_search__insert__B_2__t_old__assume (all_v o)))
  (=>
  (and (<= (length binary_search__insert__B_2__t_old__assume) (size o))
  (forall ((i Int))
  (=> (and (<= (- 2147483648) i) (<= i 2147483647))
  (= (= (m_contains o i) true)
  (= (contains binary_search__insert__B_2__t_old__assume i) true)))))
  (=> (= binary_search__insert__B_2__t_old__assume t_old)
  (forall ((usf us_pledge_ty))
  (=>
  (forall ((temp___borrowed_358 us_rep))
  (forall ((temp___brower_357 us_rep))
  (! (= (= (us_pledge_get usf temp___borrowed_358 temp___brower_357) true)
     (= temp___borrowed_358 temp___brower_357)) :pattern ((us_pledge_get usf
                                                          temp___borrowed_358
                                                          temp___brower_357)) )))
  (forall ((binary_search__insert__B_2__x__pledge us_pledge_ty))
  (=> (= binary_search__insert__B_2__x__pledge usf)
  (forall ((x__pointer_value us_split_fields))
  (=>
  (= (us_repqtmk1 x__pointer_value) (rec__binary_search__tree_acc__pointer_value
                                    (us_repqtmk t__is_null_pointer
                                    t__pointer_address
                                    (us_close (us_repqtmk1 t__pointer_value)))))
  (forall ((x__pointer_address Int))
  (=> (= x__pointer_address t__pointer_address)
  (forall ((x__is_null_pointer Bool))
  (=> (= x__is_null_pointer t__is_null_pointer)
  (=> (default_initial_assumption2 seen false)
  (forall ((t__is_null_pointer1 Bool) (l__split_fields1 integer)
  (l__split_discrs1 Bool) (h__split_fields1 integer) (h__split_discrs1 Bool)
  (x__pointer_value1 us_split_fields) (x__pointer_address1 Int)
  (x__is_null_pointer1 Bool)
  (binary_search__insert__B_2__x__pledge1 us_pledge_ty) (seen1 us_rep3))
  (let ((binary_search__insert__B_2__x__pledge2 (us_pledge_ty__refqtmk
                                                binary_search__insert__B_2__x__pledge1)))
  (=>
  (and
  (not
  (= (bool_eq
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))) us_null_pointer) true))
  (and
  (= (sorted
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1)))) true)
  (and
  (and
  (= (olt3
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1)))
     (us_repqtmk2 (us_split_discrsqtmk h__split_discrs1)
     (us_split_fieldsqtmk1 h__split_fields1))) true)
  (= (olt2
     (us_repqtmk2 (us_split_discrsqtmk l__split_discrs1)
     (us_split_fieldsqtmk1 l__split_fields1))
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1)))) true))
  (and
  (and
  (= (olt5 v
     (us_repqtmk2 (us_split_discrsqtmk h__split_discrs1)
     (us_split_fieldsqtmk1 h__split_fields1))) true)
  (= (olt4
     (us_repqtmk2 (us_split_discrsqtmk l__split_discrs1)
     (us_split_fieldsqtmk1 l__split_fields1)) v) true))
  (and
  (<= (length seen1) (- (size
                        (us_repqtmk x__is_null_pointer x__pointer_address
                        (us_close (us_repqtmk1 x__pointer_value)))) (size
                                                                    (us_repqtmk
                                                                    x__is_null_pointer1
                                                                    x__pointer_address1
                                                                    (us_close
                                                                    (us_repqtmk1
                                                                    x__pointer_value1))))))
  (and
  (forall ((i Int))
  (=> (and (<= (- 2147483648) i) (<= i 2147483647))
  (=>
  (= (m_contains
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))) i) true)
  (= (contains t_old i) true))))
  (and
  (forall ((i Int))
  (=> (and (in_range3 i) (= (contains seen1 i) true))
  (= (contains t_old i) true)))
  (and
  (forall ((i Int))
  (=> (and (in_range3 i) (= (contains t_old i) true))
  (or (= (contains seen1 i) true)
  (= (m_contains
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))) i) true))))
  (and
  (forall ((i Int))
  (=> (and (in_range3 i) (= (contains seen1 i) true))
  (not
  (= (m_contains
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))) i) true))))
  (and
  (forall ((temp___borrowed_344 us_rep))
  (forall ((temp___brower_343 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge1
        temp___borrowed_344 temp___brower_343) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_344))
     (= x__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_343))))
     (forall ((i Int))
     (=> (and (<= (- 2147483648) i) (<= i 2147483647))
     (=> (= (m_contains temp___brower_343 i) true)
     (= (m_contains temp___borrowed_344 i) true))))) :pattern ((us_pledge_get
                                                               (us_pledge_ty__content
                                                               binary_search__insert__B_2__x__pledge2)
                                                               temp___borrowed_344
                                                               temp___brower_343)) )))
  (and
  (forall ((temp___borrowed_339 us_rep))
  (forall ((temp___brower_338 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge1
        temp___borrowed_339 temp___brower_338) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_339))
     (= x__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_338))))
     (forall ((i Int))
     (=> (and (in_range3 i) (= (contains seen1 i) true))
     (= (m_contains temp___borrowed_339 i) true)))) :pattern ((us_pledge_get
                                                              (us_pledge_ty__content
                                                              binary_search__insert__B_2__x__pledge2)
                                                              temp___borrowed_339
                                                              temp___brower_338)) )))
  (and
  (forall ((temp___borrowed_334 us_rep))
  (forall ((temp___brower_333 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge1
        temp___borrowed_334 temp___brower_333) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_334))
     (= x__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_333))))
     (forall ((i Int))
     (=> (and (<= (- 2147483648) i) (<= i 2147483647))
     (=> (= (m_contains temp___borrowed_334 i) true)
     (or (= (contains seen1 i) true)
     (= (m_contains temp___brower_333 i) true)))))) :pattern ((us_pledge_get
                                                              (us_pledge_ty__content
                                                              binary_search__insert__B_2__x__pledge2)
                                                              temp___borrowed_334
                                                              temp___brower_333)) )))
  (forall ((temp___borrowed_329 us_rep))
  (forall ((temp___brower_328 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge1
        temp___borrowed_329 temp___brower_328) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_329))
     (= x__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_328))))
     (=>
     (and
     (and (= (sorted temp___brower_328) true)
     (= (olt3 temp___brower_328
        (us_repqtmk2 (us_split_discrsqtmk h__split_discrs1)
        (us_split_fieldsqtmk1 h__split_fields1))) true))
     (= (olt2
        (us_repqtmk2 (us_split_discrsqtmk l__split_discrs1)
        (us_split_fieldsqtmk1 l__split_fields1)) temp___brower_328) true))
     (= (sorted temp___borrowed_329) true))) :pattern ((us_pledge_get
                                                       (us_pledge_ty__content
                                                       binary_search__insert__B_2__x__pledge2)
                                                       temp___borrowed_329
                                                       temp___brower_328)) )))))))))))))))
  (forall ((l__split_fields2 integer) (l__split_discrs2 Bool)
  (h__split_fields2 integer) (h__split_discrs2 Bool)
  (x__pointer_value2 us_split_fields) (x__pointer_address2 Int)
  (x__is_null_pointer2 Bool)
  (binary_search__insert__B_2__x__pledge3 us_pledge_ty) (seen2 us_rep3))
  (let ((binary_search__insert__B_2__x__pledge4 (us_pledge_ty__refqtmk
                                                binary_search__insert__B_2__x__pledge3)))
  (=>
  (exists ((o1 Int))
  (and
  (= (to_rep
     (rec__binary_search__tree__data
     (us_split_fields1
     (rec__binary_search__tree_acc__pointer_value
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))))))) o1)
  (exists ((spark__branch1 Bool))
  (and (= spark__branch1 (ite (= o1 v) true false))
  (and (not (= spark__branch1 true))
  (exists ((o2 Int))
  (and
  (= (to_rep
     (rec__binary_search__tree__data
     (us_split_fields1
     (rec__binary_search__tree_acc__pointer_value
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))))))) o2)
  (exists ((spark__branch2 Bool))
  (and (= spark__branch2 (ite (< v o2) true false))
  (ite (= spark__branch2 true)
  (and
  (and
  (exists ((spark__branch3 Bool))
  (and
  (= spark__branch3 (bool_eq
                    (rec__binary_search__tree__left
                    (us_split_fields1
                    (rec__binary_search__tree_acc__pointer_value
                    (us_repqtmk x__is_null_pointer1 x__pointer_address1
                    (us_close (us_repqtmk1 x__pointer_value1))))))
                    us_null_pointer))
  (and (not (= spark__branch3 true))
  (and (=> (= h__attr__constrained true) (= (distinct 1 0) h__split_discrs1))
  (and
  (= h__split_fields2 (rec__binary_search__tree__data
                      (us_split_fields1
                      (rec__binary_search__tree_acc__pointer_value
                      (us_repqtmk x__is_null_pointer1 x__pointer_address1
                      (us_close (us_repqtmk1 x__pointer_value1)))))))
  (and (= h__split_discrs2 (distinct 1 0))
  (exists ((o3 Int))
  (and
  (= (to_rep
     (rec__binary_search__tree__data
     (us_split_fields1
     (rec__binary_search__tree_acc__pointer_value
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))))))) o3)
  (let ((o4 (rec__binary_search__tree__right
            (us_split_fields1
            (rec__binary_search__tree_acc__pointer_value
            (us_repqtmk x__is_null_pointer1 x__pointer_address1
            (us_close (us_repqtmk1 x__pointer_value1))))))))
  (let ((o5 (all_v o4)))
  (and
  (and (<= (length o5) (size o4))
  (forall ((i Int))
  (=> (and (<= (- 2147483648) i) (<= i 2147483647))
  (= (= (m_contains o4 i) true) (= (contains o5 i) true)))))
  (let ((o6 (add o5 o3)))
  (and
  (and
  (and (and (= (length o6) (+ (length o5) 1)) (= (contains o6 o3) true))
  (= (ole o5 o6) true)) (= (included_except o6 o5 o3) true))
  (let ((o7 (union1 seen1 o6)))
  (and
  (and
  (and
  (and
  (= (length o7) (+ (- (length seen1) (num_overlaps seen1 o6)) (length o6)))
  (= (ole seen1 o7) true)) (= (ole o6 o7) true))
  (= (included_in_union o7 seen1 o6) true))
  (and (= seen2 o7)
  (exists ((usf1 us_pledge_ty))
  (and
  (forall ((temp___borrowed_316 us_rep))
  (forall ((temp___brower_313 us_rep))
  (! (= (us_pledge_get usf1 temp___borrowed_316 temp___brower_313) (us_pledge_get
                                                                   binary_search__insert__B_2__x__pledge1
                                                                   temp___borrowed_316
                                                                   (us_repqtmk
                                                                   x__is_null_pointer1
                                                                   x__pointer_address1
                                                                   (us_close
                                                                   (us_repqtmk1
                                                                   (let ((q_ 
                                                                   (us_split_fields1
                                                                   (rec__binary_search__tree_acc__pointer_value
                                                                   (us_repqtmk
                                                                   x__is_null_pointer1
                                                                   x__pointer_address1
                                                                   (us_close
                                                                   (us_repqtmk1
                                                                   x__pointer_value1)))))))
                                                                   (us_split_fieldsqtmk
                                                                   (rec__binary_search__tree__data
                                                                   q_)
                                                                   temp___brower_313
                                                                   (rec__binary_search__tree__right
                                                                   q_)))))))) :pattern (
  (us_pledge_get usf1 temp___borrowed_316 temp___brower_313)) )))
  (and (= binary_search__insert__B_2__x__pledge3 usf1)
  (let ((temp___312 (rec__binary_search__tree__left
                    (us_split_fields1
                    (rec__binary_search__tree_acc__pointer_value
                    (us_repqtmk x__is_null_pointer1 x__pointer_address1
                    (us_close (us_repqtmk1 x__pointer_value1))))))))
  (and
  (= (us_repqtmk1 x__pointer_value2) (rec__binary_search__tree_acc__pointer_value
                                     temp___312))
  (and
  (= x__pointer_address2 (rec__binary_search__tree_acc__pointer_address
                         temp___312))
  (and
  (= x__is_null_pointer2 (rec__binary_search__tree_acc__is_null_pointer
                         temp___312))
  (forall ((temp___borrowed_320 us_rep))
  (forall ((temp___brower_319 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge3
        temp___borrowed_320 temp___brower_319) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_320))
     (= x__is_null_pointer2 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_319))))
     (=>
     (and
     (and (= (sorted temp___brower_319) true)
     (= (olt3 temp___brower_319
        (us_repqtmk2 (us_split_discrsqtmk h__split_discrs2)
        (us_split_fieldsqtmk1 h__split_fields2))) true))
     (= (olt2
        (us_repqtmk2 (us_split_discrsqtmk l__split_discrs1)
        (us_split_fieldsqtmk1 l__split_fields1)) temp___brower_319) true))
     (= (sorted temp___borrowed_320) true))) :pattern ((us_pledge_get
                                                       (us_pledge_ty__content
                                                       binary_search__insert__B_2__x__pledge4)
                                                       temp___borrowed_320
                                                       temp___brower_319)) ))))))))))))))))))))))))))
  (= l__split_fields2 l__split_fields1))
  (= l__split_discrs2 l__split_discrs1))
  (and
  (and
  (exists ((spark__branch3 Bool))
  (and
  (= spark__branch3 (bool_eq
                    (rec__binary_search__tree__right
                    (us_split_fields1
                    (rec__binary_search__tree_acc__pointer_value
                    (us_repqtmk x__is_null_pointer1 x__pointer_address1
                    (us_close (us_repqtmk1 x__pointer_value1))))))
                    us_null_pointer))
  (and (not (= spark__branch3 true))
  (and (=> (= l__attr__constrained true) (= (distinct 1 0) l__split_discrs1))
  (and
  (= l__split_fields2 (rec__binary_search__tree__data
                      (us_split_fields1
                      (rec__binary_search__tree_acc__pointer_value
                      (us_repqtmk x__is_null_pointer1 x__pointer_address1
                      (us_close (us_repqtmk1 x__pointer_value1)))))))
  (and (= l__split_discrs2 (distinct 1 0))
  (exists ((o3 Int))
  (and
  (= (to_rep
     (rec__binary_search__tree__data
     (us_split_fields1
     (rec__binary_search__tree_acc__pointer_value
     (us_repqtmk x__is_null_pointer1 x__pointer_address1
     (us_close (us_repqtmk1 x__pointer_value1))))))) o3)
  (let ((o4 (rec__binary_search__tree__left
            (us_split_fields1
            (rec__binary_search__tree_acc__pointer_value
            (us_repqtmk x__is_null_pointer1 x__pointer_address1
            (us_close (us_repqtmk1 x__pointer_value1))))))))
  (let ((o5 (all_v o4)))
  (and
  (and (<= (length o5) (size o4))
  (forall ((i Int))
  (=> (and (<= (- 2147483648) i) (<= i 2147483647))
  (= (= (m_contains o4 i) true) (= (contains o5 i) true)))))
  (let ((o6 (add o5 o3)))
  (and
  (and
  (and (and (= (length o6) (+ (length o5) 1)) (= (contains o6 o3) true))
  (= (ole o5 o6) true)) (= (included_except o6 o5 o3) true))
  (let ((o7 (union1 seen1 o6)))
  (and
  (and
  (and
  (and
  (= (length o7) (+ (- (length seen1) (num_overlaps seen1 o6)) (length o6)))
  (= (ole seen1 o7) true)) (= (ole o6 o7) true))
  (= (included_in_union o7 seen1 o6) true))
  (and (= seen2 o7)
  (exists ((usf1 us_pledge_ty))
  (and
  (forall ((temp___borrowed_298 us_rep))
  (forall ((temp___brower_295 us_rep))
  (! (= (us_pledge_get usf1 temp___borrowed_298 temp___brower_295) (us_pledge_get
                                                                   binary_search__insert__B_2__x__pledge1
                                                                   temp___borrowed_298
                                                                   (us_repqtmk
                                                                   x__is_null_pointer1
                                                                   x__pointer_address1
                                                                   (us_close
                                                                   (us_repqtmk1
                                                                   (let ((q_ 
                                                                   (us_split_fields1
                                                                   (rec__binary_search__tree_acc__pointer_value
                                                                   (us_repqtmk
                                                                   x__is_null_pointer1
                                                                   x__pointer_address1
                                                                   (us_close
                                                                   (us_repqtmk1
                                                                   x__pointer_value1)))))))
                                                                   (us_split_fieldsqtmk
                                                                   (rec__binary_search__tree__data
                                                                   q_)
                                                                   (rec__binary_search__tree__left
                                                                   q_)
                                                                   temp___brower_295))))))) :pattern (
  (us_pledge_get usf1 temp___borrowed_298 temp___brower_295)) )))
  (and (= binary_search__insert__B_2__x__pledge3 usf1)
  (let ((temp___294 (rec__binary_search__tree__right
                    (us_split_fields1
                    (rec__binary_search__tree_acc__pointer_value
                    (us_repqtmk x__is_null_pointer1 x__pointer_address1
                    (us_close (us_repqtmk1 x__pointer_value1))))))))
  (and
  (= (us_repqtmk1 x__pointer_value2) (rec__binary_search__tree_acc__pointer_value
                                     temp___294))
  (and
  (= x__pointer_address2 (rec__binary_search__tree_acc__pointer_address
                         temp___294))
  (and
  (= x__is_null_pointer2 (rec__binary_search__tree_acc__is_null_pointer
                         temp___294))
  (forall ((temp___borrowed_302 us_rep))
  (forall ((temp___brower_301 us_rep))
  (! (=>
     (and
     (= (us_pledge_get binary_search__insert__B_2__x__pledge3
        temp___borrowed_302 temp___brower_301) true)
     (and
     (= t__is_null_pointer1 (rec__binary_search__tree_acc__is_null_pointer
                            temp___borrowed_302))
     (= x__is_null_pointer2 (rec__binary_search__tree_acc__is_null_pointer
                            temp___brower_301))))
     (=>
     (and
     (and (= (sorted temp___brower_301) true)
     (= (olt3 temp___brower_301
        (us_repqtmk2 (us_split_discrsqtmk h__split_discrs1)
        (us_split_fieldsqtmk1 h__split_fields1))) true))
     (= (olt2
        (us_repqtmk2 (us_split_discrsqtmk l__split_discrs2)
        (us_split_fieldsqtmk1 l__split_fields2)) temp___brower_301) true))
     (= (sorted temp___borrowed_302) true))) :pattern ((us_pledge_get
                                                       (us_pledge_ty__content
                                                       binary_search__insert__B_2__x__pledge4)
                                                       temp___borrowed_302
                                                       temp___brower_301)) ))))))))))))))))))))))))))
  (= h__split_fields2 h__split_fields1))
  (= h__split_discrs2 h__split_discrs1))))))))))))
  (not
  (= (bool_eq
     (us_repqtmk x__is_null_pointer2 x__pointer_address2
     (us_close (us_repqtmk1 x__pointer_value2))) us_null_pointer) true))))))))))))))))))))))))))))))))))))))))))
(check-sat)
