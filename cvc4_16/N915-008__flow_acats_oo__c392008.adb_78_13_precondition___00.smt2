(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep (select a temp___idx_91)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep (select a temp___idx_91)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ((string____ref 0))
(((string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(declare-sort dollar_amount 0)

(declare-fun dollar_amountqtint (dollar_amount) Int)

;; dollar_amount'axiom
  (assert
  (forall ((i dollar_amount))
  (and (<= (- 30000) (dollar_amountqtint i))
  (<= (dollar_amountqtint i) 30000))))

(define-fun in_range4 ((x Int)) Bool (and (<= (- 30000) x) (<= x 30000)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (dollar_amount dollar_amount) Bool)

(declare-const dummy4 dollar_amount)

(declare-datatypes ((dollar_amount__ref 0))
(((dollar_amount__refqtmk (dollar_amount__content dollar_amount)))))
(define-fun dollar_amount__ref_dollar_amount__content__projection ((a dollar_amount__ref)) dollar_amount 
  (dollar_amount__content a))

(define-fun to_rep2 ((x dollar_amount)) Int (dollar_amountqtint x))

(declare-fun of_rep2 (Int) dollar_amount)

;; inversion_axiom
  (assert
  (forall ((x dollar_amount))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x dollar_amount)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__c392008_0__account__current_balance dollar_amount)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__c392008_0__account__current_balance__projection ((a us_split_fields)) dollar_amount 
  (rec__c392008_0__account__current_balance a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep2
                           (rec__c392008_0__account__current_balance
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__c392008_0__account__current_balance
                                                  (us_split_fields1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const c392008_0__account__current_balance__first__bit Int)

(declare-const c392008_0__account__current_balance__last__bit Int)

(declare-const c392008_0__account__current_balance__position Int)

;; c392008_0__account__current_balance__first__bit_axiom
  (assert (<= 0 c392008_0__account__current_balance__first__bit))

;; c392008_0__account__current_balance__last__bit_axiom
  (assert
  (< c392008_0__account__current_balance__first__bit c392008_0__account__current_balance__last__bit))

;; c392008_0__account__current_balance__position_axiom
  (assert (<= 0 c392008_0__account__current_balance__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ((account__ref 0))
(((account__refqtmk (account__content us_rep)))))
(define-fun account__ref_account__content__projection ((a account__ref)) us_rep 
  (account__content a))

(declare-const b_acct__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun default_initial_assumption ((temp___expr_188 us_rep)
  (temp___skip_top_level_189 Bool)) Bool (= (attr__tag temp___expr_188) 
  us_tag))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__c392008_1__account__overdraft_fee dollar_amount)(rec__c392008_0__account__current_balance1 dollar_amount)(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__c392008_1__account__overdraft_fee__projection ((a us_split_fields2)) dollar_amount 
  (rec__c392008_1__account__overdraft_fee a))

(define-fun us_split_fields_rec__c392008_0__account__current_balance__2__projection ((a us_split_fields2)) dollar_amount 
  (rec__c392008_0__account__current_balance1 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1 (us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (dollar_amount us_private) us_private)

(declare-fun extract__c392008_1__account__overdraft_fee (us_private) dollar_amount)

;; extract__c392008_1__account__overdraft_fee__conv
  (assert
  (forall ((c392008_1__account__overdraft_fee dollar_amount))
  (forall ((rec__ext__2 us_private))
  (= (extract__c392008_1__account__overdraft_fee
     (hide_ext__ c392008_1__account__overdraft_fee rec__ext__2)) c392008_1__account__overdraft_fee))))

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk
                                         (us_split_fieldsqtmk
                                         (rec__c392008_0__account__current_balance1
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__c392008_1__account__overdraft_fee
                                         (us_split_fields3 a))
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1
                                         (us_split_fieldsqtmk1
                                         (extract__c392008_1__account__overdraft_fee
                                         (rec__ext__ (us_split_fields1 r)))
                                         (rec__c392008_0__account__current_balance
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep2
                            (rec__c392008_1__account__overdraft_fee
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__c392008_1__account__overdraft_fee
                                                   (us_split_fields3 b))))
                         (= (to_rep2
                            (rec__c392008_0__account__current_balance1
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__c392008_0__account__current_balance1
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const us_tag1 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const c392008_1__account__overdraft_fee__first__bit Int)

(declare-const c392008_1__account__overdraft_fee__last__bit Int)

(declare-const c392008_1__account__overdraft_fee__position Int)

;; c392008_1__account__overdraft_fee__first__bit_axiom
  (assert (<= 0 c392008_1__account__overdraft_fee__first__bit))

;; c392008_1__account__overdraft_fee__last__bit_axiom
  (assert
  (< c392008_1__account__overdraft_fee__first__bit c392008_1__account__overdraft_fee__last__bit))

;; c392008_1__account__overdraft_fee__position_axiom
  (assert (<= 0 c392008_1__account__overdraft_fee__position))

(declare-const c392008_0__account__current_balance__first__bit1 Int)

(declare-const c392008_0__account__current_balance__last__bit1 Int)

(declare-const c392008_0__account__current_balance__position1 Int)

;; c392008_0__account__current_balance__first__bit_axiom
  (assert (<= 0 c392008_0__account__current_balance__first__bit1))

;; c392008_0__account__current_balance__last__bit_axiom
  (assert
  (< c392008_0__account__current_balance__first__bit1 c392008_0__account__current_balance__last__bit1))

;; c392008_0__account__current_balance__position_axiom
  (assert (<= 0 c392008_0__account__current_balance__position1))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((account__ref1 0))
(((account__refqtmk1 (account__content1 us_rep1)))))
(define-fun account__ref_account__content__2__projection ((a account__ref1)) us_rep1 
  (account__content1 a))

(declare-const c_acct__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun default_initial_assumption1 ((temp___expr_196 us_rep1)
  (temp___skip_top_level_197 Bool)) Bool (= (attr__tag1 temp___expr_196) 
  us_tag1))

(declare-sort interest_rate 0)

(declare-fun interest_rateqtint (interest_rate) Int)

;; interest_rate'axiom
  (assert
  (forall ((i interest_rate))
  (and (<= 0 (interest_rateqtint i)) (<= (interest_rateqtint i) 100))))

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (interest_rate interest_rate) Bool)

(declare-const dummy7 interest_rate)

(declare-datatypes ((interest_rate__ref 0))
(((interest_rate__refqtmk (interest_rate__content interest_rate)))))
(define-fun interest_rate__ref_interest_rate__content__projection ((a interest_rate__ref)) interest_rate 
  (interest_rate__content a))

(define-fun to_rep3 ((x interest_rate)) Int (interest_rateqtint x))

(declare-fun of_rep3 (Int) interest_rate)

;; inversion_axiom
  (assert
  (forall ((x interest_rate))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x interest_rate)) (! (in_range5
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__c392008_2__account__rate interest_rate)(rec__c392008_0__account__current_balance2 dollar_amount)(rec__c392008_1__account__overdraft_fee1 dollar_amount)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__c392008_2__account__rate__projection ((a us_split_fields4)) interest_rate 
  (rec__c392008_2__account__rate a))

(define-fun us_split_fields_rec__c392008_0__account__current_balance__3__projection ((a us_split_fields4)) dollar_amount 
  (rec__c392008_0__account__current_balance2 a))

(define-fun us_split_fields_rec__c392008_1__account__overdraft_fee__2__projection ((a us_split_fields4)) dollar_amount 
  (rec__c392008_1__account__overdraft_fee1 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2 (us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (interest_rate dollar_amount us_private) us_private)

(declare-fun extract__c392008_2__account__rate (us_private) interest_rate)

;; extract__c392008_2__account__rate__conv
  (assert
  (forall ((c392008_2__account__rate interest_rate))
  (forall ((c392008_2__account__overdraft_fee dollar_amount))
  (forall ((rec__ext__3 us_private))
  (= (extract__c392008_2__account__rate
     (hide_ext__1 c392008_2__account__rate c392008_2__account__overdraft_fee
     rec__ext__3)) c392008_2__account__rate)))))

;; extract__c392008_1__account__overdraft_fee__conv
  (assert
  (forall ((c392008_2__account__rate interest_rate))
  (forall ((c392008_2__account__overdraft_fee dollar_amount))
  (forall ((rec__ext__3 us_private))
  (= (extract__c392008_1__account__overdraft_fee
     (hide_ext__1 c392008_2__account__rate c392008_2__account__overdraft_fee
     rec__ext__3)) c392008_2__account__overdraft_fee)))))

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk
                                          (us_split_fieldsqtmk
                                          (rec__c392008_0__account__current_balance2
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__c392008_2__account__rate
                                          (us_split_fields5 a))
                                          (rec__c392008_1__account__overdraft_fee1
                                          (us_split_fields5 a))
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2
                                          (us_split_fieldsqtmk2
                                          (extract__c392008_2__account__rate
                                          (rec__ext__ (us_split_fields1 r)))
                                          (rec__c392008_0__account__current_balance
                                          (us_split_fields1 r))
                                          (extract__c392008_1__account__overdraft_fee
                                          (rec__ext__ (us_split_fields1 r)))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep3
                            (rec__c392008_2__account__rate
                            (us_split_fields5 a))) (to_rep3
                                                   (rec__c392008_2__account__rate
                                                   (us_split_fields5 b))))
                         (= (to_rep2
                            (rec__c392008_0__account__current_balance2
                            (us_split_fields5 a))) (to_rep2
                                                   (rec__c392008_0__account__current_balance2
                                                   (us_split_fields5 b)))))
                         (= (to_rep2
                            (rec__c392008_1__account__overdraft_fee1
                            (us_split_fields5 a))) (to_rep2
                                                   (rec__c392008_1__account__overdraft_fee1
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const us_tag2 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const c392008_2__account__rate__first__bit Int)

(declare-const c392008_2__account__rate__last__bit Int)

(declare-const c392008_2__account__rate__position Int)

;; c392008_2__account__rate__first__bit_axiom
  (assert (<= 0 c392008_2__account__rate__first__bit))

;; c392008_2__account__rate__last__bit_axiom
  (assert
  (< c392008_2__account__rate__first__bit c392008_2__account__rate__last__bit))

;; c392008_2__account__rate__position_axiom
  (assert (<= 0 c392008_2__account__rate__position))

(declare-const c392008_0__account__current_balance__first__bit2 Int)

(declare-const c392008_0__account__current_balance__last__bit2 Int)

(declare-const c392008_0__account__current_balance__position2 Int)

;; c392008_0__account__current_balance__first__bit_axiom
  (assert (<= 0 c392008_0__account__current_balance__first__bit2))

;; c392008_0__account__current_balance__last__bit_axiom
  (assert
  (< c392008_0__account__current_balance__first__bit2 c392008_0__account__current_balance__last__bit2))

;; c392008_0__account__current_balance__position_axiom
  (assert (<= 0 c392008_0__account__current_balance__position2))

(declare-const c392008_1__account__overdraft_fee__first__bit1 Int)

(declare-const c392008_1__account__overdraft_fee__last__bit1 Int)

(declare-const c392008_1__account__overdraft_fee__position1 Int)

;; c392008_1__account__overdraft_fee__first__bit_axiom
  (assert (<= 0 c392008_1__account__overdraft_fee__first__bit1))

;; c392008_1__account__overdraft_fee__last__bit_axiom
  (assert
  (< c392008_1__account__overdraft_fee__first__bit1 c392008_1__account__overdraft_fee__last__bit1))

;; c392008_1__account__overdraft_fee__position_axiom
  (assert (<= 0 c392008_1__account__overdraft_fee__position1))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-const dummy8 us_rep2)

(declare-datatypes ((account__ref2 0))
(((account__refqtmk2 (account__content2 us_rep2)))))
(define-fun account__ref_account__content__3__projection ((a account__ref2)) us_rep2 
  (account__content2 a))

(declare-const ic_acct__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun default_initial_assumption2 ((temp___expr_212 us_rep2)
  (temp___skip_top_level_213 Bool)) Bool (= (attr__tag2 temp___expr_212) 
  us_tag2))

(declare-fun temp___String_Literal_244 (tuple0) (Array Int character))

;; temp___String_Literal_244__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 2)) 51))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 3)) 57)
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 4)) 50))
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 5)) 48))
     (and
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 6)) 48)
     (= (to_rep (select (temp___String_Literal_244 us_void_param) 7)) 56)))) :pattern (
  (temp___String_Literal_244 us_void_param)) )))

(declare-fun temp___String_Literal_245 (tuple0) (Array Int character))

;; temp___String_Literal_245__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 2)) 104))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 3)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 4)) 99))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 5)) 107))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 6)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 7)) 116)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 8)) 104)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 9)) 97))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 10)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 11)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 12)) 116))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 13)) 104)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 14)) 101))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 15)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 16)) 117)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 17)) 115)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 18)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 20)) 111))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 21)) 102)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 22)) 32)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 23)) 97)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 25)) 99))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 26)) 108)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 27)) 97)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 28)) 115)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 29)) 115))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 30)) 45))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 31)) 119)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 32)) 105))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 33)) 100)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 34)) 101))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 35)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 36)) 102)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 37)) 111)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 38)) 114)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 39)) 109))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 40)) 97)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 41)) 108))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 42)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 43)) 112))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 44)) 97))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 45)) 114)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 46)) 97)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 47)) 109)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 48)) 101))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 49)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 50)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 51)) 114))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 52)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 53)) 97))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 54)) 108))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 55)) 108)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 56)) 111)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 57)) 119)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 58)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 59)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 60)) 102)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 61)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 62)) 114))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 63)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 64)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 65)) 104)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 66)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 67)) 32))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 68)) 112))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 69)) 114)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 70)) 111))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 71)) 112)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 72)) 101))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 73)) 114))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 74)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 75)) 100)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 76)) 105)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 77)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 78)) 112)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 79)) 97)))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 80)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 81)) 99))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 82)) 104))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 83)) 105)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 84)) 110)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 85)) 103)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 86)) 32))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 87)) 111))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 88)) 102)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 89)) 32))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 90)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 91)) 98))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 92)) 106))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 93)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 94)) 99)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 95)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 96)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 97)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 98)) 116)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 99)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 100)) 32))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 101)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 102)) 104)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 103)) 101)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 104)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 105)) 97))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 106)) 112))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 107)) 112)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 108)) 114))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 109)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 110)) 112))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 111)) 114))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 112)) 105)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 113)) 97)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 114)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 115)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 116)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 117)) 105))))))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 118)) 109)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 119)) 112))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 120)) 108))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 121)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 122)) 109)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 123)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 124)) 110))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 125)) 116))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 126)) 97)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 127)) 116))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 128)) 105)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 129)) 111))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 130)) 110))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 131)) 32)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 132)) 111)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 133)) 102)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 134)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 135)) 97)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 136)) 32)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 137)) 112)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 138)) 114))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 139)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 140)) 109)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 141)) 105)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 142)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 143)) 105))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 144)) 118))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 145)) 101)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 146)) 32))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 147)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 148)) 112))
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 149)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 150)) 114)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 151)) 97)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 152)) 116)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 153)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 154)) 111)
     (= (to_rep (select (temp___String_Literal_245 us_void_param) 155)) 110))))))))) :pattern (
  (temp___String_Literal_245 us_void_param)) )))

(declare-fun temp___String_Literal_248 (tuple0) (Array Int character))

;; temp___String_Literal_248__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 1)) 70)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 2)) 97))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 3)) 105)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 4)) 108))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 5)) 101))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 6)) 100)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 8)) 100)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 9)) 105)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 10)) 115))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 11)) 112))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 12)) 97)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 13)) 116))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 14)) 99))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 15)) 104)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 17)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 18)) 111)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 20)) 109)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 21)) 117)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 22)) 108))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 23)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 24)) 105)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 25)) 112))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 26)) 108)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 27)) 121)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 29)) 111))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 30)) 118)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 31)) 101))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 32)) 114)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 33)) 114)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 34)) 105))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 35)) 100))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 36)) 100)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 37)) 101))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 38)) 110))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 39)) 32)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 40)) 112))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 41)) 114))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 42)) 105)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 43)) 109))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 44)) 46)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 45)) 32)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 46)) 111))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 47)) 112))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 48)) 101)
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 49)) 114))
     (= (to_rep (select (temp___String_Literal_248 us_void_param) 50)) 46))))))) :pattern (
  (temp___String_Literal_248 us_void_param)) )))

(declare-fun temp___String_Literal_251 (tuple0) (Array Int character))

;; temp___String_Literal_251__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 1)) 70)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 2)) 97))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 3)) 105)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 4)) 108))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 5)) 101))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 6)) 100)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 8)) 100)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 9)) 105)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 10)) 115))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 11)) 112))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 12)) 97)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 13)) 116))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 14)) 99))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 15)) 104)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 17)) 116))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 18)) 111)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 20)) 111)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 21)) 118)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 22)) 101))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 23)) 114))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 24)) 114)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 25)) 105))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 26)) 100)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 27)) 100)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 29)) 110))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 30)) 32)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 31)) 112))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 32)) 114)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 33)) 105)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 34)) 109))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 35)) 105))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 36)) 116)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 37)) 105))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 38)) 118))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 39)) 101)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 40)) 32))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 41)) 111))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 42)) 112)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 43)) 101))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 44)) 114)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 45)) 97)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 46)) 116))
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 47)) 105))
     (and
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 48)) 111)
     (= (to_rep (select (temp___String_Literal_251 us_void_param) 49)) 110))))))) :pattern (
  (temp___String_Literal_251 us_void_param)) )))

(declare-fun temp___String_Literal_254 (tuple0) (Array Int character))

;; temp___String_Literal_254__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 1)) 70)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 2)) 97))
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 3)) 105)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 4)) 108))
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 5)) 101))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 6)) 100)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 7)) 32)))
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 8)) 100)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 10)) 115))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 11)) 112)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 12)) 97))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 13)) 116)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 14)) 99))
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 15)) 104))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 16)) 32)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 17)) 116)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 18)) 111)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 19)) 32))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 20)) 65)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 21)) 112)))))
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 22)) 112)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 23)) 108))
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 24)) 121))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 25)) 95)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 26)) 83)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 27)) 101)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 28)) 114))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 29)) 118)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 30)) 105))))
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 31)) 99)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 32)) 101))
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 33)) 95))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 34)) 67)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 35)) 104)))
     (and
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 36)) 97)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 37)) 114))
     (and
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 38)) 103)
     (= (to_rep (select (temp___String_Literal_254 us_void_param) 39)) 101))))))) :pattern (
  (temp___String_Literal_254 us_void_param)) )))

(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range2
                                    temp___expr_46)))

(define-fun dynamic_invariant1 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range3 temp___expr_74)))

(define-fun dynamic_invariant2 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun dynamic_invariant4 ((temp___expr_180 Int)
  (temp___is_init_176 Bool) (temp___skip_constant_177 Bool)
  (temp___do_toplevel_178 Bool)
  (temp___do_typ_inv_179 Bool)) Bool (=>
                                     (or (= temp___is_init_176 true)
                                     (<= (- 30000) 30000)) (in_range4
                                     temp___expr_180)))

(define-fun dynamic_invariant5 ((temp___expr_204 Int)
  (temp___is_init_200 Bool) (temp___skip_constant_201 Bool)
  (temp___do_toplevel_202 Bool)
  (temp___do_typ_inv_203 Bool)) Bool (=>
                                     (or (= temp___is_init_200 true)
                                     (<= 0 100)) (in_range5 temp___expr_204)))

(assert
;; defqtvc
 ;; File "c392008.adb", line 9, characters 0-0
  (not
  (forall ((b_acct__split_fields us_split_fields)
  (c_acct__split_fields us_split_fields2)
  (ic_acct__split_fields us_split_fields4)
  (b_acct__split_fields1 us_split_fields)
  (c392008__new_account__acct__fields us_split_fields)
  (c_acct__split_fields1 us_split_fields2)
  (c392008__new_account__acct__fields1 us_split_fields)
  (ic_acct__split_fields1 us_split_fields4) (spark__branch Bool)
  (b_acct__split_fields2 us_split_fields)
  (c392008__annual_interest__acct__fields us_split_fields)
  (c_acct__split_fields2 us_split_fields2)
  (c392008__annual_interest__acct__fields1 us_split_fields)
  (ic_acct__split_fields2 us_split_fields4) (o Int) (o1 Int) (o2 Int)
  (spark__branch1 Bool))
  (=> (default_initial_assumption
  (us_repqtmk b_acct__split_fields b_acct__attr__tag) false)
  (=> (default_initial_assumption1
  (us_repqtmk1 c_acct__split_fields c_acct__attr__tag) false)
  (=> (default_initial_assumption2
  (us_repqtmk2 ic_acct__split_fields ic_acct__attr__tag) false)
  (=>
  (= c_acct__split_fields1 (us_split_fields3
                           (of_base
                           (us_repqtmk c392008__new_account__acct__fields
                           (attr__tag
                           (to_base
                           (us_repqtmk1 c_acct__split_fields
                           c_acct__attr__tag)))))))
  (=>
  (= ic_acct__split_fields1 (us_split_fields5
                            (of_base1
                            (us_repqtmk c392008__new_account__acct__fields1
                            (attr__tag
                            (to_base1
                            (us_repqtmk2 ic_acct__split_fields
                            ic_acct__attr__tag)))))))
  (=>
  (exists ((o3 Int))
  (and
  (= (to_rep2
     (rec__c392008_0__account__current_balance2 ic_acct__split_fields1)) o3)
  (exists ((o4 Int))
  (and
  (= (to_rep2
     (rec__c392008_0__account__current_balance1 c_acct__split_fields1)) o4)
  (exists ((o5 Int))
  (and
  (= (to_rep2
     (rec__c392008_0__account__current_balance b_acct__split_fields1)) o5)
  (= spark__branch (or (or (ite (= o5 1000) false true) (ite (= o4 2000)
                                                        false true)) 
  (ite (= o3 3000) false true)))))))))
  (=>
  (= c_acct__split_fields2 (us_split_fields3
                           (of_base
                           (us_repqtmk c392008__annual_interest__acct__fields
                           (attr__tag
                           (to_base
                           (us_repqtmk1 c_acct__split_fields1
                           c_acct__attr__tag)))))))
  (=>
  (= ic_acct__split_fields2 (us_split_fields5
                            (of_base1
                            (us_repqtmk
                            c392008__annual_interest__acct__fields1
                            (attr__tag
                            (to_base1
                            (us_repqtmk2 ic_acct__split_fields1
                            ic_acct__attr__tag)))))))
  (=>
  (= (to_rep2
     (rec__c392008_0__account__current_balance2 ic_acct__split_fields2)) o)
  (=>
  (= (to_rep2
     (rec__c392008_0__account__current_balance1 c_acct__split_fields2)) o1)
  (=>
  (= (to_rep2
     (rec__c392008_0__account__current_balance b_acct__split_fields2)) o2)
  (=>
  (= spark__branch1 (or (or (ite (= o2 1000) false true) (ite (= o1 2000)
                                                         false true)) 
  (ite (= o 9000) false true))) (not (= spark__branch1 true)))))))))))))))))
(check-sat)
(exit)
