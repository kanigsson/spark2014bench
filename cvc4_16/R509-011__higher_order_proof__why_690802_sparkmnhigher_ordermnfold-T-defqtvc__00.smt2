(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun to_rep ((x integer)) Int (integerqtint x))

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-const first Int)

(declare-const last Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ((my_index__ref 0))
(((my_index__refqtmk (my_index__content integer)))))
(define-fun my_index__ref_my_index__content__projection ((a my_index__ref)) integer 
  (my_index__content a))

(declare-const first1 Int)

(declare-const last1 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ((my_index_2__ref 0))
(((my_index_2__refqtmk (my_index_2__content integer)))))
(define-fun my_index_2__ref_my_index_2__content__projection ((a my_index_2__ref)) integer 
  (my_index_2__content a))

(declare-sort map1 0)

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content map1)))))
(declare-fun get (map1 Int Int) integer)

(declare-fun set (map1 Int Int integer) map1)

;; Select_eq
  (assert
  (forall ((m map1))
  (forall ((i Int))
  (forall ((j Int))
  (forall ((a integer))
  (! (= (get (set m i j a) i j) a) :pattern ((set m i j a)) ))))))

;; Select_neq
  (assert
  (forall ((m map1))
  (forall ((i Int) (i2 Int))
  (forall ((j Int) (j2 Int))
  (forall ((a integer))
  (! (=> (not (and (= i i2) (= j j2)))
     (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get
                                                            (set m i j a) i2
                                                            j2)) :pattern (
  (set m i j a) (get m i2 j2)) ))))))

(declare-fun slide (map1 Int Int Int Int) map1)

;; slide_def
  (assert
  (forall ((a map1))
  (forall ((new_first Int) (old_first Int))
  (forall ((new_first_2 Int) (old_first_2 Int))
  (forall ((i Int))
  (forall ((j Int))
  (! (= (get (slide a old_first new_first old_first_2 new_first_2) i j) 
  (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern (
  (get (slide a old_first new_first old_first_2 new_first_2) i j)) )))))))

(define-fun bool_eq ((a map1) (a__first Int) (a__last Int) (a__first_2 Int)
  (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int)
  (b__last_2 Int)) Bool (ite (and
                             (and
                             (ite (<= a__first a__last)
                             (and (<= b__first b__last)
                             (= (- a__last a__first) (- b__last b__first)))
                             (< b__last b__first))
                             (ite (<= a__first_2 a__last_2)
                             (and (<= b__first_2 b__last_2)
                             (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
                             (< b__last_2 b__first_2)))
                             (forall ((temp___idx_159 Int)
                             (temp___idx_160 Int))
                             (=>
                             (and
                             (and (<= a__first temp___idx_159)
                             (<= temp___idx_159 a__last))
                             (and (<= a__first_2 temp___idx_160)
                             (<= temp___idx_160 a__last_2)))
                             (= (to_rep
                                (get a temp___idx_159 temp___idx_160)) 
                             (to_rep
                             (get b (+ (- b__first a__first) temp___idx_159)
                             (+ (- b__first_2 a__first_2) temp___idx_160)))))))
                        true false))

;; bool_eq_rev
  (assert
  (forall ((a map1) (b map1))
  (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int)
  (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int))
  (=>
  (= (bool_eq b b__first b__last b__first_2 b__last_2 a a__first a__last
     a__first_2 a__last_2) true)
  (and
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (ite (<= a__first_2 a__last_2)
  (and (<= b__first_2 b__last_2)
  (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
  (< b__last_2 b__first_2)))
  (forall ((temp___idx_159 Int) (temp___idx_160 Int))
  (=>
  (and (and (<= a__first temp___idx_159) (<= temp___idx_159 a__last))
  (and (<= a__first_2 temp___idx_160) (<= temp___idx_160 a__last_2)))
  (= (to_rep (get a temp___idx_159 temp___idx_160)) (to_rep
                                                    (get b
                                                    (+ (- b__first a__first) temp___idx_159)
                                                    (+ (- b__first_2 a__first_2) temp___idx_160)))))))))))

(declare-sort t 0)

(declare-fun first2 (t) integer)

(declare-fun last2 (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first2 (mk f l))) f) (= (to_rep (last2 (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-sort t1 0)

(declare-fun first3 (t1) integer)

(declare-fun last3 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first3 (mk1 f l))) f) (= (to_rep (last3 (mk1 f l))) l)))) :pattern (
  (mk1 f l)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts map1)(rt t)(rt_2 t1)))))
(define-fun to_array ((a us_t)) map1 (elts a))

(define-fun of_array ((a map1) (f Int) (l Int) (f2 Int)
  (l2 Int)) us_t (us_tqtmk a (mk f l) (mk1 f2 l2)))

(define-fun first4 ((a us_t)) Int (to_rep (first2 (rt a))))

(define-fun last4 ((a us_t)) Int (to_rep (last2 (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first4 a) (last4 a))
                                  (+ (- (last4 a) (first4 a)) 1) 0))

(define-fun first_2 ((a us_t)) Int (to_rep (first3 (rt_2 a))))

(define-fun last_2 ((a us_t)) Int (to_rep (last3 (rt_2 a))))

(define-fun length_2 ((a us_t)) Int (ite (<= (first_2 a) (last_2 a))
                                    (+ (- (last_2 a) (first_2 a)) 1) 0))

(define-fun dynamic_property4 ((range_first1 Int) (range_last1 Int) (f1 Int)
  (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int)
  (l2 Int)) Bool (and (dynamic_property2 range_first1 range_last1 f1 l1)
                 (dynamic_property3 range_first2 range_last2 f2 l2)))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first2 (rt x)))
                 (to_rep (last2 (rt x))) (to_rep (first3 (rt_2 x)))
                 (to_rep (last3 (rt_2 x))) (elts y) (to_rep (first2 (rt y)))
                 (to_rep (last2 (rt y))) (to_rep (first3 (rt_2 y)))
                 (to_rep (last3 (rt_2 y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ((my_matrix__ref 0))
(((my_matrix__refqtmk (my_matrix__content us_t)))))
(define-fun my_matrix__ref_my_matrix__content__projection ((a my_matrix__ref)) us_t 
  (my_matrix__content a))

(declare-fun ind_prop (us_t Int Int Int) Bool)

(declare-fun ind_prop__function_guard (Bool us_t Int Int Int) Bool)

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(declare-const fst Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const lst Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant1 ((temp___expr_172 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (=>
                                     (or (= temp___is_init_168 true)
                                     (<= first last)) (dynamic_property 
                                     first last temp___expr_172)))

;; first__def_axiom
  (assert (= first fst))

;; last__def_axiom
  (assert (= last lst))

(declare-const fst2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const lst2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_invariant2 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= first1 last1)) (dynamic_property1
                                     first1 last1 temp___expr_179)))

;; first__def_axiom
  (assert (= first1 fst2))

;; last__def_axiom
  (assert (= last1 lst2))

(define-fun dynamic_invariant3 ((temp___expr_186 us_t)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (=>
                                     (not (= temp___skip_constant_183 true))
                                     (dynamic_property4 first last
                                     (first4 temp___expr_186)
                                     (last4 temp___expr_186) first1 last1
                                     (first_2 temp___expr_186)
                                     (last_2 temp___expr_186))))

;; ind_prop__post_axiom
  (assert true)

(declare-fun final_prop (us_t Int) Bool)

(declare-fun final_prop__function_guard (Bool us_t Int) Bool)

;; final_prop__post_axiom
  (assert true)

(declare-fun f_2 (Int Int) Int)

(declare-fun f_2__function_guard (Int Int Int) Bool)

;; f_2__post_axiom
  (assert
  (forall ((x Int) (i Int))
  (! (=>
     (and (dynamic_invariant x true true true true) (dynamic_invariant i true
     true true true))
     (let ((result (f_2 x i)))
     (=> (f_2__function_guard result x i) (dynamic_invariant result true
     false true true)))) :pattern ((f_2 x i)) )))

(declare-datatypes ((array_type__ref 0))
(((array_type__refqtmk (array_type__content us_t)))))
(define-fun array_type__ref_array_type__content__2__projection ((a array_type__ref)) us_t 
  (array_type__content a))

(declare-const first5 Int)

(declare-const last5 Int)

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-const dummy4 integer)

(declare-datatypes ((index_1__ref 0))
(((index_1__refqtmk (index_1__content integer)))))
(define-fun index_1__ref_index_1__content__2__projection ((a index_1__ref)) integer 
  (index_1__content a))

(declare-const first6 Int)

(declare-const last6 Int)

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-const dummy5 integer)

(declare-datatypes ((index_2__ref 0))
(((index_2__refqtmk (index_2__content integer)))))
(define-fun index_2__ref_index_2__content__2__projection ((a index_2__ref)) integer 
  (index_2__content a))

(declare-sort element_out 0)

(declare-fun element_outqtint (element_out) Int)

;; element_out'axiom
  (assert
  (forall ((i element_out))
  (and (<= (- 2147483648) (element_outqtint i))
  (<= (element_outqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (element_out element_out) Bool)

(declare-const dummy6 element_out)

(declare-datatypes ((element_out__ref 0))
(((element_out__refqtmk (element_out__content element_out)))))
(define-fun element_out__ref_element_out__content__2__projection ((a element_out__ref)) element_out 
  (element_out__content a))

(define-fun to_rep1 ((x element_out)) Int (element_outqtint x))

(declare-fun of_rep1 (Int) element_out)

;; inversion_axiom
  (assert
  (forall ((x element_out))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x element_out)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort map2 0)

(declare-datatypes ((map__ref1 0))
(((map__refqtmk1 (map__content1 map2)))))
(declare-fun get1 (map2 Int Int) element_out)

(declare-fun set1 (map2 Int Int element_out) map2)

;; Select_eq
  (assert
  (forall ((m map2))
  (forall ((i Int))
  (forall ((j Int))
  (forall ((a element_out))
  (! (= (get1 (set1 m i j a) i j) a) :pattern ((set1 m i j a)) ))))))

;; Select_neq
  (assert
  (forall ((m map2))
  (forall ((i Int) (i2 Int))
  (forall ((j Int) (j2 Int))
  (forall ((a element_out))
  (! (=> (not (and (= i i2) (= j j2)))
     (= (get1 (set1 m i j a) i2 j2) (get1 m i2 j2))) :pattern ((get1
                                                               (set1 m i j a)
                                                               i2 j2)) :pattern (
  (set1 m i j a) (get1 m i2 j2)) ))))))

(declare-fun slide1 (map2 Int Int Int Int) map2)

;; slide_def
  (assert
  (forall ((a map2))
  (forall ((new_first Int) (old_first Int))
  (forall ((new_first_2 Int) (old_first_2 Int))
  (forall ((i Int))
  (forall ((j Int))
  (! (= (get1 (slide1 a old_first new_first old_first_2 new_first_2) i j) 
  (get1 a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern (
  (get1 (slide1 a old_first new_first old_first_2 new_first_2) i j)) )))))))

(define-fun bool_eq2 ((a map2) (a__first Int) (a__last Int) (a__first_2 Int)
  (a__last_2 Int) (b map2) (b__first Int) (b__last Int) (b__first_2 Int)
  (b__last_2 Int)) Bool (ite (and
                             (and
                             (ite (<= a__first a__last)
                             (and (<= b__first b__last)
                             (= (- a__last a__first) (- b__last b__first)))
                             (< b__last b__first))
                             (ite (<= a__first_2 a__last_2)
                             (and (<= b__first_2 b__last_2)
                             (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
                             (< b__last_2 b__first_2)))
                             (forall ((temp___idx_164 Int)
                             (temp___idx_165 Int))
                             (=>
                             (and
                             (and (<= a__first temp___idx_164)
                             (<= temp___idx_164 a__last))
                             (and (<= a__first_2 temp___idx_165)
                             (<= temp___idx_165 a__last_2)))
                             (= (to_rep1
                                (get1 a temp___idx_164 temp___idx_165)) 
                             (to_rep1
                             (get1 b (+ (- b__first a__first) temp___idx_164)
                             (+ (- b__first_2 a__first_2) temp___idx_165)))))))
                        true false))

;; bool_eq_rev
  (assert
  (forall ((a map2) (b map2))
  (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int)
  (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int))
  (=>
  (= (bool_eq2 b b__first b__last b__first_2 b__last_2 a a__first a__last
     a__first_2 a__last_2) true)
  (and
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (ite (<= a__first_2 a__last_2)
  (and (<= b__first_2 b__last_2)
  (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
  (< b__last_2 b__first_2)))
  (forall ((temp___idx_164 Int) (temp___idx_165 Int))
  (=>
  (and (and (<= a__first temp___idx_164) (<= temp___idx_164 a__last))
  (and (<= a__first_2 temp___idx_165) (<= temp___idx_165 a__last_2)))
  (= (to_rep1 (get1 a temp___idx_164 temp___idx_165)) (to_rep1
                                                      (get1 b
                                                      (+ (- b__first a__first) temp___idx_164)
                                                      (+ (- b__first_2 a__first_2) temp___idx_165)))))))))))

(declare-sort t2 0)

(declare-fun first7 (t2) integer)

(declare-fun last7 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first7 (mk2 f l))) f) (= (to_rep (last7 (mk2 f l))) l)))) :pattern (
  (mk2 f l)) )))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-sort t3 0)

(declare-fun first8 (t3) integer)

(declare-fun last8 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first8 (mk3 f l))) f) (= (to_rep (last8 (mk3 f l))) l)))) :pattern (
  (mk3 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((us_tqtmk1 (elts1 map2)(rt1 t2)(rt_21 t3)))))
(define-fun to_array1 ((a us_t1)) map2 (elts1 a))

(define-fun of_array1 ((a map2) (f Int) (l Int) (f2 Int)
  (l2 Int)) us_t1 (us_tqtmk1 a (mk2 f l) (mk3 f2 l2)))

(define-fun first9 ((a us_t1)) Int (to_rep (first7 (rt1 a))))

(define-fun last9 ((a us_t1)) Int (to_rep (last7 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first9 a) (last9 a))
                                    (+ (- (last9 a) (first9 a)) 1) 0))

(define-fun first_21 ((a us_t1)) Int (to_rep (first8 (rt_21 a))))

(define-fun last_21 ((a us_t1)) Int (to_rep (last8 (rt_21 a))))

(define-fun length_21 ((a us_t1)) Int (ite (<= (first_21 a) (last_21 a))
                                      (+ (- (last_21 a) (first_21 a)) 1) 0))

(define-fun dynamic_property9 ((range_first1 Int) (range_last1 Int) (f1 Int)
  (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int)
  (l2 Int)) Bool (and (dynamic_property7 range_first1 range_last1 f1 l1)
                 (dynamic_property8 range_first2 range_last2 f2 l2)))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const component__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; component__size_axiom
  (assert (<= 0 component__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(define-fun bool_eq3 ((x us_t1)
  (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep (first7 (rt1 x)))
                  (to_rep (last7 (rt1 x))) (to_rep (first8 (rt_21 x)))
                  (to_rep (last8 (rt_21 x))) (elts1 y)
                  (to_rep (first7 (rt1 y))) (to_rep (last7 (rt1 y)))
                  (to_rep (first8 (rt_21 y))) (to_rep (last8 (rt_21 y)))))

(declare-fun user_eq7 (us_t1 us_t1) Bool)

(declare-const dummy7 us_t1)

(declare-datatypes ((acc_array__ref 0))
(((acc_array__refqtmk (acc_array__content us_t1)))))
(define-fun acc_array__ref_acc_array__content__projection ((a acc_array__ref)) us_t1 
  (acc_array__content a))

(declare-fun fold (us_t Int) us_t1)

(declare-fun fold__function_guard (us_t1 us_t Int) Bool)

(define-fun dynamic_invariant4 ((temp___expr_264 Int)
  (temp___is_init_260 Bool) (temp___skip_constant_261 Bool)
  (temp___do_toplevel_262 Bool)
  (temp___do_typ_inv_263 Bool)) Bool (=>
                                     (or (= temp___is_init_260 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_264)))

(define-fun dynamic_invariant5 ((temp___expr_286 us_t1)
  (temp___is_init_282 Bool) (temp___skip_constant_283 Bool)
  (temp___do_toplevel_284 Bool)
  (temp___do_typ_inv_285 Bool)) Bool (=>
                                     (not (= temp___skip_constant_283 true))
                                     (dynamic_property9 first5 last5
                                     (first9 temp___expr_286)
                                     (last9 temp___expr_286) first6 last6
                                     (first_21 temp___expr_286)
                                     (last_21 temp___expr_286))))

(define-fun dynamic_invariant6 ((temp___expr_257 us_t)
  (temp___is_init_253 Bool) (temp___skip_constant_254 Bool)
  (temp___do_toplevel_255 Bool)
  (temp___do_typ_inv_256 Bool)) Bool (=>
                                     (not (= temp___skip_constant_254 true))
                                     (dynamic_property4 first last
                                     (first4 temp___expr_257)
                                     (last4 temp___expr_257) first1 last1
                                     (first_2 temp___expr_257)
                                     (last_2 temp___expr_257))))

;; fold__post_axiom
  (assert
  (forall ((a us_t))
  (forall ((init Int))
  (! (and
     (forall ((a1 us_t) (init1 Int)) (ind_prop__function_guard
     (ind_prop
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     init1 (first4 a1) (first_2 a1))
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     init1 (first4 a1) (first_2 a1)))
     (=>
     (and
     (and (dynamic_invariant6 a true true true true) (dynamic_invariant4 init
     true true true true))
     (and (and (< 0 (length a)) (< 0 (length_2 a)))
     (= (ind_prop
        (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
        init (first4 a) (first_2 a)) true)))
     (let ((result (fold a init)))
     (and
     (forall ((a1 us_t) (init1 Int)) (ind_prop__function_guard
     (ind_prop
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     init1 (first4 a1) (first_2 a1))
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     init1 (first4 a1) (first_2 a1)))
     (and
     (forall ((a1 us_t) (init1 Int)) (f_2__function_guard
     (f_2 (to_rep (get (to_array a1) (first4 a1) (first_2 a1))) init1)
     (to_rep (get (to_array a1) (first4 a1) (first_2 a1))) init1))
     (and
     (forall ((a1 us_t) (result1 us_t1) (i Int)) (ind_prop__function_guard
     (ind_prop
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) (- i 1) (last_2 a1))) i (first_2 a1))
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) (- i 1) (last_2 a1))) i
     (first_2 a1)))
     (and
     (forall ((a1 us_t) (result1 us_t1) (i Int)) (f_2__function_guard
     (f_2 (to_rep (get (to_array a1) i (first_2 a1)))
     (to_rep1 (get1 (to_array1 result1) (- i 1) (last_2 a1))))
     (to_rep (get (to_array a1) i (first_2 a1)))
     (to_rep1 (get1 (to_array1 result1) (- i 1) (last_2 a1)))))
     (and
     (forall ((a1 us_t) (result1 us_t1) (i Int) (j Int))
     (ind_prop__function_guard
     (ind_prop
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) i (- j 1))) i j)
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) i (- j 1))) i j))
     (and
     (forall ((a1 us_t) (result1 us_t1) (i Int) (j Int)) (f_2__function_guard
     (f_2 (to_rep (get (to_array a1) i j))
     (to_rep1 (get1 (to_array1 result1) i (- j 1))))
     (to_rep (get (to_array a1) i j))
     (to_rep1 (get1 (to_array1 result1) i (- j 1)))))
     (and
     (forall ((a1 us_t) (result1 us_t1)) (final_prop__function_guard
     (final_prop
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) (last4 a1) (last_2 a1))))
     (of_array (to_array a1) (first4 a1) (last4 a1) (first_2 a1) (last_2 a1))
     (to_rep1 (get1 (to_array1 result1) (last4 a1) (last_2 a1)))))
     (=> (fold__function_guard result a init)
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and (and (= (first9 result) (first4 a)) (= (last9 result) (last4 a)))
     (= (first_21 result) (first_2 a))) (= (last_21 result) (last_2 a)))
     (= (ind_prop
        (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
        init (first4 a) (first_2 a)) true))
     (= (to_rep1 (get1 (to_array1 result) (first4 a) (first_2 a))) (f_2
                                                                   (to_rep
                                                                   (get
                                                                   (to_array
                                                                   a)
                                                                   (first4 a)
                                                                   (first_2
                                                                   a))) init)))
     (forall ((i Int))
     (=> (and (<= (first4 a) i) (<= i (last4 a)))
     (=> (< (first4 a) i)
     (and
     (= (ind_prop
        (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
        (to_rep1 (get1 (to_array1 result) (- i 1) (last_2 a))) i (first_2 a)) true)
     (= (to_rep1 (get1 (to_array1 result) i (first_2 a))) (f_2
                                                          (to_rep
                                                          (get (to_array a) i
                                                          (first_2 a)))
                                                          (to_rep1
                                                          (get1
                                                          (to_array1 result)
                                                          (- i 1) (last_2 a))))))))))
     (forall ((i Int))
     (=> (and (<= (first4 a) i) (<= i (last4 a)))
     (forall ((j Int))
     (=> (and (<= (first_2 a) j) (<= j (last_2 a)))
     (=> (< (first_2 a) j)
     (and
     (= (ind_prop
        (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
        (to_rep1 (get1 (to_array1 result) i (- j 1))) i j) true)
     (= (to_rep1 (get1 (to_array1 result) i j)) (f_2
                                                (to_rep
                                                (get (to_array a) i j))
                                                (to_rep1
                                                (get1 (to_array1 result) i
                                                (- j 1))))))))))))
     (= (final_prop
        (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
        (to_rep1 (get1 (to_array1 result) (last4 a) (last_2 a)))) true))
     (dynamic_invariant5 result true false true true))))))))))))) :pattern (
  (fold a init)) ))))

(declare-datatypes ((array_type__ref1 0))
(((array_type__refqtmk1 (array_type__content1 us_t)))))
(define-fun array_type__ref_array_type__content__projection ((a array_type__ref1)) us_t 
  (array_type__content1 a))

(declare-const a us_t)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const init Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-sort element_out1 0)

(declare-fun element_outqtint1 (element_out1) Int)

;; element_out'axiom
  (assert
  (forall ((i element_out1))
  (and (<= (- 2147483648) (element_outqtint1 i))
  (<= (element_outqtint1 i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (element_out1 element_out1) Bool)

(declare-const dummy8 element_out1)

(declare-datatypes ((element_out__ref1 0))
(((element_out__refqtmk1 (element_out__content1 element_out1)))))
(define-fun element_out__ref_element_out__content__projection ((a1 element_out__ref1)) element_out1 
  (element_out__content1 a1))

(define-fun dynamic_invariant7 ((temp___expr_229 Int)
  (temp___is_init_225 Bool) (temp___skip_constant_226 Bool)
  (temp___do_toplevel_227 Bool)
  (temp___do_typ_inv_228 Bool)) Bool (=>
                                     (or (= temp___is_init_225 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range3 temp___expr_229)))

(define-fun dynamic_property10 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-const dummy9 integer)

(declare-datatypes ((t21s__ref 0))
(((t21s__refqtmk (t21s__content integer)))))
(define-fun t21s__ref_t21s__content__projection ((a1 t21s__ref)) integer 
  (t21s__content a1))

(define-fun dynamic_property11 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-const dummy10 integer)

(declare-datatypes ((t22s__ref 0))
(((t22s__refqtmk (t22s__content integer)))))
(define-fun t22s__ref_t22s__content__projection ((a1 t22s__ref)) integer 
  (t22s__content a1))

(define-fun dynamic_invariant8 ((temp___expr_222 us_t)
  (temp___is_init_218 Bool) (temp___skip_constant_219 Bool)
  (temp___do_toplevel_220 Bool)
  (temp___do_typ_inv_221 Bool)) Bool (=>
                                     (not (= temp___skip_constant_219 true))
                                     (dynamic_property4 first last
                                     (first4 temp___expr_222)
                                     (last4 temp___expr_222) first1 last1
                                     (first_2 temp___expr_222)
                                     (last_2 temp___expr_222))))

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

;; id__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true true)
     (let ((result (id x)))
     (=> (id__function_guard result x) (dynamic_invariant result true false
     true true)))) :pattern ((id x)) )))

;; fst__def_axiom
  (assert (and (id__function_guard (id 0) 0) (= fst (id 0))))

;; lst__def_axiom
  (assert (and (id__function_guard (id 100) 100) (= lst (id 100))))

;; fst2__def_axiom
  (assert (and (id__function_guard (id 1) 1) (= fst2 (id 1))))

;; lst2__def_axiom
  (assert (and (id__function_guard (id 200) 200) (= lst2 (id 200))))

(define-fun dynamic_invariant9 ((temp___expr_236 Int)
  (temp___is_init_232 Bool) (temp___skip_constant_233 Bool)
  (temp___do_toplevel_234 Bool)
  (temp___do_typ_inv_235 Bool)) Bool (=>
                                     (or (= temp___is_init_232 true)
                                     (<= first5 last5)) (dynamic_property5
                                     first5 last5 temp___expr_236)))

;; first__def_axiom
  (assert (= first5 fst))

;; last__def_axiom
  (assert (= last5 lst))

(define-fun dynamic_invariant10 ((temp___expr_243 Int)
  (temp___is_init_239 Bool) (temp___skip_constant_240 Bool)
  (temp___do_toplevel_241 Bool)
  (temp___do_typ_inv_242 Bool)) Bool (=>
                                     (or (= temp___is_init_239 true)
                                     (<= first6 last6)) (dynamic_property6
                                     first6 last6 temp___expr_243)))

;; first__def_axiom
  (assert (= first6 fst2))

;; last__def_axiom
  (assert (= last6 lst2))

(assert
;; defqtvc
 ;; File "spark-higher_order-fold.ads", line 545, characters 0-0
  (not
  (forall ((r Int) (spark__branch Bool))
  (=> (dynamic_invariant8 a true false true true)
  (=> (dynamic_invariant7 init true false true true)
  (=> (ind_prop__function_guard
  (ind_prop
  (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) 
  init (first4 a) (first_2 a))
  (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) 
  init (first4 a) (first_2 a))
  (=>
  (or (or (= (length a) 0) (= (length_2 a) 0))
  (= (ind_prop
     (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) 
     init (first4 a) (first_2 a)) true))
  (=> (= r init)
  (=> (dynamic_invariant7 r true false true true)
  (=> (= spark__branch (ite (< 0 (length_2 a)) true false))
  (=> (= spark__branch true)
  (let ((temp___575 (first4 a)))
  (forall ((i Int))
  (=> (= i temp___575)
  (=>
  (= (and (ite (<= temp___575 i) true false) (ite (<= i (last4 a)) true
                                             false)) true)
  (=>
  (forall ((o Int) (o1 us_t)) (ind_prop__function_guard
  (ind_prop
  (of_array (to_array o1) (first4 o1) (last4 o1) (first_2 o1) (last_2 o1)) o
  (first4 o1) (first_2 o1))
  (of_array (to_array o1) (first4 o1) (last4 o1) (first_2 o1) (last_2 o1)) o
  (first4 o1) (first_2 o1)))
  (=>
  (forall ((o Int) (o1 us_t)) (f_2__function_guard
  (f_2 (to_rep (get (to_array o1) (first4 o1) (first_2 o1))) o)
  (to_rep (get (to_array o1) (first4 o1) (first_2 o1))) o))
  (=>
  (forall ((o us_t) (temp___592 us_t1) (i1 Int)) (ind_prop__function_guard
  (ind_prop
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) (- i1 1) (last_2 o))) i1 (first_2 o))
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) (- i1 1) (last_2 o))) i1
  (first_2 o)))
  (=>
  (forall ((o us_t) (temp___592 us_t1) (i1 Int)) (f_2__function_guard
  (f_2 (to_rep (get (to_array o) i1 (first_2 o)))
  (to_rep1 (get1 (to_array1 temp___592) (- i1 1) (last_2 o))))
  (to_rep (get (to_array o) i1 (first_2 o)))
  (to_rep1 (get1 (to_array1 temp___592) (- i1 1) (last_2 o)))))
  (=>
  (forall ((o us_t) (temp___592 us_t1) (i1 Int) (j Int))
  (ind_prop__function_guard
  (ind_prop
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) i1 (- j 1))) i1 j)
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) i1 (- j 1))) i1 j))
  (=>
  (forall ((o us_t) (temp___592 us_t1) (i1 Int) (j Int)) (f_2__function_guard
  (f_2 (to_rep (get (to_array o) i1 j))
  (to_rep1 (get1 (to_array1 temp___592) i1 (- j 1))))
  (to_rep (get (to_array o) i1 j))
  (to_rep1 (get1 (to_array1 temp___592) i1 (- j 1)))))
  (=>
  (forall ((o us_t) (temp___592 us_t1)) (final_prop__function_guard
  (final_prop
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) (last4 o) (last_2 o))))
  (of_array (to_array o) (first4 o) (last4 o) (first_2 o) (last_2 o))
  (to_rep1 (get1 (to_array1 temp___592) (last4 o) (last_2 o)))))
  (=>
  (let ((temp___590 (first_2 a)))
  (and (dynamic_property1 first1 last1 temp___590)
  (and (dynamic_property first last i)
  (let ((o (of_array (to_array a) (first4 a) (last4 a) (first_2 a)
           (last_2 a))))
  (let ((o1 (ind_prop o r i temp___590)))
  (and (ind_prop__function_guard o1 o r i temp___590)
  (or (not (= o1 true))
  (let ((o2 init))
  (and (dynamic_property4 first last (first4 a) (last4 a) first1 last1
  (first_2 a) (last_2 a))
  (let ((o3 (of_array (to_array a) (first4 a) (last4 a) (first_2 a)
            (last_2 a))))
  (let ((temp___592 (fold o3 o2)))
  (and
  (and (fold__function_guard temp___592 o3 o2)
  (and (dynamic_invariant5 temp___592 true false true true)
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (= (first9 temp___592) (first4 o3)) (= (last9 temp___592) (last4 o3)))
  (= (first_21 temp___592) (first_2 o3)))
  (= (last_21 temp___592) (last_2 o3)))
  (= (ind_prop
     (of_array (to_array o3) (first4 o3) (last4 o3) (first_2 o3) (last_2 o3))
     o2 (first4 o3) (first_2 o3)) true))
  (= (to_rep1 (get1 (to_array1 temp___592) (first4 o3) (first_2 o3))) 
  (f_2 (to_rep (get (to_array o3) (first4 o3) (first_2 o3))) o2)))
  (forall ((i1 Int))
  (=> (and (<= (first4 o3) i1) (<= i1 (last4 o3)))
  (=> (< (first4 o3) i1)
  (and
  (= (ind_prop
     (of_array (to_array o3) (first4 o3) (last4 o3) (first_2 o3) (last_2 o3))
     (to_rep1 (get1 (to_array1 temp___592) (- i1 1) (last_2 o3))) i1
     (first_2 o3)) true)
  (= (to_rep1 (get1 (to_array1 temp___592) i1 (first_2 o3))) (f_2
                                                             (to_rep
                                                             (get
                                                             (to_array o3) i1
                                                             (first_2 o3)))
                                                             (to_rep1
                                                             (get1
                                                             (to_array1
                                                             temp___592)
                                                             (- i1 1)
                                                             (last_2 o3))))))))))
  (forall ((i1 Int))
  (=> (and (<= (first4 o3) i1) (<= i1 (last4 o3)))
  (forall ((j Int))
  (=> (and (<= (first_2 o3) j) (<= j (last_2 o3)))
  (=> (< (first_2 o3) j)
  (and
  (= (ind_prop
     (of_array (to_array o3) (first4 o3) (last4 o3) (first_2 o3) (last_2 o3))
     (to_rep1 (get1 (to_array1 temp___592) i1 (- j 1))) i1 j) true)
  (= (to_rep1 (get1 (to_array1 temp___592) i1 j)) (f_2
                                                  (to_rep
                                                  (get (to_array o3) i1 j))
                                                  (to_rep1
                                                  (get1
                                                  (to_array1 temp___592) i1
                                                  (- j 1))))))))))))
  (= (final_prop
     (of_array (to_array o3) (first4 o3) (last4 o3) (first_2 o3) (last_2 o3))
     (to_rep1 (get1 (to_array1 temp___592) (last4 o3) (last_2 o3)))) true))))
  (let ((temp___593 (first_2 a)))
  (and
  (and (<= (first_21 temp___592) temp___593)
  (<= temp___593 (last_21 temp___592)))
  (and (and (<= (first9 temp___592) i) (<= i (last9 temp___592)))
  (and
  (exists ((o4 Int))
  (= (to_rep1 (get1 (to_array1 temp___592) i temp___593)) o4))
  (let ((temp___591 (first_2 a)))
  (and (and (<= (first_2 a) temp___591) (<= temp___591 (last_2 a)))
  (and (and (<= (first4 a) i) (<= i (last4 a)))
  (exists ((o4 Int))
  (and (= (to_rep (get (to_array a) i temp___591)) o4)
  (let ((o5 (f_2 o4 r)))
  (and (f_2__function_guard o5 o4 r) (dynamic_invariant o5 true false true
  true))))))))))))))))))))))))
  (forall ((r1 Int) (i1 Int))
  (=>
  (forall ((r2 Int) (i2 Int)) (ind_prop__function_guard
  (ind_prop
  (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) r2 i2
  (first_2 a))
  (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) r2 i2
  (first_2 a)))
  (=>
  (forall ((r2 Int) (i2 Int)) (f_2__function_guard
  (f_2 (to_rep (get (to_array a) i2 (first_2 a))) r2)
  (to_rep (get (to_array a) i2 (first_2 a))) r2))
  (=> (fold__function_guard
  (fold (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
  init) (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))
  init)
  (=>
  (and
  (= (ind_prop
     (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a)) r1
     i1 (first_2 a)) true)
  (= (f_2 (to_rep (get (to_array a) i1 (first_2 a))) r1) (to_rep1
                                                         (get1
                                                         (to_array1
                                                         (fold
                                                         (of_array
                                                         (to_array a)
                                                         (first4 a) (last4 a)
                                                         (first_2 a)
                                                         (last_2 a)) 
                                                         init)) i1
                                                         (first_2 a)))))
  (=>
  (= (and (ite (and (dynamic_invariant7 r1 true true true true)
               (dynamic_property10 (first4 a) (last4 a) i1))
          true false) (ite (and (<= (first4 a) i1) (<= i1 (last4 a))) true
                      false)) true)
  (let ((temp___577 (first_2 a)))
  (forall ((j Int))
  (=> (= j temp___577)
  (=>
  (= (and (ite (<= temp___577 j) true false) (ite (<= j (last_2 a)) true
                                             false)) true)
  (=> (dynamic_property1 first1 last1 j)
  (=> (dynamic_property first last i1)
  (let ((o (of_array (to_array a) (first4 a) (last4 a) (first_2 a)
           (last_2 a))))
  (let ((o1 (ind_prop o r1 i1 j)))
  (=> (ind_prop__function_guard o1 o r1 i1 j)
  (=> (= o1 true)
  (=> (dynamic_property4 first last (first4 a) (last4 a) first1 last1
  (first_2 a) (last_2 a))
  (< 0 (length
       (of_array (to_array a) (first4 a) (last4 a) (first_2 a) (last_2 a))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
