(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(define-fun to_rep1 ((x integer)) Int (integerqtint x))

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep1 (select a temp___idx_154)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep1 (select a temp___idx_154)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-const dummy2 us_t)

(declare-datatypes ((array_type__ref 0))
(((array_type__refqtmk (array_type__content us_t)))))
(define-fun array_type__ref_array_type__content__projection ((a array_type__ref)) us_t 
  (array_type__content a))

(declare-datatypes ((t4b__ref 0))
(((t4b__refqtmk (t4b__content us_t)))))
(define-fun t4b__ref_t4b__content__projection ((a t4b__ref)) us_t (t4b__content
                                                                  a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk (rec__main__branch_type__m_height natural)))))
(define-fun us_split_discrs_rec__main__branch_type__m_height__projection ((a us_split_discrs)) natural 
  (rec__main__branch_type__m_height a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__main__branch_type__m_nodes us_t)))))
(define-fun us_split_fields_rec__main__branch_type__m_nodes__projection ((a us_split_fields)) us_t 
  (rec__main__branch_type__m_nodes a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__main__branch_type__m_height
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__main__branch_type__m_height
                                                  (us_split_discrs1 b))))
                        (= (bool_eq1
                           (rec__main__branch_type__m_nodes
                           (us_split_fields1 a))
                           (rec__main__branch_type__m_nodes
                           (us_split_fields1 b))) true))
                   true false))

(define-fun in_range3 ((rec__main__branch_type__m_height1 Int)
  (a us_split_discrs)) Bool (= rec__main__branch_type__m_height1 (to_rep
                                                                 (rec__main__branch_type__m_height
                                                                 a))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const main__branch_type__m_height__first__bit Int)

(declare-const main__branch_type__m_height__last__bit Int)

(declare-const main__branch_type__m_height__position Int)

;; main__branch_type__m_height__first__bit_axiom
  (assert (<= 0 main__branch_type__m_height__first__bit))

;; main__branch_type__m_height__last__bit_axiom
  (assert
  (< main__branch_type__m_height__first__bit main__branch_type__m_height__last__bit))

;; main__branch_type__m_height__position_axiom
  (assert (<= 0 main__branch_type__m_height__position))

(declare-const main__branch_type__m_nodes__first__bit Int)

(declare-const main__branch_type__m_nodes__last__bit Int)

(declare-const main__branch_type__m_nodes__position Int)

;; main__branch_type__m_nodes__first__bit_axiom
  (assert (<= 0 main__branch_type__m_nodes__first__bit))

;; main__branch_type__m_nodes__last__bit_axiom
  (assert
  (< main__branch_type__m_nodes__first__bit main__branch_type__m_nodes__last__bit))

;; main__branch_type__m_nodes__position_axiom
  (assert (<= 0 main__branch_type__m_nodes__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((branch_type__ref 0))
(((branch_type__refqtmk (branch_type__content us_rep)))))
(define-fun branch_type__ref_branch_type__content__projection ((a branch_type__ref)) us_rep 
  (branch_type__content a))

(declare-const branch__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant2 ((temp___expr_186 us_rep)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (let ((temp___187 (rec__main__branch_type__m_height
                                                       (us_split_discrs1
                                                       temp___expr_186))))
                                     (and (dynamic_property 0
                                     (to_rep temp___187)
                                     (first1
                                     (rec__main__branch_type__m_nodes
                                     (us_split_fields1 temp___expr_186)))
                                     (last1
                                     (rec__main__branch_type__m_nodes
                                     (us_split_fields1 temp___expr_186))))
                                     (and
                                     (= (first1
                                        (rec__main__branch_type__m_nodes
                                        (us_split_fields1 temp___expr_186))) 0)
                                     (= (last1
                                        (rec__main__branch_type__m_nodes
                                        (us_split_fields1 temp___expr_186))) 
                                     (to_rep temp___187))))))

(declare-const r7b Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const r10b Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r12b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-datatypes ((s6b__ref 0))
(((s6b__refqtmk (s6b__content us_t)))))
(define-fun s6b__ref_s6b__content__projection ((a s6b__ref)) us_t (s6b__content
                                                                  a))

(declare-datatypes ((t9b__ref 0))
(((t9b__refqtmk (t9b__content us_t)))))
(define-fun t9b__ref_t9b__content__projection ((a t9b__ref)) us_t (t9b__content
                                                                  a))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-const dummy4 integer)

(declare-datatypes ((t11b__ref 0))
(((t11b__refqtmk (t11b__content integer)))))
(define-fun t11b__ref_t11b__content__projection ((a t11b__ref)) integer 
  (t11b__content a))

(declare-fun temp_____aggregate_def_201 (Int Int Int) us_t)

(define-fun dynamic_invariant3 ((temp___expr_180 us_t)
  (temp___is_init_176 Bool) (temp___skip_constant_177 Bool)
  (temp___do_toplevel_178 Bool)
  (temp___do_typ_inv_179 Bool)) Bool (=>
                                     (not (= temp___skip_constant_177 true))
                                     (dynamic_property 0 2147483647
                                     (first1 temp___expr_180)
                                     (last1 temp___expr_180))))

(declare-const rliteral integer)

;; rliteral_axiom
  (assert (= (integerqtint rliteral) 0))

;; def_axiom
  (assert
  (forall ((temp___203 Int) (temp___204 Int) (temp___205 Int))
  (let ((temp___202 (temp_____aggregate_def_201 temp___203 temp___204
                    temp___205)))
  (=> (dynamic_invariant1 temp___203 true true true true)
  (and
  (=> (dynamic_property 0 2147483647 temp___204 temp___205)
  (and (= (first1 temp___202) temp___204) (= (last1 temp___202) temp___205)))
  (forall ((temp___206 Int))
  (= (select (to_array temp___202) temp___206) rliteral)))))))

(define-fun dynamic_invariant4 ((temp___expr_193 us_t)
  (temp___is_init_189 Bool) (temp___skip_constant_190 Bool)
  (temp___do_toplevel_191 Bool)
  (temp___do_typ_inv_192 Bool)) Bool (=>
                                     (not (= temp___skip_constant_190 true))
                                     (and (dynamic_property 0 r7b
                                     (first1 temp___expr_193)
                                     (last1 temp___expr_193))
                                     (and (= (first1 temp___expr_193) 0)
                                     (= (last1 temp___expr_193) r7b)))))

(define-fun default_initial_assumption ((temp___expr_195 us_t)
  (temp___skip_top_level_196 Bool)) Bool (and (= (first1 temp___expr_195) 0)
                                         (= (last1 temp___expr_195) r7b)))

(assert
;; defqtvc
 ;; File "main.adb", line 10, characters 0-0
  (not
  (forall ((branch__split_fields us_t)
  (main__create_empty_branch__R7b__assume Int))
  (=> (dynamic_invariant2
  (us_repqtmk branch__split_discrs
  (us_split_fieldsqtmk branch__split_fields)) false false true true)
  (=>
  (= (to_rep (rec__main__branch_type__m_height branch__split_discrs)) main__create_empty_branch__R7b__assume)
  (=> (= main__create_empty_branch__R7b__assume r7b)
  (=> (dynamic_invariant r7b true false true true)
  (let ((temp___207 (temp_____aggregate_def_201 0 0 r7b)))
  (=> (= (first1 temp___207) 0)
  (=> (= (last1 temp___207) r7b)
  (=>
  (ite (<= (first1 temp___207) (last1 temp___207))
  (and (<= 0 r7b) (= (- (last1 temp___207) (first1 temp___207)) (- r7b 0)))
  (< r7b 0))
  (let ((temp___209 (of_array (to_array temp___207) (first1 temp___207)
                    (last1 temp___207))))
  (=>
  (ite (<= (first1 temp___209) (last1 temp___209))
  (and (<= (first1 branch__split_fields) (last1 branch__split_fields))
  (= (- (last1 temp___209) (first1 temp___209)) (- (last1
                                                   branch__split_fields) 
  (first1 branch__split_fields))))
  (< (last1 branch__split_fields) (first1 branch__split_fields)))
  (forall ((branch__split_fields1 us_t))
  (=>
  (= branch__split_fields1 (of_array (to_array temp___209)
                           (first1 temp___209) (last1 temp___209)))
  (=> (= (last1 branch__split_fields1) r10b)
  (=> (dynamic_invariant1 r10b true false true true)
  (let ((temp___215 r10b))
  (forall ((i Int))
  (=> (= i 0)
  (=>
  (= (and (ite (<= 0 i) true false) (ite (<= i temp___215) true false)) true)
  (forall ((temp___loop_entry_224 us_rep))
  (=>
  (= temp___loop_entry_224 (us_repqtmk branch__split_discrs
                           (us_split_fieldsqtmk branch__split_fields1)))
  (forall ((branch__split_fields2 us_t) (i1 Int))
  (=>
  (and (and (<= 0 i1) (<= i1 (last1 branch__split_fields2)))
  (= (last1 branch__split_fields2) (last1
                                   (rec__main__branch_type__m_nodes
                                   (us_split_fields1 temp___loop_entry_224)))))
  (=>
  (= (and (ite (and
               (and (dynamic_invariant2
               (us_repqtmk branch__split_discrs
               (us_split_fieldsqtmk branch__split_fields2)) false true true
               true)
               (forall ((temp___221 Int))
               (=>
               (and (<= (first1 branch__split_fields2) temp___221)
               (<= temp___221 (last1 branch__split_fields2)))
               (=>
               (or (< temp___215 temp___221)
               (or (< temp___221 0) (<= i1 temp___221)))
               (= (select (to_array branch__split_fields2) temp___221) (select 
               (to_array branch__split_fields1) temp___221))))))
               (dynamic_property1 0 r10b i1))
          true false) (ite (and (<= 0 i1) (<= i1 r10b)) true false)) true)
  (forall ((spark__branch Bool))
  (=> (= spark__branch (ite (= i1 (last1 branch__split_fields2)) true false))
  (=> (= spark__branch true)
  (=> (= (last1 branch__split_fields2) r12b)
  (=> (dynamic_invariant1 r12b true false true true)
  (=> (and (<= 0 i1) (<= i1 r12b)) (<= (first1 branch__split_fields2) i1)))))))))))))))))))))))))))))))))
(check-sat)
