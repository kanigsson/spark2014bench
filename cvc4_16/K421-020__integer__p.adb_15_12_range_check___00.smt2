(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const y Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort s1 0)

(declare-fun s1qtint (s1) Int)

;; s1'axiom
  (assert (forall ((i s1)) (and (<= 1 (s1qtint i)) (<= (s1qtint i) 10))))

(define-fun in_range1 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 10)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (s1 s1) Bool)

(declare-const dummy1 s1)

(declare-datatypes ((s1__ref 0))
(((s1__refqtmk (s1__content s1)))))
(define-fun s1__ref_s1__content__projection ((a s1__ref)) s1 (s1__content a))

(define-fun dynamic_invariant1 ((temp___expr_158 Int)
  (temp___is_init_154 Bool) (temp___skip_constant_155 Bool)
  (temp___do_toplevel_156 Bool)
  (temp___do_typ_inv_157 Bool)) Bool (=>
                                     (or (= temp___is_init_154 true)
                                     (<= 1 10)) (in_range1 temp___expr_158)))

(declare-sort s2 0)

(declare-fun s2qtint (s2) Int)

;; s2'axiom
  (assert (forall ((i s2)) (and (<= 1 (s2qtint i)) (<= (s2qtint i) 10))))

(define-fun in_range2 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (s2 s2) Bool)

(declare-const dummy2 s2)

(declare-datatypes ((s2__ref 0))
(((s2__refqtmk (s2__content s2)))))
(define-fun s2__ref_s2__content__projection ((a s2__ref)) s2 (s2__content a))

(define-fun dynamic_invariant2 ((temp___expr_165 Int)
  (temp___is_init_161 Bool) (temp___skip_constant_162 Bool)
  (temp___do_toplevel_163 Bool)
  (temp___do_typ_inv_164 Bool)) Bool (=>
                                     (or (= temp___is_init_161 true)
                                     (<= 1 10)) (in_range2 temp___expr_165)))

(declare-sort ttmp3S 0)

(declare-fun ttmp3Sqtint (ttmp3S) Int)

;; ttmp3S'axiom
  (assert
  (forall ((i ttmp3S)) (and (<= 1 (ttmp3Sqtint i)) (<= (ttmp3Sqtint i) 5))))

(define-fun in_range3 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (ttmp3S ttmp3S) Bool)

(declare-const dummy3 ttmp3S)

(declare-datatypes ((ttmp3S__ref 0))
(((ttmp3S__refqtmk (ttmp3S__content ttmp3S)))))
(define-fun ttmp3S__ref_ttmp3S__content__projection ((a ttmp3S__ref)) ttmp3S 
  (ttmp3S__content a))

(define-fun dynamic_invariant3 ((temp___expr_172 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)
  (temp___do_typ_inv_171 Bool)) Bool (=>
                                     (or (= temp___is_init_168 true)
                                     (<= 1 5)) (in_range3 temp___expr_172)))

(declare-sort ttmp4S 0)

(declare-fun ttmp4Sqtint (ttmp4S) Int)

;; ttmp4S'axiom
  (assert
  (forall ((i ttmp4S)) (and (<= 1 (ttmp4Sqtint i)) (<= (ttmp4Sqtint i) 5))))

(define-fun in_range4 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (ttmp4S ttmp4S) Bool)

(declare-const dummy4 ttmp4S)

(declare-datatypes ((ttmp4S__ref 0))
(((ttmp4S__refqtmk (ttmp4S__content ttmp4S)))))
(define-fun ttmp4S__ref_ttmp4S__content__projection ((a ttmp4S__ref)) ttmp4S 
  (ttmp4S__content a))

(define-fun dynamic_invariant4 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= 1 5)) (in_range4 temp___expr_179)))

(declare-sort ttmp5S 0)

(declare-fun ttmp5Sqtint (ttmp5S) Int)

;; ttmp5S'axiom
  (assert
  (forall ((i ttmp5S)) (and (<= 1 (ttmp5Sqtint i)) (<= (ttmp5Sqtint i) 5))))

(define-fun in_range5 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 5)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (ttmp5S ttmp5S) Bool)

(declare-const dummy5 ttmp5S)

(declare-datatypes ((ttmp5S__ref 0))
(((ttmp5S__refqtmk (ttmp5S__content ttmp5S)))))
(define-fun ttmp5S__ref_ttmp5S__content__projection ((a ttmp5S__ref)) ttmp5S 
  (ttmp5S__content a))

(define-fun dynamic_invariant5 ((temp___expr_186 Int)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)
  (temp___do_typ_inv_185 Bool)) Bool (=>
                                     (or (= temp___is_init_182 true)
                                     (<= 1 5)) (in_range5 temp___expr_186)))

(assert
;; defqtvc
 ;; File "p.adb", line 1, characters 0-0
  (not
  (forall ((tmp1 Int) (tmp2 Int) (tmp3 Int) (tmp4 Int) (tmp5 Int))
  (=> (dynamic_invariant x true false true true)
  (=> (dynamic_invariant y true false true true)
  (=> (dynamic_invariant1 tmp1 false false true true)
  (=> (dynamic_invariant2 tmp2 false false true true)
  (=> (dynamic_invariant3 tmp3 false false true true)
  (=> (dynamic_invariant4 tmp4 false false true true)
  (=> (dynamic_invariant5 tmp5 false false true true) (in_range1 x)))))))))))
(check-sat)
(exit)
