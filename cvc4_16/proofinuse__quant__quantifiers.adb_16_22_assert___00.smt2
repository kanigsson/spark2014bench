;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer_32 0)

(declare-fun integer_32qtint (integer_32) Int)

;; integer_32'axiom
  (assert
  (forall ((i integer_32))
  (and (<= (- 2147483648) (integer_32qtint i))
  (<= (integer_32qtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer_32 integer_32) Bool)

(declare-const dummy integer_32)

(declare-datatypes ((integer_32__ref 0))
(((integer_32__refqtmk (integer_32__content integer_32)))))
(define-fun integer_32__ref_integer_32__content__2__projection ((a integer_32__ref)) integer_32 
  (integer_32__content a))

(define-fun to_rep ((x integer_32)) Int (integer_32qtint x))

(declare-fun of_rep (Int) integer_32)

;; inversion_axiom
  (assert
  (forall ((x integer_32))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer_32)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int integer_32))))))
(declare-fun slide ((Array Int integer_32) Int Int) (Array Int integer_32))

;; slide_eq
  (assert
  (forall ((a (Array Int integer_32)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int integer_32)) (a__first Int) (a__last Int)
  (b (Array Int integer_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_154 Int))
                           (=>
                           (and (<= a__first temp___idx_154)
                           (<= temp___idx_154 a__last))
                           (= (to_rep (select a temp___idx_154)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_154)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer_32)) (b (Array Int integer_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_154 Int))
  (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last))
  (= (to_rep (select a temp___idx_154)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_154)))))))))))

(declare-const x (Array Int integer_32))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const y Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun all_zero (tuple0) (Array Int integer_32))

(declare-fun all_zero__function_guard ((Array Int integer_32) tuple0) Bool)

;; all_zero__post_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (let ((result (all_zero us_void_param)))
     (=> (all_zero__function_guard result us_void_param)
     (forall ((j Int))
     (=> (and (<= 1 j) (<= j 10)) (= (to_rep (select result j)) 0))))) :pattern (
  (all_zero us_void_param)) )))

(declare-fun property (Int Int) Bool)

(declare-fun property__function_guard (Bool Int Int) Bool)

(declare-sort index_10 0)

(declare-fun index_10qtint (index_10) Int)

;; index_10'axiom
  (assert
  (forall ((i index_10))
  (and (<= 1 (index_10qtint i)) (<= (index_10qtint i) 10))))

(define-fun in_range2 ((x1 Int)) Bool (and (<= 1 x1) (<= x1 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (index_10 index_10) Bool)

(declare-const dummy1 index_10)

(declare-datatypes ((index_10__ref 0))
(((index_10__refqtmk (index_10__content index_10)))))
(define-fun index_10__ref_index_10__content__projection ((a index_10__ref)) index_10 
  (index_10__content a))

(define-fun dynamic_invariant ((temp___expr_161 Int)
  (temp___is_init_157 Bool) (temp___skip_constant_158 Bool)
  (temp___do_toplevel_159 Bool)
  (temp___do_typ_inv_160 Bool)) Bool (=>
                                     (or (= temp___is_init_157 true)
                                     (<= 1 10)) (in_range2 temp___expr_161)))

(define-fun dynamic_invariant1 ((temp___expr_168 Int)
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)
  (temp___do_typ_inv_167 Bool)) Bool (=>
                                     (or (= temp___is_init_164 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_168)))

;; property__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "quantifiers.ads", line 7, characters 0-0
  (not
  (forall ((j Int))
  (=> (dynamic_invariant y true false true true)
  (=>
  (forall ((j1 Int) (k Int)) (property__function_guard
  (property (to_rep (select x k)) j1) (to_rep (select x k)) j1))
  (=>
  (forall ((j1 Int))
  (=> (and (<= 1 j1) (<= j1 10))
  (=> (= (to_rep (select x j1)) 0)
  (exists ((k Int))
  (and (and (<= 1 k) (<= k 10)) (= (property (to_rep (select x k)) j1) true))))))
  (=> (all_zero__function_guard (all_zero Tuple0) Tuple0)
  (=> (= (bool_eq x 1 10 (all_zero Tuple0) 1 10) true)
  (=> (<= 1 j)
  (=> (<= j 10)
  (=>
  (forall ((j1 Int) (k Int)) (property__function_guard
  (property (to_rep (select x k)) j1) (to_rep (select x k)) j1))
  (exists ((k Int))
  (and (and (<= 1 k) (<= k 10)) (= (property (to_rep (select x k)) j) true))))))))))))))
(check-sat)
