(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range2
                                    temp___expr_39)))

(declare-const ch Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort channels_type 0)

(declare-fun channels_typeqtint (channels_type) Int)

;; channels_type'axiom
  (assert
  (forall ((i channels_type))
  (and (<= 1 (channels_typeqtint i)) (<= (channels_typeqtint i) 6))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 6)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (channels_type channels_type) Bool)

(declare-const dummy2 channels_type)

(declare-datatypes ((channels_type__ref 0))
(((channels_type__refqtmk (channels_type__content channels_type)))))
(define-fun channels_type__ref_channels_type__content__projection ((a channels_type__ref)) channels_type 
  (channels_type__content a))

(define-fun dynamic_invariant1 ((temp___expr_179 Int)
  (temp___is_init_175 Bool) (temp___skip_constant_176 Bool)
  (temp___do_toplevel_177 Bool)
  (temp___do_typ_inv_178 Bool)) Bool (=>
                                     (or (= temp___is_init_175 true)
                                     (<= 1 6)) (in_range3 temp___expr_179)))

(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647))
                                    (in_range1 temp___expr_18)))

(assert
;; defqtvc
 ;; File "unroll.adb", line 4, characters 0-0
  (not
  (forall ((res Int) (res1 Int) (res2 Int))
  (=> (dynamic_invariant1 ch true false true true)
  (=> (dynamic_invariant res false false true true)
  (=> (= res1 0)
  (=>
  (let ((temp___183 ch))
  (exists ((x Int))
  (and (= x 1)
  (exists ((res3 Int))
  (and
  (ite (= (and (ite (<= 1 x) true false) (ite (<= x temp___183) true false)) true)
  (let ((o (+ res1 1))) (and (in_range1 o) (= res3 o))) (= res3 res1))
  (exists ((x1 Int))
  (and (= x1 2)
  (exists ((res4 Int))
  (and
  (ite (= (and (ite (<= 1 x1) true false) (ite (<= x1 temp___183) true false)) true)
  (let ((o (+ res3 1))) (and (in_range1 o) (= res4 o))) (= res4 res3))
  (exists ((x2 Int))
  (and (= x2 3)
  (exists ((res5 Int))
  (and
  (ite (= (and (ite (<= 1 x2) true false) (ite (<= x2 temp___183) true false)) true)
  (let ((o (+ res4 1))) (and (in_range1 o) (= res5 o))) (= res5 res4))
  (exists ((x3 Int))
  (and (= x3 4)
  (exists ((res6 Int))
  (and
  (ite (= (and (ite (<= 1 x3) true false) (ite (<= x3 temp___183) true false)) true)
  (let ((o (+ res5 1))) (and (in_range1 o) (= res6 o))) (= res6 res5))
  (exists ((x4 Int))
  (and (= x4 5)
  (exists ((res7 Int))
  (and
  (ite (= (and (ite (<= 1 x4) true false) (ite (<= x4 temp___183) true false)) true)
  (let ((o (+ res6 1))) (and (in_range1 o) (= res7 o))) (= res7 res6))
  (exists ((x5 Int))
  (and (= x5 6)
  (ite (= (and (ite (<= 1 x5) true false) (ite (<= x5 temp___183) true false)) true)
  (let ((o (+ res7 1))) (and (in_range1 o) (= res2 o))) (= res2 res7)))))))))))))))))))))))))
  (= res2 ch))))))))
(check-sat)
