(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |
Generated by: AdaCore
Generated on: 2020-03-06
Generator: SPARK
Application: Program verification for Ada
Target solver: CVC4
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(declare-fun integerqtint (integer) Int)

;; integer'axiom
  (assert
  (forall ((i integer))
  (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((integer__refqtmk (integer__content integer)))))
(define-fun integer__ref_integer__content__projection ((a integer__ref)) integer 
  (integer__content a))

(declare-sort natural 0)

(declare-fun naturalqtint (natural) Int)

;; natural'axiom
  (assert
  (forall ((i natural))
  (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((natural__refqtmk (natural__content natural)))))
(define-fun natural__ref_natural__content__projection ((a natural__ref)) natural 
  (natural__content a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool)
  (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool)
  (temp___do_typ_inv_38 Bool)) Bool (=>
                                    (or (= temp___is_init_35 true)
                                    (<= 0 2147483647)) (in_range1
                                    temp___expr_39)))

(define-fun to_rep ((x natural)) Int (naturalqtint x))

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ((character__ref 0))
(((character__refqtmk (character__content character)))))
(define-fun character__ref_character__content__projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep1 (character) Int)

(declare-fun of_rep1 (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((map__refqtmk (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_91 Int))
                           (=>
                           (and (<= a__first temp___idx_91)
                           (<= temp___idx_91 a__last))
                           (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                                                 (select b (+ (- b__first a__first) temp___idx_91)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_91 Int))
  (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last))
  (= (to_rep1 (select a temp___idx_91)) (to_rep1
                                        (select b (+ (- b__first a__first) temp___idx_91)))))))))))

(declare-sort positive 0)

(declare-fun positiveqtint (positive) Int)

;; positive'axiom
  (assert
  (forall ((i positive))
  (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (positive positive) Bool)

(declare-const dummy3 positive)

(declare-datatypes ((positive__ref 0))
(((positive__refqtmk (positive__content positive)))))
(define-fun positive__ref_positive__content__projection ((a positive__ref)) positive 
  (positive__content a))

(define-fun to_rep2 ((x integer)) Int (integerqtint x))

(declare-fun of_rep2 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                             (of_rep2 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0))
(((us_tqtmk (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (us_tqtmk a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const component__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; component__size_axiom
  (assert (<= 0 component__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ((string____ref 0))
(((string____refqtmk (string____content us_t)))))
(define-fun string____ref_string____content__projection ((a string____ref)) us_t 
  (string____content a))

(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool)
  (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool)
  (temp___do_typ_inv_17 Bool)) Bool (=>
                                    (or (= temp___is_init_14 true)
                                    (<= (- 2147483648) 2147483647)) (in_range
                                    temp___expr_18)))

(define-fun dynamic_invariant2 ((temp___expr_96 us_t)
  (temp___is_init_92 Bool) (temp___skip_constant_93 Bool)
  (temp___do_toplevel_94 Bool)
  (temp___do_typ_inv_95 Bool)) Bool (=>
                                    (not (= temp___skip_constant_93 true))
                                    (dynamic_property 1 2147483647
                                    (first1 temp___expr_96)
                                    (last1 temp___expr_96))))

(declare-datatypes ((t8s__ref 0))
(((t8s__refqtmk (t8s__content us_t)))))
(define-fun t8s__ref_t8s__content__projection ((a t8s__ref)) us_t (t8s__content
                                                                  a))

(declare-datatypes ((us_split_discrs 0))
(((us_split_discrsqtmk
  (rec__ada___pragmarc__b_strings__b_string__max_length natural)))))
(define-fun us_split_discrs_rec__ada___pragmarc__b_strings__b_string__max_length__projection ((a us_split_discrs)) natural 
  (rec__ada___pragmarc__b_strings__b_string__max_length a))

(declare-datatypes ((us_split_discrs__ref 0))
(((us_split_discrs__refqtmk (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___split_discrs__content__projection ((a us_split_discrs__ref)) us_split_discrs 
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk
  (rec__ada___pragmarc__b_strings__b_string__len natural)(rec__ada___pragmarc__b_strings__b_string__value us_t)(rec__ext__ us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__projection ((a us_split_fields)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__projection ((a us_split_fields)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value a))

(define-fun us_split_fields_rec__ext____projection ((a us_split_fields)) us_private 
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___split_discrs__projection ((a us_rep)) us_split_discrs 
  (us_split_discrs1 a))

(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun us_rep_attr__tag__projection ((a us_rep)) Int (attr__tag a))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(define-fun in_range4 ((rec__ada___pragmarc__b_strings__b_string__max_length1 Int)
  (a us_split_discrs)) Bool (= rec__ada___pragmarc__b_strings__b_string__max_length1 
  (to_rep (rec__ada___pragmarc__b_strings__b_string__max_length a))))

(declare-const value__size1 Int)

(declare-const object__size1 Int)

(declare-const alignment1 Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (<= 0 object__size1))

;; alignment_axiom
  (assert (<= 0 alignment1))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit ada___pragmarc__b_strings__b_string__max_length__last__bit))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit ada___pragmarc__b_strings__b_string__len__last__bit))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit ada___pragmarc__b_strings__b_string__value__last__bit))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ((b_string__ref 0))
(((b_string__refqtmk (b_string__content us_rep)))))
(define-fun b_string__ref_b_string__content__projection ((a b_string__ref)) us_rep 
  (b_string__content a))

(declare-fun oadd (us_t) us_rep)

(declare-fun oadd__function_guard (us_rep us_t) Bool)

(declare-fun oadd1 (Int us_t) us_rep)

(declare-fun oadd__function_guard1 (us_rep Int us_t) Bool)

(declare-fun oadd2 (us_rep) us_t)

(declare-fun oadd__function_guard2 (us_t us_rep) Bool)

(declare-fun oadd3 (Int us_rep) us_t)

(declare-fun oadd__function_guard3 (us_t Int us_rep) Bool)

(define-fun dynamic_invariant3 ((temp___expr_199 us_rep)
  (temp___is_init_195 Bool) (temp___skip_constant_196 Bool)
  (temp___do_toplevel_197 Bool)
  (temp___do_typ_inv_198 Bool)) Bool (let ((temp___200 (rec__ada___pragmarc__b_strings__b_string__max_length
                                                       (us_split_discrs1
                                                       temp___expr_199))))
                                     (and (dynamic_property 1
                                     (to_rep temp___200)
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value
                                     (us_split_fields1 temp___expr_199)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value
                                     (us_split_fields1 temp___expr_199))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value
                                        (us_split_fields1 temp___expr_199))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value
                                        (us_split_fields1 temp___expr_199))) 
                                     (to_rep temp___200))))))

(declare-datatypes ((us_split_fields2 0))
(((us_split_fieldsqtmk1
  (rec__ada___pragmarc__b_strings__b_string__len1 natural)(rec__ada___pragmarc__b_strings__b_string__value1 (Array Int character))(rec__ext__1 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__2__projection ((a us_split_fields2)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len1 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__2__projection ((a us_split_fields2)) (Array Int character) 
  (rec__ada___pragmarc__b_strings__b_string__value1 a))

(define-fun us_split_fields_rec__ext____2__projection ((a us_split_fields2)) us_private 
  (rec__ext__1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((us_split_fields__refqtmk1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___split_fields__content__2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((us_repqtmk1
  (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___split_discrs__2__projection ((a us_rep1)) us_split_discrs 
  (us_split_discrs2 a))

(define-fun us_rep___split_fields__2__projection ((a us_rep1)) us_split_fields2 
  (us_split_fields3 a))

(define-fun us_rep_attr__tag__2__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (us_private) us_private)

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (us_repqtmk (us_split_discrs2 a)
                                         (us_split_fieldsqtmk
                                         (rec__ada___pragmarc__b_strings__b_string__len1
                                         (us_split_fields3 a))
                                         (of_array
                                         (rec__ada___pragmarc__b_strings__b_string__value1
                                         (us_split_fields3 a)) 1 0)
                                         (hide_ext__
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (us_repqtmk1 (us_split_discrs1 r)
                                         (us_split_fieldsqtmk1
                                         (rec__ada___pragmarc__b_strings__b_string__len
                                         (us_split_fields1 r))
                                         (let ((temp___162 (rec__ada___pragmarc__b_strings__b_string__value
                                                           (us_split_fields1
                                                           r))))
                                         (to_array temp___162))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(declare-const us_tag1 Int)

(declare-const value__size2 Int)

(declare-const object__size2 Int)

(declare-const alignment2 Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (<= 0 object__size2))

;; alignment_axiom
  (assert (<= 0 alignment2))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position1 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit1))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit1 ada___pragmarc__b_strings__b_string__max_length__last__bit1))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position1))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position1 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit1))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit1 ada___pragmarc__b_strings__b_string__len__last__bit1))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position1))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit1 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position1 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit1))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit1 ada___pragmarc__b_strings__b_string__value__last__bit1))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position1))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((t11s__ref 0))
(((t11s__refqtmk (t11s__content us_rep1)))))
(define-fun t11s__ref_t11s__content__projection ((a t11s__ref)) us_rep1 
  (t11s__content a))

(declare-datatypes ((t2b__ref 0))
(((t2b__refqtmk (t2b__content us_t)))))
(define-fun t2b__ref_t2b__content__projection ((a t2b__ref)) us_t (t2b__content
                                                                  a))

(declare-datatypes ((us_split_fields4 0))
(((us_split_fieldsqtmk2
  (rec__ada___pragmarc__b_strings__b_string__len2 natural)(rec__ada___pragmarc__b_strings__b_string__value2 us_t)(rec__ext__2 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__3__projection ((a us_split_fields4)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len2 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__3__projection ((a us_split_fields4)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value2 a))

(define-fun us_split_fields_rec__ext____3__projection ((a us_split_fields4)) us_private 
  (rec__ext__2 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((us_split_fields__refqtmk2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___split_fields__content__3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((us_repqtmk2
  (us_split_discrs3 us_split_discrs)(us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___split_discrs__3__projection ((a us_rep2)) us_split_discrs 
  (us_split_discrs3 a))

(define-fun us_rep___split_fields__3__projection ((a us_rep2)) us_split_fields4 
  (us_split_fields5 a))

(define-fun us_rep_attr__tag__3__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (us_private) us_private)

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (us_repqtmk (us_split_discrs3 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len2
                                          (us_split_fields5 a))
                                          (let ((temp___168 (rec__ada___pragmarc__b_strings__b_string__value2
                                                            (us_split_fields5
                                                            a))))
                                          (of_array (to_array temp___168)
                                          (first1 temp___168)
                                          (last1 temp___168)))
                                          (hide_ext__1
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (us_repqtmk2 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk2
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___167 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___167)
                                          (first1 temp___167)
                                          (last1 temp___167)))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag2 Int)

(declare-const value__size3 Int)

(declare-const object__size3 Int)

(declare-const alignment3 Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (<= 0 object__size3))

;; alignment_axiom
  (assert (<= 0 alignment3))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position2 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit2))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit2 ada___pragmarc__b_strings__b_string__max_length__last__bit2))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position2))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position2 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit2))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit2 ada___pragmarc__b_strings__b_string__len__last__bit2))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position2))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit2 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position2 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit2))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit2 ada___pragmarc__b_strings__b_string__value__last__bit2))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position2))

(declare-fun user_eq7 (us_rep2 us_rep2) Bool)

(declare-const dummy7 us_rep2)

(declare-datatypes ((s1b__ref 0))
(((s1b__refqtmk (s1b__content us_rep2)))))
(define-fun s1b__ref_s1b__content__projection ((a s1b__ref)) us_rep2 
  (s1b__content a))

(declare-datatypes ((t10b__ref 0))
(((t10b__refqtmk (t10b__content us_t)))))
(define-fun t10b__ref_t10b__content__projection ((a t10b__ref)) us_t 
  (t10b__content a))

(declare-datatypes ((us_split_fields6 0))
(((us_split_fieldsqtmk3
  (rec__ada___pragmarc__b_strings__b_string__len3 natural)(rec__ada___pragmarc__b_strings__b_string__value3 us_t)(rec__ext__3 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__4__projection ((a us_split_fields6)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len3 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__4__projection ((a us_split_fields6)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value3 a))

(define-fun us_split_fields_rec__ext____4__projection ((a us_split_fields6)) us_private 
  (rec__ext__3 a))

(declare-datatypes ((us_split_fields__ref3 0))
(((us_split_fields__refqtmk3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___split_fields__content__4__projection ((a us_split_fields__ref3)) us_split_fields6 
  (us_split_fields__content3 a))

(declare-datatypes ((us_rep3 0))
(((us_repqtmk3
  (us_split_discrs4 us_split_discrs)(us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___split_discrs__4__projection ((a us_rep3)) us_split_discrs 
  (us_split_discrs4 a))

(define-fun us_rep___split_fields__4__projection ((a us_rep3)) us_split_fields6 
  (us_split_fields7 a))

(define-fun us_rep_attr__tag__4__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (us_private) us_private)

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (us_repqtmk (us_split_discrs4 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len3
                                          (us_split_fields7 a))
                                          (let ((temp___170 (rec__ada___pragmarc__b_strings__b_string__value3
                                                            (us_split_fields7
                                                            a))))
                                          (of_array (to_array temp___170)
                                          (first1 temp___170)
                                          (last1 temp___170)))
                                          (hide_ext__2
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (us_repqtmk3 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk3
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___169 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___169)
                                          (first1 temp___169)
                                          (last1 temp___169)))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag3 Int)

(declare-const value__size4 Int)

(declare-const object__size4 Int)

(declare-const alignment4 Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (<= 0 object__size4))

;; alignment_axiom
  (assert (<= 0 alignment4))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position3 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit3))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit3 ada___pragmarc__b_strings__b_string__max_length__last__bit3))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position3))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position3 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit3))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit3 ada___pragmarc__b_strings__b_string__len__last__bit3))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position3))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit3 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position3 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit3))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit3 ada___pragmarc__b_strings__b_string__value__last__bit3))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position3))

(declare-fun user_eq8 (us_rep3 us_rep3) Bool)

(declare-const dummy8 us_rep3)

(declare-datatypes ((t9b__ref 0))
(((t9b__refqtmk (t9b__content us_rep3)))))
(define-fun t9b__ref_t9b__content__projection ((a t9b__ref)) us_rep3 
  (t9b__content a))

(declare-datatypes ((t12b__ref 0))
(((t12b__refqtmk (t12b__content us_t)))))
(define-fun t12b__ref_t12b__content__projection ((a t12b__ref)) us_t 
  (t12b__content a))

(declare-datatypes ((us_split_fields8 0))
(((us_split_fieldsqtmk4
  (rec__ada___pragmarc__b_strings__b_string__len4 natural)(rec__ada___pragmarc__b_strings__b_string__value4 us_t)(rec__ext__4 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__5__projection ((a us_split_fields8)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len4 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__5__projection ((a us_split_fields8)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value4 a))

(define-fun us_split_fields_rec__ext____5__projection ((a us_split_fields8)) us_private 
  (rec__ext__4 a))

(declare-datatypes ((us_split_fields__ref4 0))
(((us_split_fields__refqtmk4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___split_fields__content__5__projection ((a us_split_fields__ref4)) us_split_fields8 
  (us_split_fields__content4 a))

(declare-datatypes ((us_rep4 0))
(((us_repqtmk4
  (us_split_discrs5 us_split_discrs)(us_split_fields9 us_split_fields8)(attr__tag4 Int)))))
(define-fun us_rep___split_discrs__5__projection ((a us_rep4)) us_split_discrs 
  (us_split_discrs5 a))

(define-fun us_rep___split_fields__5__projection ((a us_rep4)) us_split_fields8 
  (us_split_fields9 a))

(define-fun us_rep_attr__tag__5__projection ((a us_rep4)) Int (attr__tag4 a))

(declare-fun hide_ext__3 (us_private) us_private)

(declare-fun extract__ext__3 (us_private) us_private)

(define-fun to_base3 ((a us_rep4)) us_rep (us_repqtmk (us_split_discrs5 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len4
                                          (us_split_fields9 a))
                                          (let ((temp___172 (rec__ada___pragmarc__b_strings__b_string__value4
                                                            (us_split_fields9
                                                            a))))
                                          (of_array (to_array temp___172)
                                          (first1 temp___172)
                                          (last1 temp___172)))
                                          (hide_ext__3
                                          (rec__ext__4 (us_split_fields9 a))))
                                          (attr__tag4 a)))

(define-fun of_base3 ((r us_rep)) us_rep4 (us_repqtmk4 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk4
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___171 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___171)
                                          (first1 temp___171)
                                          (last1 temp___171)))
                                          (extract__ext__3
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag4 Int)

(declare-const value__size5 Int)

(declare-const object__size5 Int)

(declare-const alignment5 Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (<= 0 object__size5))

;; alignment_axiom
  (assert (<= 0 alignment5))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position4 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit4))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit4 ada___pragmarc__b_strings__b_string__max_length__last__bit4))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position4))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position4 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit4))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit4 ada___pragmarc__b_strings__b_string__len__last__bit4))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position4))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit4 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position4 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit4))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit4 ada___pragmarc__b_strings__b_string__value__last__bit4))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position4))

(declare-fun user_eq9 (us_rep4 us_rep4) Bool)

(declare-const dummy9 us_rep4)

(declare-datatypes ((s11b__ref 0))
(((s11b__refqtmk (s11b__content us_rep4)))))
(define-fun s11b__ref_s11b__content__projection ((a s11b__ref)) us_rep4 
  (s11b__content a))

(declare-datatypes ((t15b__ref 0))
(((t15b__refqtmk (t15b__content us_t)))))
(define-fun t15b__ref_t15b__content__projection ((a t15b__ref)) us_t 
  (t15b__content a))

(declare-datatypes ((us_split_fields10 0))
(((us_split_fieldsqtmk5
  (rec__ada___pragmarc__b_strings__b_string__len5 natural)(rec__ada___pragmarc__b_strings__b_string__value5 us_t)(rec__ext__5 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__6__projection ((a us_split_fields10)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len5 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__6__projection ((a us_split_fields10)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value5 a))

(define-fun us_split_fields_rec__ext____6__projection ((a us_split_fields10)) us_private 
  (rec__ext__5 a))

(declare-datatypes ((us_split_fields__ref5 0))
(((us_split_fields__refqtmk5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___split_fields__content__6__projection ((a us_split_fields__ref5)) us_split_fields10 
  (us_split_fields__content5 a))

(declare-datatypes ((us_rep5 0))
(((us_repqtmk5
  (us_split_discrs6 us_split_discrs)(us_split_fields11 us_split_fields10)(attr__tag5 Int)))))
(define-fun us_rep___split_discrs__6__projection ((a us_rep5)) us_split_discrs 
  (us_split_discrs6 a))

(define-fun us_rep___split_fields__6__projection ((a us_rep5)) us_split_fields10 
  (us_split_fields11 a))

(define-fun us_rep_attr__tag__6__projection ((a us_rep5)) Int (attr__tag5 a))

(declare-fun hide_ext__4 (us_private) us_private)

(declare-fun extract__ext__4 (us_private) us_private)

(define-fun to_base4 ((a us_rep5)) us_rep (us_repqtmk (us_split_discrs6 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len5
                                          (us_split_fields11 a))
                                          (let ((temp___174 (rec__ada___pragmarc__b_strings__b_string__value5
                                                            (us_split_fields11
                                                            a))))
                                          (of_array (to_array temp___174)
                                          (first1 temp___174)
                                          (last1 temp___174)))
                                          (hide_ext__4
                                          (rec__ext__5 (us_split_fields11 a))))
                                          (attr__tag5 a)))

(define-fun of_base4 ((r us_rep)) us_rep5 (us_repqtmk5 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk5
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___173 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___173)
                                          (first1 temp___173)
                                          (last1 temp___173)))
                                          (extract__ext__4
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag5 Int)

(declare-const value__size6 Int)

(declare-const object__size6 Int)

(declare-const alignment6 Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (<= 0 object__size6))

;; alignment_axiom
  (assert (<= 0 alignment6))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position5 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit5))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit5 ada___pragmarc__b_strings__b_string__max_length__last__bit5))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position5))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position5 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit5))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit5 ada___pragmarc__b_strings__b_string__len__last__bit5))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position5))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit5 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position5 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit5))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit5 ada___pragmarc__b_strings__b_string__value__last__bit5))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position5))

(declare-fun user_eq10 (us_rep5 us_rep5) Bool)

(declare-const dummy10 us_rep5)

(declare-datatypes ((s14b__ref 0))
(((s14b__refqtmk (s14b__content us_rep5)))))
(define-fun s14b__ref_s14b__content__projection ((a s14b__ref)) us_rep5 
  (s14b__content a))

(declare-datatypes ((t60b__ref 0))
(((t60b__refqtmk (t60b__content us_t)))))
(define-fun t60b__ref_t60b__content__projection ((a t60b__ref)) us_t 
  (t60b__content a))

(declare-datatypes ((us_split_fields12 0))
(((us_split_fieldsqtmk6
  (rec__ada___pragmarc__b_strings__b_string__len6 natural)(rec__ada___pragmarc__b_strings__b_string__value6 us_t)(rec__ext__6 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__7__projection ((a us_split_fields12)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len6 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__7__projection ((a us_split_fields12)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value6 a))

(define-fun us_split_fields_rec__ext____7__projection ((a us_split_fields12)) us_private 
  (rec__ext__6 a))

(declare-datatypes ((us_split_fields__ref6 0))
(((us_split_fields__refqtmk6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___split_fields__content__7__projection ((a us_split_fields__ref6)) us_split_fields12 
  (us_split_fields__content6 a))

(declare-datatypes ((us_rep6 0))
(((us_repqtmk6
  (us_split_discrs7 us_split_discrs)(us_split_fields13 us_split_fields12)(attr__tag6 Int)))))
(define-fun us_rep___split_discrs__7__projection ((a us_rep6)) us_split_discrs 
  (us_split_discrs7 a))

(define-fun us_rep___split_fields__7__projection ((a us_rep6)) us_split_fields12 
  (us_split_fields13 a))

(define-fun us_rep_attr__tag__7__projection ((a us_rep6)) Int (attr__tag6 a))

(declare-fun hide_ext__5 (us_private) us_private)

(declare-fun extract__ext__5 (us_private) us_private)

(define-fun to_base5 ((a us_rep6)) us_rep (us_repqtmk (us_split_discrs7 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len6
                                          (us_split_fields13 a))
                                          (let ((temp___176 (rec__ada___pragmarc__b_strings__b_string__value6
                                                            (us_split_fields13
                                                            a))))
                                          (of_array (to_array temp___176)
                                          (first1 temp___176)
                                          (last1 temp___176)))
                                          (hide_ext__5
                                          (rec__ext__6 (us_split_fields13 a))))
                                          (attr__tag6 a)))

(define-fun of_base5 ((r us_rep)) us_rep6 (us_repqtmk6 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk6
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___175 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___175)
                                          (first1 temp___175)
                                          (last1 temp___175)))
                                          (extract__ext__5
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag6 Int)

(declare-const value__size7 Int)

(declare-const object__size7 Int)

(declare-const alignment7 Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (<= 0 object__size7))

;; alignment_axiom
  (assert (<= 0 alignment7))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position6 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit6))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit6 ada___pragmarc__b_strings__b_string__max_length__last__bit6))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position6))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position6 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit6))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit6 ada___pragmarc__b_strings__b_string__len__last__bit6))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position6))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit6 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position6 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit6))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit6 ada___pragmarc__b_strings__b_string__value__last__bit6))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position6))

(declare-fun user_eq11 (us_rep6 us_rep6) Bool)

(declare-const dummy11 us_rep6)

(declare-datatypes ((s59b__ref 0))
(((s59b__refqtmk (s59b__content us_rep6)))))
(define-fun s59b__ref_s59b__content__projection ((a s59b__ref)) us_rep6 
  (s59b__content a))

(declare-datatypes ((t58b__ref 0))
(((t58b__refqtmk (t58b__content us_t)))))
(define-fun t58b__ref_t58b__content__projection ((a t58b__ref)) us_t 
  (t58b__content a))

(declare-datatypes ((us_split_fields14 0))
(((us_split_fieldsqtmk7
  (rec__ada___pragmarc__b_strings__b_string__len7 natural)(rec__ada___pragmarc__b_strings__b_string__value7 us_t)(rec__ext__7 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__8__projection ((a us_split_fields14)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len7 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__8__projection ((a us_split_fields14)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value7 a))

(define-fun us_split_fields_rec__ext____8__projection ((a us_split_fields14)) us_private 
  (rec__ext__7 a))

(declare-datatypes ((us_split_fields__ref7 0))
(((us_split_fields__refqtmk7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___split_fields__content__8__projection ((a us_split_fields__ref7)) us_split_fields14 
  (us_split_fields__content7 a))

(declare-datatypes ((us_rep7 0))
(((us_repqtmk7
  (us_split_discrs8 us_split_discrs)(us_split_fields15 us_split_fields14)(attr__tag7 Int)))))
(define-fun us_rep___split_discrs__8__projection ((a us_rep7)) us_split_discrs 
  (us_split_discrs8 a))

(define-fun us_rep___split_fields__8__projection ((a us_rep7)) us_split_fields14 
  (us_split_fields15 a))

(define-fun us_rep_attr__tag__8__projection ((a us_rep7)) Int (attr__tag7 a))

(declare-fun hide_ext__6 (us_private) us_private)

(declare-fun extract__ext__6 (us_private) us_private)

(define-fun to_base6 ((a us_rep7)) us_rep (us_repqtmk (us_split_discrs8 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len7
                                          (us_split_fields15 a))
                                          (let ((temp___178 (rec__ada___pragmarc__b_strings__b_string__value7
                                                            (us_split_fields15
                                                            a))))
                                          (of_array (to_array temp___178)
                                          (first1 temp___178)
                                          (last1 temp___178)))
                                          (hide_ext__6
                                          (rec__ext__7 (us_split_fields15 a))))
                                          (attr__tag7 a)))

(define-fun of_base6 ((r us_rep)) us_rep7 (us_repqtmk7 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk7
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___177 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___177)
                                          (first1 temp___177)
                                          (last1 temp___177)))
                                          (extract__ext__6
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag7 Int)

(declare-const value__size8 Int)

(declare-const object__size8 Int)

(declare-const alignment8 Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (<= 0 object__size8))

;; alignment_axiom
  (assert (<= 0 alignment8))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position7 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit7))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit7 ada___pragmarc__b_strings__b_string__max_length__last__bit7))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position7))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position7 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit7))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit7 ada___pragmarc__b_strings__b_string__len__last__bit7))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position7))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit7 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position7 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit7))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit7 ada___pragmarc__b_strings__b_string__value__last__bit7))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position7))

(declare-fun user_eq12 (us_rep7 us_rep7) Bool)

(declare-const dummy12 us_rep7)

(declare-datatypes ((s57b__ref 0))
(((s57b__refqtmk (s57b__content us_rep7)))))
(define-fun s57b__ref_s57b__content__projection ((a s57b__ref)) us_rep7 
  (s57b__content a))

(declare-datatypes ((t71b__ref 0))
(((t71b__refqtmk (t71b__content us_t)))))
(define-fun t71b__ref_t71b__content__projection ((a t71b__ref)) us_t 
  (t71b__content a))

(declare-datatypes ((us_split_fields16 0))
(((us_split_fieldsqtmk8
  (rec__ada___pragmarc__b_strings__b_string__len8 natural)(rec__ada___pragmarc__b_strings__b_string__value8 us_t)(rec__ext__8 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__9__projection ((a us_split_fields16)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len8 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__9__projection ((a us_split_fields16)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value8 a))

(define-fun us_split_fields_rec__ext____9__projection ((a us_split_fields16)) us_private 
  (rec__ext__8 a))

(declare-datatypes ((us_split_fields__ref8 0))
(((us_split_fields__refqtmk8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___split_fields__content__9__projection ((a us_split_fields__ref8)) us_split_fields16 
  (us_split_fields__content8 a))

(declare-datatypes ((us_rep8 0))
(((us_repqtmk8
  (us_split_discrs9 us_split_discrs)(us_split_fields17 us_split_fields16)(attr__tag8 Int)))))
(define-fun us_rep___split_discrs__9__projection ((a us_rep8)) us_split_discrs 
  (us_split_discrs9 a))

(define-fun us_rep___split_fields__9__projection ((a us_rep8)) us_split_fields16 
  (us_split_fields17 a))

(define-fun us_rep_attr__tag__9__projection ((a us_rep8)) Int (attr__tag8 a))

(declare-fun hide_ext__7 (us_private) us_private)

(declare-fun extract__ext__7 (us_private) us_private)

(define-fun to_base7 ((a us_rep8)) us_rep (us_repqtmk (us_split_discrs9 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len8
                                          (us_split_fields17 a))
                                          (let ((temp___180 (rec__ada___pragmarc__b_strings__b_string__value8
                                                            (us_split_fields17
                                                            a))))
                                          (of_array (to_array temp___180)
                                          (first1 temp___180)
                                          (last1 temp___180)))
                                          (hide_ext__7
                                          (rec__ext__8 (us_split_fields17 a))))
                                          (attr__tag8 a)))

(define-fun of_base7 ((r us_rep)) us_rep8 (us_repqtmk8 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk8
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___179 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___179)
                                          (first1 temp___179)
                                          (last1 temp___179)))
                                          (extract__ext__7
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag8 Int)

(declare-const value__size9 Int)

(declare-const object__size9 Int)

(declare-const alignment9 Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (<= 0 object__size9))

;; alignment_axiom
  (assert (<= 0 alignment9))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position8 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit8))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit8 ada___pragmarc__b_strings__b_string__max_length__last__bit8))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position8))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position8 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit8))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit8 ada___pragmarc__b_strings__b_string__len__last__bit8))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position8))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit8 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position8 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit8))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit8 ada___pragmarc__b_strings__b_string__value__last__bit8))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position8))

(declare-fun user_eq13 (us_rep8 us_rep8) Bool)

(declare-const dummy13 us_rep8)

(declare-datatypes ((s70b__ref 0))
(((s70b__refqtmk (s70b__content us_rep8)))))
(define-fun s70b__ref_s70b__content__projection ((a s70b__ref)) us_rep8 
  (s70b__content a))

(declare-datatypes ((t69b__ref 0))
(((t69b__refqtmk (t69b__content us_t)))))
(define-fun t69b__ref_t69b__content__projection ((a t69b__ref)) us_t 
  (t69b__content a))

(declare-datatypes ((us_split_fields18 0))
(((us_split_fieldsqtmk9
  (rec__ada___pragmarc__b_strings__b_string__len9 natural)(rec__ada___pragmarc__b_strings__b_string__value9 us_t)(rec__ext__9 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__10__projection ((a us_split_fields18)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len9 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__10__projection ((a us_split_fields18)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value9 a))

(define-fun us_split_fields_rec__ext____10__projection ((a us_split_fields18)) us_private 
  (rec__ext__9 a))

(declare-datatypes ((us_split_fields__ref9 0))
(((us_split_fields__refqtmk9 (us_split_fields__content9 us_split_fields18)))))
(define-fun us_split_fields__ref___split_fields__content__10__projection ((a us_split_fields__ref9)) us_split_fields18 
  (us_split_fields__content9 a))

(declare-datatypes ((us_rep9 0))
(((us_repqtmk9
  (us_split_discrs10 us_split_discrs)(us_split_fields19 us_split_fields18)(attr__tag9 Int)))))
(define-fun us_rep___split_discrs__10__projection ((a us_rep9)) us_split_discrs 
  (us_split_discrs10 a))

(define-fun us_rep___split_fields__10__projection ((a us_rep9)) us_split_fields18 
  (us_split_fields19 a))

(define-fun us_rep_attr__tag__10__projection ((a us_rep9)) Int (attr__tag9 a))

(declare-fun hide_ext__8 (us_private) us_private)

(declare-fun extract__ext__8 (us_private) us_private)

(define-fun to_base8 ((a us_rep9)) us_rep (us_repqtmk (us_split_discrs10 a)
                                          (us_split_fieldsqtmk
                                          (rec__ada___pragmarc__b_strings__b_string__len9
                                          (us_split_fields19 a))
                                          (let ((temp___182 (rec__ada___pragmarc__b_strings__b_string__value9
                                                            (us_split_fields19
                                                            a))))
                                          (of_array (to_array temp___182)
                                          (first1 temp___182)
                                          (last1 temp___182)))
                                          (hide_ext__8
                                          (rec__ext__9 (us_split_fields19 a))))
                                          (attr__tag9 a)))

(define-fun of_base8 ((r us_rep)) us_rep9 (us_repqtmk9 (us_split_discrs1 r)
                                          (us_split_fieldsqtmk9
                                          (rec__ada___pragmarc__b_strings__b_string__len
                                          (us_split_fields1 r))
                                          (let ((temp___181 (rec__ada___pragmarc__b_strings__b_string__value
                                                            (us_split_fields1
                                                            r))))
                                          (of_array (to_array temp___181)
                                          (first1 temp___181)
                                          (last1 temp___181)))
                                          (extract__ext__8
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(declare-const us_tag9 Int)

(declare-const value__size10 Int)

(declare-const object__size10 Int)

(declare-const alignment10 Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (<= 0 object__size10))

;; alignment_axiom
  (assert (<= 0 alignment10))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position9 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit9))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit9 ada___pragmarc__b_strings__b_string__max_length__last__bit9))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position9))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position9 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit9))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit9 ada___pragmarc__b_strings__b_string__len__last__bit9))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position9))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit9 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position9 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit9))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit9 ada___pragmarc__b_strings__b_string__value__last__bit9))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position9))

(declare-fun user_eq14 (us_rep9 us_rep9) Bool)

(declare-const dummy14 us_rep9)

(declare-datatypes ((s68b__ref 0))
(((s68b__refqtmk (s68b__content us_rep9)))))
(define-fun s68b__ref_s68b__content__projection ((a s68b__ref)) us_rep9 
  (s68b__content a))

(declare-datatypes ((t82b__ref 0))
(((t82b__refqtmk (t82b__content us_t)))))
(define-fun t82b__ref_t82b__content__projection ((a t82b__ref)) us_t 
  (t82b__content a))

(declare-datatypes ((us_split_fields20 0))
(((us_split_fieldsqtmk10
  (rec__ada___pragmarc__b_strings__b_string__len10 natural)(rec__ada___pragmarc__b_strings__b_string__value10 us_t)(rec__ext__10 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__11__projection ((a us_split_fields20)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len10 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__11__projection ((a us_split_fields20)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value10 a))

(define-fun us_split_fields_rec__ext____11__projection ((a us_split_fields20)) us_private 
  (rec__ext__10 a))

(declare-datatypes ((us_split_fields__ref10 0))
(((us_split_fields__refqtmk10 (us_split_fields__content10 us_split_fields20)))))
(define-fun us_split_fields__ref___split_fields__content__11__projection ((a us_split_fields__ref10)) us_split_fields20 
  (us_split_fields__content10 a))

(declare-datatypes ((us_rep10 0))
(((us_repqtmk10
  (us_split_discrs11 us_split_discrs)(us_split_fields21 us_split_fields20)(attr__tag10 Int)))))
(define-fun us_rep___split_discrs__11__projection ((a us_rep10)) us_split_discrs 
  (us_split_discrs11 a))

(define-fun us_rep___split_fields__11__projection ((a us_rep10)) us_split_fields20 
  (us_split_fields21 a))

(define-fun us_rep_attr__tag__11__projection ((a us_rep10)) Int (attr__tag10
                                                                a))

(declare-fun hide_ext__9 (us_private) us_private)

(declare-fun extract__ext__9 (us_private) us_private)

(define-fun to_base9 ((a us_rep10)) us_rep (us_repqtmk (us_split_discrs11 a)
                                           (us_split_fieldsqtmk
                                           (rec__ada___pragmarc__b_strings__b_string__len10
                                           (us_split_fields21 a))
                                           (let ((temp___184 (rec__ada___pragmarc__b_strings__b_string__value10
                                                             (us_split_fields21
                                                             a))))
                                           (of_array (to_array temp___184)
                                           (first1 temp___184)
                                           (last1 temp___184)))
                                           (hide_ext__9
                                           (rec__ext__10
                                           (us_split_fields21 a))))
                                           (attr__tag10 a)))

(define-fun of_base9 ((r us_rep)) us_rep10 (us_repqtmk10 (us_split_discrs1 r)
                                           (us_split_fieldsqtmk10
                                           (rec__ada___pragmarc__b_strings__b_string__len
                                           (us_split_fields1 r))
                                           (let ((temp___183 (rec__ada___pragmarc__b_strings__b_string__value
                                                             (us_split_fields1
                                                             r))))
                                           (of_array (to_array temp___183)
                                           (first1 temp___183)
                                           (last1 temp___183)))
                                           (extract__ext__9
                                           (rec__ext__ (us_split_fields1 r))))
                                           (attr__tag r)))

(declare-const us_tag10 Int)

(declare-const value__size11 Int)

(declare-const object__size11 Int)

(declare-const alignment11 Int)

;; value__size_axiom
  (assert (<= 0 value__size11))

;; object__size_axiom
  (assert (<= 0 object__size11))

;; alignment_axiom
  (assert (<= 0 alignment11))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position10 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit10))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit10 ada___pragmarc__b_strings__b_string__max_length__last__bit10))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position10))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position10 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit10))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit10 ada___pragmarc__b_strings__b_string__len__last__bit10))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position10))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit10 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position10 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit10))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit10 ada___pragmarc__b_strings__b_string__value__last__bit10))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position10))

(declare-fun user_eq15 (us_rep10 us_rep10) Bool)

(declare-const dummy15 us_rep10)

(declare-datatypes ((s81b__ref 0))
(((s81b__refqtmk (s81b__content us_rep10)))))
(define-fun s81b__ref_s81b__content__projection ((a s81b__ref)) us_rep10 
  (s81b__content a))

(declare-datatypes ((t80b__ref 0))
(((t80b__refqtmk (t80b__content us_t)))))
(define-fun t80b__ref_t80b__content__projection ((a t80b__ref)) us_t 
  (t80b__content a))

(declare-datatypes ((us_split_fields22 0))
(((us_split_fieldsqtmk11
  (rec__ada___pragmarc__b_strings__b_string__len11 natural)(rec__ada___pragmarc__b_strings__b_string__value11 us_t)(rec__ext__11 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__12__projection ((a us_split_fields22)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len11 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__12__projection ((a us_split_fields22)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value11 a))

(define-fun us_split_fields_rec__ext____12__projection ((a us_split_fields22)) us_private 
  (rec__ext__11 a))

(declare-datatypes ((us_split_fields__ref11 0))
(((us_split_fields__refqtmk11 (us_split_fields__content11 us_split_fields22)))))
(define-fun us_split_fields__ref___split_fields__content__12__projection ((a us_split_fields__ref11)) us_split_fields22 
  (us_split_fields__content11 a))

(declare-datatypes ((us_rep11 0))
(((us_repqtmk11
  (us_split_discrs12 us_split_discrs)(us_split_fields23 us_split_fields22)(attr__tag11 Int)))))
(define-fun us_rep___split_discrs__12__projection ((a us_rep11)) us_split_discrs 
  (us_split_discrs12 a))

(define-fun us_rep___split_fields__12__projection ((a us_rep11)) us_split_fields22 
  (us_split_fields23 a))

(define-fun us_rep_attr__tag__12__projection ((a us_rep11)) Int (attr__tag11
                                                                a))

(declare-fun hide_ext__10 (us_private) us_private)

(declare-fun extract__ext__10 (us_private) us_private)

(define-fun to_base10 ((a us_rep11)) us_rep (us_repqtmk (us_split_discrs12 a)
                                            (us_split_fieldsqtmk
                                            (rec__ada___pragmarc__b_strings__b_string__len11
                                            (us_split_fields23 a))
                                            (let ((temp___186 (rec__ada___pragmarc__b_strings__b_string__value11
                                                              (us_split_fields23
                                                              a))))
                                            (of_array (to_array temp___186)
                                            (first1 temp___186)
                                            (last1 temp___186)))
                                            (hide_ext__10
                                            (rec__ext__11
                                            (us_split_fields23 a))))
                                            (attr__tag11 a)))

(define-fun of_base10 ((r us_rep)) us_rep11 (us_repqtmk11
                                            (us_split_discrs1 r)
                                            (us_split_fieldsqtmk11
                                            (rec__ada___pragmarc__b_strings__b_string__len
                                            (us_split_fields1 r))
                                            (let ((temp___185 (rec__ada___pragmarc__b_strings__b_string__value
                                                              (us_split_fields1
                                                              r))))
                                            (of_array (to_array temp___185)
                                            (first1 temp___185)
                                            (last1 temp___185)))
                                            (extract__ext__10
                                            (rec__ext__ (us_split_fields1 r))))
                                            (attr__tag r)))

(declare-const us_tag11 Int)

(declare-const value__size12 Int)

(declare-const object__size12 Int)

(declare-const alignment12 Int)

;; value__size_axiom
  (assert (<= 0 value__size12))

;; object__size_axiom
  (assert (<= 0 object__size12))

;; alignment_axiom
  (assert (<= 0 alignment12))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position11 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit11))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit11 ada___pragmarc__b_strings__b_string__max_length__last__bit11))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position11))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position11 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit11))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit11 ada___pragmarc__b_strings__b_string__len__last__bit11))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position11))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit11 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position11 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit11))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit11 ada___pragmarc__b_strings__b_string__value__last__bit11))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position11))

(declare-fun user_eq16 (us_rep11 us_rep11) Bool)

(declare-const dummy16 us_rep11)

(declare-datatypes ((s79b__ref 0))
(((s79b__refqtmk (s79b__content us_rep11)))))
(define-fun s79b__ref_s79b__content__projection ((a s79b__ref)) us_rep11 
  (s79b__content a))

(declare-datatypes ((t87b__ref 0))
(((t87b__refqtmk (t87b__content us_t)))))
(define-fun t87b__ref_t87b__content__projection ((a t87b__ref)) us_t 
  (t87b__content a))

(declare-datatypes ((us_split_fields24 0))
(((us_split_fieldsqtmk12
  (rec__ada___pragmarc__b_strings__b_string__len12 natural)(rec__ada___pragmarc__b_strings__b_string__value12 us_t)(rec__ext__12 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__13__projection ((a us_split_fields24)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len12 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__13__projection ((a us_split_fields24)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value12 a))

(define-fun us_split_fields_rec__ext____13__projection ((a us_split_fields24)) us_private 
  (rec__ext__12 a))

(declare-datatypes ((us_split_fields__ref12 0))
(((us_split_fields__refqtmk12 (us_split_fields__content12 us_split_fields24)))))
(define-fun us_split_fields__ref___split_fields__content__13__projection ((a us_split_fields__ref12)) us_split_fields24 
  (us_split_fields__content12 a))

(declare-datatypes ((us_rep12 0))
(((us_repqtmk12
  (us_split_discrs13 us_split_discrs)(us_split_fields25 us_split_fields24)(attr__tag12 Int)))))
(define-fun us_rep___split_discrs__13__projection ((a us_rep12)) us_split_discrs 
  (us_split_discrs13 a))

(define-fun us_rep___split_fields__13__projection ((a us_rep12)) us_split_fields24 
  (us_split_fields25 a))

(define-fun us_rep_attr__tag__13__projection ((a us_rep12)) Int (attr__tag12
                                                                a))

(declare-fun hide_ext__11 (us_private) us_private)

(declare-fun extract__ext__11 (us_private) us_private)

(define-fun to_base11 ((a us_rep12)) us_rep (us_repqtmk (us_split_discrs13 a)
                                            (us_split_fieldsqtmk
                                            (rec__ada___pragmarc__b_strings__b_string__len12
                                            (us_split_fields25 a))
                                            (let ((temp___188 (rec__ada___pragmarc__b_strings__b_string__value12
                                                              (us_split_fields25
                                                              a))))
                                            (of_array (to_array temp___188)
                                            (first1 temp___188)
                                            (last1 temp___188)))
                                            (hide_ext__11
                                            (rec__ext__12
                                            (us_split_fields25 a))))
                                            (attr__tag12 a)))

(define-fun of_base11 ((r us_rep)) us_rep12 (us_repqtmk12
                                            (us_split_discrs1 r)
                                            (us_split_fieldsqtmk12
                                            (rec__ada___pragmarc__b_strings__b_string__len
                                            (us_split_fields1 r))
                                            (let ((temp___187 (rec__ada___pragmarc__b_strings__b_string__value
                                                              (us_split_fields1
                                                              r))))
                                            (of_array (to_array temp___187)
                                            (first1 temp___187)
                                            (last1 temp___187)))
                                            (extract__ext__11
                                            (rec__ext__ (us_split_fields1 r))))
                                            (attr__tag r)))

(declare-const us_tag12 Int)

(declare-const value__size13 Int)

(declare-const object__size13 Int)

(declare-const alignment13 Int)

;; value__size_axiom
  (assert (<= 0 value__size13))

;; object__size_axiom
  (assert (<= 0 object__size13))

;; alignment_axiom
  (assert (<= 0 alignment13))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position12 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit12))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit12 ada___pragmarc__b_strings__b_string__max_length__last__bit12))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position12))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position12 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit12))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit12 ada___pragmarc__b_strings__b_string__len__last__bit12))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position12))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit12 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position12 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit12))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit12 ada___pragmarc__b_strings__b_string__value__last__bit12))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position12))

(declare-fun user_eq17 (us_rep12 us_rep12) Bool)

(declare-const dummy17 us_rep12)

(declare-datatypes ((s86b__ref 0))
(((s86b__refqtmk (s86b__content us_rep12)))))
(define-fun s86b__ref_s86b__content__projection ((a s86b__ref)) us_rep12 
  (s86b__content a))

(declare-datatypes ((t85b__ref 0))
(((t85b__refqtmk (t85b__content us_t)))))
(define-fun t85b__ref_t85b__content__projection ((a t85b__ref)) us_t 
  (t85b__content a))

(declare-datatypes ((us_split_fields26 0))
(((us_split_fieldsqtmk13
  (rec__ada___pragmarc__b_strings__b_string__len13 natural)(rec__ada___pragmarc__b_strings__b_string__value13 us_t)(rec__ext__13 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__14__projection ((a us_split_fields26)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len13 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__14__projection ((a us_split_fields26)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value13 a))

(define-fun us_split_fields_rec__ext____14__projection ((a us_split_fields26)) us_private 
  (rec__ext__13 a))

(declare-datatypes ((us_split_fields__ref13 0))
(((us_split_fields__refqtmk13 (us_split_fields__content13 us_split_fields26)))))
(define-fun us_split_fields__ref___split_fields__content__14__projection ((a us_split_fields__ref13)) us_split_fields26 
  (us_split_fields__content13 a))

(declare-datatypes ((us_rep13 0))
(((us_repqtmk13
  (us_split_discrs14 us_split_discrs)(us_split_fields27 us_split_fields26)(attr__tag13 Int)))))
(define-fun us_rep___split_discrs__14__projection ((a us_rep13)) us_split_discrs 
  (us_split_discrs14 a))

(define-fun us_rep___split_fields__14__projection ((a us_rep13)) us_split_fields26 
  (us_split_fields27 a))

(define-fun us_rep_attr__tag__14__projection ((a us_rep13)) Int (attr__tag13
                                                                a))

(declare-fun hide_ext__12 (us_private) us_private)

(declare-fun extract__ext__12 (us_private) us_private)

(define-fun to_base12 ((a us_rep13)) us_rep (us_repqtmk (us_split_discrs14 a)
                                            (us_split_fieldsqtmk
                                            (rec__ada___pragmarc__b_strings__b_string__len13
                                            (us_split_fields27 a))
                                            (let ((temp___190 (rec__ada___pragmarc__b_strings__b_string__value13
                                                              (us_split_fields27
                                                              a))))
                                            (of_array (to_array temp___190)
                                            (first1 temp___190)
                                            (last1 temp___190)))
                                            (hide_ext__12
                                            (rec__ext__13
                                            (us_split_fields27 a))))
                                            (attr__tag13 a)))

(define-fun of_base12 ((r us_rep)) us_rep13 (us_repqtmk13
                                            (us_split_discrs1 r)
                                            (us_split_fieldsqtmk13
                                            (rec__ada___pragmarc__b_strings__b_string__len
                                            (us_split_fields1 r))
                                            (let ((temp___189 (rec__ada___pragmarc__b_strings__b_string__value
                                                              (us_split_fields1
                                                              r))))
                                            (of_array (to_array temp___189)
                                            (first1 temp___189)
                                            (last1 temp___189)))
                                            (extract__ext__12
                                            (rec__ext__ (us_split_fields1 r))))
                                            (attr__tag r)))

(declare-const us_tag13 Int)

(declare-const value__size14 Int)

(declare-const object__size14 Int)

(declare-const alignment14 Int)

;; value__size_axiom
  (assert (<= 0 value__size14))

;; object__size_axiom
  (assert (<= 0 object__size14))

;; alignment_axiom
  (assert (<= 0 alignment14))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position13 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit13))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit13 ada___pragmarc__b_strings__b_string__max_length__last__bit13))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position13))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position13 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit13))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit13 ada___pragmarc__b_strings__b_string__len__last__bit13))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position13))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit13 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position13 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit13))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit13 ada___pragmarc__b_strings__b_string__value__last__bit13))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position13))

(declare-fun user_eq18 (us_rep13 us_rep13) Bool)

(declare-const dummy18 us_rep13)

(declare-datatypes ((s84b__ref 0))
(((s84b__refqtmk (s84b__content us_rep13)))))
(define-fun s84b__ref_s84b__content__projection ((a s84b__ref)) us_rep13 
  (s84b__content a))

(declare-datatypes ((t98b__ref 0))
(((t98b__refqtmk (t98b__content us_t)))))
(define-fun t98b__ref_t98b__content__projection ((a t98b__ref)) us_t 
  (t98b__content a))

(declare-datatypes ((us_split_fields28 0))
(((us_split_fieldsqtmk14
  (rec__ada___pragmarc__b_strings__b_string__len14 natural)(rec__ada___pragmarc__b_strings__b_string__value14 us_t)(rec__ext__14 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__15__projection ((a us_split_fields28)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len14 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__15__projection ((a us_split_fields28)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value14 a))

(define-fun us_split_fields_rec__ext____15__projection ((a us_split_fields28)) us_private 
  (rec__ext__14 a))

(declare-datatypes ((us_split_fields__ref14 0))
(((us_split_fields__refqtmk14 (us_split_fields__content14 us_split_fields28)))))
(define-fun us_split_fields__ref___split_fields__content__15__projection ((a us_split_fields__ref14)) us_split_fields28 
  (us_split_fields__content14 a))

(declare-datatypes ((us_rep14 0))
(((us_repqtmk14
  (us_split_discrs15 us_split_discrs)(us_split_fields29 us_split_fields28)(attr__tag14 Int)))))
(define-fun us_rep___split_discrs__15__projection ((a us_rep14)) us_split_discrs 
  (us_split_discrs15 a))

(define-fun us_rep___split_fields__15__projection ((a us_rep14)) us_split_fields28 
  (us_split_fields29 a))

(define-fun us_rep_attr__tag__15__projection ((a us_rep14)) Int (attr__tag14
                                                                a))

(declare-fun hide_ext__13 (us_private) us_private)

(declare-fun extract__ext__13 (us_private) us_private)

(define-fun to_base13 ((a us_rep14)) us_rep (us_repqtmk (us_split_discrs15 a)
                                            (us_split_fieldsqtmk
                                            (rec__ada___pragmarc__b_strings__b_string__len14
                                            (us_split_fields29 a))
                                            (let ((temp___192 (rec__ada___pragmarc__b_strings__b_string__value14
                                                              (us_split_fields29
                                                              a))))
                                            (of_array (to_array temp___192)
                                            (first1 temp___192)
                                            (last1 temp___192)))
                                            (hide_ext__13
                                            (rec__ext__14
                                            (us_split_fields29 a))))
                                            (attr__tag14 a)))

(define-fun of_base13 ((r us_rep)) us_rep14 (us_repqtmk14
                                            (us_split_discrs1 r)
                                            (us_split_fieldsqtmk14
                                            (rec__ada___pragmarc__b_strings__b_string__len
                                            (us_split_fields1 r))
                                            (let ((temp___191 (rec__ada___pragmarc__b_strings__b_string__value
                                                              (us_split_fields1
                                                              r))))
                                            (of_array (to_array temp___191)
                                            (first1 temp___191)
                                            (last1 temp___191)))
                                            (extract__ext__13
                                            (rec__ext__ (us_split_fields1 r))))
                                            (attr__tag r)))

(declare-const us_tag14 Int)

(declare-const value__size15 Int)

(declare-const object__size15 Int)

(declare-const alignment15 Int)

;; value__size_axiom
  (assert (<= 0 value__size15))

;; object__size_axiom
  (assert (<= 0 object__size15))

;; alignment_axiom
  (assert (<= 0 alignment15))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position14 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit14))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit14 ada___pragmarc__b_strings__b_string__max_length__last__bit14))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position14))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position14 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit14))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit14 ada___pragmarc__b_strings__b_string__len__last__bit14))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position14))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit14 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position14 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit14))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit14 ada___pragmarc__b_strings__b_string__value__last__bit14))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position14))

(declare-fun user_eq19 (us_rep14 us_rep14) Bool)

(declare-const dummy19 us_rep14)

(declare-datatypes ((s97b__ref 0))
(((s97b__refqtmk (s97b__content us_rep14)))))
(define-fun s97b__ref_s97b__content__projection ((a s97b__ref)) us_rep14 
  (s97b__content a))

(declare-datatypes ((t96b__ref 0))
(((t96b__refqtmk (t96b__content us_t)))))
(define-fun t96b__ref_t96b__content__projection ((a t96b__ref)) us_t 
  (t96b__content a))

(declare-datatypes ((us_split_fields30 0))
(((us_split_fieldsqtmk15
  (rec__ada___pragmarc__b_strings__b_string__len15 natural)(rec__ada___pragmarc__b_strings__b_string__value15 us_t)(rec__ext__15 us_private)))))
(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__len__16__projection ((a us_split_fields30)) natural 
  (rec__ada___pragmarc__b_strings__b_string__len15 a))

(define-fun us_split_fields_rec__ada___pragmarc__b_strings__b_string__value__16__projection ((a us_split_fields30)) us_t 
  (rec__ada___pragmarc__b_strings__b_string__value15 a))

(define-fun us_split_fields_rec__ext____16__projection ((a us_split_fields30)) us_private 
  (rec__ext__15 a))

(declare-datatypes ((us_split_fields__ref15 0))
(((us_split_fields__refqtmk15 (us_split_fields__content15 us_split_fields30)))))
(define-fun us_split_fields__ref___split_fields__content__16__projection ((a us_split_fields__ref15)) us_split_fields30 
  (us_split_fields__content15 a))

(declare-datatypes ((us_rep15 0))
(((us_repqtmk15
  (us_split_discrs16 us_split_discrs)(us_split_fields31 us_split_fields30)(attr__tag15 Int)))))
(define-fun us_rep___split_discrs__16__projection ((a us_rep15)) us_split_discrs 
  (us_split_discrs16 a))

(define-fun us_rep___split_fields__16__projection ((a us_rep15)) us_split_fields30 
  (us_split_fields31 a))

(define-fun us_rep_attr__tag__16__projection ((a us_rep15)) Int (attr__tag15
                                                                a))

(declare-fun hide_ext__14 (us_private) us_private)

(declare-fun extract__ext__14 (us_private) us_private)

(define-fun to_base14 ((a us_rep15)) us_rep (us_repqtmk (us_split_discrs16 a)
                                            (us_split_fieldsqtmk
                                            (rec__ada___pragmarc__b_strings__b_string__len15
                                            (us_split_fields31 a))
                                            (let ((temp___194 (rec__ada___pragmarc__b_strings__b_string__value15
                                                              (us_split_fields31
                                                              a))))
                                            (of_array (to_array temp___194)
                                            (first1 temp___194)
                                            (last1 temp___194)))
                                            (hide_ext__14
                                            (rec__ext__15
                                            (us_split_fields31 a))))
                                            (attr__tag15 a)))

(define-fun of_base14 ((r us_rep)) us_rep15 (us_repqtmk15
                                            (us_split_discrs1 r)
                                            (us_split_fieldsqtmk15
                                            (rec__ada___pragmarc__b_strings__b_string__len
                                            (us_split_fields1 r))
                                            (let ((temp___193 (rec__ada___pragmarc__b_strings__b_string__value
                                                              (us_split_fields1
                                                              r))))
                                            (of_array (to_array temp___193)
                                            (first1 temp___193)
                                            (last1 temp___193)))
                                            (extract__ext__14
                                            (rec__ext__ (us_split_fields1 r))))
                                            (attr__tag r)))

(declare-const us_tag15 Int)

(declare-const value__size16 Int)

(declare-const object__size16 Int)

(declare-const alignment16 Int)

;; value__size_axiom
  (assert (<= 0 value__size16))

;; object__size_axiom
  (assert (<= 0 object__size16))

;; alignment_axiom
  (assert (<= 0 alignment16))

(declare-const ada___pragmarc__b_strings__b_string__max_length__first__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__last__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__max_length__position15 Int)

;; ada___pragmarc__b_strings__b_string__max_length__first__bit_axiom
  (assert
  (<= 0 ada___pragmarc__b_strings__b_string__max_length__first__bit15))

;; ada___pragmarc__b_strings__b_string__max_length__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__max_length__first__bit15 ada___pragmarc__b_strings__b_string__max_length__last__bit15))

;; ada___pragmarc__b_strings__b_string__max_length__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__max_length__position15))

(declare-const ada___pragmarc__b_strings__b_string__len__first__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__last__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__len__position15 Int)

;; ada___pragmarc__b_strings__b_string__len__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__first__bit15))

;; ada___pragmarc__b_strings__b_string__len__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__len__first__bit15 ada___pragmarc__b_strings__b_string__len__last__bit15))

;; ada___pragmarc__b_strings__b_string__len__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__len__position15))

(declare-const ada___pragmarc__b_strings__b_string__value__first__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__last__bit15 Int)

(declare-const ada___pragmarc__b_strings__b_string__value__position15 Int)

;; ada___pragmarc__b_strings__b_string__value__first__bit_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__first__bit15))

;; ada___pragmarc__b_strings__b_string__value__last__bit_axiom
  (assert
  (< ada___pragmarc__b_strings__b_string__value__first__bit15 ada___pragmarc__b_strings__b_string__value__last__bit15))

;; ada___pragmarc__b_strings__b_string__value__position_axiom
  (assert (<= 0 ada___pragmarc__b_strings__b_string__value__position15))

(declare-fun user_eq20 (us_rep15 us_rep15) Bool)

(declare-const dummy20 us_rep15)

(declare-datatypes ((s95b__ref 0))
(((s95b__refqtmk (s95b__content us_rep15)))))
(define-fun s95b__ref_s95b__content__projection ((a s95b__ref)) us_rep15 
  (s95b__content a))

;; ada___pragmarc__b_strings__b_string__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag source) us_tag source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag source)))) :pattern ((oadd1 us_tag
                                                         source)) )))

;; ada___pragmarc__b_strings__T11s__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag1 source) us_tag1 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag1 source)))) :pattern ((oadd1 us_tag1
                                                          source)) )))

;; ada___pragmarc__b_strings__Oadd__S1b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag2 source) us_tag2 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag2 source)))) :pattern ((oadd1 us_tag2
                                                          source)) )))

;; ada___pragmarc__b_strings__Oadd__2__T9b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag3 source) us_tag3 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag3 source)))) :pattern ((oadd1 us_tag3
                                                          source)) )))

;; ada___pragmarc__b_strings__length__S11b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag4 source) us_tag4 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag4 source)))) :pattern ((oadd1 us_tag4
                                                          source)) )))

;; ada___pragmarc__b_strings__assign__S14b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag5 source) us_tag5 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag5 source)))) :pattern ((oadd1 us_tag5
                                                          source)) )))

;; ada___pragmarc__b_strings__Oeq__S57b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag7 source) us_tag7 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag7 source)))) :pattern ((oadd1 us_tag7
                                                          source)) )))

;; ada___pragmarc__b_strings__Oeq__S59b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag6 source) us_tag6 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag6 source)))) :pattern ((oadd1 us_tag6
                                                          source)) )))

;; ada___pragmarc__b_strings__Olt__S68b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag9 source) us_tag9 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag9 source)))) :pattern ((oadd1 us_tag9
                                                          source)) )))

;; ada___pragmarc__b_strings__Olt__S70b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag8 source) us_tag8 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag8 source)))) :pattern ((oadd1 us_tag8
                                                          source)) )))

;; ada___pragmarc__b_strings__Ole__S79b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag11 source) us_tag11 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag11 source)))) :pattern ((oadd1 us_tag11
                                                           source)) )))

;; ada___pragmarc__b_strings__Ole__S81b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag10 source) us_tag10 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag10 source)))) :pattern ((oadd1 us_tag10
                                                           source)) )))

;; ada___pragmarc__b_strings__Ogt__S84b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag13 source) us_tag13 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag13 source)))) :pattern ((oadd1 us_tag13
                                                           source)) )))

;; ada___pragmarc__b_strings__Ogt__S86b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag12 source) us_tag12 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag12 source)))) :pattern ((oadd1 us_tag12
                                                           source)) )))

;; ada___pragmarc__b_strings__Oge__S95b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag15 source) us_tag15 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag15 source)))) :pattern ((oadd1 us_tag15
                                                           source)) )))

;; ada___pragmarc__b_strings__Oge__S97b__compat_axiom
  (assert
  (forall ((source us_t))
  (! (=> (oadd__function_guard1 (oadd1 us_tag14 source) us_tag14 source)
     (and
     (forall ((source1 us_t)) (oadd__function_guard (oadd source1) source1))
     (= (oadd source) (oadd1 us_tag14 source)))) :pattern ((oadd1 us_tag14
                                                           source)) )))

(declare-fun oeq (us_rep us_rep) Bool)

(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)

(declare-fun oeq1 (Int us_rep us_rep) Bool)

(declare-fun oeq__function_guard1 (Bool Int us_rep us_rep) Bool)

(define-fun in_range5 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Bool)

;; oeq__post_axiom
  (assert true)

;; oeq__post__dispatch_axiom
  (assert true)

;; ada___pragmarc__b_strings__b_string__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag left right) us_tag left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag left right) 1 0)))) :pattern (
  (oeq1 us_tag left right)) )))

;; ada___pragmarc__b_strings__T11s__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag1 left right) us_tag1 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag1 left right) 1 0)))) :pattern (
  (oeq1 us_tag1 left right)) )))

;; ada___pragmarc__b_strings__Oadd__S1b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag2 left right) us_tag2 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag2 left right) 1 0)))) :pattern (
  (oeq1 us_tag2 left right)) )))

;; ada___pragmarc__b_strings__Oadd__2__T9b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag3 left right) us_tag3 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag3 left right) 1 0)))) :pattern (
  (oeq1 us_tag3 left right)) )))

;; ada___pragmarc__b_strings__length__S11b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag4 left right) us_tag4 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag4 left right) 1 0)))) :pattern (
  (oeq1 us_tag4 left right)) )))

;; ada___pragmarc__b_strings__assign__S14b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag5 left right) us_tag5 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag5 left right) 1 0)))) :pattern (
  (oeq1 us_tag5 left right)) )))

;; ada___pragmarc__b_strings__Oeq__S57b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag7 left right) us_tag7 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag7 left right) 1 0)))) :pattern (
  (oeq1 us_tag7 left right)) )))

;; ada___pragmarc__b_strings__Oeq__S59b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag6 left right) us_tag6 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag6 left right) 1 0)))) :pattern (
  (oeq1 us_tag6 left right)) )))

;; ada___pragmarc__b_strings__Olt__S68b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag9 left right) us_tag9 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag9 left right) 1 0)))) :pattern (
  (oeq1 us_tag9 left right)) )))

;; ada___pragmarc__b_strings__Olt__S70b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag8 left right) us_tag8 left right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag8 left right) 1 0)))) :pattern (
  (oeq1 us_tag8 left right)) )))

;; ada___pragmarc__b_strings__Ole__S79b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag11 left right) us_tag11 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag11 left right) 1 0)))) :pattern (
  (oeq1 us_tag11 left right)) )))

;; ada___pragmarc__b_strings__Ole__S81b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag10 left right) us_tag10 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag10 left right) 1 0)))) :pattern (
  (oeq1 us_tag10 left right)) )))

;; ada___pragmarc__b_strings__Ogt__S84b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag13 left right) us_tag13 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag13 left right) 1 0)))) :pattern (
  (oeq1 us_tag13 left right)) )))

;; ada___pragmarc__b_strings__Ogt__S86b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag12 left right) us_tag12 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag12 left right) 1 0)))) :pattern (
  (oeq1 us_tag12 left right)) )))

;; ada___pragmarc__b_strings__Oge__S95b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag15 left right) us_tag15 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag15 left right) 1 0)))) :pattern (
  (oeq1 us_tag15 left right)) )))

;; ada___pragmarc__b_strings__Oge__S97b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (=> (oeq__function_guard1 (oeq1 us_tag14 left right) us_tag14 left
     right)
     (and
     (forall ((left1 us_rep) (right1 us_rep)) (oeq__function_guard
     (oeq left1 right1) left1 right1))
     (= (ite (oeq left right) 1 0) (ite (oeq1 us_tag14 left right) 1 0)))) :pattern (
  (oeq1 us_tag14 left right)) )))

(declare-const to____split_discrs us_split_discrs)

(declare-const to____attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const from us_t)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const drop Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const r41b Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r42b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const r47b Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const r48b Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const r53b Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const r54b Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-sort truncation 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq21 (truncation truncation) Bool)

(declare-const dummy21 truncation)

(declare-datatypes ((truncation__ref 0))
(((truncation__refqtmk (truncation__content truncation)))))
(define-fun truncation__ref_truncation__content__projection ((a truncation__ref)) truncation 
  (truncation__content a))

(define-fun dynamic_invariant4 ((temp___expr_294 Int)
  (temp___is_init_290 Bool) (temp___skip_constant_291 Bool)
  (temp___do_toplevel_292 Bool)
  (temp___do_typ_inv_293 Bool)) Bool (=>
                                     (or (= temp___is_init_290 true)
                                     (<= 0 2)) (in_range6 temp___expr_294)))

(declare-datatypes ((t44b__ref 0))
(((t44b__refqtmk (t44b__content us_t)))))
(define-fun t44b__ref_t44b__content__projection ((a t44b__ref)) us_t 
  (t44b__content a))

(declare-datatypes ((s46b__ref 0))
(((s46b__refqtmk (s46b__content us_t)))))
(define-fun s46b__ref_s46b__content__projection ((a s46b__ref)) us_t 
  (s46b__content a))

(declare-datatypes ((t50b__ref 0))
(((t50b__refqtmk (t50b__content us_t)))))
(define-fun t50b__ref_t50b__content__projection ((a t50b__ref)) us_t 
  (t50b__content a))

(declare-datatypes ((s52b__ref 0))
(((s52b__refqtmk (s52b__content us_t)))))
(define-fun s52b__ref_s52b__content__projection ((a s52b__ref)) us_t 
  (s52b__content a))

(declare-datatypes ((t56b__ref 0))
(((t56b__refqtmk (t56b__content us_t)))))
(define-fun t56b__ref_t56b__content__projection ((a t56b__ref)) us_t 
  (t56b__content a))

(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool)
  (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool)
  (temp___do_typ_inv_45 Bool)) Bool (=>
                                    (or (= temp___is_init_42 true)
                                    (<= 1 2147483647)) (in_range3
                                    temp___expr_46)))

(define-fun dynamic_invariant6 ((temp___expr_74 Int) (temp___is_init_70 Bool)
  (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool)
  (temp___do_typ_inv_73 Bool)) Bool (=>
                                    (or (= temp___is_init_70 true)
                                    (<= 0 255)) (in_range2 temp___expr_74)))

;; ada___pragmarc__b_strings__b_string__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag source) us_tag source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag source)))) :pattern ((oadd3
                                                                    us_tag
                                                                    source)) )))

;; ada___pragmarc__b_strings__T11s__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag1 source) us_tag1 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag1 source)))) :pattern (
  (oadd3 us_tag1 source)) )))

;; ada___pragmarc__b_strings__Oadd__S1b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag2 source) us_tag2 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag2 source)))) :pattern (
  (oadd3 us_tag2 source)) )))

;; ada___pragmarc__b_strings__Oadd__2__T9b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag3 source) us_tag3 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag3 source)))) :pattern (
  (oadd3 us_tag3 source)) )))

;; ada___pragmarc__b_strings__length__S11b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag4 source) us_tag4 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag4 source)))) :pattern (
  (oadd3 us_tag4 source)) )))

;; ada___pragmarc__b_strings__assign__S14b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag5 source) us_tag5 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag5 source)))) :pattern (
  (oadd3 us_tag5 source)) )))

;; ada___pragmarc__b_strings__Oeq__S57b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag7 source) us_tag7 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag7 source)))) :pattern (
  (oadd3 us_tag7 source)) )))

;; ada___pragmarc__b_strings__Oeq__S59b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag6 source) us_tag6 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag6 source)))) :pattern (
  (oadd3 us_tag6 source)) )))

;; ada___pragmarc__b_strings__Olt__S68b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag9 source) us_tag9 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag9 source)))) :pattern (
  (oadd3 us_tag9 source)) )))

;; ada___pragmarc__b_strings__Olt__S70b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag8 source) us_tag8 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag8 source)))) :pattern (
  (oadd3 us_tag8 source)) )))

;; ada___pragmarc__b_strings__Ole__S79b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag11 source) us_tag11 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag11 source)))) :pattern (
  (oadd3 us_tag11 source)) )))

;; ada___pragmarc__b_strings__Ole__S81b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag10 source) us_tag10 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag10 source)))) :pattern (
  (oadd3 us_tag10 source)) )))

;; ada___pragmarc__b_strings__Ogt__S84b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag13 source) us_tag13 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag13 source)))) :pattern (
  (oadd3 us_tag13 source)) )))

;; ada___pragmarc__b_strings__Ogt__S86b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag12 source) us_tag12 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag12 source)))) :pattern (
  (oadd3 us_tag12 source)) )))

;; ada___pragmarc__b_strings__Oge__S95b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag15 source) us_tag15 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag15 source)))) :pattern (
  (oadd3 us_tag15 source)) )))

;; ada___pragmarc__b_strings__Oge__S97b__compat_axiom
  (assert
  (forall ((source us_rep))
  (! (=> (oadd__function_guard3 (oadd3 us_tag14 source) us_tag14 source)
     (and
     (forall ((source1 us_rep)) (oadd__function_guard2 (oadd2 source1)
     source1)) (= (oadd2 source) (oadd3 us_tag14 source)))) :pattern (
  (oadd3 us_tag14 source)) )))

(declare-datatypes ((t10s__ref 0))
(((t10s__refqtmk (t10s__content us_t)))))
(define-fun t10s__ref_t10s__content__projection ((a t10s__ref)) us_t 
  (t10s__content a))

(declare-fun temp_____aggregate_def_479 (Int Int Int) us_t)

;; def_axiom
  (assert
  (forall ((temp___481 Int) (temp___482 Int) (temp___483 Int))
  (let ((temp___480 (temp_____aggregate_def_479 temp___481 temp___482
                    temp___483)))
  (=> (dynamic_invariant6 temp___481 true true true true)
  (and
  (=> (dynamic_property 1 2147483647 temp___482 temp___483)
  (and (= (first1 temp___480) temp___482) (= (last1 temp___480) temp___483)))
  (forall ((temp___484 Int))
  (= (to_rep1 (select (to_array temp___480) temp___484)) temp___481)))))))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (and
     (forall ((a1 us_rep1) (b1 us_rep1)) (oeq__function_guard
     (oeq (to_base a1) (to_base b1)) (to_base a1) (to_base b1)))
     (= (user_eq6 a b) (oeq (to_base a) (to_base b)))) :pattern ((user_eq6 a
                                                                 b)) )))

(declare-const source us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep2) (b us_rep2))
  (! (and
     (forall ((a1 us_rep2) (b1 us_rep2)) (oeq__function_guard
     (oeq (to_base1 a1) (to_base1 b1)) (to_base1 a1) (to_base1 b1)))
     (= (user_eq7 a b) (oeq (to_base1 a) (to_base1 b)))) :pattern ((user_eq7
                                                                   a b)) )))

(define-fun dynamic_invariant7 ((temp___expr_473 us_rep2)
  (temp___is_init_469 Bool) (temp___skip_constant_470 Bool)
  (temp___do_toplevel_471 Bool)
  (temp___do_typ_inv_472 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_470 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source)))
                                     (us_split_discrs1
                                     (to_base1 temp___expr_473))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value2
                                     (us_split_fields5 temp___expr_473)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value2
                                     (us_split_fields5 temp___expr_473))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value2
                                        (us_split_fields5 temp___expr_473))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value2
                                        (us_split_fields5 temp___expr_473))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source))))))))

(define-fun default_initial_assumption ((temp___expr_476 us_rep2)
  (temp___skip_top_level_477 Bool)) Bool (and
                                         (= (attr__tag2 temp___expr_476) 
                                         us_tag2)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs3
                                            temp___expr_476))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               source))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len2
                                            (us_split_fields5
                                            temp___expr_476))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value2
                                            (us_split_fields5
                                            temp___expr_476)) (let ((temp___485 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs3
                                                              temp___expr_476))))))
                                                              (of_array
                                                              (to_array
                                                              temp___485)
                                                              (first1
                                                              temp___485)
                                                              (last1
                                                              temp___485))))))))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (and
     (forall ((a1 us_rep3) (b1 us_rep3)) (oeq__function_guard
     (oeq (to_base2 a1) (to_base2 b1)) (to_base2 a1) (to_base2 b1)))
     (= (user_eq8 a b) (oeq (to_base2 a) (to_base2 b)))) :pattern ((user_eq8
                                                                   a b)) )))

(declare-const source1 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep4) (b us_rep4))
  (! (and
     (forall ((a1 us_rep4) (b1 us_rep4)) (oeq__function_guard
     (oeq (to_base3 a1) (to_base3 b1)) (to_base3 a1) (to_base3 b1)))
     (= (user_eq9 a b) (oeq (to_base3 a) (to_base3 b)))) :pattern ((user_eq9
                                                                   a b)) )))

(define-fun dynamic_invariant8 ((temp___expr_512 us_rep4)
  (temp___is_init_508 Bool) (temp___skip_constant_509 Bool)
  (temp___do_toplevel_510 Bool)
  (temp___do_typ_inv_511 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_509 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source1)))
                                     (us_split_discrs1
                                     (to_base3 temp___expr_512))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source1)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value4
                                     (us_split_fields9 temp___expr_512)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value4
                                     (us_split_fields9 temp___expr_512))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value4
                                        (us_split_fields9 temp___expr_512))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value4
                                        (us_split_fields9 temp___expr_512))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 source1))))))))

(define-fun default_initial_assumption1 ((temp___expr_515 us_rep4)
  (temp___skip_top_level_516 Bool)) Bool (and
                                         (= (attr__tag4 temp___expr_515) 
                                         us_tag4)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs5
                                            temp___expr_515))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               source1))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len4
                                            (us_split_fields9
                                            temp___expr_515))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value4
                                            (us_split_fields9
                                            temp___expr_515)) (let ((temp___518 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs5
                                                              temp___expr_515))))))
                                                              (of_array
                                                              (to_array
                                                              temp___518)
                                                              (first1
                                                              temp___518)
                                                              (last1
                                                              temp___518))))))))

(declare-const from1 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep5) (b us_rep5))
  (! (and
     (forall ((a1 us_rep5) (b1 us_rep5)) (oeq__function_guard
     (oeq (to_base4 a1) (to_base4 b1)) (to_base4 a1) (to_base4 b1)))
     (= (user_eq10 a b) (oeq (to_base4 a) (to_base4 b)))) :pattern ((user_eq10
                                                                    a b)) )))

(define-fun dynamic_invariant9 ((temp___expr_524 us_rep5)
  (temp___is_init_520 Bool) (temp___skip_constant_521 Bool)
  (temp___do_toplevel_522 Bool)
  (temp___do_typ_inv_523 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_521 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 from1)))
                                     (us_split_discrs1
                                     (to_base4 temp___expr_524))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 from1)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value5
                                     (us_split_fields11 temp___expr_524)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value5
                                     (us_split_fields11 temp___expr_524))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value5
                                        (us_split_fields11 temp___expr_524))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value5
                                        (us_split_fields11 temp___expr_524))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 from1))))))))

(define-fun default_initial_assumption2 ((temp___expr_527 us_rep5)
  (temp___skip_top_level_528 Bool)) Bool (and
                                         (= (attr__tag5 temp___expr_527) 
                                         us_tag5)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs6
                                            temp___expr_527))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               from1))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len5
                                            (us_split_fields11
                                            temp___expr_527))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value5
                                            (us_split_fields11
                                            temp___expr_527)) (let ((temp___530 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs6
                                                              temp___expr_527))))))
                                                              (of_array
                                                              (to_array
                                                              temp___530)
                                                              (first1
                                                              temp___530)
                                                              (last1
                                                              temp___530))))))))

(define-fun dynamic_invariant10 ((temp___expr_615 us_t)
  (temp___is_init_611 Bool) (temp___skip_constant_612 Bool)
  (temp___do_toplevel_613 Bool)
  (temp___do_typ_inv_614 Bool)) Bool (=>
                                     (not (= temp___skip_constant_612 true))
                                     (and (dynamic_property 1 r47b
                                     (first1 temp___expr_615)
                                     (last1 temp___expr_615))
                                     (and (= (first1 temp___expr_615) 1)
                                     (= (last1 temp___expr_615) r47b)))))

(define-fun default_initial_assumption3 ((temp___expr_617 us_t)
  (temp___skip_top_level_618 Bool)) Bool (and (= (first1 temp___expr_617) 1)
                                         (= (last1 temp___expr_617) r47b)))

(define-fun dynamic_invariant11 ((temp___expr_625 us_t)
  (temp___is_init_621 Bool) (temp___skip_constant_622 Bool)
  (temp___do_toplevel_623 Bool)
  (temp___do_typ_inv_624 Bool)) Bool (=>
                                     (not (= temp___skip_constant_622 true))
                                     (and (dynamic_property 1 r53b
                                     (first1 temp___expr_625)
                                     (last1 temp___expr_625))
                                     (and (= (first1 temp___expr_625) 1)
                                     (= (last1 temp___expr_625) r53b)))))

(define-fun default_initial_assumption4 ((temp___expr_627 us_t)
  (temp___skip_top_level_628 Bool)) Bool (and (= (first1 temp___expr_627) 1)
                                         (= (last1 temp___expr_627) r53b)))

(declare-const left us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep7) (b us_rep7))
  (! (and
     (forall ((a1 us_rep7) (b1 us_rep7)) (oeq__function_guard
     (oeq (to_base6 a1) (to_base6 b1)) (to_base6 a1) (to_base6 b1)))
     (= (user_eq12 a b) (oeq (to_base6 a) (to_base6 b)))) :pattern ((user_eq12
                                                                    a b)) )))

(define-fun dynamic_invariant12 ((temp___expr_648 us_rep7)
  (temp___is_init_644 Bool) (temp___skip_constant_645 Bool)
  (temp___do_toplevel_646 Bool)
  (temp___do_typ_inv_647 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_645 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left)))
                                     (us_split_discrs1
                                     (to_base6 temp___expr_648))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value7
                                     (us_split_fields15 temp___expr_648)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value7
                                     (us_split_fields15 temp___expr_648))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value7
                                        (us_split_fields15 temp___expr_648))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value7
                                        (us_split_fields15 temp___expr_648))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left))))))))

(define-fun default_initial_assumption5 ((temp___expr_651 us_rep7)
  (temp___skip_top_level_652 Bool)) Bool (and
                                         (= (attr__tag7 temp___expr_651) 
                                         us_tag7)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs8
                                            temp___expr_651))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               left))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len7
                                            (us_split_fields15
                                            temp___expr_651))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value7
                                            (us_split_fields15
                                            temp___expr_651)) (let ((temp___654 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs8
                                                              temp___expr_651))))))
                                                              (of_array
                                                              (to_array
                                                              temp___654)
                                                              (first1
                                                              temp___654)
                                                              (last1
                                                              temp___654))))))))

(declare-const right us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep6) (b us_rep6))
  (! (and
     (forall ((a1 us_rep6) (b1 us_rep6)) (oeq__function_guard
     (oeq (to_base5 a1) (to_base5 b1)) (to_base5 a1) (to_base5 b1)))
     (= (user_eq11 a b) (oeq (to_base5 a) (to_base5 b)))) :pattern ((user_eq11
                                                                    a b)) )))

(define-fun dynamic_invariant13 ((temp___expr_636 us_rep6)
  (temp___is_init_632 Bool) (temp___skip_constant_633 Bool)
  (temp___do_toplevel_634 Bool)
  (temp___do_typ_inv_635 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_633 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right)))
                                     (us_split_discrs1
                                     (to_base5 temp___expr_636))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value6
                                     (us_split_fields13 temp___expr_636)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value6
                                     (us_split_fields13 temp___expr_636))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value6
                                        (us_split_fields13 temp___expr_636))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value6
                                        (us_split_fields13 temp___expr_636))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right))))))))

(define-fun default_initial_assumption6 ((temp___expr_639 us_rep6)
  (temp___skip_top_level_640 Bool)) Bool (and
                                         (= (attr__tag6 temp___expr_639) 
                                         us_tag6)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs7
                                            temp___expr_639))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               right))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len6
                                            (us_split_fields13
                                            temp___expr_639))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value6
                                            (us_split_fields13
                                            temp___expr_639)) (let ((temp___642 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs7
                                                              temp___expr_639))))))
                                                              (of_array
                                                              (to_array
                                                              temp___642)
                                                              (first1
                                                              temp___642)
                                                              (last1
                                                              temp___642))))))))

(declare-const left1 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep9) (b us_rep9))
  (! (and
     (forall ((a1 us_rep9) (b1 us_rep9)) (oeq__function_guard
     (oeq (to_base8 a1) (to_base8 b1)) (to_base8 a1) (to_base8 b1)))
     (= (user_eq14 a b) (oeq (to_base8 a) (to_base8 b)))) :pattern ((user_eq14
                                                                    a b)) )))

(define-fun dynamic_invariant14 ((temp___expr_692 us_rep9)
  (temp___is_init_688 Bool) (temp___skip_constant_689 Bool)
  (temp___do_toplevel_690 Bool)
  (temp___do_typ_inv_691 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_689 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left1)))
                                     (us_split_discrs1
                                     (to_base8 temp___expr_692))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left1)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value9
                                     (us_split_fields19 temp___expr_692)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value9
                                     (us_split_fields19 temp___expr_692))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value9
                                        (us_split_fields19 temp___expr_692))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value9
                                        (us_split_fields19 temp___expr_692))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left1))))))))

(define-fun default_initial_assumption7 ((temp___expr_695 us_rep9)
  (temp___skip_top_level_696 Bool)) Bool (and
                                         (= (attr__tag9 temp___expr_695) 
                                         us_tag9)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs10
                                            temp___expr_695))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               left1))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len9
                                            (us_split_fields19
                                            temp___expr_695))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value9
                                            (us_split_fields19
                                            temp___expr_695)) (let ((temp___698 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs10
                                                              temp___expr_695))))))
                                                              (of_array
                                                              (to_array
                                                              temp___698)
                                                              (first1
                                                              temp___698)
                                                              (last1
                                                              temp___698))))))))

(declare-const right1 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep8) (b us_rep8))
  (! (and
     (forall ((a1 us_rep8) (b1 us_rep8)) (oeq__function_guard
     (oeq (to_base7 a1) (to_base7 b1)) (to_base7 a1) (to_base7 b1)))
     (= (user_eq13 a b) (oeq (to_base7 a) (to_base7 b)))) :pattern ((user_eq13
                                                                    a b)) )))

(define-fun dynamic_invariant15 ((temp___expr_680 us_rep8)
  (temp___is_init_676 Bool) (temp___skip_constant_677 Bool)
  (temp___do_toplevel_678 Bool)
  (temp___do_typ_inv_679 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_677 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right1)))
                                     (us_split_discrs1
                                     (to_base7 temp___expr_680))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right1)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value8
                                     (us_split_fields17 temp___expr_680)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value8
                                     (us_split_fields17 temp___expr_680))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value8
                                        (us_split_fields17 temp___expr_680))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value8
                                        (us_split_fields17 temp___expr_680))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right1))))))))

(define-fun default_initial_assumption8 ((temp___expr_683 us_rep8)
  (temp___skip_top_level_684 Bool)) Bool (and
                                         (= (attr__tag8 temp___expr_683) 
                                         us_tag8)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs9
                                            temp___expr_683))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               right1))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len8
                                            (us_split_fields17
                                            temp___expr_683))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value8
                                            (us_split_fields17
                                            temp___expr_683)) (let ((temp___686 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs9
                                                              temp___expr_683))))))
                                                              (of_array
                                                              (to_array
                                                              temp___686)
                                                              (first1
                                                              temp___686)
                                                              (last1
                                                              temp___686))))))))

(declare-const left2 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep11) (b us_rep11))
  (! (and
     (forall ((a1 us_rep11) (b1 us_rep11)) (oeq__function_guard
     (oeq (to_base10 a1) (to_base10 b1)) (to_base10 a1) (to_base10 b1)))
     (= (user_eq16 a b) (oeq (to_base10 a) (to_base10 b)))) :pattern (
  (user_eq16 a b)) )))

(define-fun dynamic_invariant16 ((temp___expr_736 us_rep11)
  (temp___is_init_732 Bool) (temp___skip_constant_733 Bool)
  (temp___do_toplevel_734 Bool)
  (temp___do_typ_inv_735 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_733 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left2)))
                                     (us_split_discrs1
                                     (to_base10 temp___expr_736))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left2)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value11
                                     (us_split_fields23 temp___expr_736)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value11
                                     (us_split_fields23 temp___expr_736))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value11
                                        (us_split_fields23 temp___expr_736))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value11
                                        (us_split_fields23 temp___expr_736))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left2))))))))

(define-fun default_initial_assumption9 ((temp___expr_739 us_rep11)
  (temp___skip_top_level_740 Bool)) Bool (and
                                         (= (attr__tag11 temp___expr_739) 
                                         us_tag11)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs12
                                            temp___expr_739))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               left2))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len11
                                            (us_split_fields23
                                            temp___expr_739))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value11
                                            (us_split_fields23
                                            temp___expr_739)) (let ((temp___742 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs12
                                                              temp___expr_739))))))
                                                              (of_array
                                                              (to_array
                                                              temp___742)
                                                              (first1
                                                              temp___742)
                                                              (last1
                                                              temp___742))))))))

(declare-const right2 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep10) (b us_rep10))
  (! (and
     (forall ((a1 us_rep10) (b1 us_rep10)) (oeq__function_guard
     (oeq (to_base9 a1) (to_base9 b1)) (to_base9 a1) (to_base9 b1)))
     (= (user_eq15 a b) (oeq (to_base9 a) (to_base9 b)))) :pattern ((user_eq15
                                                                    a b)) )))

(define-fun dynamic_invariant17 ((temp___expr_724 us_rep10)
  (temp___is_init_720 Bool) (temp___skip_constant_721 Bool)
  (temp___do_toplevel_722 Bool)
  (temp___do_typ_inv_723 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_721 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right2)))
                                     (us_split_discrs1
                                     (to_base9 temp___expr_724))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right2)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value10
                                     (us_split_fields21 temp___expr_724)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value10
                                     (us_split_fields21 temp___expr_724))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value10
                                        (us_split_fields21 temp___expr_724))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value10
                                        (us_split_fields21 temp___expr_724))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right2))))))))

(define-fun default_initial_assumption10 ((temp___expr_727 us_rep10)
  (temp___skip_top_level_728 Bool)) Bool (and
                                         (= (attr__tag10 temp___expr_727) 
                                         us_tag10)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs11
                                            temp___expr_727))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               right2))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len10
                                            (us_split_fields21
                                            temp___expr_727))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value10
                                            (us_split_fields21
                                            temp___expr_727)) (let ((temp___730 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs11
                                                              temp___expr_727))))))
                                                              (of_array
                                                              (to_array
                                                              temp___730)
                                                              (first1
                                                              temp___730)
                                                              (last1
                                                              temp___730))))))))

(declare-const left3 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep13) (b us_rep13))
  (! (and
     (forall ((a1 us_rep13) (b1 us_rep13)) (oeq__function_guard
     (oeq (to_base12 a1) (to_base12 b1)) (to_base12 a1) (to_base12 b1)))
     (= (user_eq18 a b) (oeq (to_base12 a) (to_base12 b)))) :pattern (
  (user_eq18 a b)) )))

(define-fun dynamic_invariant18 ((temp___expr_760 us_rep13)
  (temp___is_init_756 Bool) (temp___skip_constant_757 Bool)
  (temp___do_toplevel_758 Bool)
  (temp___do_typ_inv_759 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_757 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left3)))
                                     (us_split_discrs1
                                     (to_base12 temp___expr_760))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left3)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value13
                                     (us_split_fields27 temp___expr_760)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value13
                                     (us_split_fields27 temp___expr_760))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value13
                                        (us_split_fields27 temp___expr_760))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value13
                                        (us_split_fields27 temp___expr_760))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left3))))))))

(define-fun default_initial_assumption11 ((temp___expr_763 us_rep13)
  (temp___skip_top_level_764 Bool)) Bool (and
                                         (= (attr__tag13 temp___expr_763) 
                                         us_tag13)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs14
                                            temp___expr_763))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               left3))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len13
                                            (us_split_fields27
                                            temp___expr_763))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value13
                                            (us_split_fields27
                                            temp___expr_763)) (let ((temp___766 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs14
                                                              temp___expr_763))))))
                                                              (of_array
                                                              (to_array
                                                              temp___766)
                                                              (first1
                                                              temp___766)
                                                              (last1
                                                              temp___766))))))))

(declare-const right3 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep12) (b us_rep12))
  (! (and
     (forall ((a1 us_rep12) (b1 us_rep12)) (oeq__function_guard
     (oeq (to_base11 a1) (to_base11 b1)) (to_base11 a1) (to_base11 b1)))
     (= (user_eq17 a b) (oeq (to_base11 a) (to_base11 b)))) :pattern (
  (user_eq17 a b)) )))

(define-fun dynamic_invariant19 ((temp___expr_748 us_rep12)
  (temp___is_init_744 Bool) (temp___skip_constant_745 Bool)
  (temp___do_toplevel_746 Bool)
  (temp___do_typ_inv_747 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_745 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right3)))
                                     (us_split_discrs1
                                     (to_base11 temp___expr_748))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right3)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value12
                                     (us_split_fields25 temp___expr_748)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value12
                                     (us_split_fields25 temp___expr_748))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value12
                                        (us_split_fields25 temp___expr_748))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value12
                                        (us_split_fields25 temp___expr_748))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right3))))))))

(define-fun default_initial_assumption12 ((temp___expr_751 us_rep12)
  (temp___skip_top_level_752 Bool)) Bool (and
                                         (= (attr__tag12 temp___expr_751) 
                                         us_tag12)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs13
                                            temp___expr_751))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               right3))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len12
                                            (us_split_fields25
                                            temp___expr_751))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value12
                                            (us_split_fields25
                                            temp___expr_751)) (let ((temp___754 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs13
                                                              temp___expr_751))))))
                                                              (of_array
                                                              (to_array
                                                              temp___754)
                                                              (first1
                                                              temp___754)
                                                              (last1
                                                              temp___754))))))))

(declare-const left4 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep15) (b us_rep15))
  (! (and
     (forall ((a1 us_rep15) (b1 us_rep15)) (oeq__function_guard
     (oeq (to_base14 a1) (to_base14 b1)) (to_base14 a1) (to_base14 b1)))
     (= (user_eq20 a b) (oeq (to_base14 a) (to_base14 b)))) :pattern (
  (user_eq20 a b)) )))

(define-fun dynamic_invariant20 ((temp___expr_804 us_rep15)
  (temp___is_init_800 Bool) (temp___skip_constant_801 Bool)
  (temp___do_toplevel_802 Bool)
  (temp___do_typ_inv_803 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_801 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left4)))
                                     (us_split_discrs1
                                     (to_base14 temp___expr_804))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left4)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value15
                                     (us_split_fields31 temp___expr_804)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value15
                                     (us_split_fields31 temp___expr_804))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value15
                                        (us_split_fields31 temp___expr_804))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value15
                                        (us_split_fields31 temp___expr_804))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 left4))))))))

(define-fun default_initial_assumption13 ((temp___expr_807 us_rep15)
  (temp___skip_top_level_808 Bool)) Bool (and
                                         (= (attr__tag15 temp___expr_807) 
                                         us_tag15)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs16
                                            temp___expr_807))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               left4))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len15
                                            (us_split_fields31
                                            temp___expr_807))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value15
                                            (us_split_fields31
                                            temp___expr_807)) (let ((temp___810 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs16
                                                              temp___expr_807))))))
                                                              (of_array
                                                              (to_array
                                                              temp___810)
                                                              (first1
                                                              temp___810)
                                                              (last1
                                                              temp___810))))))))

(declare-const right4 us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep14) (b us_rep14))
  (! (and
     (forall ((a1 us_rep14) (b1 us_rep14)) (oeq__function_guard
     (oeq (to_base13 a1) (to_base13 b1)) (to_base13 a1) (to_base13 b1)))
     (= (user_eq19 a b) (oeq (to_base13 a) (to_base13 b)))) :pattern (
  (user_eq19 a b)) )))

(define-fun dynamic_invariant21 ((temp___expr_792 us_rep14)
  (temp___is_init_788 Bool) (temp___skip_constant_789 Bool)
  (temp___do_toplevel_790 Bool)
  (temp___do_typ_inv_791 Bool)) Bool (and
                                     (=>
                                     (not (= temp___skip_constant_789 true))
                                     (in_range4
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right4)))
                                     (us_split_discrs1
                                     (to_base13 temp___expr_792))))
                                     (and (dynamic_property 1
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right4)))
                                     (first1
                                     (rec__ada___pragmarc__b_strings__b_string__value14
                                     (us_split_fields29 temp___expr_792)))
                                     (last1
                                     (rec__ada___pragmarc__b_strings__b_string__value14
                                     (us_split_fields29 temp___expr_792))))
                                     (and
                                     (= (first1
                                        (rec__ada___pragmarc__b_strings__b_string__value14
                                        (us_split_fields29 temp___expr_792))) 1)
                                     (= (last1
                                        (rec__ada___pragmarc__b_strings__b_string__value14
                                        (us_split_fields29 temp___expr_792))) 
                                     (to_rep
                                     (rec__ada___pragmarc__b_strings__b_string__max_length
                                     (us_split_discrs1 right4))))))))

(define-fun default_initial_assumption14 ((temp___expr_795 us_rep14)
  (temp___skip_top_level_796 Bool)) Bool (and
                                         (= (attr__tag14 temp___expr_795) 
                                         us_tag14)
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__max_length
                                            (us_split_discrs15
                                            temp___expr_795))) (to_rep
                                                               (rec__ada___pragmarc__b_strings__b_string__max_length
                                                               (us_split_discrs1
                                                               right4))))
                                         (and
                                         (= (to_rep
                                            (rec__ada___pragmarc__b_strings__b_string__len14
                                            (us_split_fields29
                                            temp___expr_795))) 0)
                                         (= (rec__ada___pragmarc__b_strings__b_string__value14
                                            (us_split_fields29
                                            temp___expr_795)) (let ((temp___798 
                                                              (temp_____aggregate_def_479
                                                              32 1
                                                              (to_rep
                                                              (rec__ada___pragmarc__b_strings__b_string__max_length
                                                              (us_split_discrs15
                                                              temp___expr_795))))))
                                                              (of_array
                                                              (to_array
                                                              temp___798)
                                                              (first1
                                                              temp___798)
                                                              (last1
                                                              temp___798))))))))

(assert
;; defqtvc
 ;; File "pragmarc-b_strings.ads", line 44, characters 0-0
  (not
  (forall ((to____split_fields us_split_fields) (o Int))
  (=> (dynamic_invariant3
  (us_repqtmk to____split_discrs to____split_fields to____attr__tag) true
  false true true)
  (=> (dynamic_invariant2 from true false true true)
  (=> (dynamic_invariant4 drop true false true true)
  (=>
  (=> (= drop 2)
  (<= (length from) (to_rep
                    (rec__ada___pragmarc__b_strings__b_string__max_length
                    to____split_discrs))))
  (=>
  (= (to_rep
     (rec__ada___pragmarc__b_strings__b_string__max_length
     to____split_discrs)) o)
  (let ((o1 (length from)))
  (=> (in_range o1)
  (forall ((spark__branch Bool))
  (=> (= spark__branch (ite (<= o1 o) true false))
  (=> (not (= spark__branch true))
  (forall ((spark__branch1 Bool))
  (=> (= spark__branch1 (ite (= drop 2) true false))
  (=> (not (= spark__branch1 true))
  (forall ((o2 Int))
  (=>
  (= (to_rep
     (rec__ada___pragmarc__b_strings__b_string__max_length
     to____split_discrs)) o2)
  (forall ((o3 natural))
  (=> (= (to_rep o3) o2)
  (forall ((to____split_fields1 us_split_fields))
  (=>
  (= to____split_fields1 (us_split_fieldsqtmk o3
                         (rec__ada___pragmarc__b_strings__b_string__value
                         to____split_fields) (rec__ext__ to____split_fields)))
  (forall ((spark__branch2 Bool))
  (=> (= spark__branch2 (ite (= drop 0) true false))
  (=> (not (= spark__branch2 true))
  (forall ((ada___pragmarc__b_strings__assign__2__R53b__assume Int))
  (=>
  (= (to_rep
     (rec__ada___pragmarc__b_strings__b_string__max_length
     to____split_discrs)) ada___pragmarc__b_strings__assign__2__R53b__assume)
  (=> (= ada___pragmarc__b_strings__assign__2__R53b__assume r53b)
  (=> (dynamic_invariant r53b true false true true)
  (forall ((o4 Int))
  (=>
  (= (to_rep
     (rec__ada___pragmarc__b_strings__b_string__len to____split_fields1)) o4)
  (let ((o5 (+ (first1 from) o4)))
  (=> (in_range o5)
  (let ((o6 (- o5 1)))
  (=> (in_range o6)
  (=> (= o6 r54b)
  (=> (dynamic_invariant1 r54b true false true true)
  (let ((temp___920 (first1 from)))
  (=> (<= temp___920 r54b) (<= (first1 from) temp___920))))))))))))))))))))))))))))))))))))))))
(check-sat)
