;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :smt-lib-version 2.6)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-sort string 0)

(declare-datatypes ((tuple0 0))
(((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((us_type_of_heap__refqtmk (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0))
(((int__refqtmk (int__content Int)))))
(declare-datatypes ((bool__ref 0))
(((bool__refqtmk (bool__content Bool)))))
(declare-datatypes ((us_fixed__ref 0))
(((us_fixed__refqtmk (us_fixed__content Int)))))
(declare-datatypes ((real__ref 0))
(((real__refqtmk (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((us_private__refqtmk (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun us_fixed__ref___projection ((a us_fixed__ref)) Int (us_fixed__content
                                                               a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-datatypes ((us_split_fields 0))
(((us_split_fieldsqtmk (rec__spin__state_type__current Bool)))))
(define-fun us_split_fields_rec__spin__state_type__current__projection ((a us_split_fields)) Bool 
  (rec__spin__state_type__current a))

(declare-datatypes ((us_split_fields__ref 0))
(((us_split_fields__refqtmk (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___split_fields__content__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((us_repqtmk (us_split_fields1 us_split_fields)))))
(define-fun us_rep___split_fields__projection ((a us_rep)) us_split_fields 
  (us_split_fields1 a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (ite (rec__spin__state_type__current
                                (us_split_fields1 a)) 1 0) (ite (rec__spin__state_type__current
                                                                (us_split_fields1
                                                                b)) 1 0))
                   true false))

(declare-const value__size Int)

(declare-const object__size Int)

(declare-const alignment Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (<= 0 object__size))

;; alignment_axiom
  (assert (<= 0 alignment))

(declare-const spin__state_type__current__first__bit Int)

(declare-const spin__state_type__current__last__bit Int)

(declare-const spin__state_type__current__position Int)

;; spin__state_type__current__first__bit_axiom
  (assert (<= 0 spin__state_type__current__first__bit))

;; spin__state_type__current__last__bit_axiom
  (assert
  (< spin__state_type__current__first__bit spin__state_type__current__last__bit))

;; spin__state_type__current__position_axiom
  (assert (<= 0 spin__state_type__current__position))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((state_type__ref 0))
(((state_type__refqtmk (state_type__content us_rep)))))
(define-fun state_type__ref_state_type__content__projection ((a state_type__ref)) us_rep 
  (state_type__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun state_invariant (us_rep us_private) Bool)

(declare-fun state_invariant__function_guard (Bool us_rep us_private) Bool)

;; state_invariant__post_axiom
  (assert true)

(assert
;; defqtvc
 ;; File "spin_main.adb", line 5, characters 0-0
  (not
  (forall ((internal_var us_private) (state__split_fields Bool))
  (let ((o (us_repqtmk (us_split_fieldsqtmk state__split_fields))))
  (=> (state_invariant__function_guard (state_invariant o internal_var) o
  internal_var)
  (forall ((state__split_fields1 Bool))
  (=>
  (forall ((internal_var1 us_private) (state__split_fields2 Bool))
  (state_invariant__function_guard
  (state_invariant (us_repqtmk (us_split_fieldsqtmk state__split_fields2))
  internal_var1) (us_repqtmk (us_split_fieldsqtmk state__split_fields2))
  internal_var1))
  (=>
  (= (state_invariant (us_repqtmk (us_split_fieldsqtmk state__split_fields1))
     internal_var) true)
  (forall ((state__split_fields2 Bool))
  (let ((o1 (us_repqtmk (us_split_fieldsqtmk state__split_fields2))))
  (=> (state_invariant__function_guard (state_invariant o1 internal_var) o1
  internal_var)
  (=>
  (forall ((internal_var1 us_private) (state__split_fields3 Bool))
  (state_invariant__function_guard
  (state_invariant (us_repqtmk (us_split_fieldsqtmk state__split_fields3))
  internal_var1) (us_repqtmk (us_split_fieldsqtmk state__split_fields3))
  internal_var1))
  (= (state_invariant (us_repqtmk (us_split_fieldsqtmk state__split_fields2))
     internal_var) true)))))))))))))
(check-sat)
