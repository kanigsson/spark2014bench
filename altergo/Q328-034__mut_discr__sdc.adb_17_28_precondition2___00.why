(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq6 : us_rep, us_rep -> bool

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type file_type__ref = { file_type__content : us_rep
}

function file_type__ref_file_type__content__projection(a: file_type__ref) : us_rep =
  (a).file_type__content

logic attr__ATTRIBUTE_ADDRESS : int

type token_kind

predicate in_range4(x: int) = ((0 <= x) and (x <= 2))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq5 : token_kind, token_kind -> bool

logic dummy5 : token_kind

type token_kind__ref = { token_kind__content : token_kind
}

function token_kind__ref_token_kind__content__projection(a: token_kind__ref) : token_kind =
  (a).token_kind__content

logic to_rep2 : token_kind -> int

logic of_rep2 : int -> token_kind

axiom inversion_axiom2 :
  (forall x:token_kind [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:token_kind [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields = { rec__types__value__e : integer
}

function us_split_fields_rec__types__value__e__projection(a: us_split_fields) : integer =
  (a).rec__types__value__e

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq8(a: us_rep1, b: us_rep1) : bool =
  (if (to_rep1(((a).us_split_fields1).rec__types__value__e) = to_rep1(((b).us_split_fields1).rec__types__value__e)) then true else false)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic types__value__e__first__bit : int

logic types__value__e__last__bit : int

logic types__value__e__position : int

axiom types__value__e__first__bit_axiom : (0 <= types__value__e__first__bit)

axiom types__value__e__last__bit_axiom :
  (types__value__e__first__bit <  types__value__e__last__bit)

axiom types__value__e__position_axiom : (0 <= types__value__e__position)

logic user_eq6 : us_rep1, us_rep1 -> bool

logic dummy6 : us_rep1

type value__ref = { value__content : us_rep1
}

function value__ref_value__content__projection(a: value__ref) : us_rep1 =
  (a).value__content

type operation

predicate in_range5(x: int) = ((0 <= x) and (x <= 3))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq7 : operation, operation -> bool

logic dummy7 : operation

type operation__ref = { operation__content : operation
}

function operation__ref_operation__content__projection(a: operation__ref) : operation =
  (a).operation__content

logic to_rep3 : operation -> int

logic of_rep3 : int -> operation

axiom inversion_axiom3 :
  (forall x:operation [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:operation [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type instruction

predicate in_range6(x: int) = ((0 <= x) and (x <= 2))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : instruction, instruction -> bool

logic dummy8 : instruction

type instruction__ref = { instruction__content : instruction
}

function instruction__ref_instruction__content__projection(a: instruction__ref) : instruction =
  (a).instruction__content

logic to_rep4 : instruction -> int

logic of_rep4 : int -> instruction

axiom inversion_axiom4 :
  (forall x:instruction [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:instruction [to_rep4(x)]. in_range6(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range6(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_discrs = { rec__tokens__token__kind : token_kind
}

function us_split_discrs_rec__tokens__token__kind__projection(a: us_split_discrs) : token_kind =
  (a).rec__tokens__token__kind

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields2 = { rec__tokens__token__val : us_rep1;
rec__tokens__token__op : operation; rec__tokens__token__instr : instruction
}

function us_split_fields_rec__tokens__token__val__projection(a: us_split_fields2) : us_rep1 =
  (a).rec__tokens__token__val

function us_split_fields_rec__tokens__token__op__projection(a: us_split_fields2) : operation =
  (a).rec__tokens__token__op

function us_split_fields_rec__tokens__token__instr__projection(a: us_split_fields2) : instruction =
  (a).rec__tokens__token__instr

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_discrs1 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__projection(a: us_rep2) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__2__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

predicate tokens__token__val__pred(a: us_rep2) =
  (to_rep2(((a).us_split_discrs1).rec__tokens__token__kind) = 0)

predicate tokens__token__op__pred(a: us_rep2) =
  (to_rep2(((a).us_split_discrs1).rec__tokens__token__kind) = 1)

predicate tokens__token__instr__pred(a: us_rep2) =
  (to_rep2(((a).us_split_discrs1).rec__tokens__token__kind) = 2)

function bool_eq11(a: us_rep2, b: us_rep2) : bool =
  (if ((to_rep2(((a).us_split_discrs1).rec__tokens__token__kind) = to_rep2(((b).us_split_discrs1).rec__tokens__token__kind)) and
  (((tokens__token__val__pred(a) ->
  (bool_eq8(((a).us_split_fields3).rec__tokens__token__val,
  ((b).us_split_fields3).rec__tokens__token__val) = true)) and
  (tokens__token__op__pred(a) ->
  (to_rep3(((a).us_split_fields3).rec__tokens__token__op) = to_rep3(((b).us_split_fields3).rec__tokens__token__op)))) and
  (tokens__token__instr__pred(a) ->
  (to_rep4(((a).us_split_fields3).rec__tokens__token__instr) = to_rep4(((b).us_split_fields3).rec__tokens__token__instr))))) then true else false)

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic tokens__token__kind__first__bit : int

logic tokens__token__kind__last__bit : int

logic tokens__token__kind__position : int

axiom tokens__token__kind__first__bit_axiom :
  (0 <= tokens__token__kind__first__bit)

axiom tokens__token__kind__last__bit_axiom :
  (tokens__token__kind__first__bit <  tokens__token__kind__last__bit)

axiom tokens__token__kind__position_axiom :
  (0 <= tokens__token__kind__position)

logic tokens__token__val__first__bit : int

logic tokens__token__val__last__bit : int

logic tokens__token__val__position : int

axiom tokens__token__val__first__bit_axiom :
  (0 <= tokens__token__val__first__bit)

axiom tokens__token__val__last__bit_axiom :
  (tokens__token__val__first__bit <  tokens__token__val__last__bit)

axiom tokens__token__val__position_axiom :
  (0 <= tokens__token__val__position)

logic tokens__token__op__first__bit : int

logic tokens__token__op__last__bit : int

logic tokens__token__op__position : int

axiom tokens__token__op__first__bit_axiom :
  (0 <= tokens__token__op__first__bit)

axiom tokens__token__op__last__bit_axiom :
  (tokens__token__op__first__bit <  tokens__token__op__last__bit)

axiom tokens__token__op__position_axiom : (0 <= tokens__token__op__position)

logic tokens__token__instr__first__bit : int

logic tokens__token__instr__last__bit : int

logic tokens__token__instr__position : int

axiom tokens__token__instr__first__bit_axiom :
  (0 <= tokens__token__instr__first__bit)

axiom tokens__token__instr__last__bit_axiom :
  (tokens__token__instr__first__bit <  tokens__token__instr__last__bit)

axiom tokens__token__instr__position_axiom :
  (0 <= tokens__token__instr__position)

logic user_eq9 : us_rep2, us_rep2 -> bool

logic dummy9 : us_rep2

type token__ref = { token__content : us_rep2
}

function token__ref_token__content__projection(a: token__ref) : us_rep2 =
  (a).token__content

logic t__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate default_initial_assumption(temp___expr_235: us_rep2,
  temp___skip_top_level_236: bool) =
  (to_rep2(((temp___expr_235).us_split_discrs1).rec__tokens__token__kind) = 0)

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq12(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq10 : natural, natural -> bool

logic dummy10 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range7(temp___expr_39))

logic argument_count : unit -> int

logic argument_count__function_guard : int, unit -> prop

axiom argument_count__post_axiom :
  (forall us_void_param:unit [argument_count(us_void_param)].
  dynamic_invariant(argument_count(us_void_param), true, false, true, true))

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range2(temp___expr_46))

predicate dynamic_invariant2(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

logic argument : int -> us_t

logic argument__function_guard : us_t, int -> prop

axiom argument__post_axiom :
  (forall number:int [argument(number)]. ((dynamic_invariant1(number, true,
  true, true, true) and (number <= argument_count(void))) ->
  dynamic_invariant2(argument(number), true, false, true, true)))

logic is_open : us_rep -> bool

logic is_open__function_guard : bool, us_rep -> prop

logic mode : us_rep -> int

logic mode__function_guard : int, us_rep -> prop

logic line_length : us_rep, us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic line_length__function_guard : int, us_rep, us_private, us_private,
  us_private, us_private, us_private, us_private, us_private -> prop

logic page_length : us_rep, us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic page_length__function_guard : int, us_rep, us_private, us_private,
  us_private, us_private, us_private, us_private, us_private -> prop

predicate default_initial_assumption1(temp___expr_197: us_rep,
  temp___skip_top_level_198: bool) =
  ((not (temp___skip_top_level_198 = true)) ->
  (not (is_open(temp___expr_197) = true)))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic full : int -> bool

logic full__function_guard : bool, int -> prop

logic size : int -> int

logic size__function_guard : int, int -> prop

type tlastS

logic tlastSqtint : tlastS -> int

axiom tlastSqtaxiom : (forall i:tlastS. (0 <= tlastSqtint(i)))

axiom tlastSqtaxiom1 : (forall i:tlastS. (tlastSqtint(i) <= 200))

predicate in_range8(x: int) = ((0 <= x) and (x <= 200))

function bool_eq13(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq11 : tlastS, tlastS -> bool

logic dummy11 : tlastS

type tlastS__ref = { tlastS__content : tlastS
}

function tlastS__ref_tlastS__content__projection(a: tlastS__ref) : tlastS =
  (a).tlastS__content

predicate dynamic_invariant3(temp___expr_260: int, temp___is_init_256: bool,
  temp___skip_constant_257: bool, temp___do_toplevel_258: bool,
  temp___do_typ_inv_259: bool) = (((temp___is_init_256 = true) or
  (0 <= 200)) -> in_range8(temp___expr_260))

logic temp___String_Literal_270 : unit -> (int,character) farray

axiom temp___String_Literal_270__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[1])) = 87))

axiom temp___String_Literal_270__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[2])) = 101))

axiom temp___String_Literal_270__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[3])) = 108))

axiom temp___String_Literal_270__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[4])) = 99))

axiom temp___String_Literal_270__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[5])) = 111))

axiom temp___String_Literal_270__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[6])) = 109))

axiom temp___String_Literal_270__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[7])) = 101))

axiom temp___String_Literal_270__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[8])) = 32))

axiom temp___String_Literal_270__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[9])) = 116))

axiom temp___String_Literal_270__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[10])) = 111))

axiom temp___String_Literal_270__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[11])) = 32))

axiom temp___String_Literal_270__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[12])) = 115))

axiom temp___String_Literal_270__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[13])) = 100))

axiom temp___String_Literal_270__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[14])) = 99))

axiom temp___String_Literal_270__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[15])) = 46))

axiom temp___String_Literal_270__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[16])) = 32))

axiom temp___String_Literal_270__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[17])) = 71))

axiom temp___String_Literal_270__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[18])) = 111))

axiom temp___String_Literal_270__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[19])) = 32))

axiom temp___String_Literal_270__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[20])) = 97))

axiom temp___String_Literal_270__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[21])) = 104))

axiom temp___String_Literal_270__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[22])) = 101))

axiom temp___String_Literal_270__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[23])) = 97))

axiom temp___String_Literal_270__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[24])) = 100))

axiom temp___String_Literal_270__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[25])) = 32))

axiom temp___String_Literal_270__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[26])) = 116))

axiom temp___String_Literal_270__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[27])) = 121))

axiom temp___String_Literal_270__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[28])) = 112))

axiom temp___String_Literal_270__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[29])) = 101))

axiom temp___String_Literal_270__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[30])) = 32))

axiom temp___String_Literal_270__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[31])) = 121))

axiom temp___String_Literal_270__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[32])) = 111))

axiom temp___String_Literal_270__def_axiom32 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[33])) = 117))

axiom temp___String_Literal_270__def_axiom33 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[34])) = 114))

axiom temp___String_Literal_270__def_axiom34 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[35])) = 32))

axiom temp___String_Literal_270__def_axiom35 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[36])) = 99))

axiom temp___String_Literal_270__def_axiom36 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[37])) = 111))

axiom temp___String_Literal_270__def_axiom37 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[38])) = 109))

axiom temp___String_Literal_270__def_axiom38 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[39])) = 109))

axiom temp___String_Literal_270__def_axiom39 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[40])) = 97))

axiom temp___String_Literal_270__def_axiom40 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[41])) = 110))

axiom temp___String_Literal_270__def_axiom41 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[42])) = 100))

axiom temp___String_Literal_270__def_axiom42 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[43])) = 115))

axiom temp___String_Literal_270__def_axiom43 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[44])) = 32))

axiom temp___String_Literal_270__def_axiom44 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[45])) = 46))

axiom temp___String_Literal_270__def_axiom45 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[46])) = 46))

axiom temp___String_Literal_270__def_axiom46 :
  (forall us_void_param:unit [temp___String_Literal_270(us_void_param)].
  (to_rep((temp___String_Literal_270(us_void_param)[47])) = 46))

logic temp___String_Literal_271 : unit -> (int,character) farray

logic temp___String_Literal_272 : unit -> (int,character) farray

predicate dynamic_invariant4(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant5(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range3(temp___expr_74))

axiom size__post_axiom :
  (forall stack__last:int [size(stack__last)].
  (dynamic_invariant3(stack__last, true, true, true, true) -> (let result =
  size(stack__last) : int in (size__function_guard(result, stack__last) ->
  dynamic_invariant4(result, true, false, true, true)))))

axiom size__def_axiom :
  (forall stack__last:int [size(stack__last)].
  (dynamic_invariant3(stack__last, true, true, true, true) ->
  (size(stack__last) = stack__last)))

axiom full__def_axiom :
  (forall stack__last:int [full(stack__last)]. ((full(stack__last) = true) ->
  (200 <= stack__last)))

axiom full__def_axiom1 :
  (forall stack__last:int [full(stack__last)]. ((200 <= stack__last) ->
  (full(stack__last) = true)))

predicate dynamic_invariant6(temp___expr_204: int, temp___is_init_200: bool,
  temp___skip_constant_201: bool, temp___do_toplevel_202: bool,
  temp___do_typ_inv_203: bool) = (((temp___is_init_200 = true) or
  (0 <= 2)) -> in_range4(temp___expr_204))

predicate dynamic_invariant7(temp___expr_226: int, temp___is_init_222: bool,
  temp___skip_constant_223: bool, temp___do_toplevel_224: bool,
  temp___do_typ_inv_225: bool) = (((temp___is_init_222 = true) or
  (0 <= 2)) -> in_range6(temp___expr_226))

predicate dynamic_invariant8(temp___expr_219: int, temp___is_init_215: bool,
  temp___skip_constant_216: bool, temp___do_toplevel_217: bool,
  temp___do_typ_inv_218: bool) = (((temp___is_init_215 = true) or
  (0 <= 3)) -> in_range5(temp___expr_219))

type file_mode

function pos_to_rep(x: int) : int =
  (if (x = 2) then 3 else (if (x = 1) then 2 else 0))

predicate in_range9(x: int) = ((0 <= x) and (x <= 2))

function bool_eq14(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq12 : file_mode, file_mode -> bool

logic dummy12 : file_mode

type file_mode__ref = { file_mode__content : file_mode
}

function file_mode__ref_file_mode__content__projection(a: file_mode__ref) : file_mode =
  (a).file_mode__content

predicate dynamic_invariant9(temp___expr_248: int, temp___is_init_244: bool,
  temp___skip_constant_245: bool, temp___do_toplevel_246: bool,
  temp___do_typ_inv_247: bool) = (((temp___is_init_244 = true) or
  (0 <= 2)) -> in_range9(temp___expr_248))

type count

logic countqtint : count -> int

axiom countqtaxiom : (forall i:count. (0 <= countqtint(i)))

axiom countqtaxiom1 : (forall i:count. (countqtint(i) <= 2147483647))

predicate in_range10(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq15(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq13 : count, count -> bool

logic dummy13 : count

type count__ref = { count__content : count
}

function count__ref_count__content__projection(a: count__ref) : count =
  (a).count__content

predicate dynamic_invariant10(temp___expr_168: int, temp___is_init_164: bool,
  temp___skip_constant_165: bool, temp___do_toplevel_166: bool,
  temp___do_typ_inv_167: bool) = (((temp___is_init_164 = true) or
  (0 <= 2147483647)) -> in_range10(temp___expr_168))

axiom mode__post_axiom :
  (forall file:us_rep [mode(file)]. ((is_open(file) = true) ->
  dynamic_invariant9(mode(file), true, false, true, true)))

axiom line_length__post_axiom :
  (forall file:us_rep.
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private [line_length(file,
  ada___ada__text_io__standard_in, ada___ada__text_io__file_system,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err)]. (((is_open(file) = true) and
  (not (mode(file) = 0))) -> dynamic_invariant10(line_length(file,
  ada___ada__text_io__standard_in, ada___ada__text_io__file_system,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err), true, false, true, true))))

axiom page_length__post_axiom :
  (forall file:us_rep.
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private [page_length(file,
  ada___ada__text_io__standard_in, ada___ada__text_io__file_system,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err)]. (((is_open(file) = true) and
  (not (mode(file) = 0))) -> dynamic_invariant10(page_length(file,
  ada___ada__text_io__standard_in, ada___ada__text_io__file_system,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err), true, false, true, true))))

 (* File "sdc.ads", line 24, characters 0-0 *)
goal defqtvc :
  (forall file:us_rep. forall t__split_fields:us_split_fields2.
  forall t__split_discrs:token_kind. forall last2:int.
  (dynamic_invariant3(last2, true, false, true, true) ->
  (default_initial_assumption1(file, false) ->
  ((t__attr__constrained = false) -> (default_initial_assumption({
  us_split_discrs1 = { rec__tokens__token__kind = t__split_discrs };
  us_split_fields3 = t__split_fields }, false) -> (let o =
  argument_count(void) : int in (dynamic_invariant(o, true, false, true,
  true) ->
  (forall spark__branch:bool.
  ((spark__branch = (if (o = 1) then true else false)) ->
  ((spark__branch = true) -> (1 <= argument_count(void))))))))))))
