(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic wrong_ok : int -> bool

logic wrong_ok__function_guard : bool, int -> prop

logic init : int -> int

logic init__function_guard : int, int -> prop

type wrong

logic wrongqtint : wrong -> int

axiom wrongqtaxiom : (forall i:wrong. (0 <= wrongqtint(i)))

axiom wrongqtaxiom1 : (forall i:wrong. (wrongqtint(i) <= 2147483647))

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : wrong, wrong -> bool

logic dummy : wrong

type wrong__ref = { wrong__content : wrong
}

function wrong__ref_wrong__content__projection(a: wrong__ref) : wrong =
  (a).wrong__content

predicate dynamic_invariant(temp___expr_203: int, temp___is_init_199: bool,
  temp___skip_constant_200: bool, temp___do_toplevel_201: bool,
  temp___do_typ_inv_202: bool) = (((temp___is_init_199 = true) or
  (0 <= 2147483647)) -> in_range(temp___expr_203))

axiom temp___result_207qtdef :
  (forall temp___206:int. wrong_ok__function_guard(wrong_ok(temp___206),
  temp___206))

predicate default_initial_assumption(temp___expr_204: int,
  temp___skip_top_level_205: bool) = ((temp___expr_204 = 0) and
  ((not (temp___skip_top_level_205 = true)) ->
  (wrong_ok(temp___expr_204) = true)))

axiom wrong_ok__def_axiom : init__function_guard(init(0), 0)

axiom wrong_ok__def_axiom1 :
  (forall x:int [wrong_ok(x)]. ((wrong_ok(x) = true) -> (x = init(0))))

axiom wrong_ok__def_axiom2 :
  (forall x:int [wrong_ok(x)]. ((x = init(0)) -> (wrong_ok(x) = true)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant1(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

axiom init__post_axiom :
  (forall x:int [init(x)]. (dynamic_invariant1(x, true, true, true, true) ->
  (let result = init(x) : int in (init__function_guard(result, x) ->
  dynamic_invariant1(result, true, false, true, true)))))

 (* File "/home/kanig/dev/spark2014/benchmark_script/data/tmp-test-N715-017__default_init_cond-15469/src/gnatprove/default_init__wrong.mlw", line 239, characters 5-8 *)
goal defqtvc :
  (forall usf:int.
  ((forall usf1:int. wrong_ok__function_guard(wrong_ok(usf1), usf1)) ->
  ((dynamic_invariant(usf, true, false, true, true) and (usf = 0)) ->
  ((forall usf1:int. wrong_ok__function_guard(wrong_ok(usf1), usf1)) ->
  (wrong_ok(usf) = true)))))
