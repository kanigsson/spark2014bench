(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type universal_integer

logic universal_integerqtint : universal_integer -> int

axiom universal_integerqtaxiom :
  (forall i:universal_integer.
  ((- 9223372036854775808) <= universal_integerqtint(i)))

axiom universal_integerqtaxiom1 :
  (forall i:universal_integer.
  (universal_integerqtint(i) <= 9223372036854775807))

predicate in_range1(x: int) = (((- 9223372036854775808) <= x) and
  (x <= 9223372036854775807))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : universal_integer, universal_integer -> bool

logic dummy : universal_integer

type universal_integer__ref = { universal_integer__content :
universal_integer
}

function universal_integer__ref_universal_integer__content__projection(a: universal_integer__ref) : universal_integer =
  (a).universal_integer__content

logic attr__ATTRIBUTE_ADDRESS : int

type tuB

logic tuBqtint : tuB -> int

axiom tuBqtaxiom : (forall i:tuB. ((- 9223372036854775808) <= tuBqtint(i)))

axiom tuBqtaxiom1 : (forall i:tuB. (tuBqtint(i) <= 9223372036854775807))

predicate in_range2(x: int) = (((- 9223372036854775808) <= x) and
  (x <= 9223372036854775807))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : tuB, tuB -> bool

logic dummy1 : tuB

type tuB__ref = { tuB__content : tuB
}

function tuB__ref_tuB__content__projection(a: tuB__ref) : tuB =
  (a).tuB__content

type t1b

logic t1bqtint : t1b -> int

axiom t1bqtaxiom : (forall i:t1b. (0 <= t1bqtint(i)))

axiom t1bqtaxiom1 : (forall i:t1b. (t1bqtint(i) <= 62))

predicate in_range3(x: int) = ((0 <= x) and (x <= 62))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t1b, t1b -> bool

logic dummy2 : t1b

type t1b__ref = { t1b__content : t1b
}

function t1b__ref_t1b__content__projection(a: t1b__ref) : t1b =
  (a).t1b__content

predicate dynamic_invariant(temp___expr_151: int, temp___is_init_147: bool,
  temp___skip_constant_148: bool, temp___do_toplevel_149: bool,
  temp___do_typ_inv_150: bool) = (((temp___is_init_147 = true) or
  ((- 9223372036854775808) <= 9223372036854775807)) ->
  in_range1(temp___expr_151))

 (* File "signed.adb", line 3, characters 0-0 *)
goal defqtvc :
  (forall i:int. ((i = 0) -> ((andb((if (0 <= i) then true else false),
  (if (i <= 62) then true else false)) = true) -> (((2 ** i) <= (2 ** 62)) ->
  (((2 ** i) <= 4611686018427387904) ->
  (forall i1:int.
  ((forall k:int. (((0 <= k) and (k <= i1)) -> ((0 <= (2 ** k)) and
   ((2 ** k) <= 9223372036854775807)))) ->
  ((andb((if in_range3(i1) then true else false), (if ((0 <= i1) and
  (i1 <= 62)) then true else false)) = true) -> ((not (i1 = 62)) ->
  (forall i2:int. ((i2 = (i1 + 1)) -> (((2 ** i2) <= (2 ** 62)) ->
  (((2 ** i2) <= 4611686018427387904) ->
  (forall k:int. (((0 <= k) and (k <= i2)) -> (0 <= (2 ** k)))))))))))))))))
