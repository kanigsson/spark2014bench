(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

logic c : int

logic attr__ATTRIBUTE_ADDRESS : int

type scalar_with_default

logic scalar_with_defaultqtint : scalar_with_default -> int

axiom scalar_with_defaultqtaxiom :
  (forall i:scalar_with_default. (0 <= scalar_with_defaultqtint(i)))

axiom scalar_with_defaultqtaxiom1 :
  (forall i:scalar_with_default. (scalar_with_defaultqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : scalar_with_default, scalar_with_default -> bool

logic dummy1 : scalar_with_default

type scalar_with_default__ref = { scalar_with_default__content :
scalar_with_default
}

function scalar_with_default__ref_scalar_with_default__content__6__projection(a: scalar_with_default__ref) : scalar_with_default =
  (a).scalar_with_default__content

function to_rep(x: scalar_with_default) : int = scalar_with_defaultqtint(x)

logic of_rep : int -> scalar_with_default

axiom inversion_axiom :
  (forall x:scalar_with_default [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:scalar_with_default [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type tscalar_with_defaultB

logic tscalar_with_defaultBqtint : tscalar_with_defaultB -> int

axiom tscalar_with_defaultBqtaxiom :
  (forall i:tscalar_with_defaultB.
  ((- 2147483648) <= tscalar_with_defaultBqtint(i)))

axiom tscalar_with_defaultBqtaxiom1 :
  (forall i:tscalar_with_defaultB.
  (tscalar_with_defaultBqtint(i) <= 2147483647))

predicate in_range3(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : tscalar_with_defaultB, tscalar_with_defaultB -> bool

logic dummy2 : tscalar_with_defaultB

type tscalar_with_defaultB__ref = { tscalar_with_defaultB__content :
tscalar_with_defaultB
}

function tscalar_with_defaultB__ref_tscalar_with_defaultB__content__6__projection(a: tscalar_with_defaultB__ref) : tscalar_with_defaultB =
  (a).tscalar_with_defaultB__content

function to_rep1(x: tscalar_with_defaultB) : int =
  tscalar_with_defaultBqtint(x)

logic of_rep1 : int -> tscalar_with_defaultB

axiom inversion_axiom1 :
  (forall x:tscalar_with_defaultB [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:tscalar_with_defaultB [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

logic first : int

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : tscalar_with_defaultB, tscalar_with_defaultB -> bool

logic dummy3 : tscalar_with_defaultB

type scalar_bad_default__ref = { scalar_bad_default__content :
tscalar_with_defaultB
}

function scalar_bad_default__ref_scalar_bad_default__content__5__projection(a: scalar_bad_default__ref) : tscalar_with_defaultB =
  (a).scalar_bad_default__content

type us_split_discrs = { rec__with_default__bad_record2__rec_with_discr__b :
bool
}

function us_split_discrs_rec__with_default__bad_record2__rec_with_discr__b__projection(a: us_split_discrs) : bool =
  (a).rec__with_default__bad_record2__rec_with_discr__b

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__with_default__bad_record2__rec_with_discr__f1 :
scalar_with_default; rec__with_default__bad_record2__rec_with_discr__f2 :
tscalar_with_defaultB
}

function us_split_fields_rec__with_default__bad_record2__rec_with_discr__f1__projection(a: us_split_fields) : scalar_with_default =
  (a).rec__with_default__bad_record2__rec_with_discr__f1

function us_split_fields_rec__with_default__bad_record2__rec_with_discr__f2__projection(a: us_split_fields) : tscalar_with_defaultB =
  (a).rec__with_default__bad_record2__rec_with_discr__f2

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__2__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

predicate with_default__bad_record2__rec_with_discr__f1__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b) = 1)

predicate with_default__bad_record2__rec_with_discr__f2__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b) = 0)

function bool_eq5(a: us_rep, b: us_rep) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b) = to_int(((b).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b)) and
  ((with_default__bad_record2__rec_with_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f1) = to_rep(((b).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f1))) and
  (with_default__bad_record2__rec_with_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f2) = to_rep1(((b).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f2))))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic with_default__bad_record2__rec_with_discr__b__first__bit : int

logic with_default__bad_record2__rec_with_discr__b__last__bit : int

logic with_default__bad_record2__rec_with_discr__b__position : int

axiom with_default__bad_record2__rec_with_discr__b__first__bit_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__b__first__bit)

axiom with_default__bad_record2__rec_with_discr__b__last__bit_axiom :
  (with_default__bad_record2__rec_with_discr__b__first__bit <  with_default__bad_record2__rec_with_discr__b__last__bit)

axiom with_default__bad_record2__rec_with_discr__b__position_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__b__position)

logic with_default__bad_record2__rec_with_discr__f1__first__bit : int

logic with_default__bad_record2__rec_with_discr__f1__last__bit : int

logic with_default__bad_record2__rec_with_discr__f1__position : int

axiom with_default__bad_record2__rec_with_discr__f1__first__bit_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__f1__first__bit)

axiom with_default__bad_record2__rec_with_discr__f1__last__bit_axiom :
  (with_default__bad_record2__rec_with_discr__f1__first__bit <  with_default__bad_record2__rec_with_discr__f1__last__bit)

axiom with_default__bad_record2__rec_with_discr__f1__position_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__f1__position)

logic with_default__bad_record2__rec_with_discr__f2__first__bit : int

logic with_default__bad_record2__rec_with_discr__f2__last__bit : int

logic with_default__bad_record2__rec_with_discr__f2__position : int

axiom with_default__bad_record2__rec_with_discr__f2__first__bit_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__f2__first__bit)

axiom with_default__bad_record2__rec_with_discr__f2__last__bit_axiom :
  (with_default__bad_record2__rec_with_discr__f2__first__bit <  with_default__bad_record2__rec_with_discr__f2__last__bit)

axiom with_default__bad_record2__rec_with_discr__f2__position_axiom :
  (0 <= with_default__bad_record2__rec_with_discr__f2__position)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type tbadS__ref = { tbadS__content : us_rep
}

function tbadS__ref_tbadS__content__projection(a: tbadS__ref) : us_rep =
  (a).tbadS__content

predicate in_range4(rec__with_default__bad_record2__rec_with_discr__b1: bool,
  a: us_split_discrs) =
  (rec__with_default__bad_record2__rec_with_discr__b1 = (a).rec__with_default__bad_record2__rec_with_discr__b)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic with_default__bad_record2__rec_with_discr__b__first__bit1 : int

logic with_default__bad_record2__rec_with_discr__b__last__bit1 : int

logic with_default__bad_record2__rec_with_discr__b__position1 : int

axiom with_default__bad_record2__rec_with_discr__b__first__bit_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__b__first__bit1)

axiom with_default__bad_record2__rec_with_discr__b__last__bit_axiom1 :
  (with_default__bad_record2__rec_with_discr__b__first__bit1 <  with_default__bad_record2__rec_with_discr__b__last__bit1)

axiom with_default__bad_record2__rec_with_discr__b__position_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__b__position1)

logic with_default__bad_record2__rec_with_discr__f1__first__bit1 : int

logic with_default__bad_record2__rec_with_discr__f1__last__bit1 : int

logic with_default__bad_record2__rec_with_discr__f1__position1 : int

axiom with_default__bad_record2__rec_with_discr__f1__first__bit_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__f1__first__bit1)

axiom with_default__bad_record2__rec_with_discr__f1__last__bit_axiom1 :
  (with_default__bad_record2__rec_with_discr__f1__first__bit1 <  with_default__bad_record2__rec_with_discr__f1__last__bit1)

axiom with_default__bad_record2__rec_with_discr__f1__position_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__f1__position1)

logic with_default__bad_record2__rec_with_discr__f2__first__bit1 : int

logic with_default__bad_record2__rec_with_discr__f2__last__bit1 : int

logic with_default__bad_record2__rec_with_discr__f2__position1 : int

axiom with_default__bad_record2__rec_with_discr__f2__first__bit_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__f2__first__bit1)

axiom with_default__bad_record2__rec_with_discr__f2__last__bit_axiom1 :
  (with_default__bad_record2__rec_with_discr__f2__first__bit1 <  with_default__bad_record2__rec_with_discr__f2__last__bit1)

axiom with_default__bad_record2__rec_with_discr__f2__position_axiom1 :
  (0 <= with_default__bad_record2__rec_with_discr__f2__position1)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type rec_with_discr__ref = { rec_with_discr__content : us_rep
}

function rec_with_discr__ref_rec_with_discr__content__projection(a: rec_with_discr__ref) : us_rep =
  (a).rec_with_discr__content

logic bad__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate dynamic_invariant1(temp___expr_411: us_rep,
  temp___is_init_407: bool, temp___skip_constant_408: bool,
  temp___do_toplevel_409: bool, temp___do_typ_inv_410: bool) =
  (((not (temp___skip_constant_408 = true)) -> in_range4(of_int(0),
  (temp___expr_411).us_split_discrs1)) and
  (with_default__bad_record2__rec_with_discr__f2__pred(temp___expr_411) ->
  (((temp___is_init_407 = true) or (first <= 2147483647)) ->
  dynamic_property(first, 2147483647,
  to_rep1(((temp___expr_411).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f2)))))

predicate default_initial_assumption(temp___expr_413: us_rep,
  temp___skip_top_level_414: bool) =
  ((((temp___expr_413).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b = of_int(0)) and
  ((with_default__bad_record2__rec_with_discr__f1__pred(temp___expr_413) ->
  (to_rep(((temp___expr_413).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f1) = 0)) and
  (with_default__bad_record2__rec_with_discr__f2__pred(temp___expr_413) ->
  (to_rep1(((temp___expr_413).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f2) = 0))))

predicate dynamic_invariant2(temp___expr_391: int, temp___is_init_387: bool,
  temp___skip_constant_388: bool, temp___do_toplevel_389: bool,
  temp___do_typ_inv_390: bool) = (((temp___is_init_387 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_391))

predicate dynamic_invariant3(temp___expr_398: int, temp___is_init_394: bool,
  temp___skip_constant_395: bool, temp___do_toplevel_396: bool,
  temp___do_typ_inv_397: bool) = (((temp___is_init_394 = true) or
  (first <= 2147483647)) -> dynamic_property(first, 2147483647,
  temp___expr_398))

axiom first__def_axiom : (first = c)

predicate dynamic_invariant4(temp___expr_405: us_rep,
  temp___is_init_401: bool, temp___skip_constant_402: bool,
  temp___do_toplevel_403: bool, temp___do_typ_inv_404: bool) =
  (with_default__bad_record2__rec_with_discr__f2__pred(temp___expr_405) ->
  (((temp___is_init_401 = true) or (first <= 2147483647)) ->
  dynamic_property(first, 2147483647,
  to_rep1(((temp___expr_405).us_split_fields1).rec__with_default__bad_record2__rec_with_discr__f2))))

 (* File "with_default.ads", line 18, characters 0-0 *)
goal defqtvc : (dynamic_invariant(c, true, false, true, true) ->
  (forall usf:us_rep.
  ((of_int(0) = ((usf).us_split_discrs1).rec__with_default__bad_record2__rec_with_discr__b) ->
  (with_default__bad_record2__rec_with_discr__f2__pred(usf) ->
  dynamic_property(first, 2147483647, 0)))))
