(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic my_false : unit -> bool

logic my_false__function_guard : bool, unit -> prop

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

type wrong_scalar_def

logic wrong_scalar_defqtint : wrong_scalar_def -> int

axiom wrong_scalar_defqtaxiom :
  (forall i:wrong_scalar_def. ((- 2147483648) <= wrong_scalar_defqtint(i)))

axiom wrong_scalar_defqtaxiom1 :
  (forall i:wrong_scalar_def. (wrong_scalar_defqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : wrong_scalar_def, wrong_scalar_def -> bool

logic dummy : wrong_scalar_def

type wrong_scalar_def__ref = { wrong_scalar_def__content : wrong_scalar_def
}

function wrong_scalar_def__ref_wrong_scalar_def__content__projection(a: wrong_scalar_def__ref) : wrong_scalar_def =
  (a).wrong_scalar_def__content

axiom temp___result_274qtdef : my_false__function_guard(my_false(void), void)

predicate dynamic_invariant(temp___expr_272: int, temp___is_init_268: bool,
  temp___skip_constant_269: bool, temp___do_toplevel_270: bool,
  temp___do_typ_inv_271: bool) = ((((temp___is_init_268 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_272)) and
  ((temp___do_toplevel_270 = true) -> (my_false(void) = true)))

axiom temp___result_279qtdef : my_false__function_guard(my_false(void), void)

predicate dynamic_predicate(temp___277: int) = (my_false(void) = true)

function to_rep(x: wrong_scalar_def) : int = wrong_scalar_defqtint(x)

logic of_rep : int -> wrong_scalar_def

axiom inversion_axiom :
  (forall x:wrong_scalar_def [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:wrong_scalar_def [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

axiom my_false__def_axiom :
  (forall us_void_param:unit [my_false(us_void_param)].
  (not (my_false(us_void_param) = true)))

axiom my_false__def_axiom1 : true

 (* File "init_pred_in_loop.adb", line 226, characters 0-0 *)
goal defqtvc : in_range(0)
