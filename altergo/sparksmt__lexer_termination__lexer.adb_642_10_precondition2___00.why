(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

type character

predicate in_range4(x: int) = ((0 <= x) and (x <= 255))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : character, character -> bool

logic dummy3 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

predicate dynamic_invariant2(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range4(temp___expr_74))

logic to_rep1 : character -> int

logic of_rep1 : int -> character

axiom inversion_axiom1 :
  (forall x:character [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:character [to_rep1(x)]. in_range4(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range4(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq6(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep1((a[temp___idx_91])) = to_rep1((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep1((a[temp___idx_91])) = to_rep1((b[((b__first - a__first) + temp___idx_91)]))))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))))))

axiom concat_def1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((a_last <  i) -> ((concat(a, a_first, a_last, b, b_first,
  b_last)[i]) = (b[((i - a_last) + (b_first - 1))]))))))

logic concat_singleton_left : character, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_singleton_left_def :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  ((concat_singleton_left(a, a_first, b, b_first, b_last)[a_first]) = a))))

axiom concat_singleton_left_def1 :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  (forall i:int [(concat_singleton_left(a, a_first, b, b_first, b_last)[i])].
  ((a_first <  i) -> ((concat_singleton_left(a, a_first, b, b_first,
  b_last)[i]) = (b[((i - a_first) + (b_first - 1))])))))))

logic concat_singleton_right : (int,character) farray, int, int,
  character -> (int,character) farray

axiom concat_singleton_right_def :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)]. ((concat_singleton_right(a, a_first, a_last,
  b)[(a_last + 1)]) = b))))

axiom concat_singleton_right_def1 :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)].
  (forall i:int [(concat_singleton_right(a, a_first, a_last, b)[i])| (a[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat_singleton_right(a, a_first,
  a_last, b)[i]) = (a[i])))))))

logic concat_singletons : character, int, character -> (int,character) farray

axiom concat_singletons_def :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[a_first]) = a)))

axiom concat_singletons_def1 :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[(a_first + 1)]) = b)))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

function to_rep2(x: integer) : int = integerqtint(x)

logic of_rep2 : int -> integer

axiom inversion_axiom2 :
  (forall x:integer [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:integer [to_rep2(x)]. in_range1(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range1(x) ->
  (to_rep2(of_rep2(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep2(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep2(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep2(first((a).rt))

function last1(a: us_t) : int = to_rep2(last((a).rt))

function length1(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq7(x: us_t, y: us_t) : bool = bool_eq6((x).elts,
  to_rep2(first((x).rt)), to_rep2(last((x).rt)), (y).elts,
  to_rep2(first((y).rt)), to_rep2(last((y).rt)))

logic user_eq4 : us_t, us_t -> bool

logic dummy4 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

predicate dynamic_invariant3(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

type read_status

predicate in_range5(x: int) = ((0 <= x) and (x <= 2))

function bool_eq8(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : read_status, read_status -> bool

logic dummy5 : read_status

type read_status__ref = { read_status__content : read_status
}

function read_status__ref_read_status__content__projection(a: read_status__ref) : read_status =
  (a).read_status__content

logic to_rep3 : read_status -> int

logic of_rep3 : int -> read_status

axiom inversion_axiom3 :
  (forall x:read_status [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:read_status [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type us_split_discrs = { rec__file_io__read_result__status : read_status
}

function us_split_discrs_rec__file_io__read_result__status__projection(a: us_split_discrs) : read_status =
  (a).rec__file_io__read_result__status

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__2__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__file_io__read_result__c : character
}

function us_split_fields_rec__file_io__read_result__c__projection(a: us_split_fields) : character =
  (a).rec__file_io__read_result__c

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__2__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__2__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

predicate file_io__read_result__c__pred(a: us_rep) =
  (to_rep3(((a).us_split_discrs1).rec__file_io__read_result__status) = 0)

function bool_eq9(a: us_rep, b: us_rep) : bool =
  (if ((to_rep3(((a).us_split_discrs1).rec__file_io__read_result__status) = to_rep3(((b).us_split_discrs1).rec__file_io__read_result__status)) and
  (file_io__read_result__c__pred(a) ->
  (to_rep1(((a).us_split_fields1).rec__file_io__read_result__c) = to_rep1(((b).us_split_fields1).rec__file_io__read_result__c)))) then true else false)

predicate in_range6(rec__file_io__read_result__status1: int,
  a: us_split_discrs) =
  (rec__file_io__read_result__status1 = to_rep3((a).rec__file_io__read_result__status))

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic file_io__read_result__status__first__bit : int

logic file_io__read_result__status__last__bit : int

logic file_io__read_result__status__position : int

axiom file_io__read_result__status__first__bit_axiom :
  (0 <= file_io__read_result__status__first__bit)

axiom file_io__read_result__status__last__bit_axiom :
  (file_io__read_result__status__first__bit <  file_io__read_result__status__last__bit)

axiom file_io__read_result__status__position_axiom :
  (0 <= file_io__read_result__status__position)

logic file_io__read_result__c__first__bit : int

logic file_io__read_result__c__last__bit : int

logic file_io__read_result__c__position : int

axiom file_io__read_result__c__first__bit_axiom :
  (0 <= file_io__read_result__c__first__bit)

axiom file_io__read_result__c__last__bit_axiom :
  (file_io__read_result__c__first__bit <  file_io__read_result__c__last__bit)

axiom file_io__read_result__c__position_axiom :
  (0 <= file_io__read_result__c__position)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type read_result__ref = { read_result__content : us_rep
}

function read_result__ref_read_result__content__projection(a: read_result__ref) : us_rep =
  (a).read_result__content

logic current_read__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS : int

predicate default_initial_assumption(temp___expr_217: us_rep,
  temp___skip_top_level_218: bool) =
  (to_rep3(((temp___expr_217).us_split_discrs1).rec__file_io__read_result__status) = 2)

logic next_read__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep1

logic bool_eq10 : us_rep1, us_rep1 -> bool

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy7 : us_rep1

type file__ref = { file__content : us_rep1
}

function file__ref_file__content__projection(a: file__ref) : us_rep1 =
  (a).file__content

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic local_invariant : us_rep1, int, us_split_fields, us_split_discrs, int,
  us_split_fields, us_split_discrs -> bool

logic local_invariant__function_guard : bool, us_rep1, int, us_split_fields,
  us_split_discrs, int, us_split_fields, us_split_discrs -> prop

logic size : us_rep1 -> int

logic size__function_guard : int, us_rep1 -> prop

logic index : us_rep1 -> int

logic index__function_guard : int, us_rep1 -> prop

axiom local_invariant__def_axiom :
  (forall lexer__the_file:us_rep1.
  size__function_guard(size(lexer__the_file), lexer__the_file))

axiom local_invariant__def_axiom1 :
  (forall lexer__the_file:us_rep1.
  size__function_guard(size(lexer__the_file), lexer__the_file))

axiom local_invariant__def_axiom2 :
  (forall lexer__the_file:us_rep1.
  index__function_guard(index(lexer__the_file), lexer__the_file))

axiom local_invariant__def_axiom3 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (not (current_read__attr__constrained = true)))))))

axiom local_invariant__def_axiom4 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (not (next_read__attr__constrained = true)))))))

axiom local_invariant__def_axiom5 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (lexer__current_idx <= size(lexer__the_file)))))))

axiom local_invariant__def_axiom6 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (lexer__next_idx <= size(lexer__the_file)))))))

axiom local_invariant__def_axiom7 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (lexer__next_idx = index(lexer__the_file)))))))

axiom local_invariant__def_axiom8 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (lexer__current_idx <= lexer__next_idx))))))

axiom local_invariant__def_axiom9 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) -> ((to_rep3((({ us_split_discrs1 =
  lexer__next_read__discrs; us_split_fields1 = lexer__next_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0) ->
  (to_rep3((({ us_split_discrs1 = lexer__current_read__discrs;
  us_split_fields1 = lexer__current_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0)))))))

axiom local_invariant__def_axiom10 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) -> ((to_rep3((({ us_split_discrs1 =
  lexer__next_read__discrs; us_split_fields1 = lexer__next_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0) ->
  (lexer__current_idx = (lexer__next_idx - 1))))))))

axiom local_invariant__def_axiom11 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true) -> ((not (to_rep3((({ us_split_discrs1 =
  lexer__next_read__discrs; us_split_fields1 = lexer__next_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0)) ->
  (lexer__current_idx = lexer__next_idx)))))))

axiom local_invariant__def_axiom12 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs
  [local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs)].
  ((((((((not (current_read__attr__constrained = true)) and
  (not (next_read__attr__constrained = true))) and
  (lexer__current_idx <= size(lexer__the_file))) and
  (lexer__next_idx <= size(lexer__the_file))) and
  (lexer__next_idx = index(lexer__the_file))) and
  (lexer__current_idx <= lexer__next_idx)) and (if (to_rep3((({
  us_split_discrs1 = lexer__next_read__discrs; us_split_fields1 =
  lexer__next_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0) then ((to_rep3((({
  us_split_discrs1 = lexer__current_read__discrs; us_split_fields1 =
  lexer__current_read__fields
  }).us_split_discrs1).rec__file_io__read_result__status) = 0) and
  (lexer__current_idx = (lexer__next_idx - 1))) else (lexer__current_idx = lexer__next_idx))) ->
  (local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true))))))

logic invariant__ : us_rep1, int, us_split_fields, us_split_discrs, int,
  us_private, us_split_fields, us_split_discrs -> bool

logic invariant____function_guard : bool, us_rep1, int, us_split_fields,
  us_split_discrs, int, us_private, us_split_fields, us_split_discrs -> prop

logic invariant__1 : us_private -> bool

logic invariant____function_guard1 : bool, us_private -> prop

axiom invariant____def_axiom :
  (forall names__name_table:us_private.
  invariant____function_guard1(invariant__1(names__name_table),
  names__name_table))

axiom invariant____def_axiom1 :
  (forall lexer__the_file:us_rep1. forall lexer__next_idx:int.
  forall lexer__current_idx:int.
  forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs.
  local_invariant__function_guard(local_invariant(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields, lexer__next_read__discrs),
  lexer__the_file, lexer__next_idx, lexer__current_read__fields,
  lexer__current_read__discrs, lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs))

axiom invariant____def_axiom2 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs.
  (forall names__name_table:us_private [invariant__(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs)]. ((invariant__(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs) = true) ->
  (invariant__1(names__name_table) = true)))))))

axiom invariant____def_axiom3 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs.
  (forall names__name_table:us_private [invariant__(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs)]. ((invariant__(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs) = true) -> (local_invariant(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true)))))))

axiom invariant____def_axiom4 :
  (forall lexer__the_file:us_rep1.
  (forall lexer__next_idx:int. forall lexer__current_idx:int.
  (forall lexer__current_read__fields:us_split_fields.
  forall lexer__next_read__fields:us_split_fields.
  (forall lexer__current_read__discrs:us_split_discrs.
  forall lexer__next_read__discrs:us_split_discrs.
  (forall names__name_table:us_private [invariant__(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs)]. (((invariant__1(names__name_table) = true) and
  (local_invariant(lexer__the_file, lexer__next_idx,
  lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, lexer__next_read__fields,
  lexer__next_read__discrs) = true)) -> (invariant__(lexer__the_file,
  lexer__next_idx, lexer__current_read__fields, lexer__current_read__discrs,
  lexer__current_idx, names__name_table, lexer__next_read__fields,
  lexer__next_read__discrs) = true)))))))

type token_kind

predicate in_range7(x: int) = ((0 <= x) and (x <= 8))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : token_kind, token_kind -> bool

logic dummy8 : token_kind

type token_kind__ref = { token_kind__content : token_kind
}

function token_kind__ref_token_kind__content__projection(a: token_kind__ref) : token_kind =
  (a).token_kind__content

logic to_rep4 : token_kind -> int

logic of_rep4 : int -> token_kind

axiom inversion_axiom4 :
  (forall x:token_kind [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:token_kind [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type name_id

logic name_idqtint : name_id -> int

axiom name_idqtaxiom : (forall i:name_id. (0 <= name_idqtint(i)))

axiom name_idqtaxiom1 : (forall i:name_id. (name_idqtint(i) <= 2147483647))

predicate in_range8(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq12(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq9 : name_id, name_id -> bool

logic dummy9 : name_id

type name_id__ref = { name_id__content : name_id
}

function name_id__ref_name_id__content__projection(a: name_id__ref) : name_id =
  (a).name_id__content

function to_rep5(x: name_id) : int = name_idqtint(x)

logic of_rep5 : int -> name_id

axiom inversion_axiom5 :
  (forall x:name_id [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 : (forall x:name_id [to_rep5(x)]. in_range8(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range8(x) ->
  (to_rep5(of_rep5(x)) = x)))

type us_split_discrs2 = { rec__lexer__token__kind : token_kind
}

function us_split_discrs_rec__lexer__token__kind__projection(a: us_split_discrs2) : token_kind =
  (a).rec__lexer__token__kind

type us_split_discrs__ref1 = { us_split_discrs__content1 : us_split_discrs2
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref1) : us_split_discrs2 =
  (a).us_split_discrs__content1

type us_split_fields2 = { rec__lexer__token__line : natural;
rec__lexer__token__col : natural; rec__lexer__token__length : natural;
rec__lexer__token__value : name_id
}

function us_split_fields_rec__lexer__token__line__projection(a: us_split_fields2) : natural =
  (a).rec__lexer__token__line

function us_split_fields_rec__lexer__token__col__projection(a: us_split_fields2) : natural =
  (a).rec__lexer__token__col

function us_split_fields_rec__lexer__token__length__projection(a: us_split_fields2) : natural =
  (a).rec__lexer__token__length

function us_split_fields_rec__lexer__token__value__projection(a: us_split_fields2) : name_id =
  (a).rec__lexer__token__value

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_discrs3 : us_split_discrs2; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__projection(a: us_rep2) : us_split_discrs2 =
  (a).us_split_discrs3

function us_rep___split_fields__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

predicate lexer__token__value__pred(a: us_rep2) =
  ((3 <= to_rep4(((a).us_split_discrs3).rec__lexer__token__kind)) and
  (to_rep4(((a).us_split_discrs3).rec__lexer__token__kind) <= 8))

function bool_eq13(a: us_rep2, b: us_rep2) : bool =
  (if ((to_rep4(((a).us_split_discrs3).rec__lexer__token__kind) = to_rep4(((b).us_split_discrs3).rec__lexer__token__kind)) and
  (((to_rep(((a).us_split_fields3).rec__lexer__token__line) = to_rep(((b).us_split_fields3).rec__lexer__token__line)) and
  (to_rep(((a).us_split_fields3).rec__lexer__token__col) = to_rep(((b).us_split_fields3).rec__lexer__token__col))) and
  ((to_rep(((a).us_split_fields3).rec__lexer__token__length) = to_rep(((b).us_split_fields3).rec__lexer__token__length)) and
  (lexer__token__value__pred(a) ->
  (to_rep5(((a).us_split_fields3).rec__lexer__token__value) = to_rep5(((b).us_split_fields3).rec__lexer__token__value)))))) then true else false)

predicate in_range9(rec__lexer__token__kind1: int, a: us_split_discrs2) =
  (rec__lexer__token__kind1 = to_rep4((a).rec__lexer__token__kind))

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic lexer__token__kind__first__bit : int

logic lexer__token__kind__last__bit : int

logic lexer__token__kind__position : int

axiom lexer__token__kind__first__bit_axiom :
  (0 <= lexer__token__kind__first__bit)

axiom lexer__token__kind__last__bit_axiom :
  (lexer__token__kind__first__bit <  lexer__token__kind__last__bit)

axiom lexer__token__kind__position_axiom :
  (0 <= lexer__token__kind__position)

logic lexer__token__line__first__bit : int

logic lexer__token__line__last__bit : int

logic lexer__token__line__position : int

axiom lexer__token__line__first__bit_axiom :
  (0 <= lexer__token__line__first__bit)

axiom lexer__token__line__last__bit_axiom :
  (lexer__token__line__first__bit <  lexer__token__line__last__bit)

axiom lexer__token__line__position_axiom :
  (0 <= lexer__token__line__position)

logic lexer__token__col__first__bit : int

logic lexer__token__col__last__bit : int

logic lexer__token__col__position : int

axiom lexer__token__col__first__bit_axiom :
  (0 <= lexer__token__col__first__bit)

axiom lexer__token__col__last__bit_axiom :
  (lexer__token__col__first__bit <  lexer__token__col__last__bit)

axiom lexer__token__col__position_axiom : (0 <= lexer__token__col__position)

logic lexer__token__length__first__bit : int

logic lexer__token__length__last__bit : int

logic lexer__token__length__position : int

axiom lexer__token__length__first__bit_axiom :
  (0 <= lexer__token__length__first__bit)

axiom lexer__token__length__last__bit_axiom :
  (lexer__token__length__first__bit <  lexer__token__length__last__bit)

axiom lexer__token__length__position_axiom :
  (0 <= lexer__token__length__position)

logic lexer__token__value__first__bit : int

logic lexer__token__value__last__bit : int

logic lexer__token__value__position : int

axiom lexer__token__value__first__bit_axiom :
  (0 <= lexer__token__value__first__bit)

axiom lexer__token__value__last__bit_axiom :
  (lexer__token__value__first__bit <  lexer__token__value__last__bit)

axiom lexer__token__value__position_axiom :
  (0 <= lexer__token__value__position)

logic user_eq10 : us_rep2, us_rep2 -> bool

logic dummy10 : us_rep2

type token__ref = { token__content : us_rep2
}

function token__ref_token__content__projection(a: token__ref) : us_rep2 =
  (a).token__content

logic t__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS5 : int

predicate default_initial_assumption1(temp___expr_197: us_rep2,
  temp___skip_top_level_198: bool) =
  (to_rep4(((temp___expr_197).us_split_discrs3).rec__lexer__token__kind) = 0)

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

type capacity_range

logic capacity_rangeqtint : capacity_range -> int

axiom capacity_rangeqtaxiom :
  (forall i:capacity_range. (0 <= capacity_rangeqtint(i)))

axiom capacity_rangeqtaxiom1 :
  (forall i:capacity_range. (capacity_rangeqtint(i) <= 2147483647))

predicate in_range10(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq14(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq11 : capacity_range, capacity_range -> bool

logic dummy11 : capacity_range

type capacity_range__ref = { capacity_range__content : capacity_range
}

function capacity_range__ref_capacity_range__content__projection(a: capacity_range__ref) : capacity_range =
  (a).capacity_range__content

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_split_discrs4 = {
rec__unbounded_strings__char_vectors__vector__capacity : capacity_range
}

function us_split_discrs_rec__unbounded_strings__char_vectors__vector__capacity__projection(a: us_split_discrs4) : capacity_range =
  (a).rec__unbounded_strings__char_vectors__vector__capacity

type us_split_discrs__ref2 = { us_split_discrs__content2 : us_split_discrs4
}

function us_split_discrs__ref___split_discrs__content__3__projection(a: us_split_discrs__ref2) : us_split_discrs4 =
  (a).us_split_discrs__content2

type us_split_fields4 = { rec__unbounded_strings__char_vectors__vector :
us_main_type1
}

function us_split_fields_rec__unbounded_strings__char_vectors__vector__projection(a: us_split_fields4) : us_main_type1 =
  (a).rec__unbounded_strings__char_vectors__vector

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_discrs5 : us_split_discrs4; us_split_fields5 :
us_split_fields4
}

function us_rep___split_discrs__3__projection(a: us_rep3) : us_split_discrs4 =
  (a).us_split_discrs5

function us_rep___split_fields__3__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic unbounded_strings__char_vectors__vector__capacity__first__bit : int

logic unbounded_strings__char_vectors__vector__capacity__last__bit : int

logic unbounded_strings__char_vectors__vector__capacity__position : int

axiom unbounded_strings__char_vectors__vector__capacity__first__bit_axiom :
  (0 <= unbounded_strings__char_vectors__vector__capacity__first__bit)

axiom unbounded_strings__char_vectors__vector__capacity__last__bit_axiom :
  (unbounded_strings__char_vectors__vector__capacity__first__bit <  unbounded_strings__char_vectors__vector__capacity__last__bit)

axiom unbounded_strings__char_vectors__vector__capacity__position_axiom :
  (0 <= unbounded_strings__char_vectors__vector__capacity__position)

logic user_eq12 : us_rep3, us_rep3 -> bool

logic dummy12 : us_rep3

type unbounded_string__ref = { unbounded_string__content : us_rep3
}

function unbounded_string__ref_unbounded_string__content__projection(a: unbounded_string__ref) : us_rep3 =
  (a).unbounded_string__content

function to_rep6(x: capacity_range) : int = capacity_rangeqtint(x)

logic of_rep6 : int -> capacity_range

axiom inversion_axiom6 :
  (forall x:capacity_range [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:capacity_range [to_rep6(x)]. in_range10(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range10(x) ->
  (to_rep6(of_rep6(x)) = x)))

predicate in_range11(rec__unbounded_strings__char_vectors__vector__capacity1: int,
  a: us_split_discrs4) =
  (rec__unbounded_strings__char_vectors__vector__capacity1 = to_rep6((a).rec__unbounded_strings__char_vectors__vector__capacity))

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic unbounded_strings__char_vectors__vector__capacity__first__bit1 : int

logic unbounded_strings__char_vectors__vector__capacity__last__bit1 : int

logic unbounded_strings__char_vectors__vector__capacity__position1 : int

axiom unbounded_strings__char_vectors__vector__capacity__first__bit_axiom1 :
  (0 <= unbounded_strings__char_vectors__vector__capacity__first__bit1)

axiom unbounded_strings__char_vectors__vector__capacity__last__bit_axiom1 :
  (unbounded_strings__char_vectors__vector__capacity__first__bit1 <  unbounded_strings__char_vectors__vector__capacity__last__bit1)

axiom unbounded_strings__char_vectors__vector__capacity__position_axiom1 :
  (0 <= unbounded_strings__char_vectors__vector__capacity__position1)

logic user_eq13 : us_rep3, us_rep3 -> bool

logic dummy13 : us_rep3

type vector__ref = { vector__content : us_rep3
}

function vector__ref_vector__content__projection(a: vector__ref) : us_rep3 =
  (a).vector__content

logic s__split_discrs : us_split_discrs4

logic attr__ATTRIBUTE_ADDRESS9 : int

logic length2 : us_rep3 -> int

logic length__function_guard : int, us_rep3 -> prop

predicate dynamic_invariant4(temp___expr_314: us_rep3,
  temp___is_init_310: bool, temp___skip_constant_311: bool,
  temp___do_toplevel_312: bool, temp___do_typ_inv_313: bool) =
  ((not (temp___skip_constant_311 = true)) -> in_range11(32,
  (temp___expr_314).us_split_discrs5))

axiom temp___result_320qtdef :
  (forall temp___319:us_rep3. length__function_guard(length2(temp___319),
  temp___319))

predicate default_initial_assumption2(temp___expr_316: us_rep3,
  temp___skip_top_level_317: bool) =
  ((to_rep6(((temp___expr_316).us_split_discrs5).rec__unbounded_strings__char_vectors__vector__capacity) = 32) and
  ((not (temp___skip_top_level_317 = true)) ->
  (length2(temp___expr_316) = 0)))

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

axiom length__post_axiom :
  (forall s:us_rep3 [length2(s)]. (dynamic_invariant4(s, true, true, true,
  true) -> (let result = length2(s) : int in (length__function_guard(result,
  s) -> dynamic_invariant(result, true, false, true, true)))))

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic to_string : us_rep3 -> us_t

logic to_string__function_guard : us_t, us_rep3 -> prop

axiom to_string__post_axiom :
  (forall s:us_rep3 [to_string(s)]. (dynamic_invariant4(s, true, true, true,
  true) -> (forall s1:us_rep3. length__function_guard(length2(s1), s1))))

axiom to_string__post_axiom1 :
  (forall s:us_rep3 [to_string(s)]. (dynamic_invariant4(s, true, true, true,
  true) -> (let result = to_string(s) : us_t in
  (to_string__function_guard(result, s) -> (length1(result) = length2(s))))))

axiom to_string__post_axiom2 :
  (forall s:us_rep3 [to_string(s)]. (dynamic_invariant4(s, true, true, true,
  true) -> (let result = to_string(s) : us_t in
  (to_string__function_guard(result, s) -> (first1(result) = 1)))))

axiom to_string__post_axiom3 :
  (forall s:us_rep3 [to_string(s)]. (dynamic_invariant4(s, true, true, true,
  true) -> (let result = to_string(s) : us_t in
  (to_string__function_guard(result, s) -> dynamic_invariant3(result, true,
  false, true, true)))))

logic tmp : us_t

logic attr__ATTRIBUTE_ADDRESS16 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic str__first : integer

logic str__last : integer

logic attr__ATTRIBUTE_ADDRESS18 : int

predicate dynamic_invariant5(temp___expr_174: int, temp___is_init_170: bool,
  temp___skip_constant_171: bool, temp___do_toplevel_172: bool,
  temp___do_typ_inv_173: bool) = (((temp___is_init_170 = true) or
  (0 <= 8)) -> in_range7(temp___expr_174))

type valued_tokens

predicate in_range12(x: int) = ((3 <= x) and (x <= 8))

function bool_eq15(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq14 : valued_tokens, valued_tokens -> bool

logic dummy14 : valued_tokens

type valued_tokens__ref = { valued_tokens__content : valued_tokens
}

function valued_tokens__ref_valued_tokens__content__projection(a: valued_tokens__ref) : valued_tokens =
  (a).valued_tokens__content

predicate dynamic_invariant6(temp___expr_181: int, temp___is_init_177: bool,
  temp___skip_constant_178: bool, temp___do_toplevel_179: bool,
  temp___do_typ_inv_180: bool) = (((temp___is_init_177 = true) or
  (3 <= 8)) -> in_range12(temp___expr_181))

predicate dynamic_invariant7(temp___expr_188: int, temp___is_init_184: bool,
  temp___skip_constant_185: bool, temp___do_toplevel_186: bool,
  temp___do_typ_inv_187: bool) = (((temp___is_init_184 = true) or
  (0 <= 2147483647)) -> in_range8(temp___expr_188))

type parse_state

predicate in_range13(x: int) = ((0 <= x) and (x <= 9))

function bool_eq16(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq15 : parse_state, parse_state -> bool

logic dummy15 : parse_state

type parse_state__ref = { parse_state__content : parse_state
}

function parse_state__ref_parse_state__content__projection(a: parse_state__ref) : parse_state =
  (a).parse_state__content

predicate dynamic_invariant8(temp___expr_397: int, temp___is_init_393: bool,
  temp___skip_constant_394: bool, temp___do_toplevel_395: bool,
  temp___do_typ_inv_396: bool) = (((temp___is_init_393 = true) or
  (0 <= 9)) -> in_range13(temp___expr_397))

type terminal_states

predicate in_range14(x: int) = ((0 <= x) and (x <= 9))

function bool_eq17(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq16 : terminal_states, terminal_states -> bool

logic dummy16 : terminal_states

type terminal_states__ref = { terminal_states__content : terminal_states
}

function terminal_states__ref_terminal_states__content__projection(a: terminal_states__ref) : terminal_states =
  (a).terminal_states__content

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic lexer__token__kind__first__bit1 : int

logic lexer__token__kind__last__bit1 : int

logic lexer__token__kind__position1 : int

axiom lexer__token__kind__first__bit_axiom1 :
  (0 <= lexer__token__kind__first__bit1)

axiom lexer__token__kind__last__bit_axiom1 :
  (lexer__token__kind__first__bit1 <  lexer__token__kind__last__bit1)

axiom lexer__token__kind__position_axiom1 :
  (0 <= lexer__token__kind__position1)

logic lexer__token__value__first__bit1 : int

logic lexer__token__value__last__bit1 : int

logic lexer__token__value__position1 : int

axiom lexer__token__value__first__bit_axiom1 :
  (0 <= lexer__token__value__first__bit1)

axiom lexer__token__value__last__bit_axiom1 :
  (lexer__token__value__first__bit1 <  lexer__token__value__last__bit1)

axiom lexer__token__value__position_axiom1 :
  (0 <= lexer__token__value__position1)

logic lexer__token__line__first__bit1 : int

logic lexer__token__line__last__bit1 : int

logic lexer__token__line__position1 : int

axiom lexer__token__line__first__bit_axiom1 :
  (0 <= lexer__token__line__first__bit1)

axiom lexer__token__line__last__bit_axiom1 :
  (lexer__token__line__first__bit1 <  lexer__token__line__last__bit1)

axiom lexer__token__line__position_axiom1 :
  (0 <= lexer__token__line__position1)

logic lexer__token__col__first__bit1 : int

logic lexer__token__col__last__bit1 : int

logic lexer__token__col__position1 : int

axiom lexer__token__col__first__bit_axiom1 :
  (0 <= lexer__token__col__first__bit1)

axiom lexer__token__col__last__bit_axiom1 :
  (lexer__token__col__first__bit1 <  lexer__token__col__last__bit1)

axiom lexer__token__col__position_axiom1 :
  (0 <= lexer__token__col__position1)

logic lexer__token__length__first__bit1 : int

logic lexer__token__length__last__bit1 : int

logic lexer__token__length__position1 : int

axiom lexer__token__length__first__bit_axiom1 :
  (0 <= lexer__token__length__first__bit1)

axiom lexer__token__length__last__bit_axiom1 :
  (lexer__token__length__first__bit1 <  lexer__token__length__last__bit1)

axiom lexer__token__length__position_axiom1 :
  (0 <= lexer__token__length__position1)

logic user_eq17 : us_rep2, us_rep2 -> bool

logic dummy17 : us_rep2

type t58b__ref = { t58b__content : us_rep2
}

function t58b__ref_t58b__content__projection(a: t58b__ref) : us_rep2 =
  (a).t58b__content

type t67b__ref = { t67b__content : us_t
}

function t67b__ref_t67b__content__projection(a: t67b__ref) : us_t =
  (a).t67b__content

type t70b__ref = { t70b__content : us_t
}

function t70b__ref_t70b__content__projection(a: t70b__ref) : us_t =
  (a).t70b__content

type t74b__ref = { t74b__content : us_t
}

function t74b__ref_t74b__content__projection(a: t74b__ref) : us_t =
  (a).t74b__content

logic temp___String_Literal_514 : unit -> (int,character) farray

axiom temp___String_Literal_514__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[1])) = 105))

axiom temp___String_Literal_514__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[2])) = 110))

axiom temp___String_Literal_514__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[3])) = 118))

axiom temp___String_Literal_514__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[4])) = 97))

axiom temp___String_Literal_514__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[5])) = 108))

axiom temp___String_Literal_514__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[6])) = 105))

axiom temp___String_Literal_514__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[7])) = 100))

axiom temp___String_Literal_514__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[8])) = 32))

axiom temp___String_Literal_514__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[9])) = 99))

axiom temp___String_Literal_514__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[10])) = 104))

axiom temp___String_Literal_514__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[11])) = 97))

axiom temp___String_Literal_514__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[12])) = 114))

axiom temp___String_Literal_514__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[13])) = 97))

axiom temp___String_Literal_514__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[14])) = 99))

axiom temp___String_Literal_514__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[15])) = 116))

axiom temp___String_Literal_514__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[16])) = 101))

axiom temp___String_Literal_514__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[17])) = 114))

axiom temp___String_Literal_514__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[18])) = 32))

axiom temp___String_Literal_514__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_514(us_void_param)].
  (to_rep1((temp___String_Literal_514(us_void_param)[19])) = 39))

logic temp___String_Literal_516 : unit -> (int,character) farray

axiom temp___String_Literal_516__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_516(us_void_param)].
  (to_rep1((temp___String_Literal_516(us_void_param)[1])) = 39))

logic temp___String_Literal_536 : unit -> (int,character) farray

axiom temp___String_Literal_536__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[1])) = 105))

axiom temp___String_Literal_536__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[2])) = 110))

axiom temp___String_Literal_536__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[3])) = 118))

axiom temp___String_Literal_536__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[4])) = 97))

axiom temp___String_Literal_536__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[5])) = 108))

axiom temp___String_Literal_536__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[6])) = 105))

axiom temp___String_Literal_536__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[7])) = 100))

axiom temp___String_Literal_536__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[8])) = 32))

axiom temp___String_Literal_536__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[9])) = 102))

axiom temp___String_Literal_536__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[10])) = 111))

axiom temp___String_Literal_536__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[11])) = 114))

axiom temp___String_Literal_536__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[12])) = 109))

axiom temp___String_Literal_536__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[13])) = 97))

axiom temp___String_Literal_536__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[14])) = 116))

axiom temp___String_Literal_536__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[15])) = 44))

axiom temp___String_Literal_536__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[16])) = 32))

axiom temp___String_Literal_536__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[17])) = 109))

axiom temp___String_Literal_536__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[18])) = 117))

axiom temp___String_Literal_536__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[19])) = 115))

axiom temp___String_Literal_536__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[20])) = 116))

axiom temp___String_Literal_536__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[21])) = 32))

axiom temp___String_Literal_536__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[22])) = 98))

axiom temp___String_Literal_536__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[23])) = 101))

axiom temp___String_Literal_536__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[24])) = 32))

axiom temp___String_Literal_536__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[25])) = 39))

axiom temp___String_Literal_536__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[26])) = 98))

axiom temp___String_Literal_536__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[27])) = 39))

axiom temp___String_Literal_536__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[28])) = 32))

axiom temp___String_Literal_536__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[29])) = 111))

axiom temp___String_Literal_536__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[30])) = 114))

axiom temp___String_Literal_536__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[31])) = 32))

axiom temp___String_Literal_536__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[32])) = 39))

axiom temp___String_Literal_536__def_axiom32 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[33])) = 120))

axiom temp___String_Literal_536__def_axiom33 :
  (forall us_void_param:unit [temp___String_Literal_536(us_void_param)].
  (to_rep1((temp___String_Literal_536(us_void_param)[34])) = 39))

logic temp___String_Literal_563 : unit -> (int,character) farray

logic temp___String_Literal_568 : unit -> (int,character) farray

axiom temp___String_Literal_568__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[1])) = 113))

axiom temp___String_Literal_568__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[2])) = 117))

axiom temp___String_Literal_568__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[3])) = 111))

axiom temp___String_Literal_568__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[4])) = 116))

axiom temp___String_Literal_568__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[5])) = 101))

axiom temp___String_Literal_568__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[6])) = 100))

axiom temp___String_Literal_568__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[7])) = 32))

axiom temp___String_Literal_568__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[8])) = 115))

axiom temp___String_Literal_568__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[9])) = 121))

axiom temp___String_Literal_568__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[10])) = 109))

axiom temp___String_Literal_568__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[11])) = 98))

axiom temp___String_Literal_568__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[12])) = 111))

axiom temp___String_Literal_568__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[13])) = 108))

axiom temp___String_Literal_568__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[14])) = 32))

axiom temp___String_Literal_568__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[15])) = 105))

axiom temp___String_Literal_568__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[16])) = 115))

axiom temp___String_Literal_568__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[17])) = 32))

axiom temp___String_Literal_568__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[18])) = 110))

axiom temp___String_Literal_568__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[19])) = 111))

axiom temp___String_Literal_568__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[20])) = 116))

axiom temp___String_Literal_568__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[21])) = 32))

axiom temp___String_Literal_568__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[22])) = 116))

axiom temp___String_Literal_568__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[23])) = 101))

axiom temp___String_Literal_568__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[24])) = 114))

axiom temp___String_Literal_568__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[25])) = 109))

axiom temp___String_Literal_568__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[26])) = 105))

axiom temp___String_Literal_568__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[27])) = 110))

axiom temp___String_Literal_568__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[28])) = 97))

axiom temp___String_Literal_568__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[29])) = 116))

axiom temp___String_Literal_568__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[30])) = 101))

axiom temp___String_Literal_568__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_568(us_void_param)].
  (to_rep1((temp___String_Literal_568(us_void_param)[31])) = 100))

logic temp___String_Literal_569 : unit -> (int,character) farray

axiom temp___String_Literal_569__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[1])) = 98))

axiom temp___String_Literal_569__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[2])) = 105))

axiom temp___String_Literal_569__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[3])) = 110))

axiom temp___String_Literal_569__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[4])) = 97))

axiom temp___String_Literal_569__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[5])) = 114))

axiom temp___String_Literal_569__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[6])) = 121))

axiom temp___String_Literal_569__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[7])) = 32))

axiom temp___String_Literal_569__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[8])) = 111))

axiom temp___String_Literal_569__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[9])) = 114))

axiom temp___String_Literal_569__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[10])) = 32))

axiom temp___String_Literal_569__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[11])) = 104))

axiom temp___String_Literal_569__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[12])) = 101))

axiom temp___String_Literal_569__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[13])) = 120))

axiom temp___String_Literal_569__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[14])) = 32))

axiom temp___String_Literal_569__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[15])) = 115))

axiom temp___String_Literal_569__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[16])) = 121))

axiom temp___String_Literal_569__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[17])) = 109))

axiom temp___String_Literal_569__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[18])) = 98))

axiom temp___String_Literal_569__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[19])) = 111))

axiom temp___String_Literal_569__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[20])) = 108))

axiom temp___String_Literal_569__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[21])) = 32))

axiom temp___String_Literal_569__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[22])) = 105))

axiom temp___String_Literal_569__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[23])) = 115))

axiom temp___String_Literal_569__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[24])) = 32))

axiom temp___String_Literal_569__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[25])) = 110))

axiom temp___String_Literal_569__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[26])) = 111))

axiom temp___String_Literal_569__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[27])) = 116))

axiom temp___String_Literal_569__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[28])) = 32))

axiom temp___String_Literal_569__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[29])) = 102))

axiom temp___String_Literal_569__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[30])) = 105))

axiom temp___String_Literal_569__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[31])) = 110))

axiom temp___String_Literal_569__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[32])) = 105))

axiom temp___String_Literal_569__def_axiom32 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[33])) = 115))

axiom temp___String_Literal_569__def_axiom33 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[34])) = 104))

axiom temp___String_Literal_569__def_axiom34 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[35])) = 101))

axiom temp___String_Literal_569__def_axiom35 :
  (forall us_void_param:unit [temp___String_Literal_569(us_void_param)].
  (to_rep1((temp___String_Literal_569(us_void_param)[36])) = 100))

logic temp___String_Literal_570 : unit -> (int,character) farray

axiom temp___String_Literal_570__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[1])) = 115))

axiom temp___String_Literal_570__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[2])) = 116))

axiom temp___String_Literal_570__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[3])) = 114))

axiom temp___String_Literal_570__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[4])) = 105))

axiom temp___String_Literal_570__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[5])) = 110))

axiom temp___String_Literal_570__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[6])) = 103))

axiom temp___String_Literal_570__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[7])) = 32))

axiom temp___String_Literal_570__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[8])) = 108))

axiom temp___String_Literal_570__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[9])) = 105))

axiom temp___String_Literal_570__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[10])) = 116))

axiom temp___String_Literal_570__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[11])) = 101))

axiom temp___String_Literal_570__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[12])) = 114))

axiom temp___String_Literal_570__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[13])) = 97))

axiom temp___String_Literal_570__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[14])) = 108))

axiom temp___String_Literal_570__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[15])) = 32))

axiom temp___String_Literal_570__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[16])) = 105))

axiom temp___String_Literal_570__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[17])) = 115))

axiom temp___String_Literal_570__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[18])) = 32))

axiom temp___String_Literal_570__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[19])) = 110))

axiom temp___String_Literal_570__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[20])) = 111))

axiom temp___String_Literal_570__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[21])) = 116))

axiom temp___String_Literal_570__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[22])) = 32))

axiom temp___String_Literal_570__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[23])) = 116))

axiom temp___String_Literal_570__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[24])) = 101))

axiom temp___String_Literal_570__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[25])) = 114))

axiom temp___String_Literal_570__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[26])) = 109))

axiom temp___String_Literal_570__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[27])) = 105))

axiom temp___String_Literal_570__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[28])) = 110))

axiom temp___String_Literal_570__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[29])) = 97))

axiom temp___String_Literal_570__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[30])) = 116))

axiom temp___String_Literal_570__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[31])) = 101))

axiom temp___String_Literal_570__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_570(us_void_param)].
  (to_rep1((temp___String_Literal_570(us_void_param)[32])) = 100))

predicate dynamic_invariant9(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant10(temp___expr_404: int, temp___is_init_400: bool,
  temp___skip_constant_401: bool, temp___do_toplevel_402: bool,
  temp___do_typ_inv_403: bool) = ((((temp___is_init_400 = true) or
  (0 <= 9)) -> in_range14(temp___expr_404)) and
  ((temp___do_toplevel_402 = true) -> ((temp___is_init_400 = true) ->
  (((2 <= temp___expr_404) and (temp___expr_404 <= 2)) or
  ((9 <= temp___expr_404) and (temp___expr_404 <= 9))))))

predicate dynamic_predicate(temp___408: int) = (((2 <= temp___408) and
  (temp___408 <= 2)) or ((9 <= temp___408) and (temp___408 <= 9)))

predicate dynamic_invariant11(temp___expr_208: int, temp___is_init_204: bool,
  temp___skip_constant_205: bool, temp___do_toplevel_206: bool,
  temp___do_typ_inv_207: bool) = (((temp___is_init_204 = true) or
  (0 <= 2)) -> in_range5(temp___expr_208))

axiom size__post_axiom : (forall f:us_rep1 [size(f)]. in_range2(size(f)))

axiom index__post_axiom : (forall f:us_rep1 [index(f)]. in_range2(index(f)))

predicate dynamic_invariant12(temp___expr_301: int, temp___is_init_297: bool,
  temp___skip_constant_298: bool, temp___do_toplevel_299: bool,
  temp___do_typ_inv_300: bool) = (((temp___is_init_297 = true) or
  (0 <= 2147483647)) -> in_range10(temp___expr_301))

 (* File "lexer.ads", line 79, characters 0-0 *)
goal defqtvc :
  (forall current_read__split_fields:character.
  forall current_read__split_discrs:read_status.
  forall next_read__split_fields:character.
  forall next_read__split_discrs:read_status. forall current_idx:int.
  forall the_file:us_rep1. forall next_idx:int. forall name_table:us_private.
  forall the_filename:int. forall current_line:int. forall current_col:int.
  forall s__split_fields:us_main_type1. forall first_line:int.
  forall first_col:int. forall first_idx:int. forall state:int. forall c:int.
  (dynamic_invariant7(the_filename, true, false, true, true) ->
  ((current_read__attr__constrained = false) ->
  (dynamic_invariant1(current_line, true, false, true, true) ->
  (dynamic_invariant(current_col, true, false, true, true) ->
  (dynamic_invariant(current_idx, true, false, true, true) ->
  ((next_read__attr__constrained = false) -> (dynamic_invariant(next_idx,
  true, false, true, true) ->
  ((forall current_read__split_fields1:character.
   forall current_read__split_discrs1:read_status.
   forall next_read__split_fields1:character.
   forall next_read__split_discrs1:read_status. forall current_idx1:int.
   forall the_file1:us_rep1. forall next_idx1:int.
   forall name_table1:us_private.
   invariant____function_guard(invariant__(the_file1, next_idx1, {
   rec__file_io__read_result__c = current_read__split_fields1 }, {
   rec__file_io__read_result__status = current_read__split_discrs1 },
   current_idx1, name_table1, { rec__file_io__read_result__c =
   next_read__split_fields1 }, { rec__file_io__read_result__status =
   next_read__split_discrs1 }), the_file1, next_idx1, {
   rec__file_io__read_result__c = current_read__split_fields1 }, {
   rec__file_io__read_result__status = current_read__split_discrs1 },
   current_idx1, name_table1, { rec__file_io__read_result__c =
   next_read__split_fields1 }, { rec__file_io__read_result__status =
   next_read__split_discrs1 })) ->
  (((invariant__(the_file, next_idx, { rec__file_io__read_result__c =
  current_read__split_fields }, { rec__file_io__read_result__status =
  current_read__split_discrs }, current_idx, name_table, {
  rec__file_io__read_result__c = next_read__split_fields }, {
  rec__file_io__read_result__status = next_read__split_discrs }) = true) and
  (not (t__attr__constrained = true))) -> (default_initial_assumption2({
  us_split_discrs5 = s__split_discrs; us_split_fields5 = {
  rec__unbounded_strings__char_vectors__vector = s__split_fields } },
  false) -> (dynamic_invariant4({ us_split_discrs5 = s__split_discrs;
  us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields } }, false, false, true, true) ->
  (dynamic_invariant(first_line, false, false, true, true) ->
  (dynamic_invariant(first_col, false, false, true, true) ->
  (dynamic_invariant(first_idx, false, false, true, true) ->
  (dynamic_invariant8(state, false, false, true, true) ->
  (dynamic_invariant2(c, false, false, true, true) ->
  (forall spark__branch:bool. forall current_read__split_fields1:character.
  forall current_read__split_discrs1:read_status.
  forall next_read__split_fields1:character.
  forall next_read__split_discrs1:read_status. forall current_idx1:int.
  forall the_file1:us_rep1. forall next_idx1:int. forall current_line1:int.
  forall current_col1:int. forall s__split_fields1:us_main_type1.
  forall first_line1:int. forall first_col1:int. forall first_idx1:int.
  forall state1:int. forall c1:int.
  ((forall current_read__split_fields2:character.
   forall current_read__split_discrs2:read_status.
   forall next_read__split_fields2:character.
   forall next_read__split_discrs2:read_status. forall current_idx2:int.
   forall the_file2:us_rep1. forall next_idx2:int.
   local_invariant__function_guard(local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx2, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }),
   the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx2, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 })) ->
  ((forall the_file2:us_rep1. size__function_guard(size(the_file2),
   the_file2)) ->
  ((forall the_file2:us_rep1. size__function_guard(size(the_file2),
   the_file2)) ->
  ((forall the_file2:us_rep1. index__function_guard(index(the_file2),
   the_file2)) ->
  ((forall current_read__split_fields2:character.
   forall current_read__split_discrs2:read_status.
   forall next_read__split_fields2:character.
   forall next_read__split_discrs2:read_status. forall current_idx2:int.
   forall the_file2:us_rep1. forall next_idx2:int.
   local_invariant__function_guard(local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx2, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }),
   the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx2, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 })) ->
  ((forall current_read__split_fields2:character.
   forall current_read__split_discrs2:read_status.
   forall next_read__split_fields2:character.
   forall next_read__split_discrs2:read_status. forall current_idx2:int.
   forall the_file2:us_rep1. forall next_idx2:int.
   local_invariant__function_guard(local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx2, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }),
   the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx2, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 })) ->
  ((forall the_file2:us_rep1. size__function_guard(size(the_file2),
   the_file2)) ->
  ((forall the_file2:us_rep1. size__function_guard(size(the_file2),
   the_file2)) ->
  ((forall the_file2:us_rep1. index__function_guard(index(the_file2),
   the_file2)) ->
  ((forall current_read__split_fields2:character.
   forall current_read__split_discrs2:read_status.
   forall next_read__split_fields2:character.
   forall next_read__split_discrs2:read_status. forall current_idx2:int.
   forall the_file2:us_rep1. forall next_idx2:int.
   local_invariant__function_guard(local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx2, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }),
   the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx2, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 })) ->
  ((forall o:us_split_discrs4. forall s__split_fields2:us_main_type1.
   length__function_guard(length2({ us_split_discrs5 = o; us_split_fields5 =
   { rec__unbounded_strings__char_vectors__vector = s__split_fields2 } }), {
   us_split_discrs5 = o; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields2 } })) ->
  ((forall current_read__split_fields2:character.
   forall current_read__split_discrs2:read_status.
   forall next_read__split_fields2:character.
   forall next_read__split_discrs2:read_status. forall current_idx2:int.
   forall the_file2:us_rep1. forall next_idx2:int.
   local_invariant__function_guard(local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx2, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }),
   the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx2, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 })) ->
  ((forall s__split_fields2:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields2 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields2 } })) ->
  ((forall s__split_fields2:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields2 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields2 } })) ->
  ((exists current_idx2:int. ((current_idx2 = current_idx) and
   (exists current_read__split_fields2:character.
   exists current_read__split_discrs2:read_status.
   exists next_read__split_fields2:character.
   exists next_read__split_discrs2:read_status. exists current_idx3:int.
   exists the_file2:us_rep1. exists next_idx2:int. exists current_line2:int.
   exists current_col2:int. ((((local_invariant(the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2
   }) = true) and (current_idx2 <= current_idx3)) and
   (((dynamic_invariant(next_idx2, true, true, true, true) and
   dynamic_invariant1(current_line2, true, true, true, true)) and
   dynamic_invariant(current_col2, true, true, true, true)) and
   dynamic_invariant(current_idx3, true, true, true, true))) and
   (exists temp___506:int.
   ((to_rep3(current_read__split_discrs2) = temp___506) and
   (exists spark__branch1:bool.
   ((spark__branch1 = (if (temp___506 = 1) then true else (if (temp___506 = 2) then true else false))) and
   ((not (spark__branch1 = true)) and
   (exists o:int. ((to_rep3(current_read__split_discrs2) = o) and (let o1 =
   local_invariant(the_file2, next_idx2, { rec__file_io__read_result__c =
   current_read__split_fields2 }, { rec__file_io__read_result__status =
   current_read__split_discrs2 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields2 }, {
   rec__file_io__read_result__status = next_read__split_discrs2 }) : bool in
   ((local_invariant__function_guard(o1, the_file2, next_idx2, {
   rec__file_io__read_result__c = current_read__split_fields2 }, {
   rec__file_io__read_result__status = current_read__split_discrs2 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields2 },
   { rec__file_io__read_result__status = next_read__split_discrs2 }) and
   ((o1 = true) <-> (((((((not (current_read__attr__constrained = true)) and
   (not (next_read__attr__constrained = true))) and
   (current_idx3 <= size(the_file2))) and (next_idx2 <= size(the_file2))) and
   (next_idx2 = index(the_file2))) and (current_idx3 <= next_idx2)) and
   (if (to_rep3(next_read__split_discrs2) = 0) then ((to_rep3(current_read__split_discrs2) = 0) and
   (current_idx3 = (next_idx2 - 1))) else (current_idx3 = next_idx2))))) and
   (exists current_read__split_fields3:character.
   exists current_read__split_discrs3:read_status.
   exists next_read__split_fields3:character.
   exists next_read__split_discrs3:read_status. exists current_idx4:int.
   exists the_file3:us_rep1. exists next_idx3:int. exists current_line3:int.
   exists current_col3:int. exists s__split_fields2:us_main_type1.
   exists first_line2:int. exists first_col2:int. exists first_idx2:int.
   exists c2:int. (((local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx4, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3
   }) = true) and (to_rep3(current_read__split_discrs3) = 0)) and
   ((((((((((dynamic_invariant2(c2, false, true, true, true) and
   dynamic_invariant(first_line2, false, true, true, true)) and
   dynamic_invariant(next_idx3, true, true, true, true)) and
   dynamic_invariant(first_col2, false, true, true, true)) and
   dynamic_invariant(first_idx2, false, true, true, true)) and
   dynamic_invariant1(current_line3, true, true, true, true)) and
   dynamic_invariant(current_col3, true, true, true, true)) and
   dynamic_invariant(current_idx4, true, true, true, true)) and
   dynamic_invariant8(state, false, true, true, true)) and
   dynamic_invariant4({ us_split_discrs5 = s__split_discrs;
   us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields2 } }, false, true, true, true)) and
   (exists temp___535:int. ((temp___535 = current_idx4) and
   ((first_line1 = current_line3) and ((first_col1 = current_col3) and
   ((first_idx1 = current_idx4) and
   (exists o2:int. ((to_rep1(current_read__split_fields3) = o2) and
   ((c1 = o2) and (let o3 = s__split_discrs : us_split_discrs4 in
   (exists s__split_fields3:us_main_type1. (((length2({ us_split_discrs5 =
   o3; us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields3 } }) = 0) and dynamic_invariant4({ us_split_discrs5 = o3;
   us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields3 } }, true, true, true, true)) and
   (exists current_idx5:int. ((current_idx5 = current_idx4) and
   (((((local_invariant(the_file1, next_idx1, {
   rec__file_io__read_result__c = current_read__split_fields1 }, {
   rec__file_io__read_result__status = current_read__split_discrs1 },
   current_idx1, { rec__file_io__read_result__c = next_read__split_fields1 },
   { rec__file_io__read_result__status = next_read__split_discrs1
   }) = true) and (length2({ us_split_discrs5 = s__split_discrs;
   us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields1 } }) = (length2({ us_split_discrs5 = s__split_discrs;
   us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields3 } }) + 1))) and
   (if (to_rep3(current_read__split_discrs1) = 0) then (current_idx1 = (current_idx5 + 1)) else (current_idx1 = current_idx5))) and
   ((((dynamic_invariant(next_idx1, true, true, true, true) and
   dynamic_invariant1(current_line1, true, true, true, true)) and
   dynamic_invariant(current_col1, true, true, true, true)) and
   dynamic_invariant(current_idx1, true, true, true, true)) and
   dynamic_invariant4({ us_split_discrs5 = s__split_discrs;
   us_split_fields5 = { rec__unbounded_strings__char_vectors__vector =
   s__split_fields1 } }, true, true, true, true))) and
   (exists spark__branch2:bool.
   ((spark__branch2 = (if (c1 = 40) then true else false)) and
   ((not (spark__branch2 = true)) and
   (exists spark__branch3:bool.
   ((spark__branch3 = (if (c1 = 41) then true else false)) and
   ((not (spark__branch3 = true)) and
   (exists spark__branch4:bool.
   ((spark__branch4 = (if (c1 = 124) then true else false)) and
   (if (spark__branch4 = true) then ((state1 = 1) and
   (spark__branch = spark__branch4)) else (exists spark__branch5:bool.
                                          ((spark__branch5 = (if (c1 = 35) then true else false)) and
                                          (if (spark__branch5 = true) then ((state1 = 5) and
                                          (spark__branch = spark__branch5)) else 
                                          (exists spark__branch6:bool.
                                          ((spark__branch6 = andb((if (48 <= c1) then true else false),
                                          (if (c1 <= 57) then true else false))) and
                                          (if (spark__branch6 = true) then ((state1 = 3) and
                                          (spark__branch = spark__branch6)) else 
                                          (exists spark__branch7:bool.
                                          ((spark__branch7 = orb(orb(andb((if (65 <= c1) then true else false),
                                          (if (c1 <= 90) then true else false)),
                                          andb((if (97 <= c1) then true else false),
                                          (if (c1 <= 122) then true else false))),
                                          orb(orb(orb(orb(orb(orb(andb((if (33 <= c1) then true else false),
                                          (if (c1 <= 33) then true else false)),
                                          andb((if (36 <= c1) then true else false),
                                          (if (c1 <= 38) then true else false))),
                                          andb((if (42 <= c1) then true else false),
                                          (if (c1 <= 43) then true else false))),
                                          andb((if (45 <= c1) then true else false),
                                          (if (c1 <= 47) then true else false))),
                                          andb((if (60 <= c1) then true else false),
                                          (if (c1 <= 64) then true else false))),
                                          andb((if (94 <= c1) then true else false),
                                          (if (c1 <= 95) then true else false))),
                                          andb((if (126 <= c1) then true else false),
                                          (if (c1 <= 126) then true else false))))) and
                                          (if (spark__branch7 = true) then ((state1 = 0) and
                                          (spark__branch = spark__branch7)) else ((spark__branch = (if (c1 = 34) then true else false)) and
                                          ((spark__branch = true) and
                                          (state1 = 8))))))))))))))))))))))))))))))))))))))))))))))))))) ->
  (forall spark__branch1:bool. forall current_read__split_fields2:character.
  forall current_read__split_discrs2:read_status.
  forall next_read__split_fields2:character.
  forall next_read__split_discrs2:read_status. forall current_idx2:int.
  forall the_file2:us_rep1. forall next_idx2:int.
  forall s__split_fields2:us_main_type1. forall state2:int.
  ((forall the_file3:us_rep1. size__function_guard(size(the_file3),
   the_file3)) ->
  ((forall the_file3:us_rep1. size__function_guard(size(the_file3),
   the_file3)) ->
  ((forall the_file3:us_rep1. index__function_guard(index(the_file3),
   the_file3)) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall the_file3:us_rep1. size__function_guard(size(the_file3),
   the_file3)) ->
  ((forall the_file3:us_rep1. size__function_guard(size(the_file3),
   the_file3)) ->
  ((forall the_file3:us_rep1. index__function_guard(index(the_file3),
   the_file3)) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall current_read__split_fields3:character.
   forall current_read__split_discrs3:read_status.
   forall next_read__split_fields3:character.
   forall next_read__split_discrs3:read_status. forall current_idx3:int.
   forall the_file3:us_rep1. forall next_idx3:int.
   local_invariant__function_guard(local_invariant(the_file3, next_idx3, {
   rec__file_io__read_result__c = current_read__split_fields3 }, {
   rec__file_io__read_result__status = current_read__split_discrs3 },
   current_idx3, { rec__file_io__read_result__c = next_read__split_fields3 },
   { rec__file_io__read_result__status = next_read__split_discrs3 }),
   the_file3, next_idx3, { rec__file_io__read_result__c =
   current_read__split_fields3 }, { rec__file_io__read_result__status =
   current_read__split_discrs3 }, current_idx3, {
   rec__file_io__read_result__c = next_read__split_fields3 }, {
   rec__file_io__read_result__status = next_read__split_discrs3 })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((exists o:int. ((to_rep3(current_read__split_discrs1) = o) and
   (if (o = 0) then (exists o1:int.
                    ((to_rep1(current_read__split_fields1) = o1) and
                    (exists c2:int. ((c2 = o1) and
                    (((not ((not (state1 = 6)) -> (state1 = 7))) or (let o2 =
                    { us_split_discrs5 = s__split_discrs; us_split_fields5 =
                    { rec__unbounded_strings__char_vectors__vector =
                    s__split_fields1 } } : us_rep3 in (let o3 = length2(o2)
                    : int in (length__function_guard(o3, o2) and
                    dynamic_invariant(o3, true, false, true, true))))) and
                    (let o2 = local_invariant(the_file1, next_idx1, {
                    rec__file_io__read_result__c =
                    current_read__split_fields1 }, {
                    rec__file_io__read_result__status =
                    current_read__split_discrs1 }, current_idx1, {
                    rec__file_io__read_result__c = next_read__split_fields1
                    }, { rec__file_io__read_result__status =
                    next_read__split_discrs1 }) : bool in
                    ((local_invariant__function_guard(o2, the_file1,
                    next_idx1, { rec__file_io__read_result__c =
                    current_read__split_fields1 }, {
                    rec__file_io__read_result__status =
                    current_read__split_discrs1 }, current_idx1, {
                    rec__file_io__read_result__c = next_read__split_fields1
                    }, { rec__file_io__read_result__status =
                    next_read__split_discrs1 }) and ((o2 = true) <->
                    (((((((not (current_read__attr__constrained = true)) and
                    (not (next_read__attr__constrained = true))) and
                    (current_idx1 <= size(the_file1))) and
                    (next_idx1 <= size(the_file1))) and
                    (next_idx1 = index(the_file1))) and
                    (current_idx1 <= next_idx1)) and
                    (if (to_rep3(next_read__split_discrs1) = 0) then ((to_rep3(current_read__split_discrs1) = 0) and
                    (current_idx1 = (next_idx1 - 1))) else (current_idx1 = next_idx1))))) and
                    (let o3 = { us_split_discrs5 = s__split_discrs;
                    us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields1 } } : us_rep3 in (let o4 = length2(o3)
                    : int in ((length__function_guard(o4, o3) and
                    dynamic_invariant(o4, true, false, true, true)) and
                    (exists o5:int.
                    ((to_rep3(current_read__split_discrs1) = o5) and
                    (exists current_read__split_fields3:character.
                    exists current_read__split_discrs3:read_status.
                    exists next_read__split_fields3:character.
                    exists next_read__split_discrs3:read_status.
                    exists current_idx3:int. exists the_file3:us_rep1.
                    exists next_idx3:int. exists current_line2:int.
                    exists current_col2:int.
                    exists s__split_fields3:us_main_type1. exists state3:int.
                    exists c3:int.
                    (((((((to_rep3(current_read__split_discrs3) = 0) and
                    (notb(andb((if in_range14(state3) then true else false),
                    (if (((2 <= state3) and (state3 <= 2)) or
                    ((9 <= state3) and
                    (state3 <= 9))) then true else false))) = true)) and
                    (1 <= length2({ us_split_discrs5 = s__split_discrs;
                    us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields3 } }))) and
                    (first_idx1 <= current_idx3)) and
                    (local_invariant(the_file3, next_idx3, {
                    rec__file_io__read_result__c =
                    current_read__split_fields3 }, {
                    rec__file_io__read_result__status =
                    current_read__split_discrs3 }, current_idx3, {
                    rec__file_io__read_result__c = next_read__split_fields3
                    }, { rec__file_io__read_result__status =
                    next_read__split_discrs3 }) = true)) and
                    (((state3 = 6) or (state3 = 7)) -> (2 <= length2({
                    us_split_discrs5 = s__split_discrs; us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields3 } })))) and
                    (((((((dynamic_invariant2(c3, false, true, true,
                    true) and dynamic_invariant(next_idx3, true, true, true,
                    true)) and dynamic_invariant1(current_line2, true, true,
                    true, true)) and dynamic_invariant(current_col2, true,
                    true, true, true)) and dynamic_invariant(current_idx3,
                    true, true, true, true)) and dynamic_invariant8(state3,
                    false, true, true, true)) and dynamic_invariant4({
                    us_split_discrs5 = s__split_discrs; us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields3 } }, false, true, true, true)) and
                    (exists temp___555:int. ((temp___555 = current_idx3) and
                    ((exists spark__branch2:bool.
                     ((spark__branch2 = (if (state3 = 3) then true else false)) and
                     (if (spark__branch2 = true) then ((((((((((exists spark__branch3:bool.
                                                               ((spark__branch3 = andb((if (48 <= c3) then true else false),
                                                               (if (c3 <= 57) then true else false))) and
                                                               ((not (spark__branch3 = true)) and
                                                               ((spark__branch1 = (if (c3 = 46) then true else false)) and
                                                               (not (spark__branch1 = true)))))) and
                     (current_read__split_fields2 = current_read__split_fields3)) and
                     (current_read__split_discrs2 = current_read__split_discrs3)) and
                     (next_read__split_fields2 = next_read__split_fields3)) and
                     (next_read__split_discrs2 = next_read__split_discrs3)) and
                     (current_idx2 = current_idx3)) and
                     (the_file2 = the_file3)) and
                     (next_idx2 = next_idx3)) and
                     (s__split_fields2 = s__split_fields3)) and
                     (state2 = state3)) else (exists spark__branch3:bool.
                                             ((spark__branch3 = (if (state3 = 4) then true else false)) and
                                             (if (spark__branch3 = true) then (((((((((((spark__branch1 = andb((if (48 <= c3) then true else false),
                                             (if (c3 <= 57) then true else false))) and
                                             (not (spark__branch1 = true))) and
                                             (current_read__split_fields2 = current_read__split_fields3)) and
                                             (current_read__split_discrs2 = current_read__split_discrs3)) and
                                             (next_read__split_fields2 = next_read__split_fields3)) and
                                             (next_read__split_discrs2 = next_read__split_discrs3)) and
                                             (current_idx2 = current_idx3)) and
                                             (the_file2 = the_file3)) and
                                             (next_idx2 = next_idx3)) and
                                             (s__split_fields2 = s__split_fields3)) and
                                             (state2 = state3)) else 
                                             (exists spark__branch4:bool.
                                             ((spark__branch4 = (if (state3 = 5) then true else false)) and
                                             ((not (spark__branch4 = true)) and
                                             (exists spark__branch5:bool.
                                             ((spark__branch5 = (if (state3 = 6) then true else false)) and
                                             (if (spark__branch5 = true) then (((((((((((spark__branch1 = andb((if (48 <= c3) then true else false),
                                             (if (c3 <= 49) then true else false))) and
                                             (not (spark__branch1 = true))) and
                                             (current_read__split_fields2 = current_read__split_fields3)) and
                                             (current_read__split_discrs2 = current_read__split_discrs3)) and
                                             (next_read__split_fields2 = next_read__split_fields3)) and
                                             (next_read__split_discrs2 = next_read__split_discrs3)) and
                                             (current_idx2 = current_idx3)) and
                                             (the_file2 = the_file3)) and
                                             (next_idx2 = next_idx3)) and
                                             (s__split_fields2 = s__split_fields3)) and
                                             (state2 = state3)) else 
                                             (exists spark__branch6:bool.
                                             ((spark__branch6 = (if (state3 = 7) then true else false)) and
                                             (if (spark__branch6 = true) then (((((((((((spark__branch1 = orb(orb(andb((if (48 <= c3) then true else false),
                                             (if (c3 <= 57) then true else false)),
                                             andb((if (65 <= c3) then true else false),
                                             (if (c3 <= 70) then true else false))),
                                             andb((if (97 <= c3) then true else false),
                                             (if (c3 <= 102) then true else false)))) and
                                             (not (spark__branch1 = true))) and
                                             (current_read__split_fields2 = current_read__split_fields3)) and
                                             (current_read__split_discrs2 = current_read__split_discrs3)) and
                                             (next_read__split_fields2 = next_read__split_fields3)) and
                                             (next_read__split_discrs2 = next_read__split_discrs3)) and
                                             (current_idx2 = current_idx3)) and
                                             (the_file2 = the_file3)) and
                                             (next_idx2 = next_idx3)) and
                                             (s__split_fields2 = s__split_fields3)) and
                                             (state2 = state3)) else 
                                             (exists spark__branch7:bool.
                                             ((spark__branch7 = (if (state3 = 0) then true else false)) and
                                             (if (spark__branch7 = true) then (((((((((((spark__branch1 = orb(orb(orb(andb((if (65 <= c3) then true else false),
                                             (if (c3 <= 90) then true else false)),
                                             andb((if (97 <= c3) then true else false),
                                             (if (c3 <= 122) then true else false))),
                                             andb((if (48 <= c3) then true else false),
                                             (if (c3 <= 57) then true else false))),
                                             orb(orb(orb(orb(orb(orb(andb((if (33 <= c3) then true else false),
                                             (if (c3 <= 33) then true else false)),
                                             andb((if (36 <= c3) then true else false),
                                             (if (c3 <= 38) then true else false))),
                                             andb((if (42 <= c3) then true else false),
                                             (if (c3 <= 43) then true else false))),
                                             andb((if (45 <= c3) then true else false),
                                             (if (c3 <= 47) then true else false))),
                                             andb((if (60 <= c3) then true else false),
                                             (if (c3 <= 64) then true else false))),
                                             andb((if (94 <= c3) then true else false),
                                             (if (c3 <= 95) then true else false))),
                                             andb((if (126 <= c3) then true else false),
                                             (if (c3 <= 126) then true else false))))) and
                                             (not (spark__branch1 = true))) and
                                             (current_read__split_fields2 = current_read__split_fields3)) and
                                             (current_read__split_discrs2 = current_read__split_discrs3)) and
                                             (next_read__split_fields2 = next_read__split_fields3)) and
                                             (next_read__split_discrs2 = next_read__split_discrs3)) and
                                             (current_idx2 = current_idx3)) and
                                             (the_file2 = the_file3)) and
                                             (next_idx2 = next_idx3)) and
                                             (s__split_fields2 = s__split_fields3)) and
                                             (state2 = state3)) else 
                                             (exists spark__branch8:bool.
                                             ((spark__branch8 = (if (state3 = 1) then true else false)) and
                                             (if (spark__branch8 = true) then ((spark__branch1 = (if (c3 = 124) then true else false)) and
                                             ((spark__branch1 = true) and
                                             (exists current_idx4:int.
                                             ((current_idx4 = current_idx3) and
                                             (exists current_line3:int.
                                             exists current_col3:int.
                                             (((((local_invariant(the_file2,
                                             next_idx2, {
                                             rec__file_io__read_result__c =
                                             current_read__split_fields2 }, {
                                             rec__file_io__read_result__status =
                                             current_read__split_discrs2 },
                                             current_idx2, {
                                             rec__file_io__read_result__c =
                                             next_read__split_fields2 }, {
                                             rec__file_io__read_result__status =
                                             next_read__split_discrs2
                                             }) = true) and (length2({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields2 }
                                             }) = (length2({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields3 } }) + 1))) and
                                             (if (to_rep3(current_read__split_discrs2) = 0) then (current_idx2 = (current_idx4 + 1)) else (current_idx2 = current_idx4))) and
                                             ((((dynamic_invariant(next_idx2,
                                             true, true, true, true) and
                                             dynamic_invariant1(current_line3,
                                             true, true, true, true)) and
                                             dynamic_invariant(current_col3,
                                             true, true, true, true)) and
                                             dynamic_invariant(current_idx2,
                                             true, true, true, true)) and
                                             dynamic_invariant4({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields2 } }, true,
                                             true, true, true))) and
                                             (state2 = 2))))))) else 
                                             (exists spark__branch9:bool.
                                             ((spark__branch9 = (if (state3 = 8) then true else false)) and
                                             ((spark__branch9 = true) and
                                             (exists spark__branch10:bool.
                                             ((spark__branch10 = (if (c3 = 34) then true else false)) and
                                             ((spark__branch10 = true) and
                                             (exists o6:bool.
                                             ((exists o7:int.
                                              ((to_rep3(next_read__split_discrs3) = o7) and
                                              (if (o7 = 0) then (exists o8:int.
                                                                ((to_rep1(next_read__split_fields3) = o8) and
                                                                (o6 = (if (o8 = 34) then true else false)))) else (o6 = false)))) and
                                             ((spark__branch1 = o6) and
                                             ((not (spark__branch1 = true)) and
                                             (exists current_idx4:int.
                                             ((current_idx4 = current_idx3) and
                                             (exists current_line3:int.
                                             exists current_col3:int.
                                             (((((local_invariant(the_file2,
                                             next_idx2, {
                                             rec__file_io__read_result__c =
                                             current_read__split_fields2 }, {
                                             rec__file_io__read_result__status =
                                             current_read__split_discrs2 },
                                             current_idx2, {
                                             rec__file_io__read_result__c =
                                             next_read__split_fields2 }, {
                                             rec__file_io__read_result__status =
                                             next_read__split_discrs2
                                             }) = true) and (length2({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields2 }
                                             }) = (length2({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields3 } }) + 1))) and
                                             (if (to_rep3(current_read__split_discrs2) = 0) then (current_idx2 = (current_idx4 + 1)) else (current_idx2 = current_idx4))) and
                                             ((((dynamic_invariant(next_idx2,
                                             true, true, true, true) and
                                             dynamic_invariant1(current_line3,
                                             true, true, true, true)) and
                                             dynamic_invariant(current_col3,
                                             true, true, true, true)) and
                                             dynamic_invariant(current_idx2,
                                             true, true, true, true)) and
                                             dynamic_invariant4({
                                             us_split_discrs5 =
                                             s__split_discrs;
                                             us_split_fields5 = {
                                             rec__unbounded_strings__char_vectors__vector =
                                             s__split_fields2 } }, true,
                                             true, true, true))) and
                                             (state2 = 9)))))))))))))))))))))))))))))))))))) or
                    (exists current_read__split_fields4:character.
                    exists current_read__split_discrs4:read_status.
                    exists next_read__split_fields4:character.
                    exists next_read__split_discrs4:read_status.
                    exists current_idx4:int. exists the_file4:us_rep1.
                    exists next_idx4:int. exists current_line3:int.
                    exists current_col3:int.
                    ((exists spark__branch2:bool.
                     ((spark__branch2 = (if (state3 = 3) then true else false)) and
                     (if (spark__branch2 = true) then ((((((((((exists spark__branch3:bool.
                                                               ((spark__branch3 = andb((if (48 <= c3) then true else false),
                                                               (if (c3 <= 57) then true else false))) and
                                                               (if (spark__branch3 = true) then ((spark__branch1 = spark__branch3) and
                                                               (state2 = state3)) else ((spark__branch1 = (if (c3 = 46) then true else false)) and
                                                               ((spark__branch1 = true) and
                                                               (state2 = 4)))))) and
                     (current_read__split_fields4 = current_read__split_fields3)) and
                     (current_read__split_discrs4 = current_read__split_discrs3)) and
                     (next_read__split_fields4 = next_read__split_fields3)) and
                     (next_read__split_discrs4 = next_read__split_discrs3)) and
                     (current_idx4 = current_idx3)) and
                     (the_file4 = the_file3)) and
                     (next_idx4 = next_idx3)) and
                     (current_line3 = current_line2)) and
                     (current_col3 = current_col2)) else (exists spark__branch3:bool.
                                                         ((spark__branch3 = (if (state3 = 4) then true else false)) and
                                                         (if (spark__branch3 = true) then ((((((((((((spark__branch1 = andb((if (48 <= c3) then true else false),
                                                         (if (c3 <= 57) then true else false))) and
                                                         (spark__branch1 = true)) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) and
                                                         (state2 = state3)) else 
                                                         (exists spark__branch4:bool.
                                                         ((spark__branch4 = (if (state3 = 5) then true else false)) and
                                                         (if (spark__branch4 = true) then (((((((((
                                                         (exists spark__branch5:bool.
                                                         ((spark__branch5 = (if (c3 = 98) then true else false)) and
                                                         (if (spark__branch5 = true) then ((state2 = 6) and
                                                         (spark__branch1 = spark__branch5)) else ((spark__branch1 = (if (c3 = 120) then true else false)) and
                                                         (state2 = 7))))) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) else (
                                                         (exists spark__branch5:bool.
                                                         ((spark__branch5 = (if (state3 = 6) then true else false)) and
                                                         (if (spark__branch5 = true) then (((((((((((spark__branch1 = andb((if (48 <= c3) then true else false),
                                                         (if (c3 <= 49) then true else false))) and
                                                         (spark__branch1 = true)) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) else 
                                                         (exists spark__branch6:bool.
                                                         ((spark__branch6 = (if (state3 = 7) then true else false)) and
                                                         (if (spark__branch6 = true) then (((((((((((spark__branch1 = orb(orb(andb((if (48 <= c3) then true else false),
                                                         (if (c3 <= 57) then true else false)),
                                                         andb((if (65 <= c3) then true else false),
                                                         (if (c3 <= 70) then true else false))),
                                                         andb((if (97 <= c3) then true else false),
                                                         (if (c3 <= 102) then true else false)))) and
                                                         (spark__branch1 = true)) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) else 
                                                         (exists spark__branch7:bool.
                                                         ((spark__branch7 = (if (state3 = 0) then true else false)) and
                                                         (if (spark__branch7 = true) then (((((((((((spark__branch1 = orb(orb(orb(andb((if (65 <= c3) then true else false),
                                                         (if (c3 <= 90) then true else false)),
                                                         andb((if (97 <= c3) then true else false),
                                                         (if (c3 <= 122) then true else false))),
                                                         andb((if (48 <= c3) then true else false),
                                                         (if (c3 <= 57) then true else false))),
                                                         orb(orb(orb(orb(orb(orb(andb((if (33 <= c3) then true else false),
                                                         (if (c3 <= 33) then true else false)),
                                                         andb((if (36 <= c3) then true else false),
                                                         (if (c3 <= 38) then true else false))),
                                                         andb((if (42 <= c3) then true else false),
                                                         (if (c3 <= 43) then true else false))),
                                                         andb((if (45 <= c3) then true else false),
                                                         (if (c3 <= 47) then true else false))),
                                                         andb((if (60 <= c3) then true else false),
                                                         (if (c3 <= 64) then true else false))),
                                                         andb((if (94 <= c3) then true else false),
                                                         (if (c3 <= 95) then true else false))),
                                                         andb((if (126 <= c3) then true else false),
                                                         (if (c3 <= 126) then true else false))))) and
                                                         (spark__branch1 = true)) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) else 
                                                         (exists spark__branch8:bool.
                                                         ((spark__branch8 = (if (state3 = 1) then true else false)) and
                                                         (if (spark__branch8 = true) then (((((((((((spark__branch1 = (if (c3 = 124) then true else false)) and
                                                         (not (spark__branch1 = true))) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)) else 
                                                         (exists spark__branch9:bool.
                                                         ((spark__branch9 = (if (state3 = 8) then true else false)) and
                                                         ((spark__branch9 = true) and
                                                         (exists spark__branch10:bool.
                                                         ((spark__branch10 = (if (c3 = 34) then true else false)) and
                                                         (if (spark__branch10 = true) then 
                                                         (exists o6:bool.
                                                         ((exists o7:int.
                                                          ((to_rep3(next_read__split_discrs3) = o7) and
                                                          (if (o7 = 0) then 
                                                          (exists o8:int.
                                                          ((to_rep1(next_read__split_fields3) = o8) and
                                                          (o6 = (if (o8 = 34) then true else false)))) else (o6 = false)))) and
                                                         ((spark__branch1 = o6) and
                                                         ((spark__branch1 = true) and
                                                         (exists current_idx5:int.
                                                         ((current_idx5 = current_idx3) and
                                                         (exists next_idx5:int.
                                                         ((next_idx5 = next_idx3) and
                                                         (exists next_read__split_fields5:character.
                                                         ((next_read__split_fields5 = next_read__split_fields3) and
                                                         (exists next_read__split_discrs5:read_status.
                                                         ((next_read__split_discrs5 = next_read__split_discrs3) and
                                                         (((((local_invariant(the_file4,
                                                         next_idx4, {
                                                         rec__file_io__read_result__c =
                                                         current_read__split_fields4
                                                         }, {
                                                         rec__file_io__read_result__status =
                                                         current_read__split_discrs4
                                                         }, current_idx4, {
                                                         rec__file_io__read_result__c =
                                                         next_read__split_fields4
                                                         }, {
                                                         rec__file_io__read_result__status =
                                                         next_read__split_discrs4
                                                         }) = true) and
                                                         (bool_eq9({
                                                         us_split_discrs1 = {
                                                         rec__file_io__read_result__status =
                                                         current_read__split_discrs4
                                                         };
                                                         us_split_fields1 = {
                                                         rec__file_io__read_result__c =
                                                         current_read__split_fields4
                                                         } }, {
                                                         us_split_discrs1 = {
                                                         rec__file_io__read_result__status =
                                                         next_read__split_discrs5
                                                         };
                                                         us_split_fields1 = {
                                                         rec__file_io__read_result__c =
                                                         next_read__split_fields5
                                                         } }) = true)) and
                                                         (current_idx4 = next_idx5)) and
                                                         (current_idx5 <= current_idx4)) and
                                                         (((dynamic_invariant(next_idx4,
                                                         true, true, true,
                                                         true) and
                                                         dynamic_invariant1(current_line3,
                                                         true, true, true,
                                                         true)) and
                                                         dynamic_invariant(current_col3,
                                                         true, true, true,
                                                         true)) and
                                                         dynamic_invariant(current_idx4,
                                                         true, true, true,
                                                         true))))))))))))))) else ((((((((((spark__branch1 = spark__branch10) and
                                                         (current_read__split_fields4 = current_read__split_fields3)) and
                                                         (current_read__split_discrs4 = current_read__split_discrs3)) and
                                                         (next_read__split_fields4 = next_read__split_fields3)) and
                                                         (next_read__split_discrs4 = next_read__split_discrs3)) and
                                                         (current_idx4 = current_idx3)) and
                                                         (the_file4 = the_file3)) and
                                                         (next_idx4 = next_idx3)) and
                                                         (current_line3 = current_line2)) and
                                                         (current_col3 = current_col2)))))))))))))))))))) and
                                                         (state2 = state3))))))))))) and
                    (exists current_idx5:int.
                    ((current_idx5 = current_idx4) and
                    (exists current_line4:int. exists current_col4:int.
                    (((((local_invariant(the_file2, next_idx2, {
                    rec__file_io__read_result__c =
                    current_read__split_fields2 }, {
                    rec__file_io__read_result__status =
                    current_read__split_discrs2 }, current_idx2, {
                    rec__file_io__read_result__c = next_read__split_fields2
                    }, { rec__file_io__read_result__status =
                    next_read__split_discrs2 }) = true) and (length2({
                    us_split_discrs5 = s__split_discrs; us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields2 } }) = (length2({ us_split_discrs5 =
                    s__split_discrs; us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields3 } }) + 1))) and
                    (if (to_rep3(current_read__split_discrs2) = 0) then (current_idx2 = (current_idx5 + 1)) else (current_idx2 = current_idx5))) and
                    ((((dynamic_invariant(next_idx2, true, true, true,
                    true) and dynamic_invariant1(current_line4, true, true,
                    true, true)) and dynamic_invariant(current_col4, true,
                    true, true, true)) and dynamic_invariant(current_idx2,
                    true, true, true, true)) and dynamic_invariant4({
                    us_split_discrs5 = s__split_discrs; us_split_fields5 = {
                    rec__unbounded_strings__char_vectors__vector =
                    s__split_fields2 } }, true, true, true, true))) and
                    (exists o6:int.
                    ((to_rep3(current_read__split_discrs2) = o6) and
                    (not (o6 = 0)))))))))))))))))))))))))))) else ((((((((((spark__branch1 = spark__branch) and
   (current_read__split_fields2 = current_read__split_fields1)) and
   (current_read__split_discrs2 = current_read__split_discrs1)) and
   (next_read__split_fields2 = next_read__split_fields1)) and
   (next_read__split_discrs2 = next_read__split_discrs1)) and
   (current_idx2 = current_idx1)) and (the_file2 = the_file1)) and
   (next_idx2 = next_idx1)) and (s__split_fields2 = s__split_fields1)) and
   (state2 = state1))))) ->
  ((forall s__split_fields3:us_main_type1. length__function_guard(length2({
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } }), {
   us_split_discrs5 = s__split_discrs; us_split_fields5 = {
   rec__unbounded_strings__char_vectors__vector = s__split_fields3 } })) ->
  ((((state2 = 2) or ((state2 = 7) or (state2 = 6))) -> (2 <= length2({
  us_split_discrs5 = s__split_discrs; us_split_fields5 = {
  rec__unbounded_strings__char_vectors__vector = s__split_fields2 } }))) ->
  (let o = { us_split_discrs5 = s__split_discrs; us_split_fields5 = {
  rec__unbounded_strings__char_vectors__vector = s__split_fields2 } }
  : us_rep3 in (let lexer__read_token__B_6__tmp__assume = to_string(o)
  : us_t in ((forall o1:us_rep3. length__function_guard(length2(o1), o1)) ->
  ((to_string__function_guard(lexer__read_token__B_6__tmp__assume, o) and
  (dynamic_invariant3(lexer__read_token__B_6__tmp__assume, true, false, true,
  true) and ((length1(lexer__read_token__B_6__tmp__assume) = length2(o)) and
  (first1(lexer__read_token__B_6__tmp__assume) = 1)))) ->
  ((lexer__read_token__B_6__tmp__assume = tmp) -> (dynamic_invariant3(tmp,
  true, false, true, true) ->
  (forall o1:int. ((if (orb(orb((if (state2 = 0) then true else false),
  (if (state2 = 1) then true else false)),
  (if (state2 = 2) then true else false)) = true) then (o1 = 3) else (if (state2 = 3) then (o1 = 4) else (if (state2 = 4) then (o1 = 5) else (if (orb((if (state2 = 5) then true else false),
  (if (state2 = 7) then true else false)) = true) then (o1 = 7) else (if (state2 = 6) then (o1 = 6) else (o1 = 8)))))) ->
  (forall k:int. ((k = o1) -> (dynamic_invariant6(k, true, false, true,
  true) ->
  (forall lexer__read_token__B_6__str__assume:us_t.
  ((if (orb(orb((if (state2 = 0) then true else false),
  (if (state2 = 3) then true else false)),
  (if (state2 = 4) then true else false)) = true) then (lexer__read_token__B_6__str__assume = tmp) else (if (orb((if (state2 = 1) then true else false),
  (if (state2 = 8) then true else false)) = true) then (let temp___558 =
  last1(tmp) : int in (let o2 = (first1(tmp) + 1) : int in (in_range1(o2) and
  (((o2 <= temp___558) -> (((first1(tmp) <= o2) and (o2 <= last1(tmp))) and
  ((first1(tmp) <= temp___558) and (temp___558 <= last1(tmp))))) and
  (let temp___559 = of_array(to_array(tmp), o2, temp___558) : us_t in
  (lexer__read_token__B_6__str__assume = of_array(to_array(temp___559),
  first1(temp___559),
  last1(temp___559)))))))) else (if (orb((if (state2 = 2) then true else false),
  (if (state2 = 9) then true else false)) = true) then (let o2 =
  (last1(tmp) - 1) : int in (in_range1(o2) and (let o3 = (first1(tmp) + 1)
  : int in (in_range1(o3) and (((o3 <= o2) -> (((first1(tmp) <= o3) and
  (o3 <= last1(tmp))) and ((first1(tmp) <= o2) and (o2 <= last1(tmp))))) and
  (let temp___562 = of_array(to_array(tmp), o3, o2) : us_t in
  (lexer__read_token__B_6__str__assume = of_array(to_array(temp___562),
  first1(temp___562),
  last1(temp___562))))))))) else (if (state2 = 5) then (lexer__read_token__B_6__str__assume = of_array(temp___String_Literal_563(void),
  1, 0)) else (let temp___565 = last1(tmp) : int in (let o2 =
  (first1(tmp) + 2) : int in (in_range1(o2) and (((o2 <= temp___565) ->
  (((first1(tmp) <= o2) and (o2 <= last1(tmp))) and
  ((first1(tmp) <= temp___565) and (temp___565 <= last1(tmp))))) and
  (let temp___566 = of_array(to_array(tmp), o2, temp___565) : us_t in
  (lexer__read_token__B_6__str__assume = of_array(to_array(temp___566),
  first1(temp___566), last1(temp___566)))))))))))) ->
  (forall str:(int,character) farray.
  ((str = to_array(lexer__read_token__B_6__str__assume)) ->
  ((to_rep2(str__first) = first1(lexer__read_token__B_6__str__assume)) ->
  ((to_rep2(str__last) = last1(lexer__read_token__B_6__str__assume)) ->
  (dynamic_property(1, 2147483647, to_rep2(str__first),
  to_rep2(str__last)) ->
  (forall o2:int. ((to_rep2(str__last) = o2) ->
  (forall o3:int. ((to_rep2(str__first) = o3) ->
  (not (t__attr__constrained = true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
