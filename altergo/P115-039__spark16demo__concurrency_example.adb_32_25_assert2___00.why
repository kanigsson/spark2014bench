(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

type map__ref1 = { map__content1 : (int,integer) farray
}

logic slide1 : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq1 :
  (forall a:(int,integer) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq6(a: (int,integer) farray, a__first: int, a__last: int,
  b: (int,integer) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep1((a[temp___idx_154])) = to_rep1((b[((b__first - a__first) + temp___idx_154)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep1((a[temp___idx_154])) = to_rep1((b[((b__first - a__first) + temp___idx_154)]))))))))

logic all_zeroes : (int,integer) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic all_ones : (int,integer) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq7 : us_rep, us_rep -> bool

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type time__ref = { time__content : us_rep
}

function time__ref_time__content__projection(a: time__ref) : us_rep =
  (a).time__content

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_rep1

logic bool_eq8 : us_rep1, us_rep1 -> bool

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic user_eq5 : us_rep1, us_rep1 -> bool

logic dummy5 : us_rep1

type time_span__ref = { time_span__content : us_rep1
}

function time_span__ref_time_span__content__projection(a: time_span__ref) : us_rep1 =
  (a).time_span__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

logic milliseconds : int -> us_rep1

logic milliseconds__function_guard : us_rep1, int -> prop

logic oadd : us_rep, us_rep1 -> us_rep

logic oadd__function_guard : us_rep, us_rep, us_rep1 -> prop

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic line_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic line_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic page_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic page_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

type tdata_tD1

logic tdata_tD1qtint : tdata_tD1 -> int

axiom tdata_tD1qtaxiom : (forall i:tdata_tD1. (1 <= tdata_tD1qtint(i)))

axiom tdata_tD1qtaxiom1 : (forall i:tdata_tD1. (tdata_tD1qtint(i) <= 1000))

predicate in_range4(x: int) = ((1 <= x) and (x <= 1000))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq6 : tdata_tD1, tdata_tD1 -> bool

logic dummy6 : tdata_tD1

type tdata_tD1__ref = { tdata_tD1__content : tdata_tD1
}

function tdata_tD1__ref_tdata_tD1__content__projection(a: tdata_tD1__ref) : tdata_tD1 =
  (a).tdata_tD1__content

logic concurrency_example__all_zeroes__aggregate_def : int -> (int,integer) farray

logic concurrency_example__all_ones__aggregate_def : int -> (int,integer) farray

logic temp___String_Literal_242 : unit -> (int,character) farray

axiom temp___String_Literal_242__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[1])) = 97))

axiom temp___String_Literal_242__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[2])) = 108))

axiom temp___String_Literal_242__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[3])) = 108))

axiom temp___String_Literal_242__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[4])) = 32))

axiom temp___String_Literal_242__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[5])) = 122))

axiom temp___String_Literal_242__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[6])) = 101))

axiom temp___String_Literal_242__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[7])) = 114))

axiom temp___String_Literal_242__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[8])) = 111))

axiom temp___String_Literal_242__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[9])) = 101))

axiom temp___String_Literal_242__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_242(us_void_param)].
  (to_rep((temp___String_Literal_242(us_void_param)[10])) = 115))

logic temp___String_Literal_243 : unit -> (int,character) farray

axiom temp___String_Literal_243__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[1])) = 97))

axiom temp___String_Literal_243__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[2])) = 108))

axiom temp___String_Literal_243__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[3])) = 108))

axiom temp___String_Literal_243__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[4])) = 32))

axiom temp___String_Literal_243__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[5])) = 111))

axiom temp___String_Literal_243__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[6])) = 110))

axiom temp___String_Literal_243__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[7])) = 101))

axiom temp___String_Literal_243__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_243(us_void_param)].
  (to_rep((temp___String_Literal_243(us_void_param)[8])) = 115))

logic temp___String_Literal_244 : unit -> (int,character) farray

axiom temp___String_Literal_244__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[1])) = 100))

axiom temp___String_Literal_244__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[2])) = 97))

axiom temp___String_Literal_244__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[3])) = 116))

axiom temp___String_Literal_244__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[4])) = 97))

axiom temp___String_Literal_244__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[5])) = 32))

axiom temp___String_Literal_244__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[6])) = 114))

axiom temp___String_Literal_244__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[7])) = 97))

axiom temp___String_Literal_244__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[8])) = 99))

axiom temp___String_Literal_244__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[9])) = 101))

axiom temp___String_Literal_244__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[10])) = 32))

axiom temp___String_Literal_244__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[11])) = 100))

axiom temp___String_Literal_244__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[12])) = 101))

axiom temp___String_Literal_244__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[13])) = 116))

axiom temp___String_Literal_244__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[14])) = 101))

axiom temp___String_Literal_244__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[15])) = 99))

axiom temp___String_Literal_244__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[16])) = 116))

axiom temp___String_Literal_244__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[17])) = 101))

axiom temp___String_Literal_244__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_244(us_void_param)].
  (to_rep((temp___String_Literal_244(us_void_param)[18])) = 100))

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range2(temp___expr_46))

predicate dynamic_invariant2(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range3(temp___expr_74))

predicate dynamic_invariant3(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

axiom all_zeroes__def_axiom :
  (all_zeroes = concurrency_example__all_zeroes__aggregate_def(0))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 0)

axiom def_axiom :
  (forall temp___156:int. (dynamic_invariant(temp___156, true, true, true,
  true) ->
  (forall temp___157:int.
  ((concurrency_example__all_zeroes__aggregate_def(temp___156)[temp___157]) = rliteral))))

axiom all_ones__def_axiom :
  (all_ones = concurrency_example__all_ones__aggregate_def((- 2147483648)))

logic rliteral1 : integer

axiom rliteral_axiom1 : (integerqtint(rliteral1) = (- 2147483648))

axiom def_axiom1 :
  (forall temp___159:int. (dynamic_invariant(temp___159, true, true, true,
  true) ->
  (forall temp___160:int.
  ((concurrency_example__all_ones__aggregate_def(temp___159)[temp___160]) = rliteral1))))

type count

logic countqtint : count -> int

axiom countqtaxiom : (forall i:count. (0 <= countqtint(i)))

axiom countqtaxiom1 : (forall i:count. (countqtint(i) <= 2147483647))

predicate in_range5(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq7 : count, count -> bool

logic dummy7 : count

type count__ref = { count__content : count
}

function count__ref_count__content__projection(a: count__ref) : count =
  (a).count__content

predicate dynamic_invariant4(temp___expr_214: int, temp___is_init_210: bool,
  temp___skip_constant_211: bool, temp___do_toplevel_212: bool,
  temp___do_typ_inv_213: bool) = (((temp___is_init_210 = true) or
  (0 <= 2147483647)) -> in_range5(temp___expr_214))

axiom line_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant4(line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

axiom page_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant4(page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

 (* File "concurrency_example.ads", line 9, characters 0-0 *)
goal defqtvc :
  (forall data:(int,integer) farray.
  ((concurrency_example__all_zeroes__aggregate_def(0) = all_zeroes) ->
  ((concurrency_example__all_ones__aggregate_def((- 2147483648)) = all_ones) ->
  (forall o:us_rep.
  (forall deadline:us_rep. ((deadline = o) ->
  (forall standard_in:us_private. forall file_system:us_private.
  forall standard_out:us_private. forall standard_err:us_private.
  forall current_in:us_private. forall current_out:us_private.
  forall current_err:us_private.
  (forall value:(int,integer) farray. ((value = data) ->
  (forall standard_in1:us_private. forall file_system1:us_private.
  forall standard_out1:us_private. forall standard_err1:us_private.
  forall current_in1:us_private. forall current_out1:us_private.
  forall current_err1:us_private. (((line_length(standard_in, file_system,
  standard_out, standard_err, current_in, current_out,
  current_err) = line_length(standard_in1, file_system1, standard_out1,
  standard_err1, current_in1, current_out1, current_err1)) and
  (page_length(standard_in, file_system, standard_out, standard_err,
  current_in, current_out, current_err) = page_length(standard_in1,
  file_system1, standard_out1, standard_err1, current_in1, current_out1,
  current_err1))) -> ((bool_eq6(value, 1, 1000, all_zeroes, 1,
  1000) = true) or (bool_eq6(value, 1, 1000, all_ones, 1, 1000) = true)))))))))))))
