(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type small_index

logic small_indexqtint : small_index -> int

axiom small_indexqtaxiom : (forall i:small_index. (1 <= small_indexqtint(i)))

axiom small_indexqtaxiom1 :
  (forall i:small_index. (small_indexqtint(i) <= 100))

predicate in_range2(x: int) = ((1 <= x) and (x <= 100))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : small_index, small_index -> bool

logic dummy1 : small_index

type small_index__ref = { small_index__content : small_index
}

function small_index__ref_small_index__content__projection(a: small_index__ref) : small_index =
  (a).small_index__content

type map

type map__ref = { map__content : map
}

logic get : map, int, int -> integer

logic set : map, int, int, integer -> map

axiom Select_eq :
  (forall m:map.
  (forall i:int.
  (forall j:int.
  (forall a:integer [set(m, i, j, a)]. (get(set(m, i, j, a), i, j) = a)))))

axiom Select_neq :
  (forall m:map.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:integer [get(set(m, i, j, a), i2, j2)| set(m, i, j, a), get(m,
  i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get(set(m, i, j, a), i2,
  j2) = get(m, i2, j2)))))))

logic slide : map, int, int, int, int -> map

axiom slide_def :
  (forall a:map.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get(slide(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get(slide(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

function bool_eq3(a: map, a__first: int, a__last: int, a__first_2: int,
  a__last_2: int, b: map, b__first: int, b__last: int, b__first_2: int,
  b__last_2: int) : bool =
  (if (((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (if (a__first_2 <= a__last_2) then ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))) else (b__last_2 <  b__first_2))) and
  (forall temp___idx_170:int. forall temp___idx_171:int.
  ((((a__first <= temp___idx_170) and (temp___idx_170 <= a__last)) and
  ((a__first_2 <= temp___idx_171) and (temp___idx_171 <= a__last_2))) ->
  (to_rep(get(a, temp___idx_170, temp___idx_171)) = to_rep(get(b,
  ((b__first - a__first) + temp___idx_170),
  ((b__first_2 - a__first_2) + temp___idx_171))))))) then true else false)

axiom bool_eq_rev :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  (b__first_2 <= b__last_2)))))

axiom bool_eq_rev4 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))))))

axiom bool_eq_rev5 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first_2 <= a__last_2)) ->
  (b__last_2 <  b__first_2)))))

axiom bool_eq_rev6 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq3(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) ->
  (forall temp___idx_170:int. forall temp___idx_171:int.
  ((((a__first <= temp___idx_170) and (temp___idx_170 <= a__last)) and
  ((a__first_2 <= temp___idx_171) and (temp___idx_171 <= a__last_2))) ->
  (to_rep(get(a, temp___idx_170, temp___idx_171)) = to_rep(get(b,
  ((b__first - a__first) + temp___idx_170),
  ((b__first_2 - a__first_2) + temp___idx_171)))))))))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type t1

logic first1 : t1 -> integer

logic last1 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first1(mk1(f, l))) = f))))

axiom mk_def3 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last1(mk1(f, l))) = l))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : map; rt : t; rt_2 : t1
}

function to_array(a: us_t) : map = (a).elts

function of_array(a: map, f: int, l: int, f2: int, l2: int) : us_t = { elts =
  a; rt = mk(f, l); rt_2 = mk1(f2, l2) }

function first2(a: us_t) : int = to_rep(first((a).rt))

function last2(a: us_t) : int = to_rep(last((a).rt))

function length(a: us_t) : int =
  (if (first2(a) <= last2(a)) then ((last2(a) - first2(a)) + 1) else 0)

function first_2(a: us_t) : int = to_rep(first1((a).rt_2))

function last_2(a: us_t) : int = to_rep(last1((a).rt_2))

function length_2(a: us_t) : int =
  (if (first_2(a) <= last_2(a)) then ((last_2(a) - first_2(a)) + 1) else 0)

predicate dynamic_property2(range_first1: int, range_last1: int, f1: int,
  l1: int, range_first2: int, range_last2: int, f2: int, l2: int) =
  (dynamic_property(range_first1, range_last1, f1, l1) and
  dynamic_property1(range_first2, range_last2, f2, l2))

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq4(x: us_t, y: us_t) : bool = bool_eq3((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), to_rep(first1((x).rt_2)),
  to_rep(last1((x).rt_2)), (y).elts, to_rep(first((y).rt)),
  to_rep(last((y).rt)), to_rep(first1((y).rt_2)), to_rep(last1((y).rt_2)))

logic user_eq2 : us_t, us_t -> bool

logic dummy2 : us_t

type small_matrix__ref = { small_matrix__content : us_t
}

function small_matrix__ref_small_matrix__content__projection(a: small_matrix__ref) : us_t =
  (a).small_matrix__content

type array_type__ref = { array_type__content : us_t
}

function array_type__ref_array_type__content__4__projection(a: array_type__ref) : us_t =
  (a).array_type__content

logic sum : us_t -> int

logic sum__function_guard : int, us_t -> prop

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

type array_type__ref1 = { array_type__content1 : us_t
}

function array_type__ref_array_type__content__5__projection(a: array_type__ref1) : us_t =
  (a).array_type__content1

logic fold : us_t, int -> int

logic fold__function_guard : int, us_t, int -> prop

predicate dynamic_invariant1(temp___expr_476: us_t, temp___is_init_472: bool,
  temp___skip_constant_473: bool, temp___do_toplevel_474: bool,
  temp___do_typ_inv_475: bool) = ((not (temp___skip_constant_473 = true)) ->
  dynamic_property2(1, 100, first2(temp___expr_476), last2(temp___expr_476),
  1, 100, first_2(temp___expr_476), last_2(temp___expr_476)))

axiom sum__post_axiom :
  (forall a:us_t [sum(a)]. (dynamic_invariant1(a, true, true, true, true) ->
  (let result = sum(a) : int in (sum__function_guard(result, a) ->
  dynamic_invariant(result, true, false, true, true)))))

axiom sum__def_axiom :
  (forall a:us_t [sum(a)]. (dynamic_invariant1(a, true, true, true, true) ->
  (forall a1:us_t. fold__function_guard(fold(of_array(to_array(a1),
  first2(a1), last2(a1), first_2(a1), last_2(a1)), 0), of_array(to_array(a1),
  first2(a1), last2(a1), first_2(a1), last_2(a1)), 0))))

axiom sum__def_axiom1 :
  (forall a:us_t [sum(a)]. (dynamic_invariant1(a, true, true, true, true) ->
  (sum(a) = fold(of_array(to_array(a), first2(a), last2(a), first_2(a),
  last_2(a)), 0))))

logic a : us_t

logic attr__ATTRIBUTE_ADDRESS : int

logic c : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic sum_cst : int, int -> bool

logic sum_cst__function_guard : bool, int, int -> prop

type array_type__ref2 = { array_type__content2 : us_t
}

function array_type__ref_array_type__content__6__projection(a1: array_type__ref2) : us_t =
  (a1).array_type__content2

type index_1

logic index_1qtint : index_1 -> int

axiom index_1qtaxiom : (forall i:index_1. (1 <= index_1qtint(i)))

axiom index_1qtaxiom1 : (forall i:index_1. (index_1qtint(i) <= 100))

predicate in_range3(x: int) = ((1 <= x) and (x <= 100))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : index_1, index_1 -> bool

logic dummy3 : index_1

type index_1__ref = { index_1__content : index_1
}

function index_1__ref_index_1__content__3__projection(a1: index_1__ref) : index_1 =
  (a1).index_1__content

type index_2

logic index_2qtint : index_2 -> int

axiom index_2qtaxiom : (forall i:index_2. (1 <= index_2qtint(i)))

axiom index_2qtaxiom1 : (forall i:index_2. (index_2qtint(i) <= 100))

predicate in_range4(x: int) = ((1 <= x) and (x <= 100))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : index_2, index_2 -> bool

logic dummy4 : index_2

type index_2__ref = { index_2__content : index_2
}

function index_2__ref_index_2__content__3__projection(a1: index_2__ref) : index_2 =
  (a1).index_2__content

type element_out

logic element_outqtint : element_out -> int

axiom element_outqtaxiom :
  (forall i:element_out. ((- 2147483648) <= element_outqtint(i)))

axiom element_outqtaxiom1 :
  (forall i:element_out. (element_outqtint(i) <= 2147483647))

predicate in_range5(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : element_out, element_out -> bool

logic dummy5 : element_out

type element_out__ref = { element_out__content : element_out
}

function element_out__ref_element_out__content__5__projection(a1: element_out__ref) : element_out =
  (a1).element_out__content

function to_rep1(x: element_out) : int = element_outqtint(x)

logic of_rep1 : int -> element_out

axiom inversion_axiom1 :
  (forall x:element_out [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:element_out [to_rep1(x)]. in_range5(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range5(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map1

type map__ref1 = { map__content1 : map1
}

logic get1 : map1, int, int -> element_out

logic set1 : map1, int, int, element_out -> map1

axiom Select_eq1 :
  (forall m:map1.
  (forall i:int.
  (forall j:int.
  (forall a1:element_out [set1(m, i, j, a1)]. (get1(set1(m, i, j, a1), i,
  j) = a1)))))

axiom Select_neq1 :
  (forall m:map1.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a1:element_out [get1(set1(m, i, j, a1), i2, j2)| set1(m, i, j, a1),
  get1(m, i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get1(set1(m, i, j,
  a1), i2, j2) = get1(m, i2, j2)))))))

logic slide1 : map1, int, int, int, int -> map1

axiom slide_def1 :
  (forall a1:map1.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get1(slide1(a1, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get1(slide1(a1, old_first, new_first, old_first_2,
  new_first_2), i, j) = get1(a1, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

function bool_eq8(a1: map1, a__first: int, a__last: int, a__first_2: int,
  a__last_2: int, b: map1, b__first: int, b__last: int, b__first_2: int,
  b__last_2: int) : bool =
  (if (((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (if (a__first_2 <= a__last_2) then ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))) else (b__last_2 <  b__first_2))) and
  (forall temp___idx_176:int. forall temp___idx_177:int.
  ((((a__first <= temp___idx_176) and (temp___idx_176 <= a__last)) and
  ((a__first_2 <= temp___idx_177) and (temp___idx_177 <= a__last_2))) ->
  (to_rep1(get1(a1, temp___idx_176, temp___idx_177)) = to_rep1(get1(b,
  ((b__first - a__first) + temp___idx_176),
  ((b__first_2 - a__first_2) + temp___idx_177))))))) then true else false)

axiom bool_eq_rev7 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev8 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev9 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev10 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  (b__first_2 <= b__last_2)))))

axiom bool_eq_rev11 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))))))

axiom bool_eq_rev12 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first_2 <= a__last_2)) ->
  (b__last_2 <  b__first_2)))))

axiom bool_eq_rev13 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq8(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) ->
  (forall temp___idx_176:int. forall temp___idx_177:int.
  ((((a__first <= temp___idx_176) and (temp___idx_176 <= a__last)) and
  ((a__first_2 <= temp___idx_177) and (temp___idx_177 <= a__last_2))) ->
  (to_rep1(get1(a1, temp___idx_176, temp___idx_177)) = to_rep1(get1(b,
  ((b__first - a__first) + temp___idx_176),
  ((b__first_2 - a__first_2) + temp___idx_177)))))))))

type t2

logic first3 : t2 -> integer

logic last3 : t2 -> integer

logic mk2 : int, int -> t2

axiom mk_def4 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first3(mk2(f, l))) = f))))

axiom mk_def5 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last3(mk2(f, l))) = l))))

predicate dynamic_property3(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type t3

logic first4 : t3 -> integer

logic last4 : t3 -> integer

logic mk3 : int, int -> t3

axiom mk_def6 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first4(mk3(f, l))) = f))))

axiom mk_def7 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last4(mk3(f, l))) = l))))

predicate dynamic_property4(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range4(low) and in_range4(high)))))

type us_t1 = { elts1 : map1; rt1 : t2; rt_21 : t3
}

function to_array1(a1: us_t1) : map1 = (a1).elts1

function of_array1(a1: map1, f: int, l: int, f2: int, l2: int) : us_t1 = {
  elts1 = a1; rt1 = mk2(f, l); rt_21 = mk3(f2, l2) }

function first5(a1: us_t1) : int = to_rep(first3((a1).rt1))

function last5(a1: us_t1) : int = to_rep(last3((a1).rt1))

function length1(a1: us_t1) : int =
  (if (first5(a1) <= last5(a1)) then ((last5(a1) - first5(a1)) + 1) else 0)

function first_21(a1: us_t1) : int = to_rep(first4((a1).rt_21))

function last_21(a1: us_t1) : int = to_rep(last4((a1).rt_21))

function length_21(a1: us_t1) : int =
  (if (first_21(a1) <= last_21(a1)) then ((last_21(a1) - first_21(a1)) + 1) else 0)

predicate dynamic_property5(range_first1: int, range_last1: int, f1: int,
  l1: int, range_first2: int, range_last2: int, f2: int, l2: int) =
  (dynamic_property3(range_first1, range_last1, f1, l1) and
  dynamic_property4(range_first2, range_last2, f2, l2))

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq9(x: us_t1, y: us_t1) : bool = bool_eq8((x).elts1,
  to_rep(first3((x).rt1)), to_rep(last3((x).rt1)), to_rep(first4((x).rt_21)),
  to_rep(last4((x).rt_21)), (y).elts1, to_rep(first3((y).rt1)),
  to_rep(last3((y).rt1)), to_rep(first4((y).rt_21)),
  to_rep(last4((y).rt_21)))

logic user_eq6 : us_t1, us_t1 -> bool

logic dummy6 : us_t1

type acc_array__ref = { acc_array__content : us_t1
}

function acc_array__ref_acc_array__content__2__projection(a1: acc_array__ref) : us_t1 =
  (a1).acc_array__content

logic fold1 : us_t, int -> us_t1

logic fold__function_guard1 : us_t1, us_t, int -> prop

type index_11

logic index_1qtint1 : index_11 -> int

axiom index_1qtaxiom2 : (forall i:index_11. (1 <= index_1qtint1(i)))

axiom index_1qtaxiom3 : (forall i:index_11. (index_1qtint1(i) <= 100))

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq7 : index_11, index_11 -> bool

logic dummy7 : index_11

type index_1__ref1 = { index_1__content1 : index_11
}

function index_1__ref_index_1__content__projection(a1: index_1__ref1) : index_11 =
  (a1).index_1__content1

predicate dynamic_invariant2(temp___expr_448: int, temp___is_init_444: bool,
  temp___skip_constant_445: bool, temp___do_toplevel_446: bool,
  temp___do_typ_inv_447: bool) = (((temp___is_init_444 = true) or
  (1 <= 100)) -> in_range6(temp___expr_448))

type index_21

logic index_2qtint1 : index_21 -> int

axiom index_2qtaxiom2 : (forall i:index_21. (1 <= index_2qtint1(i)))

axiom index_2qtaxiom3 : (forall i:index_21. (index_2qtint1(i) <= 100))

predicate in_range7(x: int) = ((1 <= x) and (x <= 100))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : index_21, index_21 -> bool

logic dummy8 : index_21

type index_2__ref1 = { index_2__content1 : index_21
}

function index_2__ref_index_2__content__projection(a1: index_2__ref1) : index_21 =
  (a1).index_2__content1

predicate dynamic_invariant3(temp___expr_455: int, temp___is_init_451: bool,
  temp___skip_constant_452: bool, temp___do_toplevel_453: bool,
  temp___do_typ_inv_454: bool) = (((temp___is_init_451 = true) or
  (1 <= 100)) -> in_range7(temp___expr_455))

axiom sum_cst__def_axiom : fold__function_guard1(fold1(of_array(to_array(a),
  first2(a), last2(a), first_2(a), last_2(a)), 0), of_array(to_array(a),
  first2(a), last2(a), first_2(a), last_2(a)), 0)

axiom sum_cst__def_axiom1 :
  (forall i:int. forall j:int [sum_cst(i, j)]. ((sum_cst(i, j) = true) ->
  (to_rep1(get1(to_array1(fold1(of_array(to_array(a), first2(a), last2(a),
  first_2(a), last_2(a)), 0)), i,
  j)) = ((c * (((i - first2(a)) * length_2(a)) + (j - first_2(a)))) + c))))

axiom sum_cst__def_axiom2 :
  (forall i:int. forall j:int [sum_cst(i, j)].
  ((to_rep1(get1(to_array1(fold1(of_array(to_array(a), first2(a), last2(a),
  first_2(a), last_2(a)), 0)), i,
  j)) = ((c * (((i - first2(a)) * length_2(a)) + (j - first_2(a)))) + c)) ->
  (sum_cst(i, j) = true)))

type element_out1

logic element_outqtint1 : element_out1 -> int

axiom element_outqtaxiom2 :
  (forall i:element_out1. ((- 100) <= element_outqtint1(i)))

axiom element_outqtaxiom3 :
  (forall i:element_out1. (element_outqtint1(i) <= 100))

predicate in_range8(x: int) = (((- 100) <= x) and (x <= 100))

function bool_eq12(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : element_out1, element_out1 -> bool

logic dummy9 : element_out1

type element_out__ref1 = { element_out__content1 : element_out1
}

function element_out__ref_element_out__content__3__projection(a1: element_out__ref1) : element_out1 =
  (a1).element_out__content1

predicate dynamic_invariant4(temp___expr_483: int, temp___is_init_479: bool,
  temp___skip_constant_480: bool, temp___do_toplevel_481: bool,
  temp___do_typ_inv_482: bool) = (((temp___is_init_479 = true) or
  ((- 100) <= 100)) -> in_range8(temp___expr_483))

logic value : int -> int

logic value__function_guard : int, int -> prop

type my_small

logic my_smallqtint : my_small -> int

axiom my_smallqtaxiom : (forall i:my_small. ((- 100) <= my_smallqtint(i)))

axiom my_smallqtaxiom1 : (forall i:my_small. (my_smallqtint(i) <= 100))

predicate in_range9(x: int) = (((- 100) <= x) and (x <= 100))

function bool_eq13(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq10 : my_small, my_small -> bool

logic dummy10 : my_small

type my_small__ref = { my_small__content : my_small
}

function my_small__ref_my_small__content__projection(a1: my_small__ref) : my_small =
  (a1).my_small__content

predicate dynamic_invariant5(temp___expr_203: int, temp___is_init_199: bool,
  temp___skip_constant_200: bool, temp___do_toplevel_201: bool,
  temp___do_typ_inv_202: bool) = (((temp___is_init_199 = true) or
  ((- 100) <= 100)) -> in_range9(temp___expr_203))

axiom value__post_axiom :
  (forall x:int [value(x)]. (dynamic_invariant(x, true, true, true, true) ->
  (let result = value(x) : int in (value__function_guard(result, x) ->
  dynamic_invariant5(result, true, false, true, true)))))

predicate dynamic_invariant6(temp___expr_210: int, temp___is_init_206: bool,
  temp___skip_constant_207: bool, temp___do_toplevel_208: bool,
  temp___do_typ_inv_209: bool) = (((temp___is_init_206 = true) or
  (1 <= 100)) -> in_range2(temp___expr_210))

logic in_range10 : us_t, int, int, int -> bool

logic in_range__function_guard : bool, us_t, int, int, int -> prop

axiom in_range__post_axiom :
  (forall a1:us_t.
  (forall x:int. forall i:int. forall j:int [in_range10(a1, x, i, j)].
  (((((dynamic_invariant1(a1, true, true, true, true) and
  dynamic_invariant(x, true, true, true, true)) and dynamic_invariant2(i,
  true, true, true, true)) and dynamic_invariant3(j, true, true, true,
  true)) and (((first2(a1) <= i) and (i <= last2(a1))) and
  ((first_2(a1) <= j) and (j <= last_2(a1))))) -> (let result =
  in_range10(a1, x, i, j) : bool in (in_range__function_guard(result, a1, x,
  i, j) -> ((result = true) -> ((- 2147483548) <= x)))))))

axiom in_range__post_axiom1 :
  (forall a1:us_t.
  (forall x:int. forall i:int. forall j:int [in_range10(a1, x, i, j)].
  (((((dynamic_invariant1(a1, true, true, true, true) and
  dynamic_invariant(x, true, true, true, true)) and dynamic_invariant2(i,
  true, true, true, true)) and dynamic_invariant3(j, true, true, true,
  true)) and (((first2(a1) <= i) and (i <= last2(a1))) and
  ((first_2(a1) <= j) and (j <= last_2(a1))))) -> (let result =
  in_range10(a1, x, i, j) : bool in (in_range__function_guard(result, a1, x,
  i, j) -> ((result = true) -> (x <= 2147483547)))))))

axiom in_range__def_axiom :
  (forall a1:us_t.
  (forall x:int. forall i:int. forall j:int [in_range10(a1, x, i, j)].
  ((in_range10(a1, x, i, j) = true) ->
  (((- 100) * (((i - first2(a1)) * length_2(a1)) + (j - first_2(a1)))) <= x))))

axiom in_range__def_axiom1 :
  (forall a1:us_t.
  (forall x:int. forall i:int. forall j:int [in_range10(a1, x, i, j)].
  ((in_range10(a1, x, i, j) = true) ->
  (x <= (100 * (((i - first2(a1)) * length_2(a1)) + (j - first_2(a1))))))))

axiom in_range__def_axiom2 :
  (forall a1:us_t.
  (forall x:int. forall i:int. forall j:int [in_range10(a1, x, i, j)].
  (((((- 100) * (((i - first2(a1)) * length_2(a1)) + (j - first_2(a1)))) <= x) and
  (x <= (100 * (((i - first2(a1)) * length_2(a1)) + (j - first_2(a1)))))) ->
  (in_range10(a1, x, i, j) = true))))

logic result_in_range : us_t, int -> bool

logic result_in_range__function_guard : bool, us_t, int -> prop

axiom result_in_range__def_axiom :
  (forall a1:us_t.
  (forall x:int [result_in_range(a1, x)]. ((result_in_range(a1, x) = true) ->
  ((((- 100) * length(a1)) * length_2(a1)) <= x))))

axiom result_in_range__def_axiom1 :
  (forall a1:us_t.
  (forall x:int [result_in_range(a1, x)]. ((result_in_range(a1, x) = true) ->
  (x <= ((100 * length(a1)) * length_2(a1))))))

axiom result_in_range__def_axiom2 :
  (forall a1:us_t.
  (forall x:int [result_in_range(a1, x)].
  ((((((- 100) * length(a1)) * length_2(a1)) <= x) and
  (x <= ((100 * length(a1)) * length_2(a1)))) -> (result_in_range(a1,
  x) = true))))

axiom temp___result_175qtdef :
  (forall x:int. value__function_guard(value(x), x))

function add_value(x: int, y: int) : int = (value(x) + y)

logic add_value__function_guard : int, int, int -> prop

type element_out2

logic element_outqtint2 : element_out2 -> int

axiom element_outqtaxiom4 :
  (forall i:element_out2. ((- 2147483648) <= element_outqtint2(i)))

axiom element_outqtaxiom5 :
  (forall i:element_out2. (element_outqtint2(i) <= 2147483647))

predicate in_range11(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq14(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq11 : element_out2, element_out2 -> bool

logic dummy11 : element_out2

type element_out__ref2 = { element_out__content2 : element_out2
}

function element_out__ref_element_out__content__4__projection(a1: element_out__ref2) : element_out2 =
  (a1).element_out__content2

predicate dynamic_invariant7(temp___expr_529: int, temp___is_init_525: bool,
  temp___skip_constant_526: bool, temp___do_toplevel_527: bool,
  temp___do_typ_inv_528: bool) = (((temp___is_init_525 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range11(temp___expr_529))

predicate dynamic_invariant8(temp___expr_522: us_t, temp___is_init_518: bool,
  temp___skip_constant_519: bool, temp___do_toplevel_520: bool,
  temp___do_typ_inv_521: bool) = ((not (temp___skip_constant_519 = true)) ->
  dynamic_property2(1, 100, first2(temp___expr_522), last2(temp___expr_522),
  1, 100, first_2(temp___expr_522), last_2(temp___expr_522)))

axiom fold__post_axiom :
  (forall a1:us_t. forall init:int.
  in_range__function_guard(in_range10(of_array(to_array(a1), first2(a1),
  last2(a1), first_2(a1), last_2(a1)), init, first2(a1), first_2(a1)),
  of_array(to_array(a1), first2(a1), last2(a1), first_2(a1), last_2(a1)),
  init, first2(a1), first_2(a1)))

axiom fold__post_axiom1 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall init1:int.
  fold__function_guard1(fold1(of_array(to_array(a2), first2(a2), last2(a2),
  first_2(a2), last_2(a2)), init1), of_array(to_array(a2), first2(a2),
  last2(a2), first_2(a2), last_2(a2)), init1)))))

axiom fold__post_axiom2 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall result:int.
  result_in_range__function_guard(result_in_range(of_array(to_array(a2),
  first2(a2), last2(a2), first_2(a2), last_2(a2)), result),
  of_array(to_array(a2), first2(a2), last2(a2), first_2(a2), last_2(a2)),
  result)))))

axiom fold__post_axiom3 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold(a1, init) : int in (fold__function_guard(result, a1, init) ->
  (((length(a1) = 0) or (length_2(a1) = 0)) -> (result = init)))))))

axiom fold__post_axiom4 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold(a1, init) : int in (fold__function_guard(result, a1, init) ->
  ((not ((length(a1) = 0) or (length_2(a1) = 0))) ->
  (result = to_rep1(get1(to_array1(fold1(of_array(to_array(a1), first2(a1),
  last2(a1), first_2(a1), last_2(a1)), init)), last2(a1), last_2(a1))))))))))

axiom fold__post_axiom5 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold(a1, init) : int in (fold__function_guard(result, a1, init) ->
  ((not ((length(a1) = 0) or (length_2(a1) = 0))) ->
  (result_in_range(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), result) = true)))))))

axiom fold__post_axiom6 :
  (forall a1:us_t.
  (forall init:int [fold(a1, init)]. (((dynamic_invariant8(a1, true, true,
  true, true) and dynamic_invariant7(init, true, true, true, true)) and
  (((length(a1) = 0) or (length_2(a1) = 0)) or
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold(a1, init) : int in (fold__function_guard(result, a1, init) ->
  dynamic_invariant7(result, true, false, true, true))))))

predicate dynamic_invariant9(temp___expr_583: us_t1,
  temp___is_init_579: bool, temp___skip_constant_580: bool,
  temp___do_toplevel_581: bool, temp___do_typ_inv_582: bool) =
  ((not (temp___skip_constant_580 = true)) -> dynamic_property5(1, 100,
  first5(temp___expr_583), last5(temp___expr_583), 1, 100,
  first_21(temp___expr_583), last_21(temp___expr_583)))

predicate dynamic_invariant10(temp___expr_564: int, temp___is_init_560: bool,
  temp___skip_constant_561: bool, temp___do_toplevel_562: bool,
  temp___do_typ_inv_563: bool) = (((temp___is_init_560 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range5(temp___expr_564))

predicate dynamic_invariant11(temp___expr_557: us_t,
  temp___is_init_553: bool, temp___skip_constant_554: bool,
  temp___do_toplevel_555: bool, temp___do_typ_inv_556: bool) =
  ((not (temp___skip_constant_554 = true)) -> dynamic_property2(1, 100,
  first2(temp___expr_557), last2(temp___expr_557), 1, 100,
  first_2(temp___expr_557), last_2(temp___expr_557)))

axiom fold__post_axiom7 :
  (forall a1:us_t. forall init:int.
  in_range__function_guard(in_range10(of_array(to_array(a1), first2(a1),
  last2(a1), first_2(a1), last_2(a1)), init, first2(a1), first_2(a1)),
  of_array(to_array(a1), first2(a1), last2(a1), first_2(a1), last_2(a1)),
  init, first2(a1), first_2(a1)))

axiom fold__post_axiom8 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall init1:int.
  in_range__function_guard(in_range10(of_array(to_array(a2), first2(a2),
  last2(a2), first_2(a2), last_2(a2)), init1, first2(a2), first_2(a2)),
  of_array(to_array(a2), first2(a2), last2(a2), first_2(a2), last_2(a2)),
  init1, first2(a2), first_2(a2))))))

axiom fold__post_axiom9 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall result:us_t1. forall i:int.
  in_range__function_guard(in_range10(of_array(to_array(a2), first2(a2),
  last2(a2), first_2(a2), last_2(a2)), to_rep1(get1(to_array1(result),
  (i - 1), last_2(a2))), i, first_2(a2)), of_array(to_array(a2), first2(a2),
  last2(a2), first_2(a2), last_2(a2)), to_rep1(get1(to_array1(result),
  (i - 1), last_2(a2))), i, first_2(a2))))))

axiom fold__post_axiom10 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall result:us_t1. forall i:int. forall j:int.
  in_range__function_guard(in_range10(of_array(to_array(a2), first2(a2),
  last2(a2), first_2(a2), last_2(a2)), to_rep1(get1(to_array1(result), i,
  (j - 1))), i, j), of_array(to_array(a2), first2(a2), last2(a2),
  first_2(a2), last_2(a2)), to_rep1(get1(to_array1(result), i, (j - 1))), i,
  j)))))

axiom fold__post_axiom11 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (forall a2:us_t. forall result:us_t1.
  result_in_range__function_guard(result_in_range(of_array(to_array(a2),
  first2(a2), last2(a2), first_2(a2), last_2(a2)),
  to_rep1(get1(to_array1(result), last2(a2), last_2(a2)))),
  of_array(to_array(a2), first2(a2), last2(a2), first_2(a2), last_2(a2)),
  to_rep1(get1(to_array1(result), last2(a2), last_2(a2))))))))

axiom fold__post_axiom12 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (first5(result) = first2(a1)))))))

axiom fold__post_axiom13 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (last5(result) = last2(a1)))))))

axiom fold__post_axiom14 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (first_21(result) = first_2(a1)))))))

axiom fold__post_axiom15 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (last_21(result) = last_2(a1)))))))

axiom fold__post_axiom16 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) ->
  (fold__function_guard1(fold1(a1, init), a1, init) ->
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true)))))

axiom fold__post_axiom17 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (to_rep1(get1(to_array1(result), first2(a1),
  first_2(a1))) = add_value(to_rep(get(to_array(a1), first2(a1),
  first_2(a1))), init)))))))

axiom fold__post_axiom18 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (forall i:int. (((first2(a1) <= i) and (i <= last2(a1))) ->
  ((first2(a1) <  i) -> (in_range10(of_array(to_array(a1), first2(a1),
  last2(a1), first_2(a1), last_2(a1)), to_rep1(get1(to_array1(result),
  (i - 1), last_2(a1))), i, first_2(a1)) = true)))))))))

axiom fold__post_axiom19 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (forall i:int. (((first2(a1) <= i) and (i <= last2(a1))) ->
  ((first2(a1) <  i) -> (to_rep1(get1(to_array1(result), i,
  first_2(a1))) = add_value(to_rep(get(to_array(a1), i, first_2(a1))),
  to_rep1(get1(to_array1(result), (i - 1), last_2(a1)))))))))))))

axiom fold__post_axiom20 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (forall i:int. (((first2(a1) <= i) and (i <= last2(a1))) ->
  (forall j:int. (((first_2(a1) <= j) and (j <= last_2(a1))) ->
  ((first_2(a1) <  j) -> (in_range10(of_array(to_array(a1), first2(a1),
  last2(a1), first_2(a1), last_2(a1)), to_rep1(get1(to_array1(result), i,
  (j - 1))), i, j) = true)))))))))))

axiom fold__post_axiom21 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (forall i:int. (((first2(a1) <= i) and (i <= last2(a1))) ->
  (forall j:int. (((first_2(a1) <= j) and (j <= last_2(a1))) ->
  ((first_2(a1) <  j) -> (to_rep1(get1(to_array1(result), i,
  j)) = add_value(to_rep(get(to_array(a1), i, j)),
  to_rep1(get1(to_array1(result), i, (j - 1)))))))))))))))

axiom fold__post_axiom22 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  (result_in_range(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), to_rep1(get1(to_array1(result), last2(a1),
  last_2(a1)))) = true))))))

axiom fold__post_axiom23 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant11(a1, true, true,
  true, true) and dynamic_invariant10(init, true, true, true, true)) and
  (((0 <  length(a1)) and (0 <  length_2(a1))) and
  (in_range10(of_array(to_array(a1), first2(a1), last2(a1), first_2(a1),
  last_2(a1)), init, first2(a1), first_2(a1)) = true))) -> (let result =
  fold1(a1, init) : us_t1 in (fold__function_guard1(result, a1, init) ->
  dynamic_invariant9(result, true, false, true, true))))))

predicate dynamic_invariant12(temp___expr_536: int, temp___is_init_532: bool,
  temp___skip_constant_533: bool, temp___do_toplevel_534: bool,
  temp___do_typ_inv_535: bool) = (((temp___is_init_532 = true) or
  (1 <= 100)) -> in_range3(temp___expr_536))

predicate dynamic_invariant13(temp___expr_543: int, temp___is_init_539: bool,
  temp___skip_constant_540: bool, temp___do_toplevel_541: bool,
  temp___do_typ_inv_542: bool) = (((temp___is_init_539 = true) or
  (1 <= 100)) -> in_range4(temp___expr_543))

 (* File "spark-higher_order-fold.adb", line 865, characters 0-0 *)
goal defqtvc : (dynamic_invariant1(a, true, false, true, true) ->
  (dynamic_invariant4(c, true, false, true, true) -> (dynamic_invariant1(a,
  true, false, true, true) -> (dynamic_invariant4(c, true, false, true,
  true) -> (sum_cst__function_guard(sum_cst(last2(a), last_2(a)), last2(a),
  last_2(a)) -> ((((0 <  length(a)) and (0 <  length_2(a))) ->
  (sum_cst(last2(a), last_2(a)) = true)) -> (in_range1(length_2(a)) ->
  (let o = length(a) : int in (in_range1(o) -> in_range1((c * o)))))))))))
