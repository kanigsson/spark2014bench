(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type map__ref = { map__content : (int,integer) farray
}

logic slide : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq :
  (forall a:(int,integer) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,integer) farray, a__first: int, a__last: int,
  b: (int,integer) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,integer) farray; rt : t
}

function to_array(a: us_t) : (int,integer) farray = (a).elts

function of_array(a: (int,integer) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep(first((a).rt))

function last1(a: us_t) : int = to_rep(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), (y).elts,
  to_rep(first((y).rt)), to_rep(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type int_array__ref = { int_array__content : us_t
}

function int_array__ref_int_array__content__projection(a: int_array__ref) : us_t =
  (a).int_array__content

logic s : us_t

logic attr__ATTRIBUTE_ADDRESS : int

logic r__first : integer

logic r__last : integer

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant1(temp___expr_171: us_t, temp___is_init_167: bool,
  temp___skip_constant_168: bool, temp___do_toplevel_169: bool,
  temp___do_typ_inv_170: bool) = (((not (temp___skip_constant_168 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_171),
  last1(temp___expr_171))) and ((temp___do_toplevel_169 = true) ->
  ((temp___is_init_167 = true) -> (first1(temp___expr_171) = 1))))

predicate dynamic_predicate(temp___174: us_t) = (first1(temp___174) = 1)

type trS__ref = { trS__content : us_t
}

function trS__ref_trS__content__2__projection(a: trS__ref) : us_t =
  (a).trS__content

type t55b__ref = { t55b__content : us_t
}

function t55b__ref_t55b__content__projection(a: t55b__ref) : us_t =
  (a).t55b__content

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : integer, integer -> bool

logic dummy4 : integer

type t56b__ref = { t56b__content : integer
}

function t56b__ref_t56b__content__projection(a: t56b__ref) : integer =
  (a).t56b__content

predicate dynamic_invariant2(temp___expr_283: us_t, temp___is_init_279: bool,
  temp___skip_constant_280: bool, temp___do_toplevel_281: bool,
  temp___do_typ_inv_282: bool) = (((not (temp___skip_constant_280 = true)) ->
  (dynamic_property(first1(s), last1(s), first1(temp___expr_283),
  last1(temp___expr_283)) and ((first1(temp___expr_283) = first1(s)) and
  (last1(temp___expr_283) = last1(s))))) and ((temp___is_init_279 = true) ->
  (first1(temp___expr_283) = 1)))

predicate default_initial_assumption(temp___expr_287: us_t,
  temp___skip_top_level_288: bool) =
  ((first1(temp___expr_287) = first1(s)) and
  (last1(temp___expr_287) = last1(s)))

predicate dynamic_predicate1(temp___291: us_t) = (first1(temp___291) = 1)

predicate dynamic_predicate2(temp___293: us_t) = (first1(temp___293) = 1)

logic temp_____aggregate_def_563 : int, int, int -> us_t

predicate dynamic_invariant3(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant4(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 0)

axiom def_axiom :
  (forall temp___565:int. forall temp___566:int. forall temp___567:int.
  (dynamic_invariant3(temp___565, true, true, true, true) ->
  (dynamic_property(1, 2147483647, temp___566, temp___567) ->
  (first1(temp_____aggregate_def_563(temp___565, temp___566,
  temp___567)) = temp___566))))

axiom def_axiom1 :
  (forall temp___565:int. forall temp___566:int. forall temp___567:int.
  (dynamic_invariant3(temp___565, true, true, true, true) ->
  (dynamic_property(1, 2147483647, temp___566, temp___567) ->
  (last1(temp_____aggregate_def_563(temp___565, temp___566,
  temp___567)) = temp___567))))

axiom def_axiom2 :
  (forall temp___565:int. forall temp___566:int. forall temp___567:int.
  (dynamic_invariant3(temp___565, true, true, true, true) ->
  (forall temp___568:int. ((to_array(temp_____aggregate_def_563(temp___565,
  temp___566, temp___567))[temp___568]) = rliteral))))

 (* File "ghc_sort.ads", line 46, characters 0-0 *)
goal defqtvc :
  (forall r:(int,integer) farray. (dynamic_invariant1(s, true, false, true,
  true) -> ((length(s) <  2147483647) ->
  (default_initial_assumption(of_array(r, to_rep(r__first), to_rep(r__last)),
  false) -> ((dynamic_property(first1(s), last1(s), to_rep(r__first),
  to_rep(r__last)) and ((to_rep(r__first) = first1(s)) and
  (to_rep(r__last) = last1(s)))) ->
  (forall j:int. ((j = 0) -> (dynamic_invariant(j, true, false, true,
  true) -> (let temp___569 = temp_____aggregate_def_563(0, first1(s),
  last1(s)) : us_t in ((first1(temp___569) = first1(s)) ->
  ((last1(temp___569) = last1(s)) -> (dynamic_predicate2(temp___569) ->
  ((if (first1(temp___569) <= last1(temp___569)) then ((first1(s) <= last1(s)) and
  ((last1(temp___569) - first1(temp___569)) = (last1(s) - first1(s)))) else (last1(s) <  first1(s))) ->
  (let temp___572 = of_array(slide(to_array(temp___569), first1(temp___569),
  first1(s)), first1(s), last1(s)) : us_t in
  (dynamic_predicate1(temp___572) ->
  ((if (first1(temp___572) <= last1(temp___572)) then ((to_rep(r__first) <= to_rep(r__last)) and
  ((last1(temp___572) - first1(temp___572)) = (to_rep(r__last) - to_rep(r__first)))) else (to_rep(r__last) <  to_rep(r__first))) ->
  (forall r1:(int,integer) farray. ((r1 = to_array(temp___572)) ->
  (forall r2:(int,integer) farray. ((let temp___574 = first1(s) : int in
  (let temp___575 = last1(s) : int in
  (exists i:int. ((i = temp___575) and
  (if (andb((if (temp___574 <= i) then true else false),
  (if (i <= temp___575) then true else false)) = true) then (let o =
  length(s) : int in (in_range1(o) and (in_range1((o - i)) and
  (exists r3:(int,integer) farray. exists j1:int. exists i1:int.
  (((j1 = (length(s) - i1)) and
  (forall k:int. ((((i1 + 1) <= k) and (k <= last1(s))) ->
  (to_rep((r3[k])) = to_rep((to_array(s)[((length(s) - k) + 1)])))))) and
  ((andb((if ((dynamic_property1(first1(s), last1(s), i1) and
  (forall temp___583:int. (((to_rep(r__first) <= temp___583) and
  (temp___583 <= to_rep(r__last))) -> (((temp___575 <  temp___583) or
  ((temp___583 <  temp___574) or (temp___583 <= i1))) ->
  ((r3[temp___583]) = (r1[temp___583])))))) and dynamic_invariant(j1, true,
  true, true, true)) then true else false), (if ((first1(s) <= i1) and
  (i1 <= last1(s))) then true else false)) = true) and (let o1 = (j1 + 1)
  : int in (in_range1(o1) and
  (exists j2:int. ((j2 = o1) and (((first1(s) <= j2) and
  (j2 <= last1(s))) and
  (exists o2:int. ((to_rep((to_array(s)[j2])) = o2) and
  (exists o3:integer. ((to_rep(o3) = o2) and ((to_rep(r__first) = 1) and
  ((r2 = (r3[i1 <- o3])) and (i1 = temp___574)))))))))))))))))) else (r2 = r1)))))) ->
  (forall o:int. ((to_rep(r__last) = o) ->
  (forall o1:int. ((to_rep(r__first) = o1) ->
  (forall ghc_sort__s_reverse__result:us_t.
  ((ghc_sort__s_reverse__result = of_array(r2, o1, o)) ->
  ((length(ghc_sort__s_reverse__result) = length(s)) ->
  (forall usf:int. ((andb((if (first1(s) <= usf) then true else false),
  (if (usf <= last1(s)) then true else false)) = true) -> (let o2 = length(s)
  : int in (in_range1(o2) -> (let o3 = (o2 - usf) : int in (in_range1(o3) ->
  (let o4 = (o3 + 1) : int in (in_range1(o4) -> (first1(s) <= o4))))))))))))))))))))))))))))))))))))
