(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_discrs = { rec__membership_discr__root__c : natural
}

function us_split_discrs_rec__membership_discr__root__c__projection(a: us_split_discrs) : natural =
  (a).rec__membership_discr__root__c

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__ext__ : us_private
}

function us_split_fields_rec__ext____projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields; attr__tag : int
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep_attr__tag__projection(a: us_rep) : int = (a).attr__tag

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (to_rep(((a).us_split_discrs1).rec__membership_discr__root__c) = to_rep(((b).us_split_discrs1).rec__membership_discr__root__c)) then true else false)

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic membership_discr__root__c__first__bit : int

logic membership_discr__root__c__last__bit : int

logic membership_discr__root__c__position : int

axiom membership_discr__root__c__first__bit_axiom :
  (0 <= membership_discr__root__c__first__bit)

axiom membership_discr__root__c__last__bit_axiom :
  (membership_discr__root__c__first__bit <  membership_discr__root__c__last__bit)

axiom membership_discr__root__c__position_axiom :
  (0 <= membership_discr__root__c__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : us_rep

type root__ref = { root__content : us_rep
}

function root__ref_root__content__projection(a: root__ref) : us_rep =
  (a).root__content

logic us_tag1 : int

predicate in_range2(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic membership_discr__root__c__first__bit1 : int

logic membership_discr__root__c__last__bit1 : int

logic membership_discr__root__c__position1 : int

axiom membership_discr__root__c__first__bit_axiom1 :
  (0 <= membership_discr__root__c__first__bit1)

axiom membership_discr__root__c__last__bit_axiom1 :
  (membership_discr__root__c__first__bit1 <  membership_discr__root__c__last__bit1)

axiom membership_discr__root__c__position_axiom1 :
  (0 <= membership_discr__root__c__position1)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type root_02__ref = { root_02__content : us_rep
}

function root_02__ref_root_02__content__projection(a: root_02__ref) : us_rep =
  (a).root_02__content

logic us_tag2 : int

predicate in_range3(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic membership_discr__root__c__first__bit2 : int

logic membership_discr__root__c__last__bit2 : int

logic membership_discr__root__c__position2 : int

axiom membership_discr__root__c__first__bit_axiom2 :
  (0 <= membership_discr__root__c__first__bit2)

axiom membership_discr__root__c__last__bit_axiom2 :
  (membership_discr__root__c__first__bit2 <  membership_discr__root__c__last__bit2)

axiom membership_discr__root__c__position_axiom2 :
  (0 <= membership_discr__root__c__position2)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type tr00S__ref = { tr00S__content : us_rep
}

function tr00S__ref_tr00S__content__projection(a: tr00S__ref) : us_rep =
  (a).tr00S__content

logic r00__split_discrs : us_split_discrs

logic r00__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS : int

predicate dynamic_invariant(temp___expr_260: us_rep,
  temp___is_init_256: bool, temp___skip_constant_257: bool,
  temp___do_toplevel_258: bool, temp___do_typ_inv_259: bool) =
  ((not (temp___skip_constant_257 = true)) -> in_range3(0, temp___expr_260))

predicate default_initial_assumption(temp___expr_262: us_rep,
  temp___skip_top_level_263: bool) =
  (((temp___expr_262).attr__tag = us_tag2) and
  (to_rep(((temp___expr_262).us_split_discrs1).rec__membership_discr__root__c) = 0))

logic us_tag3 : int

predicate in_range4(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic membership_discr__root__c__first__bit3 : int

logic membership_discr__root__c__last__bit3 : int

logic membership_discr__root__c__position3 : int

axiom membership_discr__root__c__first__bit_axiom3 :
  (0 <= membership_discr__root__c__first__bit3)

axiom membership_discr__root__c__last__bit_axiom3 :
  (membership_discr__root__c__first__bit3 <  membership_discr__root__c__last__bit3)

axiom membership_discr__root__c__position_axiom3 :
  (0 <= membership_discr__root__c__position3)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type tc00S__ref = { tc00S__content : us_rep
}

function tc00S__ref_tc00S__content__projection(a: tc00S__ref) : us_rep =
  (a).tc00S__content

logic c00__split_discrs : us_split_discrs

logic c00__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate dynamic_invariant1(temp___expr_269: us_rep,
  temp___is_init_265: bool, temp___skip_constant_266: bool,
  temp___do_toplevel_267: bool, temp___do_typ_inv_268: bool) =
  ((not (temp___skip_constant_266 = true)) -> in_range4(0, temp___expr_269))

predicate default_initial_assumption1(temp___expr_271: us_rep,
  temp___skip_top_level_272: bool) =
  (((temp___expr_271).attr__tag = us_tag3) and
  (to_rep(((temp___expr_271).us_split_discrs1).rec__membership_discr__root__c) = 0))

logic us_tag4 : int

predicate in_range5(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic membership_discr__root__c__first__bit4 : int

logic membership_discr__root__c__last__bit4 : int

logic membership_discr__root__c__position4 : int

axiom membership_discr__root__c__first__bit_axiom4 :
  (0 <= membership_discr__root__c__first__bit4)

axiom membership_discr__root__c__last__bit_axiom4 :
  (membership_discr__root__c__first__bit4 <  membership_discr__root__c__last__bit4)

axiom membership_discr__root__c__position_axiom4 :
  (0 <= membership_discr__root__c__position4)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type child_01__ref = { child_01__content : us_rep
}

function child_01__ref_child_01__content__projection(a: child_01__ref) : us_rep =
  (a).child_01__content

logic c01__split_discrs : us_split_discrs

logic c01__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS2 : int

predicate dynamic_invariant2(temp___expr_209: us_rep,
  temp___is_init_205: bool, temp___skip_constant_206: bool,
  temp___do_toplevel_207: bool, temp___do_typ_inv_208: bool) =
  ((not (temp___skip_constant_206 = true)) -> in_range5(0, temp___expr_209))

predicate default_initial_assumption2(temp___expr_211: us_rep,
  temp___skip_top_level_212: bool) =
  (((temp___expr_211).attr__tag = us_tag4) and
  (to_rep(((temp___expr_211).us_split_discrs1).rec__membership_discr__root__c) = 0))

logic us_tag5 : int

predicate in_range6(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic membership_discr__root__c__first__bit5 : int

logic membership_discr__root__c__last__bit5 : int

logic membership_discr__root__c__position5 : int

axiom membership_discr__root__c__first__bit_axiom5 :
  (0 <= membership_discr__root__c__first__bit5)

axiom membership_discr__root__c__last__bit_axiom5 :
  (membership_discr__root__c__first__bit5 <  membership_discr__root__c__last__bit5)

axiom membership_discr__root__c__position_axiom5 :
  (0 <= membership_discr__root__c__position5)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type child_02__ref = { child_02__content : us_rep
}

function child_02__ref_child_02__content__projection(a: child_02__ref) : us_rep =
  (a).child_02__content

logic c02__split_discrs : us_split_discrs

logic c02__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant3(temp___expr_218: us_rep,
  temp___is_init_214: bool, temp___skip_constant_215: bool,
  temp___do_toplevel_216: bool, temp___do_typ_inv_217: bool) =
  ((not (temp___skip_constant_215 = true)) -> in_range6(0, temp___expr_218))

predicate default_initial_assumption3(temp___expr_220: us_rep,
  temp___skip_top_level_221: bool) =
  (((temp___expr_220).attr__tag = us_tag5) and
  (to_rep(((temp___expr_220).us_split_discrs1).rec__membership_discr__root__c) = 0))

logic us_tag6 : int

predicate in_range7(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic membership_discr__root__c__first__bit6 : int

logic membership_discr__root__c__last__bit6 : int

logic membership_discr__root__c__position6 : int

axiom membership_discr__root__c__first__bit_axiom6 :
  (0 <= membership_discr__root__c__first__bit6)

axiom membership_discr__root__c__last__bit_axiom6 :
  (membership_discr__root__c__first__bit6 <  membership_discr__root__c__last__bit6)

axiom membership_discr__root__c__position_axiom6 :
  (0 <= membership_discr__root__c__position6)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy7 : us_rep

type child_03__ref = { child_03__content : us_rep
}

function child_03__ref_child_03__content__projection(a: child_03__ref) : us_rep =
  (a).child_03__content

logic c03__split_discrs : us_split_discrs

logic c03__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS4 : int

predicate dynamic_invariant4(temp___expr_227: us_rep,
  temp___is_init_223: bool, temp___skip_constant_224: bool,
  temp___do_toplevel_225: bool, temp___do_typ_inv_226: bool) =
  ((not (temp___skip_constant_224 = true)) -> in_range7(0, temp___expr_227))

predicate default_initial_assumption4(temp___expr_229: us_rep,
  temp___skip_top_level_230: bool) =
  (((temp___expr_229).attr__tag = us_tag6) and
  (to_rep(((temp___expr_229).us_split_discrs1).rec__membership_discr__root__c) = 0))

logic us_tag7 : int

logic value__size7 : int

logic object__size7 : int

logic alignment7 : int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 : (0 <= object__size7)

axiom alignment_axiom7 : (0 <= alignment7)

logic membership_discr__root__c__first__bit7 : int

logic membership_discr__root__c__last__bit7 : int

logic membership_discr__root__c__position7 : int

axiom membership_discr__root__c__first__bit_axiom7 :
  (0 <= membership_discr__root__c__first__bit7)

axiom membership_discr__root__c__last__bit_axiom7 :
  (membership_discr__root__c__first__bit7 <  membership_discr__root__c__last__bit7)

axiom membership_discr__root__c__position_axiom7 :
  (0 <= membership_discr__root__c__position7)

logic user_eq8 : us_rep, us_rep -> bool

logic dummy8 : us_rep

type child__ref = { child__content : us_rep
}

function child__ref_child__content__projection(a: child__ref) : us_rep =
  (a).child__content

logic us_tag8 : int

predicate in_range8(rec__membership_discr__root__c1: int, a: us_rep) =
  (rec__membership_discr__root__c1 = to_rep(((a).us_split_discrs1).rec__membership_discr__root__c))

logic value__size8 : int

logic object__size8 : int

logic alignment8 : int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 : (0 <= object__size8)

axiom alignment_axiom8 : (0 <= alignment8)

logic membership_discr__root__c__first__bit8 : int

logic membership_discr__root__c__last__bit8 : int

logic membership_discr__root__c__position8 : int

axiom membership_discr__root__c__first__bit_axiom8 :
  (0 <= membership_discr__root__c__first__bit8)

axiom membership_discr__root__c__last__bit_axiom8 :
  (membership_discr__root__c__first__bit8 <  membership_discr__root__c__last__bit8)

axiom membership_discr__root__c__position_axiom8 :
  (0 <= membership_discr__root__c__position8)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy9 : us_rep

type child_04__ref = { child_04__content : us_rep
}

function child_04__ref_child_04__content__projection(a: child_04__ref) : us_rep =
  (a).child_04__content

predicate dynamic_invariant5(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

predicate dynamic_invariant6(temp___expr_194: us_rep,
  temp___is_init_190: bool, temp___skip_constant_191: bool,
  temp___do_toplevel_192: bool, temp___do_typ_inv_193: bool) =
  ((not (temp___skip_constant_191 = true)) -> in_range2(0, temp___expr_194))

predicate default_initial_assumption5(temp___expr_196: us_rep,
  temp___skip_top_level_197: bool) =
  (((temp___expr_196).attr__tag = us_tag1) and
  (to_rep(((temp___expr_196).us_split_discrs1).rec__membership_discr__root__c) = 0))

predicate dynamic_invariant7(temp___expr_236: us_rep,
  temp___is_init_232: bool, temp___skip_constant_233: bool,
  temp___do_toplevel_234: bool, temp___do_typ_inv_235: bool) =
  ((not (temp___skip_constant_233 = true)) -> in_range8(0, temp___expr_236))

predicate default_initial_assumption6(temp___expr_238: us_rep,
  temp___skip_top_level_239: bool) =
  (((temp___expr_238).attr__tag = us_tag8) and
  (to_rep(((temp___expr_238).us_split_discrs1).rec__membership_discr__root__c) = 0))

 (* File "membership_discr.adb", line 1, characters 0-0 *)
goal defqtvc : true
