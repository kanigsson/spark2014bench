(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

logic left : int

logic attr__ATTRIBUTE_ADDRESS : int

logic right : int

logic attr__ATTRIBUTE_ADDRESS1 : int

type tinteger_8B

logic tinteger_8Bqtint : tinteger_8B -> int

axiom tinteger_8Bqtaxiom :
  (forall i:tinteger_8B. ((- 128) <= tinteger_8Bqtint(i)))

axiom tinteger_8Bqtaxiom1 :
  (forall i:tinteger_8B. (tinteger_8Bqtint(i) <= 127))

predicate in_range1(x: int) = (((- 128) <= x) and (x <= 127))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : tinteger_8B, tinteger_8B -> bool

logic dummy1 : tinteger_8B

type tinteger_8B__ref = { tinteger_8B__content : tinteger_8B
}

function tinteger_8B__ref_tinteger_8B__content__projection(a: tinteger_8B__ref) : tinteger_8B =
  (a).tinteger_8B__content

type integer_8

logic integer_8qtint : integer_8 -> int

axiom integer_8qtaxiom : (forall i:integer_8. ((- 128) <= integer_8qtint(i)))

axiom integer_8qtaxiom1 : (forall i:integer_8. (integer_8qtint(i) <= 127))

predicate in_range2(x: int) = (((- 128) <= x) and (x <= 127))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : integer_8, integer_8 -> bool

logic dummy2 : integer_8

type integer_8__ref = { integer_8__content : integer_8
}

function integer_8__ref_integer_8__content__2__projection(a: integer_8__ref) : integer_8 =
  (a).integer_8__content

predicate dynamic_invariant(temp___expr_335: int, temp___is_init_331: bool,
  temp___skip_constant_332: bool, temp___do_toplevel_333: bool,
  temp___do_typ_inv_334: bool) = (((temp___is_init_331 = true) or
  ((- 128) <= 127)) -> in_range2(temp___expr_335))

predicate dynamic_invariant1(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range(temp___expr_39))

 (* File "simulink_functions.ads", line 207, characters 0-0 *)
goal defqtvc : (dynamic_invariant(left, true, false, true, true) ->
  (dynamic_invariant(right, true, false, true, true) -> in_range(right)))
