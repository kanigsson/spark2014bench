(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range1(temp___expr_46))

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

logic z : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

function to_rep(x1: integer) : int = integerqtint(x1)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x1:integer [to_rep(x1)]. (of_rep(to_rep(x1)) = x1))

axiom range_axiom : (forall x1:integer [to_rep(x1)]. in_range(to_rep(x1)))

axiom coerce_axiom :
  (forall x1:int [to_rep(of_rep(x1))]. (in_range(x1) ->
  (to_rep(of_rep(x1)) = x1)))

logic last : int

predicate dynamic_property(first_int: int, last_int: int, x1: int) =
  ((first_int <= x1) and (x1 <= last_int))

function bool_eq2(x1: int, y: int) : bool =
  (if (x1 = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : integer, integer -> bool

logic dummy2 : integer

type a__ref = { a__content : integer
}

function a__ref_a__content__projection(a: a__ref) : integer = (a).a__content

predicate dynamic_invariant2(temp___expr_166: int, temp___is_init_162: bool,
  temp___skip_constant_163: bool, temp___do_toplevel_164: bool,
  temp___do_typ_inv_165: bool) = (((temp___is_init_162 = true) or
  (1 <= last)) -> dynamic_property(1, last, temp___expr_166))

axiom last__def_axiom : (last = x)

logic last1 : int

predicate dynamic_property1(first_int: int, last_int: int, x1: int) =
  ((first_int <= x1) and (x1 <= last_int))

function bool_eq3(x1: int, y: int) : bool =
  (if (x1 = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : integer, integer -> bool

logic dummy3 : integer

type b__ref = { b__content : integer
}

function b__ref_b__content__projection(a: b__ref) : integer = (a).b__content

predicate dynamic_invariant3(temp___expr_173: int, temp___is_init_169: bool,
  temp___skip_constant_170: bool, temp___do_toplevel_171: bool,
  temp___do_typ_inv_172: bool) = (((temp___is_init_169 = true) or
  (2 <= last1)) -> dynamic_property1(2, last1, temp___expr_173))

axiom last__def_axiom1 : (last1 = z)

logic first : int

predicate dynamic_property2(first_int: int, last_int: int, x1: int) =
  ((first_int <= x1) and (x1 <= last_int))

function bool_eq4(x1: int, y: int) : bool =
  (if (x1 = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : integer, integer -> bool

logic dummy4 : integer

type e__ref = { e__content : integer
}

function e__ref_e__content__projection(a: e__ref) : integer = (a).e__content

predicate dynamic_invariant4(temp___expr_180: int, temp___is_init_176: bool,
  temp___skip_constant_177: bool, temp___do_toplevel_178: bool,
  temp___do_typ_inv_179: bool) = (((temp___is_init_176 = true) or
  (first <= 10)) -> dynamic_property2(first, 10, temp___expr_180))

axiom first__def_axiom : (first = x)

logic first1 : int

predicate dynamic_property3(first_int: int, last_int: int, x1: int) =
  ((first_int <= x1) and (x1 <= last_int))

function bool_eq5(x1: int, y: int) : bool =
  (if (x1 = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : integer, integer -> bool

logic dummy5 : integer

type f__ref = { f__content : integer
}

function f__ref_f__content__projection(a: f__ref) : integer = (a).f__content

predicate dynamic_invariant5(temp___expr_187: int, temp___is_init_183: bool,
  temp___skip_constant_184: bool, temp___do_toplevel_185: bool,
  temp___do_typ_inv_186: bool) = (((temp___is_init_183 = true) or
  (first1 <= 10)) -> dynamic_property3(first1, 10, temp___expr_187))

axiom first__def_axiom1 : (first1 = z)

logic first2 : int

predicate dynamic_property4(first_int: int, last_int: int, x1: int) =
  ((first_int <= x1) and (x1 <= last_int))

function bool_eq6(x1: int, y: int) : bool =
  (if (x1 = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : integer, integer -> bool

logic dummy6 : integer

type g__ref = { g__content : integer
}

function g__ref_g__content__projection(a: g__ref) : integer = (a).g__content

predicate dynamic_invariant6(temp___expr_194: int, temp___is_init_190: bool,
  temp___skip_constant_191: bool, temp___do_toplevel_192: bool,
  temp___do_typ_inv_193: bool) = (((temp___is_init_190 = true) or
  (first2 <= 10)) -> dynamic_property4(first2, 10, temp___expr_194))

axiom first__def_axiom2 : (first2 = z)

axiom z__def_axiom : (z = (x + 1))

 (* File "dynamic.ads", line 5, characters 0-0 *)
goal defqtvc : (dynamic_invariant1(x, true, false, true, true) ->
  ((x <= 10) -> (let o = (x + 1) : int in (in_range(o) -> ((o = z) ->
  (dynamic_invariant(z, true, false, true, true) -> (let o1 = (x + 2)
  : int in (in_range(o1) ->
  (forall m:int. ((m = o1) -> (dynamic_invariant(m, true, false, true,
  true) -> ((x <= 10) -> (1 <= x)))))))))))))
