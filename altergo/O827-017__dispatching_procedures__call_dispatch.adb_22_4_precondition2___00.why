(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic us_compatible_tags : int, int -> prop

axiom us_compatible_tags_refl :
  (forall tag:int. us_compatible_tags(tag, tag))

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range1(temp___expr_46))

type us_split_fields = { rec__dispatch__root__i : integer; rec__ext__ :
us_private
}

function us_split_fields_rec__dispatch__root__i__projection(a: us_split_fields) : integer =
  (a).rec__dispatch__root__i

function us_split_fields_rec__ext____projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields; attr__tag : int
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep_attr__tag__projection(a: us_rep) : int = (a).attr__tag

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (to_rep(((a).us_split_fields1).rec__dispatch__root__i) = to_rep(((b).us_split_fields1).rec__dispatch__root__i)) then true else false)

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic dispatch__root__i__first__bit : int

logic dispatch__root__i__last__bit : int

logic dispatch__root__i__position : int

axiom dispatch__root__i__first__bit_axiom :
  (0 <= dispatch__root__i__first__bit)

axiom dispatch__root__i__last__bit_axiom :
  (dispatch__root__i__first__bit <  dispatch__root__i__last__bit)

axiom dispatch__root__i__position_axiom : (0 <= dispatch__root__i__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type root__ref = { root__content : us_rep
}

function root__ref_root__content__projection(a: root__ref) : us_rep =
  (a).root__content

logic x1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS : int

predicate default_initial_assumption(temp___expr_198: us_rep,
  temp___skip_top_level_199: bool) = ((temp___expr_198).attr__tag = us_tag)

logic x2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic x3__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic v1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic v2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic v3__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic init : int -> int

logic init__function_guard : int, int -> prop

axiom init__post_axiom :
  (forall x:int [init(x)]. (dynamic_invariant(x, true, true, true, true) ->
  (let result = init(x) : int in (init__function_guard(result, x) ->
  dynamic_invariant(result, true, false, true, true)))))

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic id : int -> int

logic id__function_guard : int, int -> prop

logic b_max : int

logic attr__ATTRIBUTE_ADDRESS11 : int

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq3 : natural, natural -> bool

logic dummy3 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep1(x: natural) : int = naturalqtint(x)

logic of_rep1 : int -> natural

axiom inversion_axiom1 :
  (forall x:natural [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:natural [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref = { map__content : (int,natural) farray
}

logic slide : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq :
  (forall a:(int,natural) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,natural) farray, a__first: int, a__last: int,
  b: (int,natural) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep1((a[temp___idx_155])) = to_rep1((b[((b__first - a__first) + temp___idx_155)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep1((a[temp___idx_155])) = to_rep1((b[((b__first - a__first) + temp___idx_155)]))))))))

logic a1__first : integer

logic a1__last : integer

logic attr__ATTRIBUTE_ADDRESS12 : int

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (in_range1(low) and in_range1(high)))))

type us_t = { elts : (int,natural) farray; rt : t
}

function to_array(a: us_t) : (int,natural) farray = (a).elts

function of_array(a: (int,natural) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep(first((a).rt))

function last1(a: us_t) : int = to_rep(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), (y).elts,
  to_rep(first((y).rt)), to_rep(last((y).rt)))

logic user_eq4 : us_t, us_t -> bool

logic dummy4 : us_t

type nat_array__ref = { nat_array__content : us_t
}

function nat_array__ref_nat_array__content__projection(a: nat_array__ref) : us_t =
  (a).nat_array__content

logic init1 : us_t -> us_t

logic init__function_guard1 : us_t, us_t -> prop

predicate dynamic_invariant2(temp___expr_219: us_t, temp___is_init_215: bool,
  temp___skip_constant_216: bool, temp___do_toplevel_217: bool,
  temp___do_typ_inv_218: bool) = ((not (temp___skip_constant_216 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_219),
  last1(temp___expr_219)))

axiom init__post_axiom1 :
  (forall x:us_t [init1(x)]. (dynamic_invariant2(x, true, true, true,
  true) -> (let result = init1(x) : us_t in (init__function_guard1(result,
  x) -> dynamic_invariant2(result, true, false, true, true)))))

logic z1__first : integer

logic z1__last : integer

logic attr__ATTRIBUTE_ADDRESS13 : int

logic a2__first : integer

logic a2__last : integer

logic attr__ATTRIBUTE_ADDRESS14 : int

logic z2__first : integer

logic z2__last : integer

logic attr__ATTRIBUTE_ADDRESS15 : int

logic a3__first : integer

logic a3__last : integer

logic attr__ATTRIBUTE_ADDRESS16 : int

logic z3__first : integer

logic z3__last : integer

logic attr__ATTRIBUTE_ADDRESS17 : int

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq6(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range3(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE3 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> bool

type us_split_discrs = { rec__dispatch__mut_rec__d : bool
}

function us_split_discrs_rec__dispatch__mut_rec__d__projection(a: us_split_discrs) : bool =
  (a).rec__dispatch__mut_rec__d

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields2 = { rec__dispatch__mut_rec__i : integer
}

function us_split_fields_rec__dispatch__mut_rec__i__projection(a: us_split_fields2) : integer =
  (a).rec__dispatch__mut_rec__i

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__3__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function bool_eq7(a: us_rep1, b: us_rep1) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__dispatch__mut_rec__d) = to_int(((b).us_split_discrs1).rec__dispatch__mut_rec__d)) and
  (to_rep(((a).us_split_fields3).rec__dispatch__mut_rec__i) = to_rep(((b).us_split_fields3).rec__dispatch__mut_rec__i))) then true else false)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic dispatch__mut_rec__d__first__bit : int

logic dispatch__mut_rec__d__last__bit : int

logic dispatch__mut_rec__d__position : int

axiom dispatch__mut_rec__d__first__bit_axiom :
  (0 <= dispatch__mut_rec__d__first__bit)

axiom dispatch__mut_rec__d__last__bit_axiom :
  (dispatch__mut_rec__d__first__bit <  dispatch__mut_rec__d__last__bit)

axiom dispatch__mut_rec__d__position_axiom :
  (0 <= dispatch__mut_rec__d__position)

logic dispatch__mut_rec__i__first__bit : int

logic dispatch__mut_rec__i__last__bit : int

logic dispatch__mut_rec__i__position : int

axiom dispatch__mut_rec__i__first__bit_axiom :
  (0 <= dispatch__mut_rec__i__first__bit)

axiom dispatch__mut_rec__i__last__bit_axiom :
  (dispatch__mut_rec__i__first__bit <  dispatch__mut_rec__i__last__bit)

axiom dispatch__mut_rec__i__position_axiom :
  (0 <= dispatch__mut_rec__i__position)

logic user_eq5 : us_rep1, us_rep1 -> bool

logic dummy5 : us_rep1

type mut_rec__ref = { mut_rec__content : us_rep1
}

function mut_rec__ref_mut_rec__content__projection(a: mut_rec__ref) : us_rep1 =
  (a).mut_rec__content

logic r1__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS18 : int

predicate default_initial_assumption1(temp___expr_261: us_rep1,
  temp___skip_top_level_262: bool) =
  (((temp___expr_261).us_split_discrs1).rec__dispatch__mut_rec__d = of_int(1))

logic init2 : us_rep1 -> us_rep1

logic init__function_guard2 : us_rep1, us_rep1 -> prop

logic w1__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS19 : int

logic r2__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS20 : int

logic w2__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS21 : int

logic r3__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS22 : int

logic w3__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS23 : int

type us_split_fields4 = { rec__dispatch__child__j : integer;
rec__dispatch__root__i1 : integer; rec__ext__1 : us_private
}

function us_split_fields_rec__dispatch__child__j__projection(a: us_split_fields4) : integer =
  (a).rec__dispatch__child__j

function us_split_fields_rec__dispatch__root__i__2__projection(a: us_split_fields4) : integer =
  (a).rec__dispatch__root__i1

function us_split_fields_rec__ext____2__projection(a: us_split_fields4) : us_private =
  (a).rec__ext__1

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4; attr__tag1 : int
}

function us_rep___split_fields__2__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function us_rep_attr__tag__2__projection(a: us_rep2) : int = (a).attr__tag1

logic hide_ext__ : integer, us_private -> us_private

logic extract__dispatch__child__j : us_private -> integer

axiom extract__dispatch__child__j__conv :
  (forall dispatch__child__j:integer.
  (forall rec__ext__2:us_private.
  (extract__dispatch__child__j(hide_ext__(dispatch__child__j,
  rec__ext__2)) = dispatch__child__j)))

logic extract__ext__ : us_private -> us_private

function to_base(a: us_rep2) : us_rep = { us_split_fields1 = {
  rec__dispatch__root__i = ((a).us_split_fields5).rec__dispatch__root__i1;
  rec__ext__ = hide_ext__(((a).us_split_fields5).rec__dispatch__child__j,
  ((a).us_split_fields5).rec__ext__1) }; attr__tag = (a).attr__tag1 }

function of_base(r: us_rep) : us_rep2 = { us_split_fields5 = {
  rec__dispatch__child__j =
  extract__dispatch__child__j(((r).us_split_fields1).rec__ext__);
  rec__dispatch__root__i1 = ((r).us_split_fields1).rec__dispatch__root__i;
  rec__ext__1 = extract__ext__(((r).us_split_fields1).rec__ext__) };
  attr__tag1 = (r).attr__tag }

function bool_eq8(a: us_rep2, b: us_rep2) : bool =
  (if ((to_rep(((a).us_split_fields5).rec__dispatch__child__j) = to_rep(((b).us_split_fields5).rec__dispatch__child__j)) and
  (to_rep(((a).us_split_fields5).rec__dispatch__root__i1) = to_rep(((b).us_split_fields5).rec__dispatch__root__i1))) then true else false)

logic us_tag1 : int

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic dispatch__child__j__first__bit : int

logic dispatch__child__j__last__bit : int

logic dispatch__child__j__position : int

axiom dispatch__child__j__first__bit_axiom :
  (0 <= dispatch__child__j__first__bit)

axiom dispatch__child__j__last__bit_axiom :
  (dispatch__child__j__first__bit <  dispatch__child__j__last__bit)

axiom dispatch__child__j__position_axiom :
  (0 <= dispatch__child__j__position)

logic dispatch__root__i__first__bit1 : int

logic dispatch__root__i__last__bit1 : int

logic dispatch__root__i__position1 : int

axiom dispatch__root__i__first__bit_axiom1 :
  (0 <= dispatch__root__i__first__bit1)

axiom dispatch__root__i__last__bit_axiom1 :
  (dispatch__root__i__first__bit1 <  dispatch__root__i__last__bit1)

axiom dispatch__root__i__position_axiom1 :
  (0 <= dispatch__root__i__position1)

logic user_eq6 : us_rep2, us_rep2 -> bool

logic dummy6 : us_rep2

type child__ref = { child__content : us_rep2
}

function child__ref_child__content__projection(a: child__ref) : us_rep2 =
  (a).child__content

logic p__specific_post : int, us_rep, us_split_fields, int, us_split_fields,
  int, int, int, int, us_t, (int,natural) farray, integer, integer,
  (int,natural) farray, integer, integer, us_rep1, us_split_fields2,
  us_split_discrs, bool, us_split_fields2, us_split_discrs, bool, int,
  (int,natural) farray, us_private, us_split_fields2, us_split_discrs, int,
  us_split_fields2, us_split_discrs, (int,natural) farray, us_split_fields2,
  us_split_discrs, (int,natural) farray, us_split_fields, us_split_fields,
  int, int, (int,natural) farray, (int,natural) farray, us_split_fields2,
  us_split_discrs, us_split_fields2, us_split_discrs, int,
  (int,natural) farray, us_private, us_split_fields2, us_split_discrs, int,
  us_split_fields2, us_split_discrs, (int,natural) farray, us_split_fields2,
  us_split_discrs, (int,natural) farray -> prop

axiom dispatch__root__compat_axiom :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep((({ us_split_fields1 =
  dispatch__p__x2__fields; attr__tag = x2__attr__tag1
  }).us_split_fields1).rec__dispatch__root__i) = to_rep(((x1).us_split_fields1).rec__dispatch__root__i))))))))))))))

axiom dispatch__root__compat_axiom1 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep((({ us_split_fields1 =
  dispatch__p__x3__fields; attr__tag = x3__attr__tag1
  }).us_split_fields1).rec__dispatch__root__i) = to_rep((({
  us_split_fields1 = dispatch__p__x3__old__fields; attr__tag = x3__attr__tag1
  }).us_split_fields1).rec__dispatch__root__i))))))))))))))

axiom dispatch__root__compat_axiom2 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (dispatch__p__y3 = dispatch__p__y3__old)))))))))))))

axiom dispatch__root__compat_axiom3 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq4(dispatch__p__z3, to_rep(z3__first1),
  to_rep(z3__last1), dispatch__p__z3__old, to_rep(z3__first1),
  to_rep(z3__last1)) = true)))))))))))))

axiom dispatch__root__compat_axiom4 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq7({ us_split_discrs1 =
  dispatch__p__w3__discrs; us_split_fields3 = dispatch__p__w3__fields }, {
  us_split_discrs1 = dispatch__p__w3__old__discrs; us_split_fields3 =
  dispatch__p__w3__old__fields }) = true)))))))))))))

axiom dispatch__root__compat_axiom5 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (dispatch__c3 = dispatch__c3__old)))))))))))))

axiom dispatch__root__compat_axiom6 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq4(dispatch__a3, to_rep(a3__first),
  to_rep(a3__last), dispatch__a3__old, to_rep(a3__first),
  to_rep(a3__last)) = true)))))))))))))

axiom dispatch__root__compat_axiom7 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag, x1, dispatch__p__x2__fields,
  x2__attr__tag1, dispatch__p__x3__fields, x3__attr__tag1, y1,
  dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2, z2__first1,
  z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq7({ us_split_discrs1 = dispatch__r3__discrs;
  us_split_fields3 = dispatch__r3__fields }, { us_split_discrs1 =
  dispatch__r3__old__discrs; us_split_fields3 = dispatch__r3__old__fields
  }) = true)))))))))))))

axiom dispatch__child__compat_axiom :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep(((of_base({ us_split_fields1 =
  dispatch__p__x2__fields; attr__tag = x2__attr__tag1
  })).us_split_fields5).rec__dispatch__child__j) <  0)))))))))))))

axiom dispatch__child__compat_axiom1 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep(((of_base({ us_split_fields1 =
  dispatch__p__x2__fields; attr__tag = x2__attr__tag1
  })).us_split_fields5).rec__dispatch__root__i1) = to_rep(((of_base(x1)).us_split_fields5).rec__dispatch__root__i1))))))))))))))

axiom dispatch__child__compat_axiom2 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep(((of_base({ us_split_fields1 =
  dispatch__p__x3__fields; attr__tag = x3__attr__tag1
  })).us_split_fields5).rec__dispatch__root__i1) = to_rep(((of_base({
  us_split_fields1 = dispatch__p__x3__old__fields; attr__tag = x3__attr__tag1
  })).us_split_fields5).rec__dispatch__root__i1))))))))))))))

axiom dispatch__child__compat_axiom3 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (to_rep(((of_base({ us_split_fields1 =
  dispatch__p__x3__fields; attr__tag = x3__attr__tag1
  })).us_split_fields5).rec__dispatch__child__j) = to_rep(((of_base({
  us_split_fields1 = dispatch__p__x3__old__fields; attr__tag = x3__attr__tag1
  })).us_split_fields5).rec__dispatch__child__j))))))))))))))

axiom dispatch__child__compat_axiom4 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (dispatch__p__y3 = dispatch__p__y3__old)))))))))))))

axiom dispatch__child__compat_axiom5 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq4(dispatch__p__z3, to_rep(z3__first1),
  to_rep(z3__last1), dispatch__p__z3__old, to_rep(z3__first1),
  to_rep(z3__last1)) = true)))))))))))))

axiom dispatch__child__compat_axiom6 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq7({ us_split_discrs1 =
  dispatch__p__w3__discrs; us_split_fields3 = dispatch__p__w3__fields }, {
  us_split_discrs1 = dispatch__p__w3__old__discrs; us_split_fields3 =
  dispatch__p__w3__old__fields }) = true)))))))))))))

axiom dispatch__child__compat_axiom7 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (dispatch__c3 = dispatch__c3__old)))))))))))))

axiom dispatch__child__compat_axiom8 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq4(dispatch__a3, to_rep(a3__first),
  to_rep(a3__last), dispatch__a3__old, to_rep(a3__first),
  to_rep(a3__last)) = true)))))))))))))

axiom dispatch__child__compat_axiom9 :
  (forall x1:us_rep.
  (forall dispatch__p__x2__fields:us_split_fields.
  forall dispatch__p__x3__fields:us_split_fields.
  forall dispatch__p__x2__old__fields:us_split_fields.
  forall dispatch__p__x3__old__fields:us_split_fields.
  (forall x2__attr__tag1:int. forall x3__attr__tag1:int. forall y1:int.
  forall dispatch__p__y2:int. forall dispatch__p__y3:int.
  forall dispatch__c1:int. forall dispatch__c3:int.
  forall dispatch__p__y2__old:int. forall dispatch__p__y3__old:int.
  forall dispatch__c1__old:int. forall dispatch__c3__old:int.
  (forall z1:us_t.
  (forall dispatch__p__z2:(int,natural) farray.
  forall dispatch__p__z3:(int,natural) farray.
  forall dispatch__a3:(int,natural) farray.
  forall dispatch__a1:(int,natural) farray.
  forall dispatch__a2:(int,natural) farray.
  forall dispatch__p__z2__old:(int,natural) farray.
  forall dispatch__p__z3__old:(int,natural) farray.
  forall dispatch__a3__old:(int,natural) farray.
  forall dispatch__a1__old:(int,natural) farray.
  forall dispatch__a2__old:(int,natural) farray.
  (forall z2__first1:integer. forall z2__last1:integer.
  forall z3__first1:integer. forall z3__last1:integer.
  (forall w1:us_rep1.
  (forall dispatch__p__w2__fields:us_split_fields2.
  forall dispatch__p__w3__fields:us_split_fields2.
  forall dispatch__r1__fields:us_split_fields2.
  forall dispatch__r2__fields:us_split_fields2.
  forall dispatch__r3__fields:us_split_fields2.
  forall dispatch__p__w2__old__fields:us_split_fields2.
  forall dispatch__p__w3__old__fields:us_split_fields2.
  forall dispatch__r1__old__fields:us_split_fields2.
  forall dispatch__r2__old__fields:us_split_fields2.
  forall dispatch__r3__old__fields:us_split_fields2.
  (forall dispatch__p__w2__discrs:us_split_discrs.
  forall dispatch__p__w3__discrs:us_split_discrs.
  forall dispatch__r1__discrs:us_split_discrs.
  forall dispatch__r2__discrs:us_split_discrs.
  forall dispatch__r3__discrs:us_split_discrs.
  forall dispatch__p__w2__old__discrs:us_split_discrs.
  forall dispatch__p__w3__old__discrs:us_split_discrs.
  forall dispatch__r1__old__discrs:us_split_discrs.
  forall dispatch__r2__old__discrs:us_split_discrs.
  forall dispatch__r3__old__discrs:us_split_discrs.
  (forall w2__attr__constrained1:bool. forall w3__attr__constrained1:bool.
  (forall dispatch__c2:us_private. forall dispatch__c2__old:us_private
  [p__specific_post(us_tag1, x1, dispatch__p__x2__fields, x2__attr__tag1,
  dispatch__p__x3__fields, x3__attr__tag1, y1, dispatch__p__y2,
  dispatch__p__y3, z1, dispatch__p__z2, z2__first1, z2__last1,
  dispatch__p__z3, z3__first1, z3__last1, w1, dispatch__p__w2__fields,
  dispatch__p__w2__discrs, w2__attr__constrained1, dispatch__p__w3__fields,
  dispatch__p__w3__discrs, w3__attr__constrained1, dispatch__c1,
  dispatch__a3, dispatch__c2, dispatch__r1__fields, dispatch__r1__discrs,
  dispatch__c3, dispatch__r2__fields, dispatch__r2__discrs, dispatch__a1,
  dispatch__r3__fields, dispatch__r3__discrs, dispatch__a2,
  dispatch__p__x2__old__fields, dispatch__p__x3__old__fields,
  dispatch__p__y2__old, dispatch__p__y3__old, dispatch__p__z2__old,
  dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old)]. (p__specific_post(us_tag1, x1,
  dispatch__p__x2__fields, x2__attr__tag1, dispatch__p__x3__fields,
  x3__attr__tag1, y1, dispatch__p__y2, dispatch__p__y3, z1, dispatch__p__z2,
  z2__first1, z2__last1, dispatch__p__z3, z3__first1, z3__last1, w1,
  dispatch__p__w2__fields, dispatch__p__w2__discrs, w2__attr__constrained1,
  dispatch__p__w3__fields, dispatch__p__w3__discrs, w3__attr__constrained1,
  dispatch__c1, dispatch__a3, dispatch__c2, dispatch__r1__fields,
  dispatch__r1__discrs, dispatch__c3, dispatch__r2__fields,
  dispatch__r2__discrs, dispatch__a1, dispatch__r3__fields,
  dispatch__r3__discrs, dispatch__a2, dispatch__p__x2__old__fields,
  dispatch__p__x3__old__fields, dispatch__p__y2__old, dispatch__p__y3__old,
  dispatch__p__z2__old, dispatch__p__z3__old, dispatch__p__w2__old__fields,
  dispatch__p__w2__old__discrs, dispatch__p__w3__old__fields,
  dispatch__p__w3__old__discrs, dispatch__c1__old, dispatch__a3__old,
  dispatch__c2__old, dispatch__r1__old__fields, dispatch__r1__old__discrs,
  dispatch__c3__old, dispatch__r2__old__fields, dispatch__r2__old__discrs,
  dispatch__a1__old, dispatch__r3__old__fields, dispatch__r3__old__discrs,
  dispatch__a2__old) -> (bool_eq7({ us_split_discrs1 = dispatch__r3__discrs;
  us_split_fields3 = dispatch__r3__fields }, { us_split_discrs1 =
  dispatch__r3__old__discrs; us_split_fields3 = dispatch__r3__old__fields
  }) = true)))))))))))))

type ta1S__ref = { ta1S__content : us_t
}

function ta1S__ref_ta1S__content__projection(a: ta1S__ref) : us_t =
  (a).ta1S__content

type ta2S__ref = { ta2S__content : us_t
}

function ta2S__ref_ta2S__content__projection(a: ta2S__ref) : us_t =
  (a).ta2S__content

type ta3S__ref = { ta3S__content : us_t
}

function ta3S__ref_ta3S__content__projection(a: ta3S__ref) : us_t =
  (a).ta3S__content

predicate dynamic_invariant3(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

axiom id__post_axiom :
  (forall x:int [id(x)]. (dynamic_invariant1(x, true, true, true, true) ->
  (let result = id(x) : int in (id__function_guard(result, x) ->
  dynamic_invariant1(result, true, false, true, true)))))

axiom id__def_axiom :
  (forall x:int [id(x)]. (dynamic_invariant1(x, true, true, true, true) ->
  (id(x) = x)))

axiom b_max__def_axiom : id__function_guard(id(100), 100)

axiom b_max__def_axiom1 : (b_max = id(100))

predicate default_initial_assumption2(temp___expr_211: us_rep2,
  temp___skip_top_level_212: bool) = ((temp___expr_211).attr__tag1 = us_tag1)

predicate dynamic_invariant4(temp___expr_225: us_t, temp___is_init_221: bool,
  temp___skip_constant_222: bool, temp___do_toplevel_223: bool,
  temp___do_typ_inv_224: bool) = ((not (temp___skip_constant_222 = true)) ->
  (dynamic_property(1, b_max, first1(temp___expr_225),
  last1(temp___expr_225)) and ((first1(temp___expr_225) = 1) and
  (last1(temp___expr_225) = b_max))))

predicate default_initial_assumption3(temp___expr_227: us_t,
  temp___skip_top_level_228: bool) = ((first1(temp___expr_227) = 1) and
  (last1(temp___expr_227) = b_max))

predicate dynamic_invariant5(temp___expr_239: us_t, temp___is_init_235: bool,
  temp___skip_constant_236: bool, temp___do_toplevel_237: bool,
  temp___do_typ_inv_238: bool) = ((not (temp___skip_constant_236 = true)) ->
  (dynamic_property(1, b_max, first1(temp___expr_239),
  last1(temp___expr_239)) and ((first1(temp___expr_239) = 1) and
  (last1(temp___expr_239) = b_max))))

predicate default_initial_assumption4(temp___expr_241: us_t,
  temp___skip_top_level_242: bool) = ((first1(temp___expr_241) = 1) and
  (last1(temp___expr_241) = b_max))

predicate dynamic_invariant6(temp___expr_249: us_t, temp___is_init_245: bool,
  temp___skip_constant_246: bool, temp___do_toplevel_247: bool,
  temp___do_typ_inv_248: bool) = ((not (temp___skip_constant_246 = true)) ->
  (dynamic_property(1, b_max, first1(temp___expr_249),
  last1(temp___expr_249)) and ((first1(temp___expr_249) = 1) and
  (last1(temp___expr_249) = b_max))))

predicate default_initial_assumption5(temp___expr_251: us_t,
  temp___skip_top_level_252: bool) = ((first1(temp___expr_251) = 1) and
  (last1(temp___expr_251) = b_max))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 1)

logic rliteral1 : integer

axiom rliteral_axiom1 : (integerqtint(rliteral1) = 2)

logic rliteral2 : integer

axiom rliteral_axiom2 : (integerqtint(rliteral2) = 3)

 (* File "call_dispatch.adb", line 2, characters 0-0 *)
goal defqtvc :
  (forall c1:int. forall y2:int. forall c3:int.
  forall a1:(int,natural) farray. forall a2:(int,natural) farray.
  forall a3:(int,natural) farray. forall r1__split_fields:integer.
  forall r1__split_discrs:bool. forall r2__split_fields:integer.
  forall r2__split_discrs:bool. forall r3__split_fields:integer.
  forall r3__split_discrs:bool. forall c2:us_private.
  (dynamic_invariant1(b_max, true, false, true, true) ->
  ((id(100) = b_max) -> (dynamic_invariant1(b_max, true, false, true,
  true) -> ((id(100) = b_max) -> (dynamic_invariant(c1, true, false, true,
  true) -> (dynamic_invariant(c3, true, false, true, true) ->
  ((dynamic_property(1, b_max, to_rep(a1__first), to_rep(a1__last)) and
  ((to_rep(a1__first) = 1) and (to_rep(a1__last) = b_max))) ->
  ((dynamic_property(1, b_max, to_rep(a2__first), to_rep(a2__last)) and
  ((to_rep(a2__first) = 1) and (to_rep(a2__last) = b_max))) ->
  ((dynamic_property(1, b_max, to_rep(a3__first), to_rep(a3__last)) and
  ((to_rep(a3__first) = 1) and (to_rep(a3__last) = b_max))) ->
  ((r1__attr__constrained = false) -> ((r2__attr__constrained = false) ->
  ((r3__attr__constrained = false) ->
  (forall x1__split_fields:us_split_fields. ((x1__split_fields = {
  rec__dispatch__root__i = rliteral; rec__ext__ = us_null_ext__ }) ->
  ((x1__attr__tag = us_tag) ->
  (forall x2__split_fields:us_split_fields. ((x2__split_fields = {
  rec__dispatch__root__i = rliteral1; rec__ext__ = us_null_ext__ }) ->
  ((x2__attr__tag = us_tag) ->
  (forall x3__split_fields:us_split_fields. ((x3__split_fields = {
  rec__dispatch__root__i = rliteral2; rec__ext__ = us_null_ext__ }) ->
  ((x3__attr__tag = us_tag) -> (let call_dispatch__v1__assume = to_base({
  us_split_fields5 = { rec__dispatch__child__j = rliteral;
  rec__dispatch__root__i1 = rliteral; rec__ext__1 = us_null_ext__ };
  attr__tag1 = us_tag1 }) : us_rep in
  (forall v1__split_fields:us_split_fields.
  ((v1__split_fields = (call_dispatch__v1__assume).us_split_fields1) ->
  ((v1__attr__tag = (call_dispatch__v1__assume).attr__tag) ->
  (let call_dispatch__v2__assume = to_base({ us_split_fields5 = {
  rec__dispatch__child__j = rliteral1; rec__dispatch__root__i1 = rliteral1;
  rec__ext__1 = us_null_ext__ }; attr__tag1 = us_tag1 }) : us_rep in
  (forall v2__split_fields:us_split_fields.
  ((v2__split_fields = (call_dispatch__v2__assume).us_split_fields1) ->
  ((v2__attr__tag = (call_dispatch__v2__assume).attr__tag) ->
  (let call_dispatch__v3__assume = to_base({ us_split_fields5 = {
  rec__dispatch__child__j = rliteral2; rec__dispatch__root__i1 = rliteral2;
  rec__ext__1 = us_null_ext__ }; attr__tag1 = us_tag1 }) : us_rep in
  (forall v3__split_fields:us_split_fields.
  ((v3__split_fields = (call_dispatch__v3__assume).us_split_fields1) ->
  ((v3__attr__tag = (call_dispatch__v3__assume).attr__tag) -> (let o =
  init(c1) : int in ((init__function_guard(o, c1) and dynamic_invariant(o,
  true, false, true, true)) ->
  (forall y1:int. ((y1 = o) -> (dynamic_invariant(y1, true, false, true,
  true) -> (dynamic_invariant(y2, false, false, true, true) -> (let o1 =
  init(c3) : int in ((init__function_guard(o1, c3) and dynamic_invariant(o1,
  true, false, true, true)) ->
  (forall y3:int. ((y3 = o1) -> (dynamic_invariant(y3, true, false, true,
  true) ->
  (forall o2:int. ((to_rep(a1__last) = o2) ->
  (forall o3:int. ((to_rep(a1__first) = o3) -> (let o4 = of_array(a1, o3, o2)
  : us_t in (let call_dispatch__z1__assume = init1(o4) : us_t in
  ((init__function_guard1(call_dispatch__z1__assume, o4) and
  dynamic_invariant2(call_dispatch__z1__assume, true, false, true, true)) ->
  (forall z1:(int,natural) farray.
  ((z1 = to_array(call_dispatch__z1__assume)) ->
  ((to_rep(z1__first) = first1(call_dispatch__z1__assume)) ->
  ((to_rep(z1__last) = last1(call_dispatch__z1__assume)) ->
  (dynamic_property(1, 2147483647, to_rep(z1__first), to_rep(z1__last)) ->
  (forall o5:int. ((to_rep(a2__last) = o5) ->
  (forall o6:int. ((to_rep(a2__first) = o6) -> (let o7 = of_array(a2, o6, o5)
  : us_t in (let call_dispatch__z2__assume = init1(o7) : us_t in
  ((init__function_guard1(call_dispatch__z2__assume, o7) and
  dynamic_invariant2(call_dispatch__z2__assume, true, false, true, true)) ->
  (forall z2:(int,natural) farray.
  ((z2 = to_array(call_dispatch__z2__assume)) ->
  ((to_rep(z2__first) = first1(call_dispatch__z2__assume)) ->
  ((to_rep(z2__last) = last1(call_dispatch__z2__assume)) ->
  (dynamic_property(1, 2147483647, to_rep(z2__first), to_rep(z2__last)) ->
  (forall o8:int. ((to_rep(a3__last) = o8) ->
  (forall o9:int. ((to_rep(a3__first) = o9) -> (let o10 = of_array(a3, o9,
  o8) : us_t in (let call_dispatch__z3__assume = init1(o10) : us_t in
  ((init__function_guard1(call_dispatch__z3__assume, o10) and
  dynamic_invariant2(call_dispatch__z3__assume, true, false, true, true)) ->
  (forall z3:(int,natural) farray.
  ((z3 = to_array(call_dispatch__z3__assume)) ->
  ((to_rep(z3__first) = first1(call_dispatch__z3__assume)) ->
  ((to_rep(z3__last) = last1(call_dispatch__z3__assume)) ->
  (dynamic_property(1, 2147483647, to_rep(z3__first), to_rep(z3__last)) ->
  (let o11 = { us_split_discrs1 = { rec__dispatch__mut_rec__d =
  r1__split_discrs }; us_split_fields3 = { rec__dispatch__mut_rec__i =
  r1__split_fields } } : us_rep1 in (let call_dispatch__w1__assume =
  init2(o11) : us_rep1 in (init__function_guard2(call_dispatch__w1__assume,
  o11) ->
  (forall w1__split_fields:integer. (({ rec__dispatch__mut_rec__i =
  w1__split_fields } = (call_dispatch__w1__assume).us_split_fields3) ->
  (forall w1__split_discrs:bool. (({ rec__dispatch__mut_rec__d =
  w1__split_discrs } = (call_dispatch__w1__assume).us_split_discrs1) ->
  ((w1__attr__constrained = false) -> (let o12 = { us_split_discrs1 = {
  rec__dispatch__mut_rec__d = r2__split_discrs }; us_split_fields3 = {
  rec__dispatch__mut_rec__i = r2__split_fields } } : us_rep1 in
  (let call_dispatch__w2__assume = init2(o12) : us_rep1 in
  (init__function_guard2(call_dispatch__w2__assume, o12) ->
  (forall w2__split_fields:integer. (({ rec__dispatch__mut_rec__i =
  w2__split_fields } = (call_dispatch__w2__assume).us_split_fields3) ->
  (forall w2__split_discrs:bool. (({ rec__dispatch__mut_rec__d =
  w2__split_discrs } = (call_dispatch__w2__assume).us_split_discrs1) ->
  ((w2__attr__constrained = false) -> (let o13 = { us_split_discrs1 = {
  rec__dispatch__mut_rec__d = r3__split_discrs }; us_split_fields3 = {
  rec__dispatch__mut_rec__i = r3__split_fields } } : us_rep1 in
  (let call_dispatch__w3__assume = init2(o13) : us_rep1 in
  (init__function_guard2(call_dispatch__w3__assume, o13) ->
  (forall w3__split_fields:integer. (({ rec__dispatch__mut_rec__i =
  w3__split_fields } = (call_dispatch__w3__assume).us_split_fields3) ->
  (forall w3__split_discrs:bool. (({ rec__dispatch__mut_rec__d =
  w3__split_discrs } = (call_dispatch__w3__assume).us_split_discrs1) ->
  ((w3__attr__constrained = false) -> (((x1__attr__tag = x2__attr__tag) and
  (x1__attr__tag = x3__attr__tag)) ->
  (forall o14:int. ((to_rep(z1__last) = o14) ->
  (forall o15:int. ((to_rep(z1__first) = o15) ->
  (forall c11:int. ((c11 = c1) ->
  (forall a31:(int,natural) farray. ((a31 = a3) ->
  (forall r1__split_fields1:integer.
  ((r1__split_fields1 = r1__split_fields) ->
  (forall r1__split_discrs1:bool. ((r1__split_discrs1 = r1__split_discrs) ->
  (forall c31:int. ((c31 = c3) ->
  (forall r2__split_fields1:integer.
  ((r2__split_fields1 = r2__split_fields) ->
  (forall r2__split_discrs1:bool. ((r2__split_discrs1 = r2__split_discrs) ->
  (forall a11:(int,natural) farray. ((a11 = a1) ->
  (forall r3__split_fields1:integer.
  ((r3__split_fields1 = r3__split_fields) ->
  (forall r3__split_discrs1:bool. ((r3__split_discrs1 = r3__split_discrs) ->
  (forall a21:(int,natural) farray. ((a21 = a2) ->
  (forall x2__split_fields1:us_split_fields.
  forall x3__split_fields1:us_split_fields. forall y21:int. forall c32:int.
  forall y31:int. forall a22:(int,natural) farray.
  forall z21:(int,natural) farray. forall a32:(int,natural) farray.
  forall z31:(int,natural) farray. forall r2__split_fields2:integer.
  forall r2__split_discrs2:bool. forall w2__split_fields1:integer.
  forall w2__split_discrs1:bool. forall r3__split_fields2:integer.
  forall r3__split_discrs2:bool. forall w3__split_fields1:integer.
  forall w3__split_discrs1:bool. forall c21:us_private.
  ((((dynamic_invariant(y21, true, true, true, true) and
  dynamic_invariant(y31, true, true, true, true)) and dynamic_invariant(c32,
  true, true, true, true)) and p__specific_post(x1__attr__tag, {
  us_split_fields1 = x1__split_fields; attr__tag = x1__attr__tag },
  x2__split_fields1, x2__attr__tag, x3__split_fields1, x3__attr__tag, y1,
  y21, y31, of_array(z1, o15, o14), z21, z2__first, z2__last, z31, z3__first,
  z3__last, { us_split_discrs1 = { rec__dispatch__mut_rec__d =
  w1__split_discrs }; us_split_fields3 = { rec__dispatch__mut_rec__i =
  w1__split_fields } }, { rec__dispatch__mut_rec__i = w2__split_fields1 }, {
  rec__dispatch__mut_rec__d = w2__split_discrs1 }, w2__attr__constrained, {
  rec__dispatch__mut_rec__i = w3__split_fields1 }, {
  rec__dispatch__mut_rec__d = w3__split_discrs1 }, w3__attr__constrained, c1,
  a32, c21, { rec__dispatch__mut_rec__i = r1__split_fields }, {
  rec__dispatch__mut_rec__d = r1__split_discrs }, c32, {
  rec__dispatch__mut_rec__i = r2__split_fields2 }, {
  rec__dispatch__mut_rec__d = r2__split_discrs2 }, a1, {
  rec__dispatch__mut_rec__i = r3__split_fields2 }, {
  rec__dispatch__mut_rec__d = r3__split_discrs2 }, a22, x2__split_fields,
  x3__split_fields, y2, y3, z2, z3, { rec__dispatch__mut_rec__i =
  w2__split_fields }, { rec__dispatch__mut_rec__d = w2__split_discrs }, {
  rec__dispatch__mut_rec__i = w3__split_fields }, {
  rec__dispatch__mut_rec__d = w3__split_discrs }, c11, a31, c2, {
  rec__dispatch__mut_rec__i = r1__split_fields1 }, {
  rec__dispatch__mut_rec__d = r1__split_discrs1 }, c31, {
  rec__dispatch__mut_rec__i = r2__split_fields1 }, {
  rec__dispatch__mut_rec__d = r2__split_discrs1 }, a11, {
  rec__dispatch__mut_rec__i = r3__split_fields1 }, {
  rec__dispatch__mut_rec__d = r3__split_discrs1 }, a21)) ->
  ((to_rep((x2__split_fields1).rec__dispatch__root__i) = to_rep((x1__split_fields).rec__dispatch__root__i)) ->
  ((to_rep((x3__split_fields1).rec__dispatch__root__i) = 3) ->
  (((v1__attr__tag = v2__attr__tag) and (v1__attr__tag = v3__attr__tag)) ->
  (forall o16:int. ((to_rep(z1__last) = o16) ->
  (forall o17:int. ((to_rep(z1__first) = o17) ->
  (0 <  to_rep((v1__split_fields).rec__dispatch__root__i)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
