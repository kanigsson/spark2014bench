(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type us_main_type

type us_rep = { rec__rec_inv__list_acc__is_null_pointer : bool;
rec__rec_inv__list_acc__pointer_address : int;
rec__rec_inv__list_acc__pointer_value_abstr : us_main_type
}

function us_rep_rec__rec_inv__list_acc__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__rec_inv__list_acc__is_null_pointer

function us_rep_rec__rec_inv__list_acc__pointer_address__projection(a: us_rep) : int =
  (a).rec__rec_inv__list_acc__pointer_address

function us_rep_rec__rec_inv__list_acc__pointer_value_abstr__projection(a: us_rep) : us_main_type =
  (a).rec__rec_inv__list_acc__pointer_value_abstr

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__rec_inv__list_acc__is_null_pointer = (b).rec__rec_inv__list_acc__is_null_pointer) and
  ((not ((a).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  (((a).rec__rec_inv__list_acc__pointer_address = (b).rec__rec_inv__list_acc__pointer_address) and
  ((a).rec__rec_inv__list_acc__pointer_value_abstr = (b).rec__rec_inv__list_acc__pointer_value_abstr)))) then true else false)

logic dummy1 : us_rep

type list_acc__ref = { list_acc__content : us_rep
}

function list_acc__ref_list_acc__content__projection(a: list_acc__ref) : us_rep =
  (a).list_acc__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_discrs = { rec__rec_inv__list_d__d : bool
}

function us_split_discrs_rec__rec_inv__list_d__d__projection(a: us_split_discrs) : bool =
  (a).rec__rec_inv__list_d__d

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__rec_inv__list_d__val : integer;
rec__rec_inv__list_d__next : us_rep
}

function us_split_fields_rec__rec_inv__list_d__val__projection(a: us_split_fields) : integer =
  (a).rec__rec_inv__list_d__val

function us_split_fields_rec__rec_inv__list_d__next__projection(a: us_split_fields) : us_rep =
  (a).rec__rec_inv__list_d__next

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq3(a: us_rep1, b: us_rep1) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__rec_inv__list_d__d) = to_int(((b).us_split_discrs1).rec__rec_inv__list_d__d)) and
  ((to_rep(((a).us_split_fields1).rec__rec_inv__list_d__val) = to_rep(((b).us_split_fields1).rec__rec_inv__list_d__val)) and
  (bool_eq2(((a).us_split_fields1).rec__rec_inv__list_d__next,
  ((b).us_split_fields1).rec__rec_inv__list_d__next) = true))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic rec_inv__list_d__d__first__bit : int

logic rec_inv__list_d__d__last__bit : int

logic rec_inv__list_d__d__position : int

axiom rec_inv__list_d__d__first__bit_axiom :
  (0 <= rec_inv__list_d__d__first__bit)

axiom rec_inv__list_d__d__last__bit_axiom :
  (rec_inv__list_d__d__first__bit <  rec_inv__list_d__d__last__bit)

axiom rec_inv__list_d__d__position_axiom :
  (0 <= rec_inv__list_d__d__position)

logic rec_inv__list_d__val__first__bit : int

logic rec_inv__list_d__val__last__bit : int

logic rec_inv__list_d__val__position : int

axiom rec_inv__list_d__val__first__bit_axiom :
  (0 <= rec_inv__list_d__val__first__bit)

axiom rec_inv__list_d__val__last__bit_axiom :
  (rec_inv__list_d__val__first__bit <  rec_inv__list_d__val__last__bit)

axiom rec_inv__list_d__val__position_axiom :
  (0 <= rec_inv__list_d__val__position)

logic rec_inv__list_d__next__first__bit : int

logic rec_inv__list_d__next__last__bit : int

logic rec_inv__list_d__next__position : int

axiom rec_inv__list_d__next__first__bit_axiom :
  (0 <= rec_inv__list_d__next__first__bit)

axiom rec_inv__list_d__next__last__bit_axiom :
  (rec_inv__list_d__next__first__bit <  rec_inv__list_d__next__last__bit)

axiom rec_inv__list_d__next__position_axiom :
  (0 <= rec_inv__list_d__next__position)

logic user_eq1 : us_rep1, us_rep1 -> bool

logic dummy2 : us_rep1

type list_d__ref = { list_d__content : us_rep1
}

function list_d__ref_list_d__content__projection(a: list_d__ref) : us_rep1 =
  (a).list_d__content

predicate in_range2(rec__rec_inv__list_d__d1: bool, a: us_rep1) =
  (rec__rec_inv__list_d__d1 = ((a).us_split_discrs1).rec__rec_inv__list_d__d)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic rec_inv__list_d__d__first__bit1 : int

logic rec_inv__list_d__d__last__bit1 : int

logic rec_inv__list_d__d__position1 : int

axiom rec_inv__list_d__d__first__bit_axiom1 :
  (0 <= rec_inv__list_d__d__first__bit1)

axiom rec_inv__list_d__d__last__bit_axiom1 :
  (rec_inv__list_d__d__first__bit1 <  rec_inv__list_d__d__last__bit1)

axiom rec_inv__list_d__d__position_axiom1 :
  (0 <= rec_inv__list_d__d__position1)

logic rec_inv__list_d__val__first__bit1 : int

logic rec_inv__list_d__val__last__bit1 : int

logic rec_inv__list_d__val__position1 : int

axiom rec_inv__list_d__val__first__bit_axiom1 :
  (0 <= rec_inv__list_d__val__first__bit1)

axiom rec_inv__list_d__val__last__bit_axiom1 :
  (rec_inv__list_d__val__first__bit1 <  rec_inv__list_d__val__last__bit1)

axiom rec_inv__list_d__val__position_axiom1 :
  (0 <= rec_inv__list_d__val__position1)

logic rec_inv__list_d__next__first__bit1 : int

logic rec_inv__list_d__next__last__bit1 : int

logic rec_inv__list_d__next__position1 : int

axiom rec_inv__list_d__next__first__bit_axiom1 :
  (0 <= rec_inv__list_d__next__first__bit1)

axiom rec_inv__list_d__next__last__bit_axiom1 :
  (rec_inv__list_d__next__first__bit1 <  rec_inv__list_d__next__last__bit1)

axiom rec_inv__list_d__next__position_axiom1 :
  (0 <= rec_inv__list_d__next__position1)

logic user_eq2 : us_rep1, us_rep1 -> bool

logic dummy3 : us_rep1

type txS__ref = { txS__content : us_rep1
}

function txS__ref_txS__content__projection(a: txS__ref) : us_rep1 =
  (a).txS__content

logic x__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS : int

logic us_open : us_main_type -> us_rep1

logic us_close : us_rep1 -> us_main_type

axiom close_open :
  (forall x:us_main_type [us_open(x)]. (us_close(us_open(x)) = x))

axiom open_close :
  (forall x:us_rep1 [us_close(x)]. (us_open(us_close(x)) = x))

function rec__rec_inv__list_acc__pointer_value(a: us_rep) : us_rep1 =
  us_open((a).rec__rec_inv__list_acc__pointer_value_abstr)

predicate rec__rec_inv__list_acc__pointer_value__pred(a: us_rep) =
  (not ((a).rec__rec_inv__list_acc__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__rec_inv__list_acc__is_null_pointer = true)

logic temp___dynamic_invariant_188 : us_rep, bool, bool, bool, bool -> prop

predicate dynamic_invariant(temp___expr_185: us_rep,
  temp___is_init_181: bool, temp___skip_constant_182: bool,
  temp___do_toplevel_183: bool, temp___do_typ_inv_184: bool) =
  ((not ((temp___expr_185).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  ((let temp___186 = rec__rec_inv__list_acc__pointer_value(temp___expr_185)
  : us_rep1 in
  ((((temp___186).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___186).us_split_fields1).rec__rec_inv__list_d__val)))) and
  temp___dynamic_invariant_188(((rec__rec_inv__list_acc__pointer_value(temp___expr_185)).us_split_fields1).rec__rec_inv__list_d__next,
  true, false, true, temp___do_typ_inv_184)))

axiom def_axiom :
  (forall temp___expr_193:us_rep.
  (forall temp___is_init_189:bool. forall temp___skip_constant_190:bool.
  forall temp___do_toplevel_191:bool. forall temp___do_typ_inv_192:bool
  [temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192)].
  (temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192) ->
  ((not ((temp___expr_193).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  (let temp___194 = rec__rec_inv__list_acc__pointer_value(temp___expr_193)
  : us_rep1 in
  ((((temp___194).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___194).us_split_fields1).rec__rec_inv__list_d__val))))))))

axiom def_axiom1 :
  (forall temp___expr_193:us_rep.
  (forall temp___is_init_189:bool. forall temp___skip_constant_190:bool.
  forall temp___do_toplevel_191:bool. forall temp___do_typ_inv_192:bool
  [temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192)].
  (temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192) ->
  ((not ((temp___expr_193).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  temp___dynamic_invariant_188(((rec__rec_inv__list_acc__pointer_value(temp___expr_193)).us_split_fields1).rec__rec_inv__list_d__next,
  true, false, true, temp___do_typ_inv_192)))))

axiom def_axiom2 :
  (forall temp___expr_193:us_rep.
  (forall temp___is_init_189:bool. forall temp___skip_constant_190:bool.
  forall temp___do_toplevel_191:bool. forall temp___do_typ_inv_192:bool
  [temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192)].
  (((not ((temp___expr_193).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  ((let temp___194 = rec__rec_inv__list_acc__pointer_value(temp___expr_193)
  : us_rep1 in
  ((((temp___194).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___194).us_split_fields1).rec__rec_inv__list_d__val)))) and
  temp___dynamic_invariant_188(((rec__rec_inv__list_acc__pointer_value(temp___expr_193)).us_split_fields1).rec__rec_inv__list_d__next,
  true, false, true, temp___do_typ_inv_192))) ->
  temp___dynamic_invariant_188(temp___expr_193, temp___is_init_189,
  temp___skip_constant_190, temp___do_toplevel_191, temp___do_typ_inv_192))))

predicate default_initial_assumption(temp___expr_196: us_rep,
  temp___skip_top_level_197: bool) =
  ((temp___expr_196).rec__rec_inv__list_acc__is_null_pointer = true)

predicate dynamic_invariant1(temp___expr_213: us_rep1,
  temp___is_init_209: bool, temp___skip_constant_210: bool,
  temp___do_toplevel_211: bool, temp___do_typ_inv_212: bool) =
  ((((not (temp___skip_constant_210 = true)) -> in_range2(of_int(1),
  temp___expr_213)) and
  ((((temp___expr_213).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___expr_213).us_split_fields1).rec__rec_inv__list_d__val)))) and
  ((not ((((temp___expr_213).us_split_fields1).rec__rec_inv__list_d__next).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  ((let temp___218 =
  rec__rec_inv__list_acc__pointer_value(((temp___expr_213).us_split_fields1).rec__rec_inv__list_d__next)
  : us_rep1 in
  ((((temp___218).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___218).us_split_fields1).rec__rec_inv__list_d__val)))) and
  temp___dynamic_invariant_188(((rec__rec_inv__list_acc__pointer_value(((temp___expr_213).us_split_fields1).rec__rec_inv__list_d__next)).us_split_fields1).rec__rec_inv__list_d__next,
  true, false, true, temp___do_typ_inv_212))))

predicate default_initial_assumption1(temp___expr_220: us_rep1,
  temp___skip_top_level_221: bool) =
  ((((temp___expr_220).us_split_discrs1).rec__rec_inv__list_d__d = of_int(1)) and
  ((((temp___expr_220).us_split_fields1).rec__rec_inv__list_d__next).rec__rec_inv__list_acc__is_null_pointer = true))

predicate dynamic_predicate(temp___225: us_rep1) =
  ((((temp___225).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___225).us_split_fields1).rec__rec_inv__list_d__val)))

predicate in_range3(rec__rec_inv__list_d__d1: bool, a: us_rep1) =
  (rec__rec_inv__list_d__d1 = ((a).us_split_discrs1).rec__rec_inv__list_d__d)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic rec_inv__list_d__d__first__bit2 : int

logic rec_inv__list_d__d__last__bit2 : int

logic rec_inv__list_d__d__position2 : int

axiom rec_inv__list_d__d__first__bit_axiom2 :
  (0 <= rec_inv__list_d__d__first__bit2)

axiom rec_inv__list_d__d__last__bit_axiom2 :
  (rec_inv__list_d__d__first__bit2 <  rec_inv__list_d__d__last__bit2)

axiom rec_inv__list_d__d__position_axiom2 :
  (0 <= rec_inv__list_d__d__position2)

logic rec_inv__list_d__val__first__bit2 : int

logic rec_inv__list_d__val__last__bit2 : int

logic rec_inv__list_d__val__position2 : int

axiom rec_inv__list_d__val__first__bit_axiom2 :
  (0 <= rec_inv__list_d__val__first__bit2)

axiom rec_inv__list_d__val__last__bit_axiom2 :
  (rec_inv__list_d__val__first__bit2 <  rec_inv__list_d__val__last__bit2)

axiom rec_inv__list_d__val__position_axiom2 :
  (0 <= rec_inv__list_d__val__position2)

logic rec_inv__list_d__next__first__bit2 : int

logic rec_inv__list_d__next__last__bit2 : int

logic rec_inv__list_d__next__position2 : int

axiom rec_inv__list_d__next__first__bit_axiom2 :
  (0 <= rec_inv__list_d__next__first__bit2)

axiom rec_inv__list_d__next__last__bit_axiom2 :
  (rec_inv__list_d__next__first__bit2 <  rec_inv__list_d__next__last__bit2)

axiom rec_inv__list_d__next__position_axiom2 :
  (0 <= rec_inv__list_d__next__position2)

logic user_eq3 : us_rep1, us_rep1 -> bool

logic dummy4 : us_rep1

type t13b__ref = { t13b__content : us_rep1
}

function t13b__ref_t13b__content__projection(a: t13b__ref) : us_rep1 =
  (a).t13b__content

predicate dynamic_predicate1(temp___228: us_rep1) =
  ((((temp___228).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___228).us_split_fields1).rec__rec_inv__list_d__val)))

predicate in_range4(rec__rec_inv__list_d__d1: bool, a: us_rep1) =
  (rec__rec_inv__list_d__d1 = ((a).us_split_discrs1).rec__rec_inv__list_d__d)

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic rec_inv__list_d__d__first__bit3 : int

logic rec_inv__list_d__d__last__bit3 : int

logic rec_inv__list_d__d__position3 : int

axiom rec_inv__list_d__d__first__bit_axiom3 :
  (0 <= rec_inv__list_d__d__first__bit3)

axiom rec_inv__list_d__d__last__bit_axiom3 :
  (rec_inv__list_d__d__first__bit3 <  rec_inv__list_d__d__last__bit3)

axiom rec_inv__list_d__d__position_axiom3 :
  (0 <= rec_inv__list_d__d__position3)

logic rec_inv__list_d__val__first__bit3 : int

logic rec_inv__list_d__val__last__bit3 : int

logic rec_inv__list_d__val__position3 : int

axiom rec_inv__list_d__val__first__bit_axiom3 :
  (0 <= rec_inv__list_d__val__first__bit3)

axiom rec_inv__list_d__val__last__bit_axiom3 :
  (rec_inv__list_d__val__first__bit3 <  rec_inv__list_d__val__last__bit3)

axiom rec_inv__list_d__val__position_axiom3 :
  (0 <= rec_inv__list_d__val__position3)

logic rec_inv__list_d__next__first__bit3 : int

logic rec_inv__list_d__next__last__bit3 : int

logic rec_inv__list_d__next__position3 : int

axiom rec_inv__list_d__next__first__bit_axiom3 :
  (0 <= rec_inv__list_d__next__first__bit3)

axiom rec_inv__list_d__next__last__bit_axiom3 :
  (rec_inv__list_d__next__first__bit3 <  rec_inv__list_d__next__last__bit3)

axiom rec_inv__list_d__next__position_axiom3 :
  (0 <= rec_inv__list_d__next__position3)

logic user_eq4 : us_rep1, us_rep1 -> bool

logic dummy5 : us_rep1

type t19b__ref = { t19b__content : us_rep1
}

function t19b__ref_t19b__content__projection(a: t19b__ref) : us_rep1 =
  (a).t19b__content

predicate dynamic_predicate2(temp___230: us_rep1) =
  ((((temp___230).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___230).us_split_fields1).rec__rec_inv__list_d__val)))

predicate dynamic_invariant2(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant3(temp___expr_202: us_rep1,
  temp___is_init_198: bool, temp___skip_constant_199: bool,
  temp___do_toplevel_200: bool, temp___do_typ_inv_201: bool) =
  (((temp___do_toplevel_200 = true) ->
  ((((temp___expr_202).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___expr_202).us_split_fields1).rec__rec_inv__list_d__val)))) and
  ((not ((((temp___expr_202).us_split_fields1).rec__rec_inv__list_d__next).rec__rec_inv__list_acc__is_null_pointer = true)) ->
  ((let temp___205 =
  rec__rec_inv__list_acc__pointer_value(((temp___expr_202).us_split_fields1).rec__rec_inv__list_d__next)
  : us_rep1 in
  ((((temp___205).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___205).us_split_fields1).rec__rec_inv__list_d__val)))) and
  temp___dynamic_invariant_188(((rec__rec_inv__list_acc__pointer_value(((temp___expr_202).us_split_fields1).rec__rec_inv__list_d__next)).us_split_fields1).rec__rec_inv__list_d__next,
  true, false, true, temp___do_typ_inv_201))))

predicate dynamic_predicate3(temp___207: us_rep1) =
  ((((temp___207).us_split_discrs1).rec__rec_inv__list_d__d = true) ->
  (0 <  to_rep(((temp___207).us_split_fields1).rec__rec_inv__list_d__val)))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 1)

logic rliteral1 : integer

axiom rliteral_axiom1 : (integerqtint(rliteral1) = (- 2))

 (* File "rec_inv.adb", line 1, characters 0-0 *)
goal defqtvc : (let temp___235 = { us_split_discrs1 = {
  rec__rec_inv__list_d__d = of_int(1) }; us_split_fields1 = {
  rec__rec_inv__list_d__val = rliteral; rec__rec_inv__list_d__next =
  us_null_pointer } } : us_rep1 in (dynamic_predicate1(temp___235) ->
  (dynamic_predicate(temp___235) ->
  (forall x__split_fields:us_split_fields.
  ((x__split_fields = (temp___235).us_split_fields1) ->
  ((x__split_discrs = (temp___235).us_split_discrs1) -> (dynamic_invariant1({
  us_split_discrs1 = x__split_discrs; us_split_fields1 = x__split_fields },
  true, false, true, true) -> dynamic_predicate2({ us_split_discrs1 = {
  rec__rec_inv__list_d__d = of_int(0) }; us_split_fields1 = {
  rec__rec_inv__list_d__val = rliteral1; rec__rec_inv__list_d__next =
  us_null_pointer } }))))))))
