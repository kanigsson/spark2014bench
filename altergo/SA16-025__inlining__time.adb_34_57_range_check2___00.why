(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range1(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE1 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> bool

type year_t

logic year_tqtint : year_t -> int

axiom year_tqtaxiom : (forall i:year_t. (0 <= year_tqtint(i)))

axiom year_tqtaxiom1 : (forall i:year_t. (year_tqtint(i) <= 9999))

predicate in_range2(x: int) = ((0 <= x) and (x <= 9999))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : year_t, year_t -> bool

logic dummy1 : year_t

type year_t__ref = { year_t__content : year_t
}

function year_t__ref_year_t__content__projection(a: year_t__ref) : year_t =
  (a).year_t__content

function to_rep(x: year_t) : int = year_tqtint(x)

logic of_rep : int -> year_t

axiom inversion_axiom :
  (forall x:year_t [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:year_t [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type day_of_year_t

logic day_of_year_tqtint : day_of_year_t -> int

axiom day_of_year_tqtaxiom :
  (forall i:day_of_year_t. (0 <= day_of_year_tqtint(i)))

axiom day_of_year_tqtaxiom1 :
  (forall i:day_of_year_t. (day_of_year_tqtint(i) <= 366))

predicate in_range3(x: int) = ((0 <= x) and (x <= 366))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : day_of_year_t, day_of_year_t -> bool

logic dummy2 : day_of_year_t

type day_of_year_t__ref = { day_of_year_t__content : day_of_year_t
}

function day_of_year_t__ref_day_of_year_t__content__projection(a: day_of_year_t__ref) : day_of_year_t =
  (a).day_of_year_t__content

function to_rep1(x: day_of_year_t) : int = day_of_year_tqtint(x)

logic of_rep1 : int -> day_of_year_t

axiom inversion_axiom1 :
  (forall x:day_of_year_t [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:day_of_year_t [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

type second_of_day_t

logic second_of_day_tqtint : second_of_day_t -> int

axiom second_of_day_tqtaxiom :
  (forall i:second_of_day_t. (0 <= second_of_day_tqtint(i)))

axiom second_of_day_tqtaxiom1 :
  (forall i:second_of_day_t. (second_of_day_tqtint(i) <= 86399))

predicate in_range4(x: int) = ((0 <= x) and (x <= 86399))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : second_of_day_t, second_of_day_t -> bool

logic dummy3 : second_of_day_t

type second_of_day_t__ref = { second_of_day_t__content : second_of_day_t
}

function second_of_day_t__ref_second_of_day_t__content__projection(a: second_of_day_t__ref) : second_of_day_t =
  (a).second_of_day_t__content

function to_rep2(x: second_of_day_t) : int = second_of_day_tqtint(x)

logic of_rep2 : int -> second_of_day_t

axiom inversion_axiom2 :
  (forall x:second_of_day_t [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:second_of_day_t [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type nanopart_of_whole_t

logic nanopart_of_whole_tqtint : nanopart_of_whole_t -> int

axiom nanopart_of_whole_tqtaxiom :
  (forall i:nanopart_of_whole_t. (0 <= nanopart_of_whole_tqtint(i)))

axiom nanopart_of_whole_tqtaxiom1 :
  (forall i:nanopart_of_whole_t. (nanopart_of_whole_tqtint(i) <= 999999999))

predicate in_range5(x: int) = ((0 <= x) and (x <= 999999999))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : nanopart_of_whole_t, nanopart_of_whole_t -> bool

logic dummy4 : nanopart_of_whole_t

type nanopart_of_whole_t__ref = { nanopart_of_whole_t__content :
nanopart_of_whole_t
}

function nanopart_of_whole_t__ref_nanopart_of_whole_t__content__projection(a: nanopart_of_whole_t__ref) : nanopart_of_whole_t =
  (a).nanopart_of_whole_t__content

function to_rep3(x: nanopart_of_whole_t) : int = nanopart_of_whole_tqtint(x)

logic of_rep3 : int -> nanopart_of_whole_t

axiom inversion_axiom3 :
  (forall x:nanopart_of_whole_t [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:nanopart_of_whole_t [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type us_split_fields = { rec__time__t__valid : bool; rec__time__t__year :
year_t; rec__time__t__day : day_of_year_t; rec__time__t__second :
second_of_day_t; rec__time__t__fraction : nanopart_of_whole_t
}

function us_split_fields_rec__time__t__valid__projection(a: us_split_fields) : bool =
  (a).rec__time__t__valid

function us_split_fields_rec__time__t__year__projection(a: us_split_fields) : year_t =
  (a).rec__time__t__year

function us_split_fields_rec__time__t__day__projection(a: us_split_fields) : day_of_year_t =
  (a).rec__time__t__day

function us_split_fields_rec__time__t__second__projection(a: us_split_fields) : second_of_day_t =
  (a).rec__time__t__second

function us_split_fields_rec__time__t__fraction__projection(a: us_split_fields) : nanopart_of_whole_t =
  (a).rec__time__t__fraction

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__2__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq6(a: us_rep, b: us_rep) : bool =
  (if (((to_int(((a).us_split_fields1).rec__time__t__valid) = to_int(((b).us_split_fields1).rec__time__t__valid)) and
  (to_rep(((a).us_split_fields1).rec__time__t__year) = to_rep(((b).us_split_fields1).rec__time__t__year))) and
  (((to_rep1(((a).us_split_fields1).rec__time__t__day) = to_rep1(((b).us_split_fields1).rec__time__t__day)) and
  (to_rep2(((a).us_split_fields1).rec__time__t__second) = to_rep2(((b).us_split_fields1).rec__time__t__second))) and
  (to_rep3(((a).us_split_fields1).rec__time__t__fraction) = to_rep3(((b).us_split_fields1).rec__time__t__fraction)))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic time__t__valid__first__bit : int

logic time__t__valid__last__bit : int

logic time__t__valid__position : int

axiom time__t__valid__first__bit_axiom : (0 <= time__t__valid__first__bit)

axiom time__t__valid__last__bit_axiom :
  (time__t__valid__first__bit <  time__t__valid__last__bit)

axiom time__t__valid__position_axiom : (0 <= time__t__valid__position)

logic time__t__year__first__bit : int

logic time__t__year__last__bit : int

logic time__t__year__position : int

axiom time__t__year__first__bit_axiom : (0 <= time__t__year__first__bit)

axiom time__t__year__last__bit_axiom :
  (time__t__year__first__bit <  time__t__year__last__bit)

axiom time__t__year__position_axiom : (0 <= time__t__year__position)

logic time__t__day__first__bit : int

logic time__t__day__last__bit : int

logic time__t__day__position : int

axiom time__t__day__first__bit_axiom : (0 <= time__t__day__first__bit)

axiom time__t__day__last__bit_axiom :
  (time__t__day__first__bit <  time__t__day__last__bit)

axiom time__t__day__position_axiom : (0 <= time__t__day__position)

logic time__t__second__first__bit : int

logic time__t__second__last__bit : int

logic time__t__second__position : int

axiom time__t__second__first__bit_axiom : (0 <= time__t__second__first__bit)

axiom time__t__second__last__bit_axiom :
  (time__t__second__first__bit <  time__t__second__last__bit)

axiom time__t__second__position_axiom : (0 <= time__t__second__position)

logic time__t__fraction__first__bit : int

logic time__t__fraction__last__bit : int

logic time__t__fraction__position : int

axiom time__t__fraction__first__bit_axiom :
  (0 <= time__t__fraction__first__bit)

axiom time__t__fraction__last__bit_axiom :
  (time__t__fraction__first__bit <  time__t__fraction__last__bit)

axiom time__t__fraction__position_axiom : (0 <= time__t__fraction__position)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type t__ref = { t__content : us_rep
}

function t__ref_t__content__projection(a: t__ref) : us_rep = (a).t__content

logic time_in : us_rep

logic attr__ATTRIBUTE_ADDRESS : int

logic seconds : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic ddays_in_year : int -> int

logic ddays_in_year__function_guard : int, int -> prop

predicate dynamic_invariant1(temp___expr_166: int, temp___is_init_162: bool,
  temp___skip_constant_163: bool, temp___do_toplevel_164: bool,
  temp___do_typ_inv_165: bool) = (((temp___is_init_162 = true) or
  (0 <= 9999)) -> in_range2(temp___expr_166))

type days_in_year_t

logic days_in_year_tqtint : days_in_year_t -> int

axiom days_in_year_tqtaxiom :
  (forall i:days_in_year_t. (365 <= days_in_year_tqtint(i)))

axiom days_in_year_tqtaxiom1 :
  (forall i:days_in_year_t. (days_in_year_tqtint(i) <= 366))

predicate in_range6(x: int) = ((365 <= x) and (x <= 366))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : days_in_year_t, days_in_year_t -> bool

logic dummy6 : days_in_year_t

type days_in_year_t__ref = { days_in_year_t__content : days_in_year_t
}

function days_in_year_t__ref_days_in_year_t__content__projection(a: days_in_year_t__ref) : days_in_year_t =
  (a).days_in_year_t__content

predicate dynamic_invariant2(temp___expr_229: int, temp___is_init_225: bool,
  temp___skip_constant_226: bool, temp___do_toplevel_227: bool,
  temp___do_typ_inv_228: bool) = (((temp___is_init_225 = true) or
  (365 <= 366)) -> in_range6(temp___expr_229))

axiom ddays_in_year__post_axiom :
  (forall year:int [ddays_in_year(year)]. (dynamic_invariant1(year, true,
  true, true, true) -> (let result = ddays_in_year(year) : int in
  (ddays_in_year__function_guard(result, year) -> dynamic_invariant2(result,
  true, false, true, true)))))

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

predicate dynamic_invariant3(temp___expr_187: int, temp___is_init_183: bool,
  temp___skip_constant_184: bool, temp___do_toplevel_185: bool,
  temp___do_typ_inv_186: bool) = (((temp___is_init_183 = true) or
  (0 <= 366)) -> in_range3(temp___expr_187))

predicate dynamic_invariant4(temp___expr_215: int, temp___is_init_211: bool,
  temp___skip_constant_212: bool, temp___do_toplevel_213: bool,
  temp___do_typ_inv_214: bool) = (((temp___is_init_211 = true) or
  (0 <= 86399)) -> in_range4(temp___expr_215))

predicate dynamic_invariant5(temp___expr_222: int, temp___is_init_218: bool,
  temp___skip_constant_219: bool, temp___do_toplevel_220: bool,
  temp___do_typ_inv_221: bool) = (((temp___is_init_218 = true) or
  (0 <= 999999999)) -> in_range5(temp___expr_222))

 (* File "time.ads", line 71, characters 0-0 *)
goal defqtvc :
  (forall temp_seconds:int. forall temp_days:int. forall temp_years:int.
  forall temp_days_in_year:int. (dynamic_invariant(seconds, true, false,
  true, true) -> (dynamic_invariant(temp_seconds, false, false, true,
  true) -> (dynamic_invariant(temp_days, false, false, true, true) ->
  (dynamic_invariant(temp_years, false, false, true, true) ->
  (dynamic_invariant(temp_days_in_year, false, false, true, true) ->
  (forall temp_time__split_fields:us_split_fields.
  ((temp_time__split_fields = (time_in).us_split_fields1) ->
  (forall o:int.
  ((to_rep((temp_time__split_fields).rec__time__t__year) = o) ->
  (forall temp_years1:int. ((temp_years1 = o) -> in_range2(temp_years1)))))))))))))
