(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type t

logic tqtint : t -> int

axiom tqtaxiom : (forall i:t. ((- 2147483648) <= tqtint(i)))

axiom tqtaxiom1 : (forall i:t. (tqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : t, t -> bool

logic dummy : t

type t__ref = { t__content : t
}

function t__ref_t__content__projection(a: t__ref) : t = (a).t__content

logic x__pointer_address : int

logic x__is_null_pointer : bool

logic attr__ATTRIBUTE_ADDRESS : int

logic y__pointer_address : int

logic y__is_null_pointer : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

predicate dynamic_invariant(temp___expr_158: int, temp___is_init_154: bool,
  temp___skip_constant_155: bool, temp___do_toplevel_156: bool,
  temp___do_typ_inv_157: bool) = (((temp___is_init_154 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_158))

function to_rep(x: t) : int = tqtint(x)

logic of_rep : int -> t

axiom inversion_axiom : (forall x:t [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:t [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_rep = { rec__pointers__t_ptr__is_null_pointer : bool;
rec__pointers__t_ptr__pointer_address : int;
rec__pointers__t_ptr__pointer_value : t
}

function us_rep_rec__pointers__t_ptr__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__pointers__t_ptr__is_null_pointer

function us_rep_rec__pointers__t_ptr__pointer_address__projection(a: us_rep) : int =
  (a).rec__pointers__t_ptr__pointer_address

function us_rep_rec__pointers__t_ptr__pointer_value__projection(a: us_rep) : t =
  (a).rec__pointers__t_ptr__pointer_value

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__pointers__t_ptr__is_null_pointer = (b).rec__pointers__t_ptr__is_null_pointer) and
  ((not ((a).rec__pointers__t_ptr__is_null_pointer = true)) ->
  (((a).rec__pointers__t_ptr__pointer_address = (b).rec__pointers__t_ptr__pointer_address) and
  ((a).rec__pointers__t_ptr__pointer_value = (b).rec__pointers__t_ptr__pointer_value)))) then true else false)

predicate rec__pointers__t_ptr__pointer_value__pred(a: us_rep) =
  (not ((a).rec__pointers__t_ptr__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__pointers__t_ptr__is_null_pointer = true)

logic dummy1 : us_rep

type t_ptr__ref = { t_ptr__content : us_rep
}

function t_ptr__ref_t_ptr__content__projection(a: t_ptr__ref) : us_rep =
  (a).t_ptr__content

predicate dynamic_invariant1(temp___expr_165: us_rep,
  temp___is_init_161: bool, temp___skip_constant_162: bool,
  temp___do_toplevel_163: bool, temp___do_typ_inv_164: bool) =
  (not ((temp___expr_165).rec__pointers__t_ptr__is_null_pointer = true))

predicate default_initial_assumption(temp___expr_166: us_rep,
  temp___skip_top_level_167: bool) =
  ((temp___expr_166).rec__pointers__t_ptr__is_null_pointer = true)

 (* File "pointers.ads", line 7, characters 0-0 *)
goal defqtvc :
  (forall x__pointer_value:t. forall y__pointer_value:t.
  (forall x__pointer_value1:t. ((x__pointer_value1 = x__pointer_value) ->
  (forall y__pointer_value1:t. ((y__pointer_value1 = y__pointer_value) ->
  (dynamic_invariant1({ rec__pointers__t_ptr__is_null_pointer =
  x__is_null_pointer; rec__pointers__t_ptr__pointer_address =
  x__pointer_address; rec__pointers__t_ptr__pointer_value = x__pointer_value
  }, true, false, true, true) -> (dynamic_invariant1({
  rec__pointers__t_ptr__is_null_pointer = y__is_null_pointer;
  rec__pointers__t_ptr__pointer_address = y__pointer_address;
  rec__pointers__t_ptr__pointer_value = y__pointer_value }, true, false,
  true, true) ->
  (forall o:int. ((to_rep(x__pointer_value) = o) ->
  (forall tmp:int. ((tmp = o) -> (dynamic_invariant(tmp, true, false, true,
  true) -> rec__pointers__t_ptr__pointer_value__pred({
  rec__pointers__t_ptr__is_null_pointer = x__is_null_pointer;
  rec__pointers__t_ptr__pointer_address = x__pointer_address;
  rec__pointers__t_ptr__pointer_value = x__pointer_value })))))))))))))
