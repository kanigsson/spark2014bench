(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

logic first : int

logic last : int

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type my_index__ref = { my_index__content : integer
}

function my_index__ref_my_index__content__projection(a: my_index__ref) : integer =
  (a).my_index__content

logic first1 : int

logic last1 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : integer, integer -> bool

logic dummy2 : integer

type my_index_2__ref = { my_index_2__content : integer
}

function my_index_2__ref_my_index_2__content__projection(a: my_index_2__ref) : integer =
  (a).my_index_2__content

type map

type map__ref = { map__content : map
}

logic get : map, int, int -> integer

logic set : map, int, int, integer -> map

axiom Select_eq :
  (forall m:map.
  (forall i:int.
  (forall j:int.
  (forall a:integer [set(m, i, j, a)]. (get(set(m, i, j, a), i, j) = a)))))

axiom Select_neq :
  (forall m:map.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:integer [get(set(m, i, j, a), i2, j2)| set(m, i, j, a), get(m,
  i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get(set(m, i, j, a), i2,
  j2) = get(m, i2, j2)))))))

logic slide : map, int, int, int, int -> map

axiom slide_def :
  (forall a:map.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get(slide(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get(slide(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

function bool_eq4(a: map, a__first: int, a__last: int, a__first_2: int,
  a__last_2: int, b: map, b__first: int, b__last: int, b__first_2: int,
  b__last_2: int) : bool =
  (if (((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (if (a__first_2 <= a__last_2) then ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))) else (b__last_2 <  b__first_2))) and
  (forall temp___idx_159:int. forall temp___idx_160:int.
  ((((a__first <= temp___idx_159) and (temp___idx_159 <= a__last)) and
  ((a__first_2 <= temp___idx_160) and (temp___idx_160 <= a__last_2))) ->
  (to_rep(get(a, temp___idx_159, temp___idx_160)) = to_rep(get(b,
  ((b__first - a__first) + temp___idx_159),
  ((b__first_2 - a__first_2) + temp___idx_160))))))) then true else false)

axiom bool_eq_rev :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  (b__first_2 <= b__last_2)))))

axiom bool_eq_rev4 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))))))

axiom bool_eq_rev5 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first_2 <= a__last_2)) ->
  (b__last_2 <  b__first_2)))))

axiom bool_eq_rev6 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq4(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) ->
  (forall temp___idx_159:int. forall temp___idx_160:int.
  ((((a__first <= temp___idx_159) and (temp___idx_159 <= a__last)) and
  ((a__first_2 <= temp___idx_160) and (temp___idx_160 <= a__last_2))) ->
  (to_rep(get(a, temp___idx_159, temp___idx_160)) = to_rep(get(b,
  ((b__first - a__first) + temp___idx_159),
  ((b__first_2 - a__first_2) + temp___idx_160)))))))))

type t

logic first2 : t -> integer

logic last2 : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first2(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last2(mk(f, l))) = l))))

predicate dynamic_property2(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property(range_first, range_last, low) and
  dynamic_property(range_first, range_last, high)))))

type t1

logic first3 : t1 -> integer

logic last3 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first3(mk1(f, l))) = f))))

axiom mk_def3 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last3(mk1(f, l))) = l))))

predicate dynamic_property3(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property1(range_first, range_last, low) and
  dynamic_property1(range_first, range_last, high)))))

type us_t = { elts : map; rt : t; rt_2 : t1
}

function to_array(a: us_t) : map = (a).elts

function of_array(a: map, f: int, l: int, f2: int, l2: int) : us_t = { elts =
  a; rt = mk(f, l); rt_2 = mk1(f2, l2) }

function first4(a: us_t) : int = to_rep(first2((a).rt))

function last4(a: us_t) : int = to_rep(last2((a).rt))

function length(a: us_t) : int =
  (if (first4(a) <= last4(a)) then ((last4(a) - first4(a)) + 1) else 0)

function first_2(a: us_t) : int = to_rep(first3((a).rt_2))

function last_2(a: us_t) : int = to_rep(last3((a).rt_2))

function length_2(a: us_t) : int =
  (if (first_2(a) <= last_2(a)) then ((last_2(a) - first_2(a)) + 1) else 0)

predicate dynamic_property4(range_first1: int, range_last1: int, f1: int,
  l1: int, range_first2: int, range_last2: int, f2: int, l2: int) =
  (dynamic_property2(range_first1, range_last1, f1, l1) and
  dynamic_property3(range_first2, range_last2, f2, l2))

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep(first2((x).rt)), to_rep(last2((x).rt)), to_rep(first3((x).rt_2)),
  to_rep(last3((x).rt_2)), (y).elts, to_rep(first2((y).rt)),
  to_rep(last2((y).rt)), to_rep(first3((y).rt_2)), to_rep(last3((y).rt_2)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type my_matrix__ref = { my_matrix__content : us_t
}

function my_matrix__ref_my_matrix__content__projection(a: my_matrix__ref) : us_t =
  (a).my_matrix__content

logic ind_prop : us_t, int, int, int -> bool

logic ind_prop__function_guard : bool, us_t, int, int, int -> prop

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

logic fst : int

logic attr__ATTRIBUTE_ADDRESS : int

logic lst : int

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate dynamic_invariant1(temp___expr_172: int, temp___is_init_168: bool,
  temp___skip_constant_169: bool, temp___do_toplevel_170: bool,
  temp___do_typ_inv_171: bool) = (((temp___is_init_168 = true) or
  (first <= last)) -> dynamic_property(first, last, temp___expr_172))

axiom first__def_axiom : (first = fst)

axiom last__def_axiom : (last = lst)

logic fst2 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic lst2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant2(temp___expr_179: int, temp___is_init_175: bool,
  temp___skip_constant_176: bool, temp___do_toplevel_177: bool,
  temp___do_typ_inv_178: bool) = (((temp___is_init_175 = true) or
  (first1 <= last1)) -> dynamic_property1(first1, last1, temp___expr_179))

axiom first__def_axiom1 : (first1 = fst2)

axiom last__def_axiom1 : (last1 = lst2)

predicate dynamic_invariant3(temp___expr_186: us_t, temp___is_init_182: bool,
  temp___skip_constant_183: bool, temp___do_toplevel_184: bool,
  temp___do_typ_inv_185: bool) = ((not (temp___skip_constant_183 = true)) ->
  dynamic_property4(first, last, first4(temp___expr_186),
  last4(temp___expr_186), first1, last1, first_2(temp___expr_186),
  last_2(temp___expr_186)))

logic final_prop : us_t, int -> bool

logic final_prop__function_guard : bool, us_t, int -> prop

logic f_2 : int, int -> int

logic f_2__function_guard : int, int, int -> prop

axiom f_2__post_axiom :
  (forall x:int. forall i:int [f_2(x, i)]. ((dynamic_invariant(x, true, true,
  true, true) and dynamic_invariant(i, true, true, true, true)) ->
  (let result = f_2(x, i) : int in (f_2__function_guard(result, x, i) ->
  dynamic_invariant(result, true, false, true, true)))))

type array_type__ref = { array_type__content : us_t
}

function array_type__ref_array_type__content__2__projection(a: array_type__ref) : us_t =
  (a).array_type__content

logic a : us_t

logic attr__ATTRIBUTE_ADDRESS4 : int

logic init : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic first5 : int

logic last5 : int

predicate dynamic_property5(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : integer, integer -> bool

logic dummy4 : integer

type index_1__ref = { index_1__content : integer
}

function index_1__ref_index_1__content__2__projection(a1: index_1__ref) : integer =
  (a1).index_1__content

logic first6 : int

logic last6 : int

predicate dynamic_property6(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : integer, integer -> bool

logic dummy5 : integer

type index_2__ref = { index_2__content : integer
}

function index_2__ref_index_2__content__2__projection(a1: index_2__ref) : integer =
  (a1).index_2__content

type element_out

logic element_outqtint : element_out -> int

axiom element_outqtaxiom :
  (forall i:element_out. ((- 2147483648) <= element_outqtint(i)))

axiom element_outqtaxiom1 :
  (forall i:element_out. (element_outqtint(i) <= 2147483647))

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq8(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : element_out, element_out -> bool

logic dummy6 : element_out

type element_out__ref = { element_out__content : element_out
}

function element_out__ref_element_out__content__2__projection(a1: element_out__ref) : element_out =
  (a1).element_out__content

function to_rep1(x: element_out) : int = element_outqtint(x)

logic of_rep1 : int -> element_out

axiom inversion_axiom1 :
  (forall x:element_out [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:element_out [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map1

type map__ref1 = { map__content1 : map1
}

logic get1 : map1, int, int -> element_out

logic set1 : map1, int, int, element_out -> map1

axiom Select_eq1 :
  (forall m:map1.
  (forall i:int.
  (forall j:int.
  (forall a1:element_out [set1(m, i, j, a1)]. (get1(set1(m, i, j, a1), i,
  j) = a1)))))

axiom Select_neq1 :
  (forall m:map1.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a1:element_out [get1(set1(m, i, j, a1), i2, j2)| set1(m, i, j, a1),
  get1(m, i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get1(set1(m, i, j,
  a1), i2, j2) = get1(m, i2, j2)))))))

logic slide1 : map1, int, int, int, int -> map1

axiom slide_def1 :
  (forall a1:map1.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get1(slide1(a1, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get1(slide1(a1, old_first, new_first, old_first_2,
  new_first_2), i, j) = get1(a1, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

function bool_eq9(a1: map1, a__first: int, a__last: int, a__first_2: int,
  a__last_2: int, b: map1, b__first: int, b__last: int, b__first_2: int,
  b__last_2: int) : bool =
  (if (((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (if (a__first_2 <= a__last_2) then ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))) else (b__last_2 <  b__first_2))) and
  (forall temp___idx_164:int. forall temp___idx_165:int.
  ((((a__first <= temp___idx_164) and (temp___idx_164 <= a__last)) and
  ((a__first_2 <= temp___idx_165) and (temp___idx_165 <= a__last_2))) ->
  (to_rep1(get1(a1, temp___idx_164, temp___idx_165)) = to_rep1(get1(b,
  ((b__first - a__first) + temp___idx_164),
  ((b__first_2 - a__first_2) + temp___idx_165))))))) then true else false)

axiom bool_eq_rev7 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev8 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev9 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev10 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  (b__first_2 <= b__last_2)))))

axiom bool_eq_rev11 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((a__first_2 <= a__last_2) ->
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2))))))

axiom bool_eq_rev12 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) -> ((not (a__first_2 <= a__last_2)) ->
  (b__last_2 <  b__first_2)))))

axiom bool_eq_rev13 :
  (forall a1:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq9(b, b__first,
  b__last, b__first_2, b__last_2, a1, a__first, a__last, a__first_2,
  a__last_2) = true) ->
  (forall temp___idx_164:int. forall temp___idx_165:int.
  ((((a__first <= temp___idx_164) and (temp___idx_164 <= a__last)) and
  ((a__first_2 <= temp___idx_165) and (temp___idx_165 <= a__last_2))) ->
  (to_rep1(get1(a1, temp___idx_164, temp___idx_165)) = to_rep1(get1(b,
  ((b__first - a__first) + temp___idx_164),
  ((b__first_2 - a__first_2) + temp___idx_165)))))))))

type t2

logic first7 : t2 -> integer

logic last7 : t2 -> integer

logic mk2 : int, int -> t2

axiom mk_def4 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first7(mk2(f, l))) = f))))

axiom mk_def5 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last7(mk2(f, l))) = l))))

predicate dynamic_property7(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property5(range_first, range_last, low) and
  dynamic_property5(range_first, range_last, high)))))

type t3

logic first8 : t3 -> integer

logic last8 : t3 -> integer

logic mk3 : int, int -> t3

axiom mk_def6 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first8(mk3(f, l))) = f))))

axiom mk_def7 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last8(mk3(f, l))) = l))))

predicate dynamic_property8(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property6(range_first, range_last, low) and
  dynamic_property6(range_first, range_last, high)))))

type us_t1 = { elts1 : map1; rt1 : t2; rt_21 : t3
}

function to_array1(a1: us_t1) : map1 = (a1).elts1

function of_array1(a1: map1, f: int, l: int, f2: int, l2: int) : us_t1 = {
  elts1 = a1; rt1 = mk2(f, l); rt_21 = mk3(f2, l2) }

function first9(a1: us_t1) : int = to_rep(first7((a1).rt1))

function last9(a1: us_t1) : int = to_rep(last7((a1).rt1))

function length1(a1: us_t1) : int =
  (if (first9(a1) <= last9(a1)) then ((last9(a1) - first9(a1)) + 1) else 0)

function first_21(a1: us_t1) : int = to_rep(first8((a1).rt_21))

function last_21(a1: us_t1) : int = to_rep(last8((a1).rt_21))

function length_21(a1: us_t1) : int =
  (if (first_21(a1) <= last_21(a1)) then ((last_21(a1) - first_21(a1)) + 1) else 0)

predicate dynamic_property9(range_first1: int, range_last1: int, f1: int,
  l1: int, range_first2: int, range_last2: int, f2: int, l2: int) =
  (dynamic_property7(range_first1, range_last1, f1, l1) and
  dynamic_property8(range_first2, range_last2, f2, l2))

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq10(x: us_t1, y: us_t1) : bool = bool_eq9((x).elts1,
  to_rep(first7((x).rt1)), to_rep(last7((x).rt1)), to_rep(first8((x).rt_21)),
  to_rep(last8((x).rt_21)), (y).elts1, to_rep(first7((y).rt1)),
  to_rep(last7((y).rt1)), to_rep(first8((y).rt_21)),
  to_rep(last8((y).rt_21)))

logic user_eq7 : us_t1, us_t1 -> bool

logic dummy7 : us_t1

type acc_array__ref = { acc_array__content : us_t1
}

function acc_array__ref_acc_array__content__projection(a1: acc_array__ref) : us_t1 =
  (a1).acc_array__content

logic attr__ATTRIBUTE_ADDRESS6 : int

logic r__first : integer

logic r__last : integer

logic r__first_2 : integer

logic r__last_2 : integer

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

predicate dynamic_invariant4(temp___expr_264: int, temp___is_init_260: bool,
  temp___skip_constant_261: bool, temp___do_toplevel_262: bool,
  temp___do_typ_inv_263: bool) = (((temp___is_init_260 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range2(temp___expr_264))

type trS__ref = { trS__content : us_t1
}

function trS__ref_trS__content__projection(a1: trS__ref) : us_t1 =
  (a1).trS__content

type t27s__ref = { t27s__content : us_t1
}

function t27s__ref_t27s__content__projection(a1: t27s__ref) : us_t1 =
  (a1).t27s__content

predicate dynamic_property10(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : integer, integer -> bool

logic dummy8 : integer

type t28s__ref = { t28s__content : integer
}

function t28s__ref_t28s__content__projection(a1: t28s__ref) : integer =
  (a1).t28s__content

predicate dynamic_property11(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq12(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : integer, integer -> bool

logic dummy9 : integer

type t41s__ref = { t41s__content : integer
}

function t41s__ref_t41s__content__projection(a1: t41s__ref) : integer =
  (a1).t41s__content

predicate dynamic_invariant5(temp___expr_257: us_t, temp___is_init_253: bool,
  temp___skip_constant_254: bool, temp___do_toplevel_255: bool,
  temp___do_typ_inv_256: bool) = ((not (temp___skip_constant_254 = true)) ->
  dynamic_property4(first, last, first4(temp___expr_257),
  last4(temp___expr_257), first1, last1, first_2(temp___expr_257),
  last_2(temp___expr_257)))

logic test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def : int,
  int, int, int, int -> us_t1

logic id : int -> int

logic id__function_guard : int, int -> prop

axiom id__post_axiom :
  (forall x:int [id(x)]. (dynamic_invariant(x, true, true, true, true) ->
  (let result = id(x) : int in (id__function_guard(result, x) ->
  dynamic_invariant(result, true, false, true, true)))))

axiom fst__def_axiom : id__function_guard(id(0), 0)

axiom fst__def_axiom1 : (fst = id(0))

axiom lst__def_axiom : id__function_guard(id(100), 100)

axiom lst__def_axiom1 : (lst = id(100))

axiom fst2__def_axiom : id__function_guard(id(1), 1)

axiom fst2__def_axiom1 : (fst2 = id(1))

axiom lst2__def_axiom : id__function_guard(id(200), 200)

axiom lst2__def_axiom1 : (lst2 = id(200))

predicate dynamic_invariant6(temp___expr_286: us_t1,
  temp___is_init_282: bool, temp___skip_constant_283: bool,
  temp___do_toplevel_284: bool, temp___do_typ_inv_285: bool) =
  ((not (temp___skip_constant_283 = true)) -> dynamic_property9(first5,
  last5, first9(temp___expr_286), last9(temp___expr_286), first6, last6,
  first_21(temp___expr_286), last_21(temp___expr_286)))

predicate dynamic_invariant7(temp___expr_236: int, temp___is_init_232: bool,
  temp___skip_constant_233: bool, temp___do_toplevel_234: bool,
  temp___do_typ_inv_235: bool) = (((temp___is_init_232 = true) or
  (first5 <= last5)) -> dynamic_property5(first5, last5, temp___expr_236))

axiom first__def_axiom2 : (first5 = fst)

axiom last__def_axiom2 : (last5 = lst)

predicate dynamic_invariant8(temp___expr_243: int, temp___is_init_239: bool,
  temp___skip_constant_240: bool, temp___do_toplevel_241: bool,
  temp___do_typ_inv_242: bool) = (((temp___is_init_239 = true) or
  (first6 <= last6)) -> dynamic_property6(first6, last6, temp___expr_243))

axiom first__def_axiom3 : (first6 = fst2)

axiom last__def_axiom3 : (last6 = lst2)

axiom def_axiom :
  (forall temp___426:int. forall temp___427:int. forall temp___428:int.
  forall temp___429:int. forall temp___430:int.
  (dynamic_invariant4(temp___426, true, true, true, true) ->
  (dynamic_property9(first5, last5, temp___427, temp___428, first6, last6,
  temp___429, temp___430) ->
  (first_21(test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(temp___426,
  temp___427, temp___428, temp___429, temp___430)) = temp___429))))

axiom def_axiom1 :
  (forall temp___426:int. forall temp___427:int. forall temp___428:int.
  forall temp___429:int. forall temp___430:int.
  (dynamic_invariant4(temp___426, true, true, true, true) ->
  (dynamic_property9(first5, last5, temp___427, temp___428, first6, last6,
  temp___429, temp___430) ->
  (last_21(test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(temp___426,
  temp___427, temp___428, temp___429, temp___430)) = temp___430))))

axiom def_axiom2 :
  (forall temp___426:int. forall temp___427:int. forall temp___428:int.
  forall temp___429:int. forall temp___430:int.
  (dynamic_invariant4(temp___426, true, true, true, true) ->
  (dynamic_property9(first5, last5, temp___427, temp___428, first6, last6,
  temp___429, temp___430) ->
  (first9(test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(temp___426,
  temp___427, temp___428, temp___429, temp___430)) = temp___427))))

axiom def_axiom3 :
  (forall temp___426:int. forall temp___427:int. forall temp___428:int.
  forall temp___429:int. forall temp___430:int.
  (dynamic_invariant4(temp___426, true, true, true, true) ->
  (dynamic_property9(first5, last5, temp___427, temp___428, first6, last6,
  temp___429, temp___430) ->
  (last9(test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(temp___426,
  temp___427, temp___428, temp___429, temp___430)) = temp___428))))

axiom def_axiom4 :
  (forall temp___426:int. forall temp___427:int. forall temp___428:int.
  forall temp___429:int. forall temp___430:int.
  (dynamic_invariant4(temp___426, true, true, true, true) ->
  (forall temp___431:int. forall temp___432:int.
  (to_rep1(get1(to_array1(test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(temp___426,
  temp___427, temp___428, temp___429, temp___430)), temp___431,
  temp___432)) = temp___426))))

predicate dynamic_invariant9(temp___expr_329: us_t1,
  temp___is_init_325: bool, temp___skip_constant_326: bool,
  temp___do_toplevel_327: bool, temp___do_typ_inv_328: bool) =
  ((not (temp___skip_constant_326 = true)) -> ((dynamic_property9(first4(a),
  last4(a), first9(temp___expr_329), last9(temp___expr_329), first_2(a),
  last_2(a), first_21(temp___expr_329), last_21(temp___expr_329)) and
  ((first9(temp___expr_329) = first4(a)) and
  (last9(temp___expr_329) = last4(a)))) and
  ((first_21(temp___expr_329) = first_2(a)) and
  (last_21(temp___expr_329) = last_2(a)))))

predicate default_initial_assumption(temp___expr_332: us_t1,
  temp___skip_top_level_333: bool) =
  ((((first9(temp___expr_332) = first4(a)) and
  (last9(temp___expr_332) = last4(a))) and
  (first_21(temp___expr_332) = first_2(a))) and
  (last_21(temp___expr_332) = last_2(a)))

 (* File "spark-higher_order-fold.ads", line 484, characters 0-0 *)
goal defqtvc : (dynamic_invariant5(a, true, false, true, true) ->
  (dynamic_invariant4(init, true, false, true, true) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)),
  of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), init,
  first4(a), first_2(a)) -> ((((0 <  length(a)) and (0 <  length_2(a))) and
  (ind_prop(of_array(to_array(a), first4(a), last4(a), first_2(a),
  last_2(a)), init, first4(a), first_2(a)) = true)) ->
  (forall acc:int. ((acc = init) -> (dynamic_invariant4(acc, true, false,
  true, true) -> (let temp___433 =
  test_higher_order1__my_fold_2__acc__fold__R24s__r__aggregate_def(init,
  first4(a), last4(a), first_2(a), last_2(a)) : us_t1 in
  ((first9(temp___433) = first4(a)) -> ((last9(temp___433) = last4(a)) ->
  (((if (first9(temp___433) <= last9(temp___433)) then ((first4(a) <= last4(a)) and
  ((last9(temp___433) - first9(temp___433)) = (last4(a) - first4(a)))) else (last4(a) <  first4(a))) and
  (if (first_21(temp___433) <= last_21(temp___433)) then ((first_2(a) <= last_2(a)) and
  ((last_21(temp___433) - first_21(temp___433)) = (last_2(a) - first_2(a)))) else (last_2(a) <  first_2(a)))) ->
  (let test_higher_order1__my_fold_2__acc__fold__R24s__r__assume =
  of_array1(slide1(to_array1(temp___433), first9(temp___433), first4(a),
  first_21(temp___433), first_2(a)), first4(a), last4(a), first_2(a),
  last_2(a)) : us_t1 in
  (forall r:map1.
  ((r = to_array1(test_higher_order1__my_fold_2__acc__fold__R24s__r__assume)) ->
  ((to_rep(r__first) = first9(test_higher_order1__my_fold_2__acc__fold__R24s__r__assume)) ->
  ((to_rep(r__last) = last9(test_higher_order1__my_fold_2__acc__fold__R24s__r__assume)) ->
  ((to_rep(r__first_2) = first_21(test_higher_order1__my_fold_2__acc__fold__R24s__r__assume)) ->
  ((to_rep(r__last_2) = last_21(test_higher_order1__my_fold_2__acc__fold__R24s__r__assume)) ->
  (((dynamic_property9(first4(a), last4(a), to_rep(r__first),
  to_rep(r__last), first_2(a), last_2(a), to_rep(r__first_2),
  to_rep(r__last_2)) and ((to_rep(r__first) = first4(a)) and
  (to_rep(r__last) = last4(a)))) and ((to_rep(r__first_2) = first_2(a)) and
  (to_rep(r__last_2) = last_2(a)))) -> (let temp___437 = first4(a) : int in
  (let temp___438 = last4(a) : int in
  (forall i:int. ((i = temp___437) ->
  ((andb((if (temp___437 <= i) then true else false),
  (if (i <= temp___438) then true else false)) = true) ->
  (((i = first4(a)) or (let temp___526 = last_2(a) : int in
  (((to_rep(r__first_2) <= temp___526) and
  (temp___526 <= to_rep(r__last_2))) and (let o = (i - 1) : int in
  (in_range1(o) and (((to_rep(r__first) <= o) and (o <= to_rep(r__last))) and
  (exists o1:int. (to_rep1(get1(r, o, temp___526)) = o1)))))))) ->
  (forall acc1:int. forall r1:map1. forall i1:int.
  ((forall acc2:int. forall i2:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), acc2, i2, first_2(a)),
   of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), acc2,
   i2, first_2(a))) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)),
  of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), init,
  first4(a), first_2(a)) -> (f_2__function_guard(f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init), to_rep(get(to_array(a), first4(a),
  first_2(a))), init) ->
  ((forall r2:map1. forall k:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r2, (k - 1), last_2(a))),
   k, first_2(a)), of_array(to_array(a), first4(a), last4(a), first_2(a),
   last_2(a)), to_rep1(get1(r2, (k - 1), last_2(a))), k, first_2(a))) ->
  ((forall r2:map1. forall k:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r2, (k - 1), last_2(a)))), to_rep(get(to_array(a), k,
   first_2(a))), to_rep1(get1(r2, (k - 1), last_2(a))))) ->
  ((forall r2:map1. forall k:int. forall l:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r2, k, (l - 1))), k, l),
   of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)),
   to_rep1(get1(r2, k, (l - 1))), k, l)) ->
  ((forall r2:map1. forall k:int. forall l:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, l)), to_rep1(get1(r2,
   k, (l - 1)))), to_rep(get(to_array(a), k, l)), to_rep1(get1(r2, k,
   (l - 1))))) ->
  (((if (i1 = first4(a)) then (acc1 = init) else (acc1 = to_rep1(get1(r1,
  (i1 - 1), last_2(a))))) and ((ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), acc1, i1, first_2(a)) = true) and
  (((first4(a) <  i1) -> ((ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)) = true) and
  (to_rep1(get1(r1, first4(a), first_2(a))) = f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init)))) and
  ((forall k:int. (((first4(a) <= k) and (k <= last4(a))) -> (((k <  i1) and
   (first4(a) <  k)) -> ((ind_prop(of_array(to_array(a), first4(a), last4(a),
   first_2(a), last_2(a)), to_rep1(get1(r1, (k - 1), last_2(a))), k,
   first_2(a)) = true) and (to_rep1(get1(r1, k,
   first_2(a))) = f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r1, (k - 1), last_2(a))))))))) and
  (forall k:int. (((first4(a) <= k) and (k <= last4(a))) ->
  (forall l:int. (((first_2(a) <= l) and (l <= last_2(a))) -> (((k <  i1) and
  (first_2(a) <  l)) -> ((ind_prop(of_array(to_array(a), first4(a), last4(a),
  first_2(a), last_2(a)), to_rep1(get1(r1, k, (l - 1))), k, l) = true) and
  (to_rep1(get1(r1, k, l)) = f_2(to_rep(get(to_array(a), k, l)),
  to_rep1(get1(r1, k, (l - 1))))))))))))))) ->
  ((andb((if ((dynamic_property10(first4(a), last4(a), i1) and
  (forall temp___488:int. forall temp___489:int.
  ((((to_rep(r__first) <= temp___488) and
  (temp___488 <= to_rep(r__last))) and
  ((to_rep(r__first_2) <= temp___489) and
  (temp___489 <= to_rep(r__last_2)))) -> (((temp___438 <  temp___488) or
  ((temp___488 <  temp___437) or (i1 <= temp___488))) -> (get1(r1,
  temp___488, temp___489) = get1(r, temp___488, temp___489)))))) and
  dynamic_invariant4(acc1, true, true, true, true)) then true else false),
  (if ((first4(a) <= i1) and
  (i1 <= last4(a))) then true else false)) = true) ->
  (forall acc2:int. forall r2:map1.
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)),
  of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), init,
  first4(a), first_2(a)) -> (f_2__function_guard(f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init), to_rep(get(to_array(a), first4(a),
  first_2(a))), init) ->
  ((forall r3:map1. forall k:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))),
   k, first_2(a)), of_array(to_array(a), first4(a), last4(a), first_2(a),
   last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))), k, first_2(a))) ->
  ((forall r3:map1. forall k:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r3, (k - 1), last_2(a)))), to_rep(get(to_array(a), k,
   first_2(a))), to_rep1(get1(r3, (k - 1), last_2(a))))) ->
  ((forall r3:map1. forall k:int. forall l:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, k, (l - 1))), k, l),
   of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)),
   to_rep1(get1(r3, k, (l - 1))), k, l)) ->
  ((forall r3:map1. forall k:int. forall l:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, l)), to_rep1(get1(r3,
   k, (l - 1)))), to_rep(get(to_array(a), k, l)), to_rep1(get1(r3, k,
   (l - 1))))) ->
  ((forall i2:int. forall acc3:int. forall j:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), acc3, i2, j), of_array(to_array(a),
   first4(a), last4(a), first_2(a), last_2(a)), acc3, i2, j)) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)),
  of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), init,
  first4(a), first_2(a)) -> (f_2__function_guard(f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init), to_rep(get(to_array(a), first4(a),
  first_2(a))), init) ->
  ((forall r3:map1. forall k:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))),
   k, first_2(a)), of_array(to_array(a), first4(a), last4(a), first_2(a),
   last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))), k, first_2(a))) ->
  ((forall r3:map1. forall k:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r3, (k - 1), last_2(a)))), to_rep(get(to_array(a), k,
   first_2(a))), to_rep1(get1(r3, (k - 1), last_2(a))))) ->
  ((forall r3:map1. forall k:int. forall l:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, k, (l - 1))), k, l),
   of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)),
   to_rep1(get1(r3, k, (l - 1))), k, l)) ->
  ((forall r3:map1. forall k:int. forall l:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, l)), to_rep1(get1(r3,
   k, (l - 1)))), to_rep(get(to_array(a), k, l)), to_rep1(get1(r3, k,
   (l - 1))))) ->
  ((forall i2:int. forall acc3:int. forall j:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), acc3, i2, j), of_array(to_array(a),
   first4(a), last4(a), first_2(a), last_2(a)), acc3, i2, j)) ->
  ((forall i2:int. forall acc3:int. forall j:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), i2, j)), acc3),
   to_rep(get(to_array(o), i2, j)), acc3)) ->
  ((forall i2:int. forall acc3:int. forall j:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), i2, j)), acc3),
   to_rep(get(to_array(o), i2, j)), acc3)) ->
  ((forall i2:int. forall acc3:int. forall j:int. forall o:us_t.
   ind_prop__function_guard(ind_prop(of_array(to_array(o), first4(o),
   last4(o), first_2(o), last_2(o)), f_2(to_rep(get(to_array(o), i2, j)),
   acc3), i2, (j + 1)), of_array(to_array(o), first4(o), last4(o),
   first_2(o), last_2(o)), f_2(to_rep(get(to_array(o), i2, j)), acc3), i2,
   (j + 1))) ->
  ((forall i2:int. forall acc3:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), i2, last_2(o))), acc3),
   to_rep(get(to_array(o), i2, last_2(o))), acc3)) ->
  ((forall i2:int. forall acc3:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), i2, last_2(o))), acc3),
   to_rep(get(to_array(o), i2, last_2(o))), acc3)) ->
  ((forall i2:int. forall acc3:int. forall o:us_t.
   ind_prop__function_guard(ind_prop(of_array(to_array(o), first4(o),
   last4(o), first_2(o), last_2(o)), f_2(to_rep(get(to_array(o), i2,
   last_2(o))), acc3), (i2 + 1), first_2(o)), of_array(to_array(o),
   first4(o), last4(o), first_2(o), last_2(o)), f_2(to_rep(get(to_array(o),
   i2, last_2(o))), acc3), (i2 + 1), first_2(o))) ->
  ((forall acc3:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), last4(o), last_2(o))),
   acc3), to_rep(get(to_array(o), last4(o), last_2(o))), acc3)) ->
  ((forall acc3:int. forall o:us_t.
   f_2__function_guard(f_2(to_rep(get(to_array(o), last4(o), last_2(o))),
   acc3), to_rep(get(to_array(o), last4(o), last_2(o))), acc3)) ->
  ((forall acc3:int. forall o:us_t.
   final_prop__function_guard(final_prop(of_array(to_array(o), first4(o),
   last4(o), first_2(o), last_2(o)), f_2(to_rep(get(to_array(o), last4(o),
   last_2(o))), acc3)), of_array(to_array(o), first4(o), last4(o),
   first_2(o), last_2(o)), f_2(to_rep(get(to_array(o), last4(o), last_2(o))),
   acc3))) ->
  ((let temp___439 = first_2(a) : int in (let temp___440 = last_2(a) : int in
  (exists j:int. ((j = temp___439) and
  (if (andb((if (temp___439 <= j) then true else false),
  (if (j <= temp___440) then true else false)) = true) then ((exists o:bool.
                                                             ((if (first4(a) <  i1) then (o = true) else (o = (if (first_2(a) <  j) then true else false))) and
                                                             ((not (o = true)) or
                                                             (let temp___477 =
                                                             first_2(a)
                                                             : int in
                                                             (dynamic_property1(first1,
                                                             last1,
                                                             temp___477) and
                                                             (let temp___476 =
                                                             first4(a)
                                                             : int in
                                                             (dynamic_property(first,
                                                             last,
                                                             temp___476) and
                                                             (let o1 = init
                                                             : int in
                                                             (let o2 =
                                                             of_array(to_array(a),
                                                             first4(a),
                                                             last4(a),
                                                             first_2(a),
                                                             last_2(a))
                                                             : us_t in
                                                             (let o3 =
                                                             ind_prop(o2, o1,
                                                             temp___476,
                                                             temp___477)
                                                             : bool in
                                                             (ind_prop__function_guard(o3,
                                                             o2, o1,
                                                             temp___476,
                                                             temp___477) and
                                                             ((not (o3 = true)) or
                                                             (let o4 = init
                                                             : int in
                                                             (let temp___481 =
                                                             first_2(a)
                                                             : int in
                                                             (((first_2(a) <= temp___481) and
                                                             (temp___481 <= last_2(a))) and
                                                             (let temp___480 =
                                                             first4(a)
                                                             : int in
                                                             (((first4(a) <= temp___480) and
                                                             (temp___480 <= last4(a))) and
                                                             (exists o5:int.
                                                             ((to_rep(get(to_array(a),
                                                             temp___480,
                                                             temp___481)) = o5) and
                                                             (let o6 =
                                                             f_2(o5, o4)
                                                             : int in
                                                             ((f_2__function_guard(o6,
                                                             o5, o4) and
                                                             dynamic_invariant(o6,
                                                             true, false,
                                                             true, true)) and
                                                             (let temp___479 =
                                                             first_2(a)
                                                             : int in
                                                             (((to_rep(r__first_2) <= temp___479) and
                                                             (temp___479 <= to_rep(r__last_2))) and
                                                             (let temp___478 =
                                                             first4(a)
                                                             : int in
                                                             (((to_rep(r__first) <= temp___478) and
                                                             (temp___478 <= to_rep(r__last))) and
                                                             (exists o7:int.
                                                             (to_rep1(get1(r1,
                                                             temp___478,
                                                             temp___479)) = o7))))))))))))))))))))))))))) and
  (exists acc3:int. exists r3:map1. exists j1:int. (((((first4(a) <  i1) or
  (first_2(a) <  j1)) -> ((ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)) = true) and
  (to_rep1(get1(r3, first4(a), first_2(a))) = f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init)))) and
  ((forall k:int. (((first4(a) <= k) and (k <= last4(a))) ->
   (((first4(a) <  k) and ((k <  i1) or ((k = i1) and
   (first_2(a) <  j1)))) -> ((ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))),
   k, first_2(a)) = true) and (to_rep1(get1(r3, k,
   first_2(a))) = f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r3, (k - 1), last_2(a))))))))) and
  ((forall k:int. (((first4(a) <= k) and (k <= last4(a))) ->
   (forall l:int. (((first_2(a) <= l) and (l <= last_2(a))) ->
   (((first_2(a) <  l) and ((k <  i1) or ((k = i1) and (l <  j1)))) ->
   ((ind_prop(of_array(to_array(a), first4(a), last4(a), first_2(a),
   last_2(a)), to_rep1(get1(r3, k, (l - 1))), k, l) = true) and
   (to_rep1(get1(r3, k, l)) = f_2(to_rep(get(to_array(a), k, l)),
   to_rep1(get1(r3, k, (l - 1))))))))))) and
  ((if (not (j1 = first_2(a))) then (acc3 = to_rep1(get1(r3, i1,
  (j1 - 1)))) else (if (not (i1 = first4(a))) then (acc3 = to_rep1(get1(r3,
  (i1 - 1), last_2(a)))) else (acc3 = init))) and
  (ind_prop(of_array(to_array(a), first4(a), last4(a), first_2(a),
  last_2(a)), acc3, i1, j1) = true))))) and
  ((andb((if ((dynamic_property11(first_2(a), last_2(a), j1) and
  (forall temp___445:int. forall temp___446:int.
  ((((to_rep(r__first) <= temp___445) and
  (temp___445 <= to_rep(r__last))) and
  ((to_rep(r__first_2) <= temp___446) and
  (temp___446 <= to_rep(r__last_2)))) -> (((temp___440 <  temp___446) or
  ((temp___446 <  temp___439) or ((j1 <= temp___446) or
  (not (i1 = temp___445))))) -> (get1(r3, temp___445, temp___446) = get1(r1,
  temp___445, temp___446)))))) and dynamic_invariant4(acc3, true, true, true,
  true)) then true else false), (if ((first_2(a) <= j1) and
  (j1 <= last_2(a))) then true else false)) = true) and
  (exists o:int. ((to_rep(get(to_array(a), i1, j1)) = o) and (let o1 = f_2(o,
  acc3) : int in ((f_2__function_guard(o1, o, acc3) and dynamic_invariant(o1,
  true, false, true, true)) and
  (exists o2:element_out. ((to_rep1(o2) = o1) and ((r2 = set1(r3, i1, j1,
  o2)) and
  ((exists spark__branch:bool.
   ((spark__branch = (if (j1 <  last_2(a)) then true else false)) and
   (if (spark__branch = true) then (dynamic_property6(first6, last6, j1) and
   (dynamic_property5(first5, last5, i1) and (let o3 = a : us_t in
   (ind_prop(of_array(to_array(o3), first4(o3), last4(o3), first_2(o3),
   last_2(o3)), f_2(to_rep(get(to_array(o3), i1, j1)), acc3), i1,
   (j1 + 1)) = true)))) else (exists spark__branch1:bool.
                             ((spark__branch1 = (if (i1 <  last4(a)) then true else false)) and
                             (if (spark__branch1 = true) then (dynamic_property5(first5,
                             last5, i1) and (let o3 = a : us_t in
                             (ind_prop(of_array(to_array(o3), first4(o3),
                             last4(o3), first_2(o3), last_2(o3)),
                             f_2(to_rep(get(to_array(o3), i1, last_2(o3))),
                             acc3), (i1 + 1),
                             first_2(o3)) = true))) else (let o3 = a
                             : us_t in (final_prop(of_array(to_array(o3),
                             first4(o3), last4(o3), first_2(o3), last_2(o3)),
                             f_2(to_rep(get(to_array(o3), last4(o3),
                             last_2(o3))), acc3)) = true)))))))) and
  (exists o3:int. ((to_rep1(get1(r2, i1, j1)) = o3) and ((acc2 = o3) and
  (j1 = temp___440)))))))))))))))) else ((acc2 = acc1) and (r2 = r1))))))) ->
  ((not (i1 = temp___438)) ->
  (forall i2:int. ((i2 = (i1 + 1)) -> (((i2 = first4(a)) or (let temp___526 =
  last_2(a) : int in (((to_rep(r__first_2) <= temp___526) and
  (temp___526 <= to_rep(r__last_2))) and (let o = (i2 - 1) : int in
  (in_range1(o) and (((to_rep(r__first) <= o) and (o <= to_rep(r__last))) and
  (exists o1:int. (to_rep1(get1(r2, o, temp___526)) = o1)))))))) ->
  ((if (i2 = first4(a)) then (acc2 = init) else (acc2 = to_rep1(get1(r2,
  (i2 - 1), last_2(a))))) ->
  ((forall acc3:int. forall i3:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), acc3, i3, first_2(a)),
   of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), acc3,
   i3, first_2(a))) ->
  ((ind_prop(of_array(to_array(a), first4(a), last4(a), first_2(a),
  last_2(a)), acc2, i2, first_2(a)) = true) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
  last4(a), first_2(a), last_2(a)), init, first4(a), first_2(a)),
  of_array(to_array(a), first4(a), last4(a), first_2(a), last_2(a)), init,
  first4(a), first_2(a)) -> (f_2__function_guard(f_2(to_rep(get(to_array(a),
  first4(a), first_2(a))), init), to_rep(get(to_array(a), first4(a),
  first_2(a))), init) -> (((first4(a) <  i2) ->
  ((ind_prop(of_array(to_array(a), first4(a), last4(a), first_2(a),
  last_2(a)), init, first4(a), first_2(a)) = true) and (to_rep1(get1(r2,
  first4(a), first_2(a))) = f_2(to_rep(get(to_array(a), first4(a),
  first_2(a))), init)))) ->
  ((forall r3:map1. forall k:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first4(a),
   last4(a), first_2(a), last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))),
   k, first_2(a)), of_array(to_array(a), first4(a), last4(a), first_2(a),
   last_2(a)), to_rep1(get1(r3, (k - 1), last_2(a))), k, first_2(a))) ->
  ((forall r3:map1. forall k:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r3, (k - 1), last_2(a)))), to_rep(get(to_array(a), k,
   first_2(a))), to_rep1(get1(r3, (k - 1), last_2(a))))) ->
  ((forall k:int. (((first4(a) <= k) and (k <= last4(a))) -> (((k <  i2) and
   (first4(a) <  k)) -> ((ind_prop(of_array(to_array(a), first4(a), last4(a),
   first_2(a), last_2(a)), to_rep1(get1(r2, (k - 1), last_2(a))), k,
   first_2(a)) = true) and (to_rep1(get1(r2, k,
   first_2(a))) = f_2(to_rep(get(to_array(a), k, first_2(a))),
   to_rep1(get1(r2, (k - 1), last_2(a))))))))) ->
  (forall k:int. (((first4(a) <= k) and (k <= last4(a))) ->
  (forall l:int. (((first_2(a) <= l) and (l <= last_2(a))) -> (((k <  i2) and
  (first_2(a) <  l)) ->
  ((forall r3:map1. forall k1:int. forall l1:int.
   f_2__function_guard(f_2(to_rep(get(to_array(a), k1, l1)), to_rep1(get1(r3,
   k1, (l1 - 1)))), to_rep(get(to_array(a), k1, l1)), to_rep1(get1(r3, k1,
   (l1 - 1))))) ->
  (to_rep1(get1(r2, k, l)) = f_2(to_rep(get(to_array(a), k, l)),
  to_rep1(get1(r2, k, (l - 1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
