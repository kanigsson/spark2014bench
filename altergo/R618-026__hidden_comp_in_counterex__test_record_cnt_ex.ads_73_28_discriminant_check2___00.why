(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

logic id : int -> int

logic id__function_guard : int, int -> prop

axiom id__post_axiom : (forall x:int [id(x)]. in_range1(id(x)))

type us_split_discrs = { rec__test_record_cnt_ex__nested_3__complex__b : bool
}

function us_split_discrs_rec__test_record_cnt_ex__nested_3__complex__b__projection(a: us_split_discrs) : bool =
  (a).rec__test_record_cnt_ex__nested_3__complex__b

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__test_record_cnt_ex__nested_3__complex__g :
integer; rec__test_record_cnt_ex__nested_3__complex__f : integer; rec__ext__
: us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__projection(a: us_split_fields) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__g

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__projection(a: us_split_fields) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__f

function us_split_fields_rec__ext____6__projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__6__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields; attr__tag : int
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__6__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep_attr__tag__6__projection(a: us_rep) : int = (a).attr__tag

predicate test_record_cnt_ex__nested_3__complex__f__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b) = 1)

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b) = to_int(((b).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)) and
  ((to_rep(((a).us_split_fields1).rec__test_record_cnt_ex__nested_3__complex__g) = to_rep(((b).us_split_fields1).rec__test_record_cnt_ex__nested_3__complex__g)) and
  (test_record_cnt_ex__nested_3__complex__f__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__test_record_cnt_ex__nested_3__complex__f) = to_rep(((b).us_split_fields1).rec__test_record_cnt_ex__nested_3__complex__f))))) then true else false)

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic test_record_cnt_ex__nested_3__complex__b__first__bit : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit : int

logic test_record_cnt_ex__nested_3__complex__b__position : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__b__first__bit <  test_record_cnt_ex__nested_3__complex__b__last__bit)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position)

logic test_record_cnt_ex__nested_3__complex__g__first__bit : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit : int

logic test_record_cnt_ex__nested_3__complex__g__position : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__g__first__bit <  test_record_cnt_ex__nested_3__complex__g__last__bit)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position)

logic test_record_cnt_ex__nested_3__complex__f__first__bit : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit : int

logic test_record_cnt_ex__nested_3__complex__f__position : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__f__first__bit <  test_record_cnt_ex__nested_3__complex__f__last__bit)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : us_rep

type complex__ref = { complex__content : us_rep
}

function complex__ref_complex__content__projection(a: complex__ref) : us_rep =
  (a).complex__content

logic us_tag1 : int

predicate in_range2(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic test_record_cnt_ex__nested_3__complex__b__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__b__position1 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit1 <  test_record_cnt_ex__nested_3__complex__b__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position1)

logic test_record_cnt_ex__nested_3__complex__f__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__f__position1 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit1 <  test_record_cnt_ex__nested_3__complex__f__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position1)

logic test_record_cnt_ex__nested_3__complex__g__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__g__position1 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit1 <  test_record_cnt_ex__nested_3__complex__g__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position1)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type no_f__ref = { no_f__content : us_rep
}

function no_f__ref_no_f__content__projection(a: no_f__ref) : us_rep =
  (a).no_f__content

logic x : us_rep

logic attr__ATTRIBUTE_ADDRESS : int

logic y : us_rep

logic attr__ATTRIBUTE_ADDRESS1 : int

logic us_tag2 : int

predicate in_range3(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic test_record_cnt_ex__nested_3__complex__b__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__b__position2 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit2 <  test_record_cnt_ex__nested_3__complex__b__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position2)

logic test_record_cnt_ex__nested_3__complex__g__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__g__position2 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit2 <  test_record_cnt_ex__nested_3__complex__g__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position2)

logic test_record_cnt_ex__nested_3__complex__f__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__f__position2 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit2 <  test_record_cnt_ex__nested_3__complex__f__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position2)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type f_present__ref = { f_present__content : us_rep
}

function f_present__ref_f_present__content__projection(a: f_present__ref) : us_rep =
  (a).f_present__content

logic w : us_rep

logic attr__ATTRIBUTE_ADDRESS2 : int

logic z : us_rep

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant1(temp___expr_211: us_rep,
  temp___is_init_207: bool, temp___skip_constant_208: bool,
  temp___do_toplevel_209: bool, temp___do_typ_inv_210: bool) =
  ((not (temp___skip_constant_208 = true)) -> in_range2(of_int(0),
  temp___expr_211))

predicate default_initial_assumption(temp___expr_213: us_rep,
  temp___skip_top_level_214: bool) =
  (((temp___expr_213).attr__tag = us_tag1) and
  (((temp___expr_213).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b = of_int(0)))

predicate dynamic_invariant2(temp___expr_222: us_rep,
  temp___is_init_218: bool, temp___skip_constant_219: bool,
  temp___do_toplevel_220: bool, temp___do_typ_inv_221: bool) =
  ((not (temp___skip_constant_219 = true)) -> in_range3(of_int(1),
  temp___expr_222))

predicate default_initial_assumption1(temp___expr_224: us_rep,
  temp___skip_top_level_225: bool) =
  (((temp___expr_224).attr__tag = us_tag2) and
  (((temp___expr_224).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b = of_int(1)))

logic us_tag3 : int

predicate in_range4(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic test_record_cnt_ex__nested_3__complex__b__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__b__position3 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit3 <  test_record_cnt_ex__nested_3__complex__b__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position3)

logic test_record_cnt_ex__nested_3__complex__f__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__f__position3 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit3 <  test_record_cnt_ex__nested_3__complex__f__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position3)

logic test_record_cnt_ex__nested_3__complex__g__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__g__position3 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit3 <  test_record_cnt_ex__nested_3__complex__g__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position3)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type t3s__ref = { t3s__content : us_rep
}

function t3s__ref_t3s__content__projection(a: t3s__ref) : us_rep =
  (a).t3s__content

logic us_tag4 : int

predicate in_range5(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic test_record_cnt_ex__nested_3__complex__b__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__b__position4 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit4 <  test_record_cnt_ex__nested_3__complex__b__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position4)

logic test_record_cnt_ex__nested_3__complex__f__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__f__position4 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit4 <  test_record_cnt_ex__nested_3__complex__f__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position4)

logic test_record_cnt_ex__nested_3__complex__g__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__g__position4 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit4 <  test_record_cnt_ex__nested_3__complex__g__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position4)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type t4s__ref = { t4s__content : us_rep
}

function t4s__ref_t4s__content__projection(a: t4s__ref) : us_rep =
  (a).t4s__content

logic us_tag5 : int

predicate in_range6(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic test_record_cnt_ex__nested_3__complex__b__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__b__position5 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit5 <  test_record_cnt_ex__nested_3__complex__b__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position5)

logic test_record_cnt_ex__nested_3__complex__g__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__g__position5 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit5 <  test_record_cnt_ex__nested_3__complex__g__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position5)

logic test_record_cnt_ex__nested_3__complex__f__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__f__position5 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit5 <  test_record_cnt_ex__nested_3__complex__f__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position5)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type t5s__ref = { t5s__content : us_rep
}

function t5s__ref_t5s__content__projection(a: t5s__ref) : us_rep =
  (a).t5s__content

logic us_tag6 : int

predicate in_range7(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic test_record_cnt_ex__nested_3__complex__b__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__b__position6 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit6 <  test_record_cnt_ex__nested_3__complex__b__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position6)

logic test_record_cnt_ex__nested_3__complex__g__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__g__position6 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit6 <  test_record_cnt_ex__nested_3__complex__g__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position6)

logic test_record_cnt_ex__nested_3__complex__f__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__f__position6 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit6 <  test_record_cnt_ex__nested_3__complex__f__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position6)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy7 : us_rep

type t6s__ref = { t6s__content : us_rep
}

function t6s__ref_t6s__content__projection(a: t6s__ref) : us_rep =
  (a).t6s__content

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 7)

axiom x__def_axiom : (x = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields1 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral; rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__ = us_null_ext__ }; attr__tag = us_tag3 })

axiom y__def_axiom : id__function_guard(id(7), 7)

axiom y__def_axiom1 : (y = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields1 = { rec__test_record_cnt_ex__nested_3__complex__g =
  of_rep(id(7)); rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__ = us_null_ext__ }; attr__tag = us_tag4 })

logic rliteral1 : integer

axiom rliteral_axiom1 : (integerqtint(rliteral1) = 3)

logic rliteral2 : integer

axiom rliteral_axiom2 : (integerqtint(rliteral2) = 6)

axiom w__def_axiom : (w = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(1) };
  us_split_fields1 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral1; rec__test_record_cnt_ex__nested_3__complex__f = rliteral2;
  rec__ext__ = us_null_ext__ }; attr__tag = us_tag5 })

axiom z__def_axiom : id__function_guard(id(6), 6)

axiom z__def_axiom1 : (z = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(1) };
  us_split_fields1 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral1; rec__test_record_cnt_ex__nested_3__complex__f = of_rep(id(6));
  rec__ext__ = us_null_ext__ }; attr__tag = us_tag6 })

 (* File "test_record_cnt_ex.ads", line 55, characters 0-0 *)
goal defqtvc : in_range2(of_int(0), { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields1 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral; rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__ = us_null_ext__ }; attr__tag = us_tag3 })
