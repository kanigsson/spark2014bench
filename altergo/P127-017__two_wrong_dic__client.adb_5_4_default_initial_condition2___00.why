(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type wrong

logic user_eq : wrong, wrong -> bool

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic dummy : wrong

type wrong__ref = { wrong__content : wrong
}

function wrong__ref_wrong__content__projection(a: wrong__ref) : wrong =
  (a).wrong__content

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic really_false : unit -> bool

logic really_false__function_guard : bool, unit -> prop

axiom really_false__def_axiom :
  (forall us_void_param:unit [really_false(us_void_param)].
  (not (really_false(us_void_param) = true)))

axiom really_false__def_axiom1 : true

axiom temp___result_184qtdef :
  really_false__function_guard(really_false(void), void)

predicate default_initial_assumption(temp___expr_181: wrong,
  temp___skip_top_level_182: bool) =
  ((not (temp___skip_top_level_182 = true)) -> (really_false(void) = true))

 (* File "client.adb", line 3, characters 0-0 *)
goal defqtvc :
  (forall dummy1:wrong. (default_initial_assumption(dummy1, false) ->
  (really_false__function_guard(really_false(void), void) ->
  (really_false(void) = true))))
