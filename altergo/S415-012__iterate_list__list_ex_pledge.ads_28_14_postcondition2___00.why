(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type us_main_type

type us_rep = { rec__list_ex_pledge__list__is_null_pointer : bool;
rec__list_ex_pledge__list__pointer_address : int;
rec__list_ex_pledge__list__pointer_value_abstr : us_main_type
}

function us_rep_rec__list_ex_pledge__list__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__list_ex_pledge__list__is_null_pointer

function us_rep_rec__list_ex_pledge__list__pointer_address__projection(a: us_rep) : int =
  (a).rec__list_ex_pledge__list__pointer_address

function us_rep_rec__list_ex_pledge__list__pointer_value_abstr__projection(a: us_rep) : us_main_type =
  (a).rec__list_ex_pledge__list__pointer_value_abstr

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq4(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__list_ex_pledge__list__is_null_pointer = (b).rec__list_ex_pledge__list__is_null_pointer) and
  ((not ((a).rec__list_ex_pledge__list__is_null_pointer = true)) ->
  (((a).rec__list_ex_pledge__list__pointer_address = (b).rec__list_ex_pledge__list__pointer_address) and
  ((a).rec__list_ex_pledge__list__pointer_value_abstr = (b).rec__list_ex_pledge__list__pointer_value_abstr)))) then true else false)

logic dummy3 : us_rep

type t2s__ref = { t2s__content : us_rep
}

function t2s__ref_t2s__content__projection(a: t2s__ref) : us_rep =
  (a).t2s__content

logic length : us_rep -> int

logic length__function_guard : int, us_rep -> prop

logic dummy4 : us_rep

type t1s__ref = { t1s__content : us_rep
}

function t1s__ref_t1s__content__projection(a: t1s__ref) : us_rep =
  (a).t1s__content

logic length_aux : us_rep -> int

logic length_aux__function_guard : int, us_rep -> prop

axiom length__post_axiom :
  (forall l:us_rep [length(l)]. (let result = length(l) : int in
  (length__function_guard(result, l) -> dynamic_invariant(result, true,
  false, true, true))))

axiom length__def_axiom :
  (forall l:us_rep. length_aux__function_guard(length_aux(l), l))

axiom length__def_axiom1 :
  (forall l:us_rep [length(l)]. (length(l) = length_aux(l)))

logic dummy5 : us_rep

type t3s__ref = { t3s__content : us_rep
}

function t3s__ref_t3s__content__projection(a: t3s__ref) : us_rep =
  (a).t3s__content

logic get_nth_val : us_rep, int -> int

logic get_nth_val__function_guard : int, us_rep, int -> prop

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

predicate dynamic_invariant2(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

logic dummy6 : us_rep

type list__ref = { list__content : us_rep
}

function list__ref_list__content__projection(a: list__ref) : us_rep =
  (a).list__content

type us_split_fields = { rec__list_ex_pledge__list_cell__value : integer;
rec__list_ex_pledge__list_cell__next : us_rep
}

function us_split_fields_rec__list_ex_pledge__list_cell__value__projection(a: us_split_fields) : integer =
  (a).rec__list_ex_pledge__list_cell__value

function us_split_fields_rec__list_ex_pledge__list_cell__next__projection(a: us_split_fields) : us_rep =
  (a).rec__list_ex_pledge__list_cell__next

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq5(a: us_rep1, b: us_rep1) : bool =
  (if ((to_rep(((a).us_split_fields1).rec__list_ex_pledge__list_cell__value) = to_rep(((b).us_split_fields1).rec__list_ex_pledge__list_cell__value)) and
  (bool_eq4(((a).us_split_fields1).rec__list_ex_pledge__list_cell__next,
  ((b).us_split_fields1).rec__list_ex_pledge__list_cell__next) = true)) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic list_ex_pledge__list_cell__value__first__bit : int

logic list_ex_pledge__list_cell__value__last__bit : int

logic list_ex_pledge__list_cell__value__position : int

axiom list_ex_pledge__list_cell__value__first__bit_axiom :
  (0 <= list_ex_pledge__list_cell__value__first__bit)

axiom list_ex_pledge__list_cell__value__last__bit_axiom :
  (list_ex_pledge__list_cell__value__first__bit <  list_ex_pledge__list_cell__value__last__bit)

axiom list_ex_pledge__list_cell__value__position_axiom :
  (0 <= list_ex_pledge__list_cell__value__position)

logic list_ex_pledge__list_cell__next__first__bit : int

logic list_ex_pledge__list_cell__next__last__bit : int

logic list_ex_pledge__list_cell__next__position : int

axiom list_ex_pledge__list_cell__next__first__bit_axiom :
  (0 <= list_ex_pledge__list_cell__next__first__bit)

axiom list_ex_pledge__list_cell__next__last__bit_axiom :
  (list_ex_pledge__list_cell__next__first__bit <  list_ex_pledge__list_cell__next__last__bit)

axiom list_ex_pledge__list_cell__next__position_axiom :
  (0 <= list_ex_pledge__list_cell__next__position)

logic user_eq3 : us_rep1, us_rep1 -> bool

logic dummy7 : us_rep1

type list_cell__ref = { list_cell__content : us_rep1
}

function list_cell__ref_list_cell__content__projection(a: list_cell__ref) : us_rep1 =
  (a).list_cell__content

logic us_open : us_main_type -> us_rep1

logic us_close : us_rep1 -> us_main_type

axiom close_open :
  (forall x:us_main_type [us_open(x)]. (us_close(us_open(x)) = x))

axiom open_close :
  (forall x:us_rep1 [us_close(x)]. (us_open(us_close(x)) = x))

function rec__list_ex_pledge__list__pointer_value(a: us_rep) : us_rep1 =
  us_open((a).rec__list_ex_pledge__list__pointer_value_abstr)

predicate rec__list_ex_pledge__list__pointer_value__pred(a: us_rep) =
  (not ((a).rec__list_ex_pledge__list__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__list_ex_pledge__list__is_null_pointer = true)

axiom get_nth_val__def_axiom :
  (forall l:us_rep.
  (forall n:int [get_nth_val(l, n)]. ((dynamic_invariant2(n, true, true,
  true, true) and get_nth_val__function_guard(get_nth_val(l, n), l, n)) ->
  (forall l1:us_rep. forall n1:int.
  get_nth_val__function_guard(get_nth_val(((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next,
  (n1 - 1)),
  ((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next,
  (n1 - 1))))))

axiom get_nth_val__def_axiom1 :
  (forall l:us_rep.
  (forall n:int [get_nth_val(l, n)]. ((dynamic_invariant2(n, true, true,
  true, true) and get_nth_val__function_guard(get_nth_val(l, n), l, n)) ->
  (get_nth_val(l,
  n) = (if (n = 1) then to_rep(((rec__list_ex_pledge__list__pointer_value(l)).us_split_fields1).rec__list_ex_pledge__list_cell__value) else get_nth_val(((rec__list_ex_pledge__list__pointer_value(l)).us_split_fields1).rec__list_ex_pledge__list_cell__next,
  (n - 1)))))))

logic l__pointer_address : int

logic l__is_null_pointer : bool

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic dummy8 : us_rep

type t1b__ref = { t1b__content : us_rep
}

function t1b__ref_t1b__content__projection(a: t1b__ref) : us_rep =
  (a).t1b__content

logic attr__ATTRIBUTE_ADDRESS2 : int

type us_pledge_ty

type us_pledge_ty__ref = { us_pledge_ty__content : us_pledge_ty
}

logic us_pledge_get : us_pledge_ty, us_rep, us_rep -> bool

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate default_initial_assumption(temp___expr_163: us_rep,
  temp___skip_top_level_164: bool) =
  ((temp___expr_163).rec__list_ex_pledge__list__is_null_pointer = true)

predicate default_initial_assumption1(temp___expr_170: us_rep1,
  temp___skip_top_level_171: bool) =
  ((((temp___expr_170).us_split_fields1).rec__list_ex_pledge__list_cell__next).rec__list_ex_pledge__list__is_null_pointer = true)

axiom length_aux__def_axiom :
  (forall l:us_rep [length_aux(l)].
  (length_aux__function_guard(length_aux(l), l) ->
  (forall l1:us_rep.
  length_aux__function_guard(length_aux(((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next),
  ((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next))))

axiom length_aux__def_axiom1 :
  (forall l:us_rep [length_aux(l)].
  (length_aux__function_guard(length_aux(l), l) ->
  (forall l1:us_rep.
  length_aux__function_guard(length_aux(((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next),
  ((rec__list_ex_pledge__list__pointer_value(l1)).us_split_fields1).rec__list_ex_pledge__list_cell__next))))

axiom length_aux__def_axiom2 :
  (forall l:us_rep [length_aux(l)].
  (length_aux__function_guard(length_aux(l), l) ->
  (length_aux(l) = (if (bool_eq4(l,
  us_null_pointer) = true) then 0 else (if (length_aux(((rec__list_ex_pledge__list__pointer_value(l)).us_split_fields1).rec__list_ex_pledge__list_cell__next) = 2147483647) then 2147483647 else (1 + length_aux(((rec__list_ex_pledge__list__pointer_value(l)).us_split_fields1).rec__list_ex_pledge__list_cell__next)))))))

axiom length_aux__post_axiom :
  (forall l:us_rep [length_aux(l)]. (let result = length_aux(l) : int in
  (length_aux__function_guard(result, l) -> dynamic_invariant(result, true,
  false, true, true))))

axiom get_nth_val__post_axiom :
  (forall l:us_rep. length__function_guard(length(l), l))

axiom get_nth_val__post_axiom1 :
  (forall l:us_rep.
  (forall n:int [get_nth_val(l, n)]. ((dynamic_invariant2(n, true, true,
  true, true) and (n <= length(l))) -> (let result = get_nth_val(l, n)
  : int in (get_nth_val__function_guard(result, l, n) ->
  dynamic_invariant1(result, true, false, true, true))))))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 0)

 (* File "list_ex_pledge.ads", line 26, characters 0-0 *)
goal defqtvc :
  (forall l__pointer_value:us_split_fields.
  (forall l__pointer_value1:us_split_fields.
  ((l__pointer_value1 = l__pointer_value) ->
  ((forall l__pointer_value2:us_split_fields. length__function_guard(length({
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value2 }) }), {
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value2 }) })) ->
  ((length({ rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = l__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = l__pointer_value }) }) <  2147483647) -> (let o = {
  rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = l__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = l__pointer_value }) } : us_rep in (let o1 = length(o)
  : int in
  ((forall o2:us_rep. length_aux__function_guard(length_aux(o2), o2)) ->
  ((length__function_guard(o1, o) and (dynamic_invariant(o1, true, false,
  true, true) and (o1 = length_aux(o)))) ->
  (forall lgth:int. ((lgth = o1) -> (dynamic_invariant(lgth, true, false,
  true, true) ->
  (forall usf:us_pledge_ty.
  ((forall temp___borrowed_192:us_rep.
   (forall temp___brower_191:us_rep [us_pledge_get(usf, temp___borrowed_192,
   temp___brower_191)]. ((us_pledge_get(usf, temp___borrowed_192,
   temp___brower_191) = true) <-> (temp___borrowed_192 = temp___brower_191)))) ->
  (forall list_ex_pledge__all_zero__t__pledge:us_pledge_ty.
  ((list_ex_pledge__all_zero__t__pledge = usf) ->
  (forall t__pointer_value:us_split_fields. (({ us_split_fields1 =
  t__pointer_value } = rec__list_ex_pledge__list__pointer_value({
  rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = l__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = l__pointer_value }) })) ->
  (forall t__pointer_address:int.
  ((t__pointer_address = l__pointer_address) ->
  (forall t__is_null_pointer:bool.
  ((t__is_null_pointer = l__is_null_pointer) ->
  (forall i:int. ((i = 0) -> (dynamic_invariant(i, true, false, true,
  true) ->
  (forall t__pointer_value1:us_split_fields. forall t__pointer_address1:int.
  forall t__is_null_pointer1:bool.
  forall list_ex_pledge__all_zero__t__pledge1:us_pledge_ty.
  ((forall o2:us_rep. length_aux__function_guard(length_aux(o2), o2)) ->
  ((forall t__pointer_value2:us_split_fields. forall t__pointer_address2:int.
   forall t__is_null_pointer2:bool. length__function_guard(length({
   rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
   rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = t__pointer_value2 }) }), {
   rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
   rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = t__pointer_value2 }) })) ->
  ((forall temp___brower_232:us_rep.
   length__function_guard(length(temp___brower_232), temp___brower_232)) ->
  ((forall temp___borrowed_233:us_rep.
   length__function_guard(length(temp___borrowed_233), temp___borrowed_233)) ->
  ((forall temp___brower_232:us_rep.
   length__function_guard(length(temp___brower_232), temp___brower_232)) ->
  ((forall temp___borrowed_233:us_rep.
   length__function_guard(length(temp___borrowed_233), temp___borrowed_233)) ->
  ((forall temp___borrowed_223:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___borrowed_223, k),
   temp___borrowed_223, k)) ->
  ((forall temp___borrowed_213:us_rep.
   length__function_guard(length(temp___borrowed_213), temp___borrowed_213)) ->
  ((forall temp___borrowed_213:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___borrowed_213, k),
   temp___borrowed_213, k)) ->
  ((forall i1:int. forall temp___brower_212:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___brower_212, (k - i1)),
   temp___brower_212, (k - i1))) ->
  ((forall o2:us_rep. length_aux__function_guard(length_aux(o2), o2)) ->
  ((forall t__pointer_value2:us_split_fields. forall t__pointer_address2:int.
   forall t__is_null_pointer2:bool. length__function_guard(length({
   rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
   rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = t__pointer_value2 }) }), {
   rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
   rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = t__pointer_value2 }) })) ->
  ((forall temp___brower_232:us_rep.
   length__function_guard(length(temp___brower_232), temp___brower_232)) ->
  ((forall temp___borrowed_233:us_rep.
   length__function_guard(length(temp___borrowed_233), temp___borrowed_233)) ->
  ((forall temp___brower_232:us_rep.
   length__function_guard(length(temp___brower_232), temp___brower_232)) ->
  ((forall temp___borrowed_233:us_rep.
   length__function_guard(length(temp___borrowed_233), temp___borrowed_233)) ->
  ((forall temp___borrowed_223:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___borrowed_223, k),
   temp___borrowed_223, k)) ->
  ((forall temp___borrowed_213:us_rep.
   length__function_guard(length(temp___borrowed_213), temp___borrowed_213)) ->
  ((forall temp___borrowed_213:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___borrowed_213, k),
   temp___borrowed_213, k)) ->
  ((forall i1:int. forall temp___brower_212:us_rep. forall k:int.
   get_nth_val__function_guard(get_nth_val(temp___brower_212, (k - i1)),
   temp___brower_212, (k - i1))) ->
  ((if (notb(bool_eq4({ rec__list_ex_pledge__list__is_null_pointer =
  t__is_null_pointer; rec__list_ex_pledge__list__pointer_address =
  t__pointer_address; rec__list_ex_pledge__list__pointer_value_abstr =
  us_close({ us_split_fields1 = t__pointer_value }) },
  us_null_pointer)) = true) then (let o2 = {
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value }) } : us_rep in (let o3 = length(o2)
  : int in ((length__function_guard(o3, o2) and (dynamic_invariant(o3, true,
  false, true, true) and (o3 = length_aux(o2)))) and
  (in_range1((lgth - i)) and
  (exists t__pointer_value2:us_split_fields. exists t__pointer_address2:int.
  exists t__is_null_pointer2:bool.
  exists list_ex_pledge__all_zero__t__pledge2:us_pledge_ty. exists i1:int.
  (let list_ex_pledge__all_zero__t__pledge3 = { us_pledge_ty__content =
  list_ex_pledge__all_zero__t__pledge2 } : us_pledge_ty__ref in
  ((((lgth - i1) = length({ rec__list_ex_pledge__list__is_null_pointer =
  t__is_null_pointer2; rec__list_ex_pledge__list__pointer_address =
  t__pointer_address2; rec__list_ex_pledge__list__pointer_value_abstr =
  us_close({ us_split_fields1 = t__pointer_value2 }) })) and
  ((forall temp___borrowed_233:us_rep.
   (forall temp___brower_232:us_rep
   [us_pledge_get((list_ex_pledge__all_zero__t__pledge3).us_pledge_ty__content,
   temp___borrowed_233, temp___brower_232)].
   (((us_pledge_get(list_ex_pledge__all_zero__t__pledge2,
   temp___borrowed_233, temp___brower_232) = true) and
   ((l__is_null_pointer = (temp___borrowed_233).rec__list_ex_pledge__list__is_null_pointer) and
   (t__is_null_pointer2 = (temp___brower_232).rec__list_ex_pledge__list__is_null_pointer))) ->
   (if (length(temp___brower_232) <= (2147483647 - i1)) then (length(temp___borrowed_233) = (i1 + length(temp___brower_232))) else (length(temp___borrowed_233) = 2147483647))))) and
  ((forall temp___borrowed_223:us_rep.
   (forall temp___brower_222:us_rep
   [us_pledge_get((list_ex_pledge__all_zero__t__pledge3).us_pledge_ty__content,
   temp___borrowed_223, temp___brower_222)].
   (((us_pledge_get(list_ex_pledge__all_zero__t__pledge2,
   temp___borrowed_223, temp___brower_222) = true) and
   ((l__is_null_pointer = (temp___borrowed_223).rec__list_ex_pledge__list__is_null_pointer) and
   (t__is_null_pointer2 = (temp___brower_222).rec__list_ex_pledge__list__is_null_pointer))) ->
   (forall k:int. (((1 <= k) and (k <= i1)) ->
   (get_nth_val(temp___borrowed_223, k) = 0)))))) and
  (forall temp___borrowed_213:us_rep.
  (forall temp___brower_212:us_rep
  [us_pledge_get((list_ex_pledge__all_zero__t__pledge3).us_pledge_ty__content,
  temp___borrowed_213, temp___brower_212)].
  (((us_pledge_get(list_ex_pledge__all_zero__t__pledge2, temp___borrowed_213,
  temp___brower_212) = true) and
  ((l__is_null_pointer = (temp___borrowed_213).rec__list_ex_pledge__list__is_null_pointer) and
  (t__is_null_pointer2 = (temp___brower_212).rec__list_ex_pledge__list__is_null_pointer))) ->
  (forall k:int. ((((i1 + 1) <= k) and (k <= length(temp___borrowed_213))) ->
  (get_nth_val(temp___borrowed_213, k) = get_nth_val(temp___brower_212,
  (k - i1))))))))))) and ((andb((if dynamic_invariant(i1, true, true, true,
  true) then true else false), (if (not (bool_eq4({
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value2 }) },
  us_null_pointer) = true)) then true else false)) = true) and
  (exists t__pointer_value3:us_split_fields. (({ us_split_fields1 =
  t__pointer_value3 } = rec__list_ex_pledge__list__pointer_value({
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = { rec__list_ex_pledge__list_cell__value = rliteral;
  rec__list_ex_pledge__list_cell__next =
  ((rec__list_ex_pledge__list__pointer_value({
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value2 })
  })).us_split_fields1).rec__list_ex_pledge__list_cell__next } }) })) and
  (exists usf1:us_pledge_ty.
  ((forall temp___borrowed_200:us_rep.
   (forall temp___brower_197:us_rep [us_pledge_get(usf1, temp___borrowed_200,
   temp___brower_197)]. (us_pledge_get(usf1, temp___borrowed_200,
   temp___brower_197) = us_pledge_get(list_ex_pledge__all_zero__t__pledge2,
   temp___borrowed_200, { rec__list_ex_pledge__list__is_null_pointer =
   t__is_null_pointer2; rec__list_ex_pledge__list__pointer_address =
   t__pointer_address2; rec__list_ex_pledge__list__pointer_value_abstr =
   us_close({ us_split_fields1 = { rec__list_ex_pledge__list_cell__value =
   ((rec__list_ex_pledge__list__pointer_value({
   rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
   rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = t__pointer_value3 })
   })).us_split_fields1).rec__list_ex_pledge__list_cell__value;
   rec__list_ex_pledge__list_cell__next = temp___brower_197 } }) })))) and
  ((list_ex_pledge__all_zero__t__pledge1 = usf1) and (let temp___196 =
  ((rec__list_ex_pledge__list__pointer_value({
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer2;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address2;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value3 })
  })).us_split_fields1).rec__list_ex_pledge__list_cell__next : us_rep in (({
  us_split_fields1 = t__pointer_value1
  } = rec__list_ex_pledge__list__pointer_value(temp___196)) and
  ((t__pointer_address1 = (temp___196).rec__list_ex_pledge__list__pointer_address) and
  ((t__is_null_pointer1 = (temp___196).rec__list_ex_pledge__list__is_null_pointer) and
  (let o4 = (i1 + 1) : int in (in_range1(o4) and
  (exists i2:int. ((i2 = o4) and (not (notb(bool_eq4({
  rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer1;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address1;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value1 }) }, us_null_pointer)) = true))))))))))))))))))))))) else ((((t__pointer_value1 = t__pointer_value) and
  (t__pointer_address1 = t__pointer_address)) and
  (t__is_null_pointer1 = t__is_null_pointer)) and
  (list_ex_pledge__all_zero__t__pledge1 = list_ex_pledge__all_zero__t__pledge))) ->
  (forall usf1:us_rep. (((us_pledge_get(list_ex_pledge__all_zero__t__pledge1,
  usf1, { rec__list_ex_pledge__list__is_null_pointer = t__is_null_pointer1;
  rec__list_ex_pledge__list__pointer_address = t__pointer_address1;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = t__pointer_value1 }) }) = true) and
  (l__is_null_pointer = (usf1).rec__list_ex_pledge__list__is_null_pointer)) ->
  (forall l__pointer_value2:us_split_fields. (({ us_split_fields1 =
  l__pointer_value2 } = rec__list_ex_pledge__list__pointer_value(usf1)) ->
  ((forall l__pointer_value3:us_split_fields. length__function_guard(length({
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value3 }) }), {
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value3 }) })) ->
  ((forall l__pointer_value3:us_split_fields. length__function_guard(length({
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value3 }) }), {
   rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
   rec__list_ex_pledge__list__pointer_address = l__pointer_address;
   rec__list_ex_pledge__list__pointer_value_abstr = us_close({
   us_split_fields1 = l__pointer_value3 }) })) ->
  (length({ rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = l__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = l__pointer_value2 }) }) = length({
  rec__list_ex_pledge__list__is_null_pointer = l__is_null_pointer;
  rec__list_ex_pledge__list__pointer_address = l__pointer_address;
  rec__list_ex_pledge__list__pointer_value_abstr = us_close({
  us_split_fields1 = l__pointer_value1 }) })))))))))))))))))))))))))))))))))))))))))))))))))))))))
