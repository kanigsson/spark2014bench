(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

type s1

logic s1qtint : s1 -> int

axiom s1qtaxiom : (forall i:s1. (1 <= s1qtint(i)))

axiom s1qtaxiom1 : (forall i:s1. (s1qtint(i) <= 10))

predicate in_range1(x1: int) = ((1 <= x1) and (x1 <= 10))

function bool_eq1(x1: int, y1: int) : bool =
  (if (x1 = y1) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : s1, s1 -> bool

logic dummy1 : s1

type s1__ref = { s1__content : s1
}

function s1__ref_s1__content__projection(a: s1__ref) : s1 = (a).s1__content

predicate dynamic_invariant1(temp___expr_158: int, temp___is_init_154: bool,
  temp___skip_constant_155: bool, temp___do_toplevel_156: bool,
  temp___do_typ_inv_157: bool) = (((temp___is_init_154 = true) or
  (1 <= 10)) -> in_range1(temp___expr_158))

type s2

logic s2qtint : s2 -> int

axiom s2qtaxiom : (forall i:s2. (1 <= s2qtint(i)))

axiom s2qtaxiom1 : (forall i:s2. (s2qtint(i) <= 10))

predicate in_range2(x1: int) = ((1 <= x1) and (x1 <= 10))

function bool_eq2(x1: int, y1: int) : bool =
  (if (x1 = y1) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : s2, s2 -> bool

logic dummy2 : s2

type s2__ref = { s2__content : s2
}

function s2__ref_s2__content__projection(a: s2__ref) : s2 = (a).s2__content

predicate dynamic_invariant2(temp___expr_165: int, temp___is_init_161: bool,
  temp___skip_constant_162: bool, temp___do_toplevel_163: bool,
  temp___do_typ_inv_164: bool) = (((temp___is_init_161 = true) or
  (1 <= 10)) -> in_range2(temp___expr_165))

type ttmp3S

logic ttmp3Sqtint : ttmp3S -> int

axiom ttmp3Sqtaxiom : (forall i:ttmp3S. (1 <= ttmp3Sqtint(i)))

axiom ttmp3Sqtaxiom1 : (forall i:ttmp3S. (ttmp3Sqtint(i) <= 5))

predicate in_range3(x1: int) = ((1 <= x1) and (x1 <= 5))

function bool_eq3(x1: int, y1: int) : bool =
  (if (x1 = y1) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : ttmp3S, ttmp3S -> bool

logic dummy3 : ttmp3S

type ttmp3S__ref = { ttmp3S__content : ttmp3S
}

function ttmp3S__ref_ttmp3S__content__projection(a: ttmp3S__ref) : ttmp3S =
  (a).ttmp3S__content

predicate dynamic_invariant3(temp___expr_172: int, temp___is_init_168: bool,
  temp___skip_constant_169: bool, temp___do_toplevel_170: bool,
  temp___do_typ_inv_171: bool) = (((temp___is_init_168 = true) or
  (1 <= 5)) -> in_range3(temp___expr_172))

type ttmp4S

logic ttmp4Sqtint : ttmp4S -> int

axiom ttmp4Sqtaxiom : (forall i:ttmp4S. (1 <= ttmp4Sqtint(i)))

axiom ttmp4Sqtaxiom1 : (forall i:ttmp4S. (ttmp4Sqtint(i) <= 5))

predicate in_range4(x1: int) = ((1 <= x1) and (x1 <= 5))

function bool_eq4(x1: int, y1: int) : bool =
  (if (x1 = y1) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : ttmp4S, ttmp4S -> bool

logic dummy4 : ttmp4S

type ttmp4S__ref = { ttmp4S__content : ttmp4S
}

function ttmp4S__ref_ttmp4S__content__projection(a: ttmp4S__ref) : ttmp4S =
  (a).ttmp4S__content

predicate dynamic_invariant4(temp___expr_179: int, temp___is_init_175: bool,
  temp___skip_constant_176: bool, temp___do_toplevel_177: bool,
  temp___do_typ_inv_178: bool) = (((temp___is_init_175 = true) or
  (1 <= 5)) -> in_range4(temp___expr_179))

type ttmp5S

logic ttmp5Sqtint : ttmp5S -> int

axiom ttmp5Sqtaxiom : (forall i:ttmp5S. (1 <= ttmp5Sqtint(i)))

axiom ttmp5Sqtaxiom1 : (forall i:ttmp5S. (ttmp5Sqtint(i) <= 5))

predicate in_range5(x1: int) = ((1 <= x1) and (x1 <= 5))

function bool_eq5(x1: int, y1: int) : bool =
  (if (x1 = y1) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : ttmp5S, ttmp5S -> bool

logic dummy5 : ttmp5S

type ttmp5S__ref = { ttmp5S__content : ttmp5S
}

function ttmp5S__ref_ttmp5S__content__projection(a: ttmp5S__ref) : ttmp5S =
  (a).ttmp5S__content

predicate dynamic_invariant5(temp___expr_186: int, temp___is_init_182: bool,
  temp___skip_constant_183: bool, temp___do_toplevel_184: bool,
  temp___do_typ_inv_185: bool) = (((temp___is_init_182 = true) or
  (1 <= 5)) -> in_range5(temp___expr_186))

 (* File "p.adb", line 1, characters 0-0 *)
goal defqtvc :
  (forall tmp1:int. forall tmp2:int. forall tmp3:int. forall tmp4:int.
  forall tmp5:int. (dynamic_invariant(x, true, false, true, true) ->
  (dynamic_invariant(y, true, false, true, true) -> (dynamic_invariant1(tmp1,
  false, false, true, true) -> (dynamic_invariant2(tmp2, false, false, true,
  true) -> (dynamic_invariant3(tmp3, false, false, true, true) ->
  (dynamic_invariant4(tmp4, false, false, true, true) ->
  (dynamic_invariant5(tmp5, false, false, true, true) -> (let o = x : int in
  (in_range1(o) ->
  (forall tmp11:int. ((tmp11 = o) -> in_range2(y)))))))))))))
