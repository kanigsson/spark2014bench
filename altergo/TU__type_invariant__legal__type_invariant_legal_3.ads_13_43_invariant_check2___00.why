(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic f : int -> bool

logic f__function_guard : bool, int -> prop

logic g : int -> bool

logic g__function_guard : bool, int -> prop

axiom temp___result_169qtdef :
  (forall temp___168:int. g__function_guard(g(temp___168), temp___168))

predicate type_invariant(temp___167: int) = (g(temp___167) = true)

type t2

logic t2qtint : t2 -> int

axiom t2qtaxiom : (forall i:t2. (0 <= t2qtint(i)))

axiom t2qtaxiom1 : (forall i:t2. (t2qtint(i) <= 2147483647))

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : t2, t2 -> bool

logic dummy : t2

type t2__ref = { t2__content : t2
}

function t2__ref_t2__content__projection(a: t2__ref) : t2 = (a).t2__content

predicate dynamic_invariant(temp___expr_174: int, temp___is_init_170: bool,
  temp___skip_constant_171: bool, temp___do_toplevel_172: bool,
  temp___do_typ_inv_173: bool) = (((temp___is_init_170 = true) or
  (0 <= 2147483647)) -> in_range(temp___expr_174))

axiom f__def_axiom : (forall x:int [f(x)]. (f(x) = true))

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

axiom g__def_axiom : (forall x1:int. f__function_guard(f(x1), x1))

axiom g__def_axiom1 :
  (forall x1:int [g(x1)]. ((g(x1) = true) -> (f(x1) = true)))

axiom g__def_axiom2 :
  (forall x1:int [g(x1)]. ((f(x1) = true) -> (g(x1) = true)))

 (* File "type_invariant_legal_3.ads", line 13, characters 0-0 *)
goal defqtvc : (dynamic_invariant(x, true, false, true, true) ->
  type_invariant(x))
