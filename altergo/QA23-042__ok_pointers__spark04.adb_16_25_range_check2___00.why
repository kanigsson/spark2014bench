(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (in_range1(low) and in_range1(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length1(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

logic to_string : us_image, int -> us_t

logic from_string : us_t -> us_image

axiom to_string__first :
  (forall x:us_image.
  (forall s:int [to_string(x, s)]. (first1(to_string(x, s)) = 1)))

axiom to_string__length :
  (forall x:us_image.
  (forall s:int [to_string(x, s)]. ((0 <= s) -> (length1(to_string(x,
  s)) <= s))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))))))

axiom concat_def1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((a_last <  i) -> ((concat(a, a_first, a_last, b, b_first,
  b_last)[i]) = (b[((i - a_last) + (b_first - 1))]))))))

logic concat_singleton_left : character, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_singleton_left_def :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  ((concat_singleton_left(a, a_first, b, b_first, b_last)[a_first]) = a))))

axiom concat_singleton_left_def1 :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  (forall i:int [(concat_singleton_left(a, a_first, b, b_first, b_last)[i])].
  ((a_first <  i) -> ((concat_singleton_left(a, a_first, b, b_first,
  b_last)[i]) = (b[((i - a_first) + (b_first - 1))])))))))

logic concat_singleton_right : (int,character) farray, int, int,
  character -> (int,character) farray

axiom concat_singleton_right_def :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)]. ((concat_singleton_right(a, a_first, a_last,
  b)[(a_last + 1)]) = b))))

axiom concat_singleton_right_def1 :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)].
  (forall i:int [(concat_singleton_right(a, a_first, a_last, b)[i])| (a[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat_singleton_right(a, a_first,
  a_last, b)[i]) = (a[i])))))))

logic concat_singletons : character, int, character -> (int,character) farray

axiom concat_singletons_def :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[a_first]) = a)))

axiom concat_singletons_def1 :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[(a_first + 1)]) = b)))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq6(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range3(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE3 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> bool

type us_rep = { rec__spark04__data__ai__is_null_pointer : bool;
rec__spark04__data__ai__pointer_address : int;
rec__spark04__data__ai__pointer_value : integer
}

function us_rep_rec__spark04__data__ai__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__spark04__data__ai__is_null_pointer

function us_rep_rec__spark04__data__ai__pointer_address__projection(a: us_rep) : int =
  (a).rec__spark04__data__ai__pointer_address

function us_rep_rec__spark04__data__ai__pointer_value__projection(a: us_rep) : integer =
  (a).rec__spark04__data__ai__pointer_value

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq7(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__spark04__data__ai__is_null_pointer = (b).rec__spark04__data__ai__is_null_pointer) and
  ((not ((a).rec__spark04__data__ai__is_null_pointer = true)) ->
  (((a).rec__spark04__data__ai__pointer_address = (b).rec__spark04__data__ai__pointer_address) and
  ((a).rec__spark04__data__ai__pointer_value = (b).rec__spark04__data__ai__pointer_value)))) then true else false)

predicate rec__spark04__data__ai__pointer_value__pred(a: us_rep) =
  (not ((a).rec__spark04__data__ai__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__spark04__data__ai__is_null_pointer = true)

logic dummy4 : us_rep

type ai__ref = { ai__content : us_rep
}

function ai__ref_ai__content__projection(a: ai__ref) : us_rep =
  (a).ai__content

type us_split_fields = { rec__spark04__data__point__x : integer;
rec__spark04__data__point__y : integer
}

function us_split_fields_rec__spark04__data__point__x__projection(a: us_split_fields) : integer =
  (a).rec__spark04__data__point__x

function us_split_fields_rec__spark04__data__point__y__projection(a: us_split_fields) : integer =
  (a).rec__spark04__data__point__y

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq8(a: us_rep1, b: us_rep1) : bool =
  (if ((to_rep1(((a).us_split_fields1).rec__spark04__data__point__x) = to_rep1(((b).us_split_fields1).rec__spark04__data__point__x)) and
  (to_rep1(((a).us_split_fields1).rec__spark04__data__point__y) = to_rep1(((b).us_split_fields1).rec__spark04__data__point__y))) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic spark04__data__point__x__first__bit : int

logic spark04__data__point__x__last__bit : int

logic spark04__data__point__x__position : int

axiom spark04__data__point__x__first__bit_axiom :
  (0 <= spark04__data__point__x__first__bit)

axiom spark04__data__point__x__last__bit_axiom :
  (spark04__data__point__x__first__bit <  spark04__data__point__x__last__bit)

axiom spark04__data__point__x__position_axiom :
  (0 <= spark04__data__point__x__position)

logic spark04__data__point__y__first__bit : int

logic spark04__data__point__y__last__bit : int

logic spark04__data__point__y__position : int

axiom spark04__data__point__y__first__bit_axiom :
  (0 <= spark04__data__point__y__first__bit)

axiom spark04__data__point__y__last__bit_axiom :
  (spark04__data__point__y__first__bit <  spark04__data__point__y__last__bit)

axiom spark04__data__point__y__position_axiom :
  (0 <= spark04__data__point__y__position)

logic user_eq4 : us_rep1, us_rep1 -> bool

logic dummy5 : us_rep1

type point__ref = { point__content : us_rep1
}

function point__ref_point__content__projection(a: point__ref) : us_rep1 =
  (a).point__content

logic createpoint : us_rep, us_rep -> us_rep1

logic createpoint__function_guard : us_rep1, us_rep, us_rep -> prop

predicate default_initial_assumption(temp___expr_178: us_rep,
  temp___skip_top_level_179: bool) =
  ((temp___expr_178).rec__spark04__data__ai__is_null_pointer = true)

axiom createpoint__def_axiom :
  (forall x:us_rep. forall y:us_rep [createpoint(x, y)]. (createpoint(x,
  y) = { us_split_fields1 = { rec__spark04__data__point__x =
  (x).rec__spark04__data__ai__pointer_value; rec__spark04__data__point__y =
  (y).rec__spark04__data__ai__pointer_value } }))

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic line_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic line_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic page_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic page_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic temp___String_Literal_185 : unit -> (int,character) farray

axiom temp___String_Literal_185__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_185(us_void_param)].
  (to_rep((temp___String_Literal_185(us_void_param)[1])) = 80))

axiom temp___String_Literal_185__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_185(us_void_param)].
  (to_rep((temp___String_Literal_185(us_void_param)[2])) = 46))

axiom temp___String_Literal_185__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_185(us_void_param)].
  (to_rep((temp___String_Literal_185(us_void_param)[3])) = 88))

axiom temp___String_Literal_185__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_185(us_void_param)].
  (to_rep((temp___String_Literal_185(us_void_param)[4])) = 32))

axiom temp___String_Literal_185__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_185(us_void_param)].
  (to_rep((temp___String_Literal_185(us_void_param)[5])) = 61))

logic temp___String_Literal_188 : unit -> (int,character) farray

axiom temp___String_Literal_188__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[1])) = 44))

axiom temp___String_Literal_188__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[2])) = 32))

axiom temp___String_Literal_188__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[3])) = 80))

axiom temp___String_Literal_188__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[4])) = 46))

axiom temp___String_Literal_188__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[5])) = 89))

axiom temp___String_Literal_188__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[6])) = 32))

axiom temp___String_Literal_188__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_188(us_void_param)].
  (to_rep((temp___String_Literal_188(us_void_param)[7])) = 61))

logic temp___String_Literal_193 : unit -> (int,character) farray

axiom temp___String_Literal_193__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[1])) = 44))

axiom temp___String_Literal_193__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[2])) = 32))

axiom temp___String_Literal_193__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[3])) = 65))

axiom temp___String_Literal_193__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[4])) = 88))

axiom temp___String_Literal_193__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[5])) = 46))

axiom temp___String_Literal_193__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[6])) = 97))

axiom temp___String_Literal_193__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[7])) = 108))

axiom temp___String_Literal_193__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[8])) = 108))

axiom temp___String_Literal_193__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[9])) = 32))

axiom temp___String_Literal_193__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_193(us_void_param)].
  (to_rep((temp___String_Literal_193(us_void_param)[10])) = 61))

logic temp___String_Literal_198 : unit -> (int,character) farray

axiom temp___String_Literal_198__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[1])) = 44))

axiom temp___String_Literal_198__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[2])) = 32))

axiom temp___String_Literal_198__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[3])) = 65))

axiom temp___String_Literal_198__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[4])) = 89))

axiom temp___String_Literal_198__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[5])) = 46))

axiom temp___String_Literal_198__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[6])) = 97))

axiom temp___String_Literal_198__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[7])) = 108))

axiom temp___String_Literal_198__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[8])) = 108))

axiom temp___String_Literal_198__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[9])) = 32))

axiom temp___String_Literal_198__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_198(us_void_param)].
  (to_rep((temp___String_Literal_198(us_void_param)[10])) = 61))

logic temp___String_Literal_207 : unit -> (int,character) farray

axiom temp___String_Literal_207__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_207(us_void_param)].
  (to_rep((temp___String_Literal_207(us_void_param)[1])) = 80))

axiom temp___String_Literal_207__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_207(us_void_param)].
  (to_rep((temp___String_Literal_207(us_void_param)[2])) = 46))

axiom temp___String_Literal_207__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_207(us_void_param)].
  (to_rep((temp___String_Literal_207(us_void_param)[3])) = 88))

axiom temp___String_Literal_207__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_207(us_void_param)].
  (to_rep((temp___String_Literal_207(us_void_param)[4])) = 32))

axiom temp___String_Literal_207__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_207(us_void_param)].
  (to_rep((temp___String_Literal_207(us_void_param)[5])) = 61))

logic temp___String_Literal_210 : unit -> (int,character) farray

axiom temp___String_Literal_210__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[1])) = 44))

axiom temp___String_Literal_210__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[2])) = 32))

axiom temp___String_Literal_210__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[3])) = 80))

axiom temp___String_Literal_210__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[4])) = 46))

axiom temp___String_Literal_210__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[5])) = 89))

axiom temp___String_Literal_210__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[6])) = 32))

axiom temp___String_Literal_210__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_210(us_void_param)].
  (to_rep((temp___String_Literal_210(us_void_param)[7])) = 61))

logic temp___String_Literal_215 : unit -> (int,character) farray

axiom temp___String_Literal_215__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[1])) = 44))

axiom temp___String_Literal_215__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[2])) = 32))

axiom temp___String_Literal_215__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[3])) = 65))

axiom temp___String_Literal_215__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[4])) = 88))

axiom temp___String_Literal_215__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[5])) = 46))

axiom temp___String_Literal_215__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[6])) = 97))

axiom temp___String_Literal_215__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[7])) = 108))

axiom temp___String_Literal_215__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[8])) = 108))

axiom temp___String_Literal_215__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[9])) = 32))

axiom temp___String_Literal_215__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_215(us_void_param)].
  (to_rep((temp___String_Literal_215(us_void_param)[10])) = 61))

logic temp___String_Literal_220 : unit -> (int,character) farray

axiom temp___String_Literal_220__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[1])) = 44))

axiom temp___String_Literal_220__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[2])) = 32))

axiom temp___String_Literal_220__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[3])) = 65))

axiom temp___String_Literal_220__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[4])) = 89))

axiom temp___String_Literal_220__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[5])) = 46))

axiom temp___String_Literal_220__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[6])) = 97))

axiom temp___String_Literal_220__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[7])) = 108))

axiom temp___String_Literal_220__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[8])) = 108))

axiom temp___String_Literal_220__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[9])) = 32))

axiom temp___String_Literal_220__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_220(us_void_param)].
  (to_rep((temp___String_Literal_220(us_void_param)[10])) = 61))

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

predicate dynamic_invariant1(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range1(temp___expr_46))

predicate dynamic_invariant2(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range2(temp___expr_74))

predicate dynamic_invariant3(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

type count

logic countqtint : count -> int

axiom countqtaxiom : (forall i:count. (0 <= countqtint(i)))

axiom countqtaxiom1 : (forall i:count. (countqtint(i) <= 2147483647))

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq5 : count, count -> bool

logic dummy6 : count

type count__ref = { count__content : count
}

function count__ref_count__content__projection(a: count__ref) : count =
  (a).count__content

predicate dynamic_invariant4(temp___expr_161: int, temp___is_init_157: bool,
  temp___skip_constant_158: bool, temp___do_toplevel_159: bool,
  temp___do_typ_inv_160: bool) = (((temp___is_init_157 = true) or
  (0 <= 2147483647)) -> in_range4(temp___expr_161))

axiom line_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private.
  forall ada___ada__text_io__file_system:us_private
  [line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err, ada___ada__text_io__file_system)].
  dynamic_invariant4(line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err, ada___ada__text_io__file_system), true,
  false, true, true))

axiom page_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private.
  forall ada___ada__text_io__file_system:us_private
  [page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err, ada___ada__text_io__file_system)].
  dynamic_invariant4(page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__standard_out, ada___ada__text_io__standard_err,
  ada___ada__text_io__current_in, ada___ada__text_io__current_out,
  ada___ada__text_io__current_err, ada___ada__text_io__file_system), true,
  false, true, true))

 (* File "spark04.ads", line 21, characters 0-0 *)
goal defqtvc :
  (forall ax__pointer_value:integer. forall ax__pointer_address:int.
  forall ax__is_null_pointer:bool. forall ay__pointer_value:integer.
  forall ay__pointer_address:int. forall ay__is_null_pointer:bool. (let o = {
  rec__spark04__data__ai__is_null_pointer = ay__is_null_pointer;
  rec__spark04__data__ai__pointer_address = ay__pointer_address;
  rec__spark04__data__ai__pointer_value = ay__pointer_value } : us_rep in
  (let o1 = { rec__spark04__data__ai__is_null_pointer = ax__is_null_pointer;
  rec__spark04__data__ai__pointer_address = ax__pointer_address;
  rec__spark04__data__ai__pointer_value = ax__pointer_value } : us_rep in
  (let temp___184 = createpoint(o1, o) : us_rep1 in
  ((createpoint__function_guard(temp___184, o1, o) and (temp___184 = {
  us_split_fields1 = { rec__spark04__data__point__x = ax__pointer_value;
  rec__spark04__data__point__y = ay__pointer_value } })) ->
  (forall p__split_fields:us_split_fields.
  ((p__split_fields = (temp___184).us_split_fields1) ->
  (forall o2:int. ((to_rep1(ay__pointer_value) = o2) ->
  (forall o3:int. ((to_rep1(ax__pointer_value) = o3) ->
  (forall o4:int.
  ((to_rep1((p__split_fields).rec__spark04__data__point__y) = o4) ->
  (forall o5:int.
  ((to_rep1((p__split_fields).rec__spark04__data__point__x) = o5) ->
  (let temp___187 = to_string(attr__ATTRIBUTE_IMAGE(o5), 12) : us_t in
  in_range1(((1 + (length(1, 5) + length(first1(temp___187),
  last1(temp___187)))) - 1))))))))))))))))))
