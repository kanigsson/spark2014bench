(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

predicate dynamic_invariant(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range1(temp___expr_46))

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic n : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type tfirst_charS

logic tfirst_charSqtint : tfirst_charS -> int

axiom tfirst_charSqtaxiom :
  (forall i:tfirst_charS. (1 <= tfirst_charSqtint(i)))

axiom tfirst_charSqtaxiom1 :
  (forall i:tfirst_charS. (tfirst_charSqtint(i) <= 1025))

predicate in_range2(x: int) = ((1 <= x) and (x <= 1025))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : tfirst_charS, tfirst_charS -> bool

logic dummy2 : tfirst_charS

type tfirst_charS__ref = { tfirst_charS__content : tfirst_charS
}

function tfirst_charS__ref_tfirst_charS__content__projection(a: tfirst_charS__ref) : tfirst_charS =
  (a).tfirst_charS__content

predicate dynamic_invariant1(temp___expr_207: int, temp___is_init_203: bool,
  temp___skip_constant_204: bool, temp___do_toplevel_205: bool,
  temp___do_typ_inv_206: bool) = (((temp___is_init_203 = true) or
  (1 <= 1025)) -> in_range2(temp___expr_207))

type tlast_charS

logic tlast_charSqtint : tlast_charS -> int

axiom tlast_charSqtaxiom : (forall i:tlast_charS. (0 <= tlast_charSqtint(i)))

axiom tlast_charSqtaxiom1 :
  (forall i:tlast_charS. (tlast_charSqtint(i) <= 1024))

predicate in_range3(x: int) = ((0 <= x) and (x <= 1024))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : tlast_charS, tlast_charS -> bool

logic dummy3 : tlast_charS

type tlast_charS__ref = { tlast_charS__content : tlast_charS
}

function tlast_charS__ref_tlast_charS__content__projection(a: tlast_charS__ref) : tlast_charS =
  (a).tlast_charS__content

predicate dynamic_invariant2(temp___expr_214: int, temp___is_init_210: bool,
  temp___skip_constant_211: bool, temp___do_toplevel_212: bool,
  temp___do_typ_inv_213: bool) = (((temp___is_init_210 = true) or
  (0 <= 1024)) -> in_range3(temp___expr_214))

predicate dynamic_invariant3(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

 (* File "input.adb", line 34, characters 0-0 *)
goal defqtvc :
  (forall first_char:int. forall last_char:int.
  (dynamic_invariant1(first_char, true, false, true, true) ->
  (dynamic_invariant2(last_char, true, false, true, true) ->
  (dynamic_invariant(n, true, false, true, true) ->
  in_range((first_char + (n - 1)))))))
