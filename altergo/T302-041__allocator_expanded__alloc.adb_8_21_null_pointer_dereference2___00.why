(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type my_integer

logic my_integerqtint : my_integer -> int

axiom my_integerqtaxiom :
  (forall i:my_integer. ((- 2147483648) <= my_integerqtint(i)))

axiom my_integerqtaxiom1 :
  (forall i:my_integer. (my_integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : my_integer, my_integer -> bool

logic dummy : my_integer

type my_integer__ref = { my_integer__content : my_integer
}

function my_integer__ref_my_integer__content__projection(a: my_integer__ref) : my_integer =
  (a).my_integer__content

logic attr__ATTRIBUTE_ADDRESS : int

predicate dynamic_invariant(temp___expr_179: int, temp___is_init_175: bool,
  temp___skip_constant_176: bool, temp___do_toplevel_177: bool,
  temp___do_typ_inv_178: bool) = (((temp___is_init_175 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_179))

function to_rep(x: my_integer) : int = my_integerqtint(x)

logic of_rep : int -> my_integer

axiom inversion_axiom :
  (forall x:my_integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:my_integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range1(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE1 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> bool

type us_rep = { rec__types__int_ptr__is_null_pointer : bool;
rec__types__int_ptr__pointer_address : int;
rec__types__int_ptr__pointer_value : my_integer
}

function us_rep_rec__types__int_ptr__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__types__int_ptr__is_null_pointer

function us_rep_rec__types__int_ptr__pointer_address__projection(a: us_rep) : int =
  (a).rec__types__int_ptr__pointer_address

function us_rep_rec__types__int_ptr__pointer_value__projection(a: us_rep) : my_integer =
  (a).rec__types__int_ptr__pointer_value

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__types__int_ptr__is_null_pointer = (b).rec__types__int_ptr__is_null_pointer) and
  ((not ((a).rec__types__int_ptr__is_null_pointer = true)) ->
  (((a).rec__types__int_ptr__pointer_address = (b).rec__types__int_ptr__pointer_address) and
  ((a).rec__types__int_ptr__pointer_value = (b).rec__types__int_ptr__pointer_value)))) then true else false)

predicate rec__types__int_ptr__pointer_value__pred(a: us_rep) =
  (not ((a).rec__types__int_ptr__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__types__int_ptr__is_null_pointer = true)

logic dummy1 : us_rep

type int_ptr__ref = { int_ptr__content : us_rep
}

function int_ptr__ref_int_ptr__content__projection(a: int_ptr__ref) : us_rep =
  (a).int_ptr__content

predicate default_initial_assumption(temp___expr_187: us_rep,
  temp___skip_top_level_188: bool) =
  ((temp___expr_187).rec__types__int_ptr__is_null_pointer = true)

 (* File "alloc.adb", line 3, characters 0-0 *)
goal defqtvc : (in_range((- 12345)) ->
  (forall us_next_pointer_address:int.
  (forall temp___alloc_190:us_rep.
  (((not ((temp___alloc_190).rec__types__int_ptr__is_null_pointer = true)) and
  ((temp___alloc_190).rec__types__int_ptr__pointer_address = us_next_pointer_address)) ->
  (forall usf:my_integer. ((to_rep(usf) = (- 12345)) ->
  (((temp___alloc_190).rec__types__int_ptr__pointer_value = usf) ->
  (forall x__pointer_value:my_integer.
  ((x__pointer_value = (temp___alloc_190).rec__types__int_ptr__pointer_value) ->
  (forall x__pointer_address:int.
  ((x__pointer_address = (temp___alloc_190).rec__types__int_ptr__pointer_address) ->
  (forall x__is_null_pointer:bool.
  ((x__is_null_pointer = (temp___alloc_190).rec__types__int_ptr__is_null_pointer) ->
  rec__types__int_ptr__pointer_value__pred({
  rec__types__int_ptr__is_null_pointer = x__is_null_pointer;
  rec__types__int_ptr__pointer_address = x__pointer_address;
  rec__types__int_ptr__pointer_value = x__pointer_value }))))))))))))))
