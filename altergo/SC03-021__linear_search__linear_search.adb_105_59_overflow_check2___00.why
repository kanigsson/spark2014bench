(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function min(x: int, y: int) : int = (if (x <= y) then x else y)

function max(x: int, y: int) : int = (if (x <= y) then y else x)

axiom Min_r : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_l : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Min_comm : (forall x:int. forall y:int. (min(x, y) = min(y, x)))

axiom Max_comm : (forall x:int. forall y:int. (max(x, y) = max(y, x)))

axiom Min_assoc :
  (forall x:int. forall y:int. forall z:int. (min(min(x, y), z) = min(x,
  min(y, z))))

axiom Max_assoc :
  (forall x:int. forall y:int. forall z:int. (max(max(x, y), z) = max(x,
  max(y, z))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant1(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type us_main_type

type us_rep = { rec__linear_search__list__is_null_pointer : bool;
rec__linear_search__list__pointer_address : int;
rec__linear_search__list__pointer_value_abstr : us_main_type
}

function us_rep_rec__linear_search__list__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__linear_search__list__is_null_pointer

function us_rep_rec__linear_search__list__pointer_address__projection(a: us_rep) : int =
  (a).rec__linear_search__list__pointer_address

function us_rep_rec__linear_search__list__pointer_value_abstr__projection(a: us_rep) : us_main_type =
  (a).rec__linear_search__list__pointer_value_abstr

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__2__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq4(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__linear_search__list__is_null_pointer = (b).rec__linear_search__list__is_null_pointer) and
  ((not ((a).rec__linear_search__list__is_null_pointer = true)) ->
  (((a).rec__linear_search__list__pointer_address = (b).rec__linear_search__list__pointer_address) and
  ((a).rec__linear_search__list__pointer_value_abstr = (b).rec__linear_search__list__pointer_value_abstr)))) then true else false)

logic dummy3 : us_rep

type t2b__ref = { t2b__content : us_rep
}

function t2b__ref_t2b__content__projection(a: t2b__ref) : us_rep =
  (a).t2b__content

logic length : us_rep -> int

logic length__function_guard : int, us_rep -> prop

logic dummy4 : us_rep

type list__ref = { list__content : us_rep
}

function list__ref_list__content__projection(a: list__ref) : us_rep =
  (a).list__content

type us_rep1 = { rec__linear_search__int_acc__is_null_pointer : bool;
rec__linear_search__int_acc__pointer_address : int;
rec__linear_search__int_acc__pointer_value : integer
}

function us_rep_rec__linear_search__int_acc__is_null_pointer__projection(a: us_rep1) : bool =
  (a).rec__linear_search__int_acc__is_null_pointer

function us_rep_rec__linear_search__int_acc__pointer_address__projection(a: us_rep1) : int =
  (a).rec__linear_search__int_acc__pointer_address

function us_rep_rec__linear_search__int_acc__pointer_value__projection(a: us_rep1) : integer =
  (a).rec__linear_search__int_acc__pointer_value

type us_rep__ref1 = { us_rep__content1 : us_rep1
}

function us_rep__ref___rep__content__projection(a: us_rep__ref1) : us_rep1 =
  (a).us_rep__content1

function bool_eq5(a: us_rep1, b: us_rep1) : bool =
  (if (((a).rec__linear_search__int_acc__is_null_pointer = (b).rec__linear_search__int_acc__is_null_pointer) and
  ((not ((a).rec__linear_search__int_acc__is_null_pointer = true)) ->
  (((a).rec__linear_search__int_acc__pointer_address = (b).rec__linear_search__int_acc__pointer_address) and
  ((a).rec__linear_search__int_acc__pointer_value = (b).rec__linear_search__int_acc__pointer_value)))) then true else false)

predicate rec__linear_search__int_acc__pointer_value__pred(a: us_rep1) =
  (not ((a).rec__linear_search__int_acc__is_null_pointer = true))

logic us_null_pointer : us_rep1

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__linear_search__int_acc__is_null_pointer = true)

logic dummy5 : us_rep1

type t1b__ref = { t1b__content : us_rep1
}

function t1b__ref_t1b__content__projection(a: t1b__ref) : us_rep1 =
  (a).t1b__content

type us_split_fields = { rec__linear_search__list_cell__data : us_rep1;
rec__linear_search__list_cell__next : us_rep
}

function us_split_fields_rec__linear_search__list_cell__data__projection(a: us_split_fields) : us_rep1 =
  (a).rec__linear_search__list_cell__data

function us_split_fields_rec__linear_search__list_cell__next__projection(a: us_split_fields) : us_rep =
  (a).rec__linear_search__list_cell__next

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep2 = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep2) : us_split_fields =
  (a).us_split_fields1

function bool_eq6(a: us_rep2, b: us_rep2) : bool =
  (if ((bool_eq5(((a).us_split_fields1).rec__linear_search__list_cell__data,
  ((b).us_split_fields1).rec__linear_search__list_cell__data) = true) and
  (bool_eq4(((a).us_split_fields1).rec__linear_search__list_cell__next,
  ((b).us_split_fields1).rec__linear_search__list_cell__next) = true)) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic linear_search__list_cell__data__first__bit : int

logic linear_search__list_cell__data__last__bit : int

logic linear_search__list_cell__data__position : int

axiom linear_search__list_cell__data__first__bit_axiom :
  (0 <= linear_search__list_cell__data__first__bit)

axiom linear_search__list_cell__data__last__bit_axiom :
  (linear_search__list_cell__data__first__bit <  linear_search__list_cell__data__last__bit)

axiom linear_search__list_cell__data__position_axiom :
  (0 <= linear_search__list_cell__data__position)

logic linear_search__list_cell__next__first__bit : int

logic linear_search__list_cell__next__last__bit : int

logic linear_search__list_cell__next__position : int

axiom linear_search__list_cell__next__first__bit_axiom :
  (0 <= linear_search__list_cell__next__first__bit)

axiom linear_search__list_cell__next__last__bit_axiom :
  (linear_search__list_cell__next__first__bit <  linear_search__list_cell__next__last__bit)

axiom linear_search__list_cell__next__position_axiom :
  (0 <= linear_search__list_cell__next__position)

logic user_eq3 : us_rep2, us_rep2 -> bool

logic dummy6 : us_rep2

type list_cell__ref = { list_cell__content : us_rep2
}

function list_cell__ref_list_cell__content__projection(a: list_cell__ref) : us_rep2 =
  (a).list_cell__content

logic us_open : us_main_type -> us_rep2

logic us_close : us_rep2 -> us_main_type

axiom close_open :
  (forall x:us_main_type [us_open(x)]. (us_close(us_open(x)) = x))

axiom open_close :
  (forall x:us_rep2 [us_close(x)]. (us_open(us_close(x)) = x))

function rec__linear_search__list__pointer_value(a: us_rep) : us_rep2 =
  us_open((a).rec__linear_search__list__pointer_value_abstr)

predicate rec__linear_search__list__pointer_value__pred(a: us_rep) =
  (not ((a).rec__linear_search__list__is_null_pointer = true))

logic us_null_pointer1 : us_rep

axiom us_null_pointer__def_axiom1 :
  ((us_null_pointer1).rec__linear_search__list__is_null_pointer = true)

logic temp___dynamic_invariant_215 : us_rep, bool, bool, bool, bool -> prop

predicate dynamic_invariant2(temp___expr_214: us_rep,
  temp___is_init_210: bool, temp___skip_constant_211: bool,
  temp___do_toplevel_212: bool, temp___do_typ_inv_213: bool) =
  ((not ((temp___expr_214).rec__linear_search__list__is_null_pointer = true)) ->
  ((not ((((rec__linear_search__list__pointer_value(temp___expr_214)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true)) and
  temp___dynamic_invariant_215(((rec__linear_search__list__pointer_value(temp___expr_214)).us_split_fields1).rec__linear_search__list_cell__next,
  true, false, true, temp___do_typ_inv_213)))

axiom def_axiom :
  (forall temp___expr_220:us_rep.
  (forall temp___is_init_216:bool. forall temp___skip_constant_217:bool.
  forall temp___do_toplevel_218:bool. forall temp___do_typ_inv_219:bool
  [temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219)].
  (temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219) ->
  ((not ((temp___expr_220).rec__linear_search__list__is_null_pointer = true)) ->
  (not ((((rec__linear_search__list__pointer_value(temp___expr_220)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true))))))

axiom def_axiom1 :
  (forall temp___expr_220:us_rep.
  (forall temp___is_init_216:bool. forall temp___skip_constant_217:bool.
  forall temp___do_toplevel_218:bool. forall temp___do_typ_inv_219:bool
  [temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219)].
  (temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219) ->
  ((not ((temp___expr_220).rec__linear_search__list__is_null_pointer = true)) ->
  temp___dynamic_invariant_215(((rec__linear_search__list__pointer_value(temp___expr_220)).us_split_fields1).rec__linear_search__list_cell__next,
  true, false, true, temp___do_typ_inv_219)))))

axiom def_axiom2 :
  (forall temp___expr_220:us_rep.
  (forall temp___is_init_216:bool. forall temp___skip_constant_217:bool.
  forall temp___do_toplevel_218:bool. forall temp___do_typ_inv_219:bool
  [temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219)].
  (((not ((temp___expr_220).rec__linear_search__list__is_null_pointer = true)) ->
  ((not ((((rec__linear_search__list__pointer_value(temp___expr_220)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true)) and
  temp___dynamic_invariant_215(((rec__linear_search__list__pointer_value(temp___expr_220)).us_split_fields1).rec__linear_search__list_cell__next,
  true, false, true, temp___do_typ_inv_219))) ->
  temp___dynamic_invariant_215(temp___expr_220, temp___is_init_216,
  temp___skip_constant_217, temp___do_toplevel_218, temp___do_typ_inv_219))))

predicate default_initial_assumption(temp___expr_221: us_rep,
  temp___skip_top_level_222: bool) =
  ((temp___expr_221).rec__linear_search__list__is_null_pointer = true)

predicate dynamic_invariant3(temp___expr_227: us_rep2,
  temp___is_init_223: bool, temp___skip_constant_224: bool,
  temp___do_toplevel_225: bool, temp___do_typ_inv_226: bool) =
  ((not ((((temp___expr_227).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true)) and
  ((not ((((temp___expr_227).us_split_fields1).rec__linear_search__list_cell__next).rec__linear_search__list__is_null_pointer = true)) ->
  ((not ((((rec__linear_search__list__pointer_value(((temp___expr_227).us_split_fields1).rec__linear_search__list_cell__next)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true)) and
  temp___dynamic_invariant_215(((rec__linear_search__list__pointer_value(((temp___expr_227).us_split_fields1).rec__linear_search__list_cell__next)).us_split_fields1).rec__linear_search__list_cell__next,
  true, false, true, temp___do_typ_inv_226))))

predicate default_initial_assumption1(temp___expr_228: us_rep2,
  temp___skip_top_level_229: bool) =
  (((((temp___expr_228).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__is_null_pointer = true) and
  ((((temp___expr_228).us_split_fields1).rec__linear_search__list_cell__next).rec__linear_search__list__is_null_pointer = true))

axiom length__def_axiom :
  (forall l:us_rep [length(l)].
  (((not ((l).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(l), true, false,
  true, true)) -> (length(l) = (if (bool_eq4(l,
  us_null_pointer1) = true) then 0 else (min(2147483646,
  length(((rec__linear_search__list__pointer_value(l)).us_split_fields1).rec__linear_search__list_cell__next)) + 1)))))

logic dummy7 : us_rep

type t3b__ref = { t3b__content : us_rep
}

function t3b__ref_t3b__content__projection(a: t3b__ref) : us_rep =
  (a).t3b__content

logic nth : us_rep, int -> int

logic nth__function_guard : int, us_rep, int -> prop

predicate dynamic_invariant4(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

axiom nth__def_axiom :
  (forall l:us_rep.
  (forall n:int [nth(l, n)].
  ((((not ((l).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(l), true, false,
  true, true)) and dynamic_invariant4(n, true, true, true, true)) -> (nth(l,
  n) = (if (n = 1) then to_rep((((rec__linear_search__list__pointer_value(l)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__pointer_value) else nth(((rec__linear_search__list__pointer_value(l)).us_split_fields1).rec__linear_search__list_cell__next,
  (n - 1)))))))

type us_main_type1

logic us_main_eq : us_main_type1, us_main_type1 -> bool

type us_rep3

logic bool_eq7 : us_rep3, us_rep3 -> bool

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic user_eq4 : us_rep3, us_rep3 -> bool

logic dummy8 : us_rep3

type sequence__ref = { sequence__content : us_rep3
}

function sequence__ref_sequence__content__projection(a: sequence__ref) : us_rep3 =
  (a).sequence__content

logic get : us_rep3, int -> int

logic get__function_guard : int, us_rep3, int -> prop

logic length1 : us_rep3 -> int

logic length__function_guard1 : int, us_rep3 -> prop

function last(container: us_rep3) : int = (0 + length1(container))

logic last__function_guard : int, us_rep3 -> prop

type element_type

logic element_typeqtint : element_type -> int

axiom element_typeqtaxiom :
  (forall i:element_type. ((- 2147483648) <= element_typeqtint(i)))

axiom element_typeqtaxiom1 :
  (forall i:element_type. (element_typeqtint(i) <= 2147483647))

predicate in_range4(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq8(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq5 : element_type, element_type -> bool

logic dummy9 : element_type

type element_type__ref = { element_type__content : element_type
}

function element_type__ref_element_type__content__projection(a: element_type__ref) : element_type =
  (a).element_type__content

predicate dynamic_invariant5(temp___expr_243: int, temp___is_init_239: bool,
  temp___skip_constant_240: bool, temp___do_toplevel_241: bool,
  temp___do_typ_inv_242: bool) = (((temp___is_init_239 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range4(temp___expr_243))

type extended_index

logic extended_indexqtint : extended_index -> int

axiom extended_indexqtaxiom :
  (forall i:extended_index. (0 <= extended_indexqtint(i)))

axiom extended_indexqtaxiom1 :
  (forall i:extended_index. (extended_indexqtint(i) <= 2147483647))

predicate in_range5(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : extended_index, extended_index -> bool

logic dummy10 : extended_index

type extended_index__ref = { extended_index__content : extended_index
}

function extended_index__ref_extended_index__content__projection(a: extended_index__ref) : extended_index =
  (a).extended_index__content

predicate dynamic_invariant6(temp___expr_250: int, temp___is_init_246: bool,
  temp___skip_constant_247: bool, temp___do_toplevel_248: bool,
  temp___do_typ_inv_249: bool) = (((temp___is_init_246 = true) or
  (0 <= 2147483647)) -> in_range5(temp___expr_250))

logic bool_eq10 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq10(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq10(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length2(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

function oeq(left: us_rep3, right: us_rep3) : bool =
  andb(bool_eq10(length1(left), length1(right)),
  (if (forall n:int. (((1 <= n) and (n <= last(left))) -> (get(left,
      n) = get(right, n)))) then true else false))

logic oeq__function_guard : bool, us_rep3, us_rep3 -> prop

axiom user_eq__def_axiom :
  (forall a:us_rep3. forall b:us_rep3 [user_eq4(a, b)]. (user_eq4(a,
  b) = oeq(a, b)))

predicate default_initial_assumption2(temp___expr_258: us_rep3,
  temp___skip_top_level_259: bool) =
  ((not (temp___skip_top_level_259 = true)) ->
  (length1(temp___expr_258) = 0))

axiom get__post_axiom :
  (forall container:us_rep3.
  (forall position:int [get(container, position)].
  ((dynamic_invariant6(position, true, true, true, true) and
  ((1 <= position) and (position <= last(container)))) ->
  dynamic_invariant5(get(container, position), true, false, true, true))))

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic user_eq7 : us_rep3, us_rep3 -> bool

logic dummy11 : us_rep3

type int_seq__ref = { int_seq__content : us_rep3
}

function int_seq__ref_int_seq__content__projection(a: int_seq__ref) : us_rep3 =
  (a).int_seq__content

logic dummy12 : us_rep

type t85b__ref = { t85b__content : us_rep
}

function t85b__ref_t85b__content__projection(a: t85b__ref) : us_rep =
  (a).t85b__content

logic all_data : us_rep -> us_rep3

logic all_data__function_guard : us_rep3, us_rep -> prop

axiom user_eq__def_axiom1 :
  (forall a:us_rep3. forall b:us_rep3 [user_eq7(a, b)]. (user_eq7(a,
  b) = oeq(a, b)))

predicate default_initial_assumption3(temp___expr_273: us_rep3,
  temp___skip_top_level_274: bool) =
  ((not (temp___skip_top_level_274 = true)) ->
  (length1(temp___expr_273) = 0))

axiom all_data__post_axiom :
  (forall r:us_rep [all_data(r)].
  (((not ((r).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(r), true, false,
  true, true)) -> (last(all_data(r)) = length(r))))

axiom all_data__post_axiom1 :
  (forall r:us_rep [all_data(r)].
  (((not ((r).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(r), true, false,
  true, true)) ->
  (forall n:int. (((1 <= n) and (n <= length(r))) -> (get(all_data(r),
  n) = nth(r, n))))))

logic dummy13 : us_rep

type t96b__ref = { t96b__content : us_rep
}

function t96b__ref_t96b__content__projection(a: t96b__ref) : us_rep =
  (a).t96b__content

logic l : us_rep

logic attr__ATTRIBUTE_ADDRESS : int

logic v : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic dummy14 : us_rep1

type t97b__ref = { t97b__content : us_rep1
}

function t97b__ref_t97b__content__projection(a: t97b__ref) : us_rep1 =
  (a).t97b__content

logic linear_search : us_rep, int -> us_rep1

logic linear_search__function_guard : us_rep1, us_rep, int -> prop

type us_pledge_ty

type us_pledge_ty__ref = { us_pledge_ty__content : us_pledge_ty
}

logic us_pledge_get : us_pledge_ty, us_rep, us_rep1 -> bool

logic linear_search__linear_search__2__pledge : us_rep, int -> us_pledge_ty

logic attr__ATTRIBUTE_ADDRESS2 : int

logic o : us_rep3

logic attr__ATTRIBUTE_ADDRESS3 : int

logic dummy15 : us_rep

type t107b__ref = { t107b__content : us_rep
}

function t107b__ref_t107b__content__projection(a: t107b__ref) : us_rep =
  (a).t107b__content

logic attr__ATTRIBUTE_ADDRESS4 : int

type us_pledge_ty1

type us_pledge_ty__ref1 = { us_pledge_ty__content1 : us_pledge_ty1
}

logic us_pledge_get1 : us_pledge_ty1, us_rep, us_rep -> bool

logic dummy16 : us_rep1

type int_acc__ref = { int_acc__content : us_rep1
}

function int_acc__ref_int_acc__content__projection(a: int_acc__ref) : us_rep1 =
  (a).int_acc__content

predicate default_initial_assumption4(temp___expr_208: us_rep1,
  temp___skip_top_level_209: bool) =
  ((temp___expr_208).rec__linear_search__int_acc__is_null_pointer = true)

axiom length__post_axiom :
  (forall l1:us_rep [length(l1)].
  (((not ((l1).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(l1), true,
  false, true, true)) -> dynamic_invariant1(length(l1), true, false, true,
  true)))

axiom nth__post_axiom :
  (forall l1:us_rep.
  (forall n:int [nth(l1, n)].
  (((((not ((l1).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(l1), true,
  false, true, true)) and dynamic_invariant4(n, true, true, true, true)) and
  (n <= length(l1))) -> dynamic_invariant(nth(l1, n), true, false, true,
  true))))

axiom o__def_axiom : (o = all_data(l))

type count_type

logic count_typeqtint : count_type -> int

axiom count_typeqtaxiom : (forall i:count_type. (0 <= count_typeqtint(i)))

axiom count_typeqtaxiom1 :
  (forall i:count_type. (count_typeqtint(i) <= 2147483647))

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : count_type, count_type -> bool

logic dummy17 : count_type

type count_type__ref = { count_type__content : count_type
}

function count_type__ref_count_type__content__projection(a: count_type__ref) : count_type =
  (a).count_type__content

predicate dynamic_invariant7(temp___expr_265: int, temp___is_init_261: bool,
  temp___skip_constant_262: bool, temp___do_toplevel_263: bool,
  temp___do_typ_inv_264: bool) = (((temp___is_init_261 = true) or
  (0 <= 2147483647)) -> in_range6(temp___expr_265))

axiom length__post_axiom1 :
  (forall container:us_rep3 [length1(container)].
  ((0 + length1(container)) <= 2147483647))

axiom length__post_axiom2 :
  (forall container:us_rep3 [length1(container)].
  dynamic_invariant7(length1(container), true, false, true, true))

 (* File "linear_search.adb", line 82, characters 0-0 *)
goal defqtvc :
  (((not ((l).rec__linear_search__list__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value(l), true, false,
  true, true)) -> (dynamic_invariant(v, true, false, true, true) ->
  ((length(l) <  2147483647) ->
  (forall i:int. ((i = 0) -> (dynamic_invariant1(i, true, false, true,
  true) -> (let o1 = l : us_rep in
  (let linear_search__linear_search__2__o__assume = all_data(o1) : us_rep3 in
  (((last(linear_search__linear_search__2__o__assume) = length(o1)) and
  (forall n:int. (((1 <= n) and (n <= length(o1))) ->
  (get(linear_search__linear_search__2__o__assume, n) = nth(o1, n))))) ->
  ((linear_search__linear_search__2__o__assume = o) ->
  (let linear_search__linear_search__2__x__assume = l : us_rep in
  (forall usf:us_pledge_ty1.
  ((forall temp___borrowed_309:us_rep.
   (forall temp___brower_308:us_rep [us_pledge_get1(usf, temp___borrowed_309,
   temp___brower_308)]. ((us_pledge_get1(usf, temp___borrowed_309,
   temp___brower_308) = true) <-> (temp___brower_308 = temp___borrowed_309)))) ->
  (forall linear_search__linear_search__2__x__pledge:us_pledge_ty1.
  ((linear_search__linear_search__2__x__pledge = usf) ->
  (forall x__pointer_value:us_split_fields. (({ us_split_fields1 =
  x__pointer_value
  } = rec__linear_search__list__pointer_value(linear_search__linear_search__2__x__assume)) ->
  (forall x__pointer_address:int.
  ((x__pointer_address = (linear_search__linear_search__2__x__assume).rec__linear_search__list__pointer_address) ->
  (forall x__is_null_pointer:bool.
  ((x__is_null_pointer = (linear_search__linear_search__2__x__assume).rec__linear_search__list__is_null_pointer) ->
  (((not (x__is_null_pointer = true)) ->
  dynamic_invariant3(rec__linear_search__list__pointer_value({
  rec__linear_search__list__is_null_pointer = x__is_null_pointer;
  rec__linear_search__list__pointer_address = x__pointer_address;
  rec__linear_search__list__pointer_value_abstr = us_close({
  us_split_fields1 = x__pointer_value }) }), true, false, true, true)) ->
  ((notb(bool_eq4({ rec__linear_search__list__is_null_pointer =
  x__is_null_pointer; rec__linear_search__list__pointer_address =
  x__pointer_address; rec__linear_search__list__pointer_value_abstr =
  us_close({ us_split_fields1 = x__pointer_value }) },
  us_null_pointer1)) = true) -> (let o2 = {
  rec__linear_search__list__is_null_pointer = x__is_null_pointer;
  rec__linear_search__list__pointer_address = x__pointer_address;
  rec__linear_search__list__pointer_value_abstr = us_close({
  us_split_fields1 = x__pointer_value }) } : us_rep in (let o3 = length(o2)
  : int in ((dynamic_invariant1(o3, true, false, true, true) and
  (o3 = (if (bool_eq4(o2,
  us_null_pointer1) = true) then 0 else (min(2147483646,
  length(((rec__linear_search__list__pointer_value(o2)).us_split_fields1).rec__linear_search__list_cell__next)) + 1)))) ->
  (in_range1((length({ rec__linear_search__list__is_null_pointer =
  x__is_null_pointer; rec__linear_search__list__pointer_address =
  x__pointer_address; rec__linear_search__list__pointer_value_abstr =
  us_close({ us_split_fields1 = x__pointer_value }) }) - o3)) ->
  (forall usf1:int. (let o4 = l : us_rep in (let o5 = length(o4) : int in
  ((dynamic_invariant1(o5, true, false, true, true) and
  (o5 = (if (bool_eq4(o4,
  us_null_pointer1) = true) then 0 else (min(2147483646,
  length(((rec__linear_search__list__pointer_value(o4)).us_split_fields1).rec__linear_search__list_cell__next)) + 1)))) ->
  (let o6 = (i + 1) : int in (in_range1(o6) ->
  ((andb((if (o6 <= usf1) then true else false),
  (if (usf1 <= o5) then true else false)) = true) -> (in_range3(usf1) ->
  (let o7 = l : us_rep in (let o8 = nth(o7, usf1) : int in
  ((dynamic_invariant(o8, true, false, true, true) and
  (o8 = (if (usf1 = 1) then to_rep((((rec__linear_search__list__pointer_value(o7)).us_split_fields1).rec__linear_search__list_cell__data).rec__linear_search__int_acc__pointer_value) else nth(((rec__linear_search__list__pointer_value(o7)).us_split_fields1).rec__linear_search__list_cell__next,
  (usf1 - 1))))) -> in_range1((usf1 - i))))))))))))))))))))))))))))))))))))))))
