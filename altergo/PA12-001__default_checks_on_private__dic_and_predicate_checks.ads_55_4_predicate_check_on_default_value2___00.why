(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_fields = { rec__dic_and_predicate_checks__r__f : integer;
rec__dic_and_predicate_checks__r__g : integer
}

function us_split_fields_rec__dic_and_predicate_checks__r__f__projection(a: us_split_fields) : integer =
  (a).rec__dic_and_predicate_checks__r__f

function us_split_fields_rec__dic_and_predicate_checks__r__g__projection(a: us_split_fields) : integer =
  (a).rec__dic_and_predicate_checks__r__g

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq1(a: us_rep, b: us_rep) : bool =
  (if ((to_rep(((a).us_split_fields1).rec__dic_and_predicate_checks__r__f) = to_rep(((b).us_split_fields1).rec__dic_and_predicate_checks__r__f)) and
  (to_rep(((a).us_split_fields1).rec__dic_and_predicate_checks__r__g) = to_rep(((b).us_split_fields1).rec__dic_and_predicate_checks__r__g))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic dic_and_predicate_checks__r__f__first__bit : int

logic dic_and_predicate_checks__r__f__last__bit : int

logic dic_and_predicate_checks__r__f__position : int

axiom dic_and_predicate_checks__r__f__first__bit_axiom :
  (0 <= dic_and_predicate_checks__r__f__first__bit)

axiom dic_and_predicate_checks__r__f__last__bit_axiom :
  (dic_and_predicate_checks__r__f__first__bit <  dic_and_predicate_checks__r__f__last__bit)

axiom dic_and_predicate_checks__r__f__position_axiom :
  (0 <= dic_and_predicate_checks__r__f__position)

logic dic_and_predicate_checks__r__g__first__bit : int

logic dic_and_predicate_checks__r__g__last__bit : int

logic dic_and_predicate_checks__r__g__position : int

axiom dic_and_predicate_checks__r__g__first__bit_axiom :
  (0 <= dic_and_predicate_checks__r__g__first__bit)

axiom dic_and_predicate_checks__r__g__last__bit_axiom :
  (dic_and_predicate_checks__r__g__first__bit <  dic_and_predicate_checks__r__g__last__bit)

axiom dic_and_predicate_checks__r__g__position_axiom :
  (0 <= dic_and_predicate_checks__r__g__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : us_rep

type t__ref = { t__content : us_rep
}

function t__ref_t__content__projection(a: t__ref) : us_rep = (a).t__content

type us_split_fields2 = { rec__dic_and_predicate_checks__nested_2__r__f :
integer
}

function us_split_fields_rec__dic_and_predicate_checks__nested_2__r__f__projection(a: us_split_fields2) : integer =
  (a).rec__dic_and_predicate_checks__nested_2__r__f

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function bool_eq2(a: us_rep1, b: us_rep1) : bool =
  (if (to_rep(((a).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f) = to_rep(((b).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f)) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic dic_and_predicate_checks__nested_2__r__f__first__bit : int

logic dic_and_predicate_checks__nested_2__r__f__last__bit : int

logic dic_and_predicate_checks__nested_2__r__f__position : int

axiom dic_and_predicate_checks__nested_2__r__f__first__bit_axiom :
  (0 <= dic_and_predicate_checks__nested_2__r__f__first__bit)

axiom dic_and_predicate_checks__nested_2__r__f__last__bit_axiom :
  (dic_and_predicate_checks__nested_2__r__f__first__bit <  dic_and_predicate_checks__nested_2__r__f__last__bit)

axiom dic_and_predicate_checks__nested_2__r__f__position_axiom :
  (0 <= dic_and_predicate_checks__nested_2__r__f__position)

logic user_eq2 : us_rep1, us_rep1 -> bool

logic dummy2 : us_rep1

type t__ref1 = { t__content1 : us_rep1
}

function t__ref_t__content__2__projection(a: t__ref1) : us_rep1 =
  (a).t__content1

logic attr__ATTRIBUTE_ADDRESS : int

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic dic_and_predicate_checks__r__f__first__bit1 : int

logic dic_and_predicate_checks__r__f__last__bit1 : int

logic dic_and_predicate_checks__r__f__position1 : int

axiom dic_and_predicate_checks__r__f__first__bit_axiom1 :
  (0 <= dic_and_predicate_checks__r__f__first__bit1)

axiom dic_and_predicate_checks__r__f__last__bit_axiom1 :
  (dic_and_predicate_checks__r__f__first__bit1 <  dic_and_predicate_checks__r__f__last__bit1)

axiom dic_and_predicate_checks__r__f__position_axiom1 :
  (0 <= dic_and_predicate_checks__r__f__position1)

logic dic_and_predicate_checks__r__g__first__bit1 : int

logic dic_and_predicate_checks__r__g__last__bit1 : int

logic dic_and_predicate_checks__r__g__position1 : int

axiom dic_and_predicate_checks__r__g__first__bit_axiom1 :
  (0 <= dic_and_predicate_checks__r__g__first__bit1)

axiom dic_and_predicate_checks__r__g__last__bit_axiom1 :
  (dic_and_predicate_checks__r__g__first__bit1 <  dic_and_predicate_checks__r__g__last__bit1)

axiom dic_and_predicate_checks__r__g__position_axiom1 :
  (0 <= dic_and_predicate_checks__r__g__position1)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type r__ref = { r__content : us_rep
}

function r__ref_r__content__projection(a: r__ref) : us_rep = (a).r__content

logic is_valid : us_rep -> bool

logic is_valid__function_guard : bool, us_rep -> prop

logic is_valid1 : us_rep -> bool

logic is_valid__function_guard1 : bool, us_rep -> prop

axiom temp___result_176qtdef :
  (forall temp___175:us_rep. is_valid__function_guard(is_valid(temp___175),
  temp___175))

predicate dynamic_invariant(temp___expr_174: us_rep,
  temp___is_init_170: bool, temp___skip_constant_171: bool,
  temp___do_toplevel_172: bool, temp___do_typ_inv_173: bool) =
  ((temp___do_toplevel_172 = true) -> (is_valid(temp___expr_174) = true))

axiom temp___result_181qtdef :
  (forall temp___180:us_rep. is_valid__function_guard1(is_valid1(temp___180),
  temp___180))

predicate default_initial_assumption(temp___expr_177: us_rep,
  temp___skip_top_level_178: bool) =
  ((to_rep(((temp___expr_177).us_split_fields1).rec__dic_and_predicate_checks__r__g) = 0) and
  ((not (temp___skip_top_level_178 = true)) ->
  (is_valid1(temp___expr_177) = true)))

axiom temp___result_184qtdef :
  (forall temp___183:us_rep. is_valid__function_guard(is_valid(temp___183),
  temp___183))

predicate dynamic_predicate(temp___182: us_rep) =
  (is_valid(temp___182) = true)

logic attr__ATTRIBUTE_ADDRESS1 : int

logic is_valid2 : us_rep1 -> bool

logic is_valid__function_guard2 : bool, us_rep1 -> prop

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic dic_and_predicate_checks__nested_2__r__f__first__bit1 : int

logic dic_and_predicate_checks__nested_2__r__f__last__bit1 : int

logic dic_and_predicate_checks__nested_2__r__f__position1 : int

axiom dic_and_predicate_checks__nested_2__r__f__first__bit_axiom1 :
  (0 <= dic_and_predicate_checks__nested_2__r__f__first__bit1)

axiom dic_and_predicate_checks__nested_2__r__f__last__bit_axiom1 :
  (dic_and_predicate_checks__nested_2__r__f__first__bit1 <  dic_and_predicate_checks__nested_2__r__f__last__bit1)

axiom dic_and_predicate_checks__nested_2__r__f__position_axiom1 :
  (0 <= dic_and_predicate_checks__nested_2__r__f__position1)

logic user_eq4 : us_rep1, us_rep1 -> bool

logic dummy4 : us_rep1

type r__ref1 = { r__content1 : us_rep1
}

function r__ref_r__content__2__projection(a: r__ref1) : us_rep1 =
  (a).r__content1

predicate dynamic_invariant1(temp___expr_202: us_rep1,
  temp___is_init_198: bool, temp___skip_constant_199: bool,
  temp___do_toplevel_200: bool, temp___do_typ_inv_201: bool) =
  (0 <  to_rep(((temp___expr_202).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f))

axiom temp___result_210qtdef :
  (forall temp___209:us_rep1.
  is_valid__function_guard2(is_valid2(temp___209), temp___209))

predicate default_initial_assumption1(temp___expr_206: us_rep1,
  temp___skip_top_level_207: bool) =
  ((not (temp___skip_top_level_207 = true)) ->
  (is_valid2(temp___expr_206) = true))

predicate dynamic_predicate1(temp___211: us_rep1) =
  (0 <  to_rep(((temp___211).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f))

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic dic_and_predicate_checks__r__f__first__bit2 : int

logic dic_and_predicate_checks__r__f__last__bit2 : int

logic dic_and_predicate_checks__r__f__position2 : int

axiom dic_and_predicate_checks__r__f__first__bit_axiom2 :
  (0 <= dic_and_predicate_checks__r__f__first__bit2)

axiom dic_and_predicate_checks__r__f__last__bit_axiom2 :
  (dic_and_predicate_checks__r__f__first__bit2 <  dic_and_predicate_checks__r__f__last__bit2)

axiom dic_and_predicate_checks__r__f__position_axiom2 :
  (0 <= dic_and_predicate_checks__r__f__position2)

logic dic_and_predicate_checks__r__g__first__bit2 : int

logic dic_and_predicate_checks__r__g__last__bit2 : int

logic dic_and_predicate_checks__r__g__position2 : int

axiom dic_and_predicate_checks__r__g__first__bit_axiom2 :
  (0 <= dic_and_predicate_checks__r__g__first__bit2)

axiom dic_and_predicate_checks__r__g__last__bit_axiom2 :
  (dic_and_predicate_checks__r__g__first__bit2 <  dic_and_predicate_checks__r__g__last__bit2)

axiom dic_and_predicate_checks__r__g__position_axiom2 :
  (0 <= dic_and_predicate_checks__r__g__position2)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type nested_3_t__ref = { nested_3_t__content : us_rep
}

function nested_3_t__ref_nested_3_t__content__projection(a: nested_3_t__ref) : us_rep =
  (a).nested_3_t__content

logic attr__ATTRIBUTE_ADDRESS2 : int

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic dic_and_predicate_checks__r__f__first__bit3 : int

logic dic_and_predicate_checks__r__f__last__bit3 : int

logic dic_and_predicate_checks__r__f__position3 : int

axiom dic_and_predicate_checks__r__f__first__bit_axiom3 :
  (0 <= dic_and_predicate_checks__r__f__first__bit3)

axiom dic_and_predicate_checks__r__f__last__bit_axiom3 :
  (dic_and_predicate_checks__r__f__first__bit3 <  dic_and_predicate_checks__r__f__last__bit3)

axiom dic_and_predicate_checks__r__f__position_axiom3 :
  (0 <= dic_and_predicate_checks__r__f__position3)

logic dic_and_predicate_checks__r__g__first__bit3 : int

logic dic_and_predicate_checks__r__g__last__bit3 : int

logic dic_and_predicate_checks__r__g__position3 : int

axiom dic_and_predicate_checks__r__g__first__bit_axiom3 :
  (0 <= dic_and_predicate_checks__r__g__first__bit3)

axiom dic_and_predicate_checks__r__g__last__bit_axiom3 :
  (dic_and_predicate_checks__r__g__first__bit3 <  dic_and_predicate_checks__r__g__last__bit3)

axiom dic_and_predicate_checks__r__g__position_axiom3 :
  (0 <= dic_and_predicate_checks__r__g__position3)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type p__ref = { p__content : us_rep
}

function p__ref_p__content__projection(a: p__ref) : us_rep = (a).p__content

logic is_valid3 : us_rep -> bool

logic is_valid__function_guard3 : bool, us_rep -> prop

axiom temp___result_232qtdef :
  (forall temp___231:us_rep. is_valid__function_guard3(is_valid3(temp___231),
  temp___231))

predicate dynamic_invariant2(temp___expr_230: us_rep,
  temp___is_init_226: bool, temp___skip_constant_227: bool,
  temp___do_toplevel_228: bool, temp___do_typ_inv_229: bool) =
  ((temp___do_toplevel_228 = true) -> (is_valid3(temp___expr_230) = true))

axiom temp___result_237qtdef :
  (forall temp___236:us_rep. is_valid__function_guard3(is_valid3(temp___236),
  temp___236))

predicate default_initial_assumption2(temp___expr_233: us_rep,
  temp___skip_top_level_234: bool) =
  ((to_rep(((temp___expr_233).us_split_fields1).rec__dic_and_predicate_checks__r__g) = 0) and
  ((not (temp___skip_top_level_234 = true)) ->
  (is_valid3(temp___expr_233) = true)))

axiom temp___result_240qtdef :
  (forall temp___239:us_rep. is_valid__function_guard3(is_valid3(temp___239),
  temp___239))

predicate dynamic_predicate2(temp___238: us_rep) =
  (is_valid3(temp___238) = true)

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep2

logic bool_eq3 : us_rep2, us_rep2 -> bool

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic user_eq7 : us_rep2, us_rep2 -> bool

logic dummy7 : us_rep2

type t__ref2 = { t__content2 : us_rep2
}

function t__ref_t__content__3__projection(a: t__ref2) : us_rep2 =
  (a).t__content2

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant3(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

predicate default_initial_assumption3(temp___expr_167: us_rep,
  temp___skip_top_level_168: bool) =
  (to_rep(((temp___expr_167).us_split_fields1).rec__dic_and_predicate_checks__r__g) = 0)

axiom is_valid__def_axiom :
  (forall x:us_rep [is_valid(x)]. ((is_valid(x) = true) ->
  (0 <  to_rep(((x).us_split_fields1).rec__dic_and_predicate_checks__r__f))))

axiom is_valid__def_axiom1 :
  (forall x:us_rep [is_valid(x)].
  ((0 <  to_rep(((x).us_split_fields1).rec__dic_and_predicate_checks__r__f)) ->
  (is_valid(x) = true)))

axiom is_valid__def_axiom2 :
  (forall x:us_rep. is_valid__function_guard(is_valid(x), x))

axiom is_valid__def_axiom3 :
  (forall x:us_rep [is_valid1(x)]. ((is_valid1(x) = true) ->
  (is_valid(x) = true)))

axiom is_valid__def_axiom4 :
  (forall x:us_rep [is_valid1(x)]. ((is_valid(x) = true) ->
  (is_valid1(x) = true)))

predicate dynamic_invariant4(temp___expr_191: us_rep1,
  temp___is_init_187: bool, temp___skip_constant_188: bool,
  temp___do_toplevel_189: bool, temp___do_typ_inv_190: bool) =
  ((temp___do_toplevel_189 = true) -> ((temp___is_init_187 = true) ->
  (0 <  to_rep(((temp___expr_191).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f))))

predicate dynamic_predicate3(temp___196: us_rep1) =
  (0 <  to_rep(((temp___196).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f))

axiom is_valid__def_axiom5 :
  (forall x:us_rep1 [is_valid2(x)]. ((is_valid2(x) = true) ->
  (0 <  to_rep(((x).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f))))

axiom is_valid__def_axiom6 :
  (forall x:us_rep1 [is_valid2(x)].
  ((0 <  to_rep(((x).us_split_fields3).rec__dic_and_predicate_checks__nested_2__r__f)) ->
  (is_valid2(x) = true)))

axiom temp___result_223qtdef :
  (forall temp___222:us_rep. is_valid__function_guard3(is_valid3(temp___222),
  temp___222))

predicate default_initial_assumption4(temp___expr_219: us_rep,
  temp___skip_top_level_220: bool) =
  ((to_rep(((temp___expr_219).us_split_fields1).rec__dic_and_predicate_checks__r__g) = 0) and
  ((not (temp___skip_top_level_220 = true)) ->
  (is_valid3(temp___expr_219) = true)))

axiom is_valid__def_axiom7 :
  (forall x:us_rep. is_valid__function_guard(is_valid(x), x))

axiom is_valid__def_axiom8 :
  (forall x:us_rep [is_valid3(x)]. ((is_valid3(x) = true) ->
  (is_valid(x) = true)))

axiom is_valid__def_axiom9 :
  (forall x:us_rep [is_valid3(x)]. ((is_valid(x) = true) ->
  (is_valid3(x) = true)))

 (* File "dic_and_predicate_checks.ads", line 1, characters 0-0 *)
goal defqtvc :
  (forall x1__split_fields:us_split_fields. forall x2__split_fields:integer.
  (default_initial_assumption({ us_split_fields1 = x1__split_fields },
  false) -> (dynamic_invariant({ us_split_fields1 = x1__split_fields },
  false, false, true, true) -> (default_initial_assumption1({
  us_split_fields3 = { rec__dic_and_predicate_checks__nested_2__r__f =
  x2__split_fields } }, false) -> (dynamic_invariant1({ us_split_fields3 = {
  rec__dic_and_predicate_checks__nested_2__r__f = x2__split_fields } },
  false, false, true, true) ->
  (forall usf:us_split_fields. (let usf1 = { us_split_fields1 = usf }
  : us_rep in (default_initial_assumption2(usf1, false) ->
  dynamic_predicate2(usf1)))))))))
