(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq1 : us_rep, us_rep -> bool

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic user_eq : us_rep, us_rep -> bool

logic dummy : us_rep

type sequence__ref = { sequence__content : us_rep
}

function sequence__ref_sequence__content__projection(a: sequence__ref) : us_rep =
  (a).sequence__content

logic length : us_rep -> int

logic length__function_guard : int, us_rep -> prop

type count_type

logic count_typeqtint : count_type -> int

axiom count_typeqtaxiom : (forall i:count_type. (0 <= count_typeqtint(i)))

axiom count_typeqtaxiom1 :
  (forall i:count_type. (count_typeqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : count_type, count_type -> bool

logic dummy1 : count_type

type count_type__ref = { count_type__content : count_type
}

function count_type__ref_count_type__content__projection(a: count_type__ref) : count_type =
  (a).count_type__content

predicate dynamic_invariant(temp___expr_331: int, temp___is_init_327: bool,
  temp___skip_constant_328: bool, temp___do_toplevel_329: bool,
  temp___do_typ_inv_330: bool) = (((temp___is_init_327 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_331))

axiom length__post_axiom :
  (forall container:us_rep [length(container)]. in_range1(length(container)))

function last(container: us_rep) : int = (0 + length(container))

logic last__function_guard : int, us_rep -> prop

type extended_index

logic extended_indexqtint : extended_index -> int

axiom extended_indexqtaxiom :
  (forall i:extended_index. (0 <= extended_indexqtint(i)))

axiom extended_indexqtaxiom1 :
  (forall i:extended_index. (extended_indexqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : extended_index, extended_index -> bool

logic dummy2 : extended_index

type extended_index__ref = { extended_index__content : extended_index
}

function extended_index__ref_extended_index__content__projection(a: extended_index__ref) : extended_index =
  (a).extended_index__content

predicate dynamic_invariant1(temp___expr_449: int, temp___is_init_445: bool,
  temp___skip_constant_446: bool, temp___do_toplevel_447: bool,
  temp___do_typ_inv_448: bool) = (((temp___is_init_445 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_449))

axiom last__post_axiom :
  (forall container:us_rep [last(container)]. in_range2(last(container)))

logic left : us_rep

logic attr__ATTRIBUTE_ADDRESS : int

logic right : us_rep

logic attr__ATTRIBUTE_ADDRESS1 : int

logic fst : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic lst : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic offset : int

logic attr__ATTRIBUTE_ADDRESS4 : int

type tcount_typeB

logic tcount_typeBqtint : tcount_typeB -> int

axiom tcount_typeBqtaxiom :
  (forall i:tcount_typeB. ((- 2147483648) <= tcount_typeBqtint(i)))

axiom tcount_typeBqtaxiom1 :
  (forall i:tcount_typeB. (tcount_typeBqtint(i) <= 2147483647))

predicate in_range3(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : tcount_typeB, tcount_typeB -> bool

logic dummy3 : tcount_typeB

type tcount_typeB__ref = { tcount_typeB__content : tcount_typeB
}

function tcount_typeB__ref_tcount_typeB__content__projection(a: tcount_typeB__ref) : tcount_typeB =
  (a).tcount_typeB__content

type index_type

logic index_typeqtint : index_type -> int

axiom index_typeqtaxiom : (forall i:index_type. (1 <= index_typeqtint(i)))

axiom index_typeqtaxiom1 :
  (forall i:index_type. (index_typeqtint(i) <= 2147483647))

predicate in_range4(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : index_type, index_type -> bool

logic dummy4 : index_type

type index_type__ref = { index_type__content : index_type
}

function index_type__ref_index_type__content__projection(a: index_type__ref) : index_type =
  (a).index_type__content

predicate dynamic_invariant2(temp___expr_442: int, temp___is_init_438: bool,
  temp___skip_constant_439: bool, temp___do_toplevel_440: bool,
  temp___do_typ_inv_441: bool) = (((temp___is_init_438 = true) or
  (1 <= 2147483647)) -> in_range4(temp___expr_442))

logic bool_eq6 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq6(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq6(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length1(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range5(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : natural, natural -> bool

logic dummy5 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range5(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range5(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range6(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq8(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : positive, positive -> bool

logic dummy6 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

function to_rep1(x: positive) : int = positiveqtint(x)

logic of_rep1 : int -> positive

axiom inversion_axiom1 :
  (forall x:positive [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:positive [to_rep1(x)]. in_range6(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range6(x) ->
  (to_rep1(of_rep1(x)) = x)))

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range7(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : integer, integer -> bool

logic dummy7 : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type character

predicate in_range8(x: int) = ((0 <= x) and (x <= 255))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : character, character -> bool

logic dummy8 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep2 : character -> int

logic of_rep2 : int -> character

axiom inversion_axiom2 :
  (forall x:character [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:character [to_rep2(x)]. in_range8(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range8(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq11(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep2((a[temp___idx_91])) = to_rep2((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep2((a[temp___idx_91])) = to_rep2((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep3(x: integer) : int = integerqtint(x)

logic of_rep3 : int -> integer

axiom inversion_axiom3 :
  (forall x:integer [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:integer [to_rep3(x)]. in_range7(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range7(x) ->
  (to_rep3(of_rep3(x)) = x)))

type t

logic first : t -> integer

logic last1 : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range7(f) -> (in_range7(l) ->
  (to_rep3(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range7(f) -> (in_range7(l) ->
  (to_rep3(last1(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range7(low) and (in_range7(high) and ((low <= high) ->
  (in_range6(low) and in_range6(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep3(first((a).rt))

function last2(a: us_t) : int = to_rep3(last1((a).rt))

function length2(a: us_t) : int =
  (if (first1(a) <= last2(a)) then ((last2(a) - first1(a)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq12(x: us_t, y: us_t) : bool = bool_eq11((x).elts,
  to_rep3(first((x).rt)), to_rep3(last1((x).rt)), (y).elts,
  to_rep3(first((y).rt)), to_rep3(last1((y).rt)))

logic user_eq9 : us_t, us_t -> bool

logic dummy9 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

type t2s__ref = { t2s__content : us_t
}

function t2s__ref_t2s__content__projection(a: t2s__ref) : us_t =
  (a).t2s__content

type us_split_discrs = {
rec__ada___ada___ada__strings__superbounded__super_string__max_length :
positive
}

function us_split_discrs_rec__ada___ada___ada__strings__superbounded__super_string__max_length__projection(a: us_split_discrs) : positive =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__max_length

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = {
rec__ada___ada___ada__strings__superbounded__super_string__current_length :
natural; rec__ada___ada___ada__strings__superbounded__super_string__data :
us_t
}

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__current_length__projection(a: us_split_fields) : natural =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__current_length

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__data__projection(a: us_split_fields) : us_t =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__data

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq13(a: us_rep1, b: us_rep1) : bool =
  (if ((to_rep1(((a).us_split_discrs1).rec__ada___ada___ada__strings__superbounded__super_string__max_length) = to_rep1(((b).us_split_discrs1).rec__ada___ada___ada__strings__superbounded__super_string__max_length)) and
  ((to_rep(((a).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__current_length) = to_rep(((b).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__current_length)) and
  (bool_eq12(((a).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data,
  ((b).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data) = true))) then true else false)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic ada___ada___ada__strings__superbounded__super_string__max_length__first__bit : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__last__bit : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__position : int

axiom ada___ada___ada__strings__superbounded__super_string__max_length__first__bit_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__first__bit)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__last__bit_axiom :
  (ada___ada___ada__strings__superbounded__super_string__max_length__first__bit <  ada___ada___ada__strings__superbounded__super_string__max_length__last__bit)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__position_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__position)

logic ada___ada___ada__strings__superbounded__super_string__current_length__first__bit : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__last__bit : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__position : int

axiom ada___ada___ada__strings__superbounded__super_string__current_length__first__bit_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__first__bit)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__last__bit_axiom :
  (ada___ada___ada__strings__superbounded__super_string__current_length__first__bit <  ada___ada___ada__strings__superbounded__super_string__current_length__last__bit)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__position_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__position)

logic ada___ada___ada__strings__superbounded__super_string__data__first__bit : int

logic ada___ada___ada__strings__superbounded__super_string__data__last__bit : int

logic ada___ada___ada__strings__superbounded__super_string__data__position : int

axiom ada___ada___ada__strings__superbounded__super_string__data__first__bit_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__first__bit)

axiom ada___ada___ada__strings__superbounded__super_string__data__last__bit_axiom :
  (ada___ada___ada__strings__superbounded__super_string__data__first__bit <  ada___ada___ada__strings__superbounded__super_string__data__last__bit)

axiom ada___ada___ada__strings__superbounded__super_string__data__position_axiom :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__position)

logic user_eq10 : us_rep1, us_rep1 -> bool

logic dummy10 : us_rep1

type super_string__ref = { super_string__content : us_rep1
}

function super_string__ref_super_string__content__projection(a: super_string__ref) : us_rep1 =
  (a).super_string__content

type tT92sP1

logic tT92sP1qtint : tT92sP1 -> int

axiom tT92sP1qtaxiom : (forall i:tT92sP1. (1 <= tT92sP1qtint(i)))

axiom tT92sP1qtaxiom1 : (forall i:tT92sP1. (tT92sP1qtint(i) <= 128))

predicate in_range9(x: int) = ((1 <= x) and (x <= 128))

function bool_eq14(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq11 : tT92sP1, tT92sP1 -> bool

logic dummy11 : tT92sP1

type tT92sP1__ref = { tT92sP1__content : tT92sP1
}

function tT92sP1__ref_tT92sP1__content__projection(a: tT92sP1__ref) : tT92sP1 =
  (a).tT92sP1__content

logic dummy12 : (int,character) farray

logic value__size3 : int

logic object__size3 : int

logic component__size1 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom3 : (0 <= alignment3)

logic user_eq12 : (int,character) farray, (int,character) farray -> bool

type us_split_fields2 = {
rec__ada___ada___ada__strings__superbounded__super_string__current_length1 :
natural; rec__ada___ada___ada__strings__superbounded__super_string__data1 :
(int,character) farray
}

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__current_length__3__projection(a: us_split_fields2) : natural =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__current_length1

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__data__3__projection(a: us_split_fields2) : (int,character) farray =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__data1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_discrs2 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__3__projection(a: us_rep2) : us_split_discrs =
  (a).us_split_discrs2

function us_rep___split_fields__3__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

function to_base(a: us_rep2) : us_rep1 = { us_split_discrs1 =
  (a).us_split_discrs2; us_split_fields1 = {
  rec__ada___ada___ada__strings__superbounded__super_string__current_length =
  ((a).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__current_length1;
  rec__ada___ada___ada__strings__superbounded__super_string__data =
  of_array(((a).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__data1,
  1, 128) } }

function of_base(r: us_rep1) : us_rep2 = { us_split_discrs2 =
  (r).us_split_discrs1; us_split_fields3 = {
  rec__ada___ada___ada__strings__superbounded__super_string__current_length1 =
  ((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__current_length;
  rec__ada___ada___ada__strings__superbounded__super_string__data1 =
  to_array(((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data)
  } }

function bool_eq15(a: us_rep2, b: us_rep2) : bool =
  (if ((to_rep1(((a).us_split_discrs2).rec__ada___ada___ada__strings__superbounded__super_string__max_length) = to_rep1(((b).us_split_discrs2).rec__ada___ada___ada__strings__superbounded__super_string__max_length)) and
  ((to_rep(((a).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__current_length1) = to_rep(((b).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__current_length1)) and
  (bool_eq11(((a).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__data1,
  1, 128,
  ((b).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__data1,
  1, 128) = true))) then true else false)

predicate in_range10(rec__ada___ada___ada__strings__superbounded__super_string__max_length1: int,
  a: us_rep1) =
  (rec__ada___ada___ada__strings__superbounded__super_string__max_length1 = to_rep1(((a).us_split_discrs1).rec__ada___ada___ada__strings__superbounded__super_string__max_length))

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic ada___ada___ada__strings__superbounded__super_string__max_length__first__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__last__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__position1 : int

axiom ada___ada___ada__strings__superbounded__super_string__max_length__first__bit_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__first__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__last__bit_axiom1 :
  (ada___ada___ada__strings__superbounded__super_string__max_length__first__bit1 <  ada___ada___ada__strings__superbounded__super_string__max_length__last__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__position_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__position1)

logic ada___ada___ada__strings__superbounded__super_string__current_length__first__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__last__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__position1 : int

axiom ada___ada___ada__strings__superbounded__super_string__current_length__first__bit_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__first__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__last__bit_axiom1 :
  (ada___ada___ada__strings__superbounded__super_string__current_length__first__bit1 <  ada___ada___ada__strings__superbounded__super_string__current_length__last__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__position_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__position1)

logic ada___ada___ada__strings__superbounded__super_string__data__first__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__data__last__bit1 : int

logic ada___ada___ada__strings__superbounded__super_string__data__position1 : int

axiom ada___ada___ada__strings__superbounded__super_string__data__first__bit_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__first__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__data__last__bit_axiom1 :
  (ada___ada___ada__strings__superbounded__super_string__data__first__bit1 <  ada___ada___ada__strings__superbounded__super_string__data__last__bit1)

axiom ada___ada___ada__strings__superbounded__super_string__data__position_axiom1 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__position1)

logic user_eq13 : us_rep2, us_rep2 -> bool

logic dummy13 : us_rep2

type bounded_string__ref = { bounded_string__content : us_rep2
}

function bounded_string__ref_bounded_string__content__projection(a: bounded_string__ref) : us_rep2 =
  (a).bounded_string__content

type element_type__ref = { element_type__content : us_rep2
}

function element_type__ref_element_type__content__3__projection(a: element_type__ref) : us_rep2 =
  (a).element_type__content

logic get : us_rep, int -> us_rep2

logic get__function_guard : us_rep2, us_rep, int -> prop

type t90s__ref = { t90s__content : us_t
}

function t90s__ref_t90s__content__projection(a: t90s__ref) : us_t =
  (a).t90s__content

type us_split_fields4 = {
rec__ada___ada___ada__strings__superbounded__super_string__current_length2 :
natural; rec__ada___ada___ada__strings__superbounded__super_string__data2 :
us_t
}

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__current_length__2__projection(a: us_split_fields4) : natural =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__current_length2

function us_split_fields_rec__ada___ada___ada__strings__superbounded__super_string__data__2__projection(a: us_split_fields4) : us_t =
  (a).rec__ada___ada___ada__strings__superbounded__super_string__data2

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_discrs3 : us_split_discrs; us_split_fields5 :
us_split_fields4
}

function us_rep___split_discrs__2__projection(a: us_rep3) : us_split_discrs =
  (a).us_split_discrs3

function us_rep___split_fields__2__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

function to_base1(a: us_rep3) : us_rep1 = { us_split_discrs1 =
  (a).us_split_discrs3; us_split_fields1 = {
  rec__ada___ada___ada__strings__superbounded__super_string__current_length =
  ((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__current_length2;
  rec__ada___ada___ada__strings__superbounded__super_string__data =
  of_array(to_array(((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__data2),
  first1(((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__data2),
  last2(((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__data2))
  } }

function of_base1(r: us_rep1) : us_rep3 = { us_split_discrs3 =
  (r).us_split_discrs1; us_split_fields5 = {
  rec__ada___ada___ada__strings__superbounded__super_string__current_length2 =
  ((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__current_length;
  rec__ada___ada___ada__strings__superbounded__super_string__data2 =
  of_array(to_array(((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data),
  first1(((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data),
  last2(((r).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data))
  } }

function bool_eq16(a: us_rep3, b: us_rep3) : bool =
  (if ((to_rep1(((a).us_split_discrs3).rec__ada___ada___ada__strings__superbounded__super_string__max_length) = to_rep1(((b).us_split_discrs3).rec__ada___ada___ada__strings__superbounded__super_string__max_length)) and
  ((to_rep(((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__current_length2) = to_rep(((b).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__current_length2)) and
  (bool_eq12(((a).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__data2,
  ((b).us_split_fields5).rec__ada___ada___ada__strings__superbounded__super_string__data2) = true))) then true else false)

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic ada___ada___ada__strings__superbounded__super_string__max_length__first__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__last__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__max_length__position2 : int

axiom ada___ada___ada__strings__superbounded__super_string__max_length__first__bit_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__first__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__last__bit_axiom2 :
  (ada___ada___ada__strings__superbounded__super_string__max_length__first__bit2 <  ada___ada___ada__strings__superbounded__super_string__max_length__last__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__max_length__position_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__max_length__position2)

logic ada___ada___ada__strings__superbounded__super_string__current_length__first__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__last__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__current_length__position2 : int

axiom ada___ada___ada__strings__superbounded__super_string__current_length__first__bit_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__first__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__last__bit_axiom2 :
  (ada___ada___ada__strings__superbounded__super_string__current_length__first__bit2 <  ada___ada___ada__strings__superbounded__super_string__current_length__last__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__current_length__position_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__current_length__position2)

logic ada___ada___ada__strings__superbounded__super_string__data__first__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__data__last__bit2 : int

logic ada___ada___ada__strings__superbounded__super_string__data__position2 : int

axiom ada___ada___ada__strings__superbounded__super_string__data__first__bit_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__first__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__data__last__bit_axiom2 :
  (ada___ada___ada__strings__superbounded__super_string__data__first__bit2 <  ada___ada___ada__strings__superbounded__super_string__data__last__bit2)

axiom ada___ada___ada__strings__superbounded__super_string__data__position_axiom2 :
  (0 <= ada___ada___ada__strings__superbounded__super_string__data__position2)

logic user_eq14 : us_rep3, us_rep3 -> bool

logic dummy14 : us_rep3

type tbounded_stringB__ref = { tbounded_stringB__content : us_rep3
}

function tbounded_stringB__ref_tbounded_stringB__content__projection(a: tbounded_stringB__ref) : us_rep3 =
  (a).tbounded_stringB__content

function oeq(left1: us_rep, right1: us_rep) : bool =
  andb(bool_eq6(length(left1), length(right1)),
  (if (forall n:int. (((1 <= n) and (n <= last(left1))) ->
      (bool_eq16(of_base1(to_base(get(left1, n))),
      of_base1(to_base(get(right1, n)))) = true))) then true else false))

logic oeq__function_guard : bool, us_rep, us_rep -> prop

axiom user_eq__def_axiom :
  (forall a:us_rep. forall b:us_rep [user_eq(a, b)]. (user_eq(a, b) = oeq(a,
  b)))

predicate default_initial_assumption(temp___expr_457: us_rep,
  temp___skip_top_level_458: bool) =
  ((not (temp___skip_top_level_458 = true)) -> (length(temp___expr_457) = 0))

predicate dynamic_invariant3(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range5(temp___expr_39))

predicate dynamic_invariant4(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range6(temp___expr_46))

predicate dynamic_invariant5(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range8(temp___expr_74))

predicate dynamic_invariant6(temp___expr_284: us_rep1,
  temp___is_init_280: bool, temp___skip_constant_281: bool,
  temp___do_toplevel_282: bool, temp___do_typ_inv_283: bool) =
  (let temp___285 =
  ((temp___expr_284).us_split_discrs1).rec__ada___ada___ada__strings__superbounded__super_string__max_length
  : positive in (dynamic_property(1, to_rep1(temp___285),
  first1(((temp___expr_284).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data),
  last2(((temp___expr_284).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data)) and
  ((first1(((temp___expr_284).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data) = 1) and
  (last2(((temp___expr_284).us_split_fields1).rec__ada___ada___ada__strings__superbounded__super_string__data) = to_rep1(temp___285)))))

logic oeq1 : us_rep2, us_rep2 -> bool

logic oeq__function_guard1 : bool, us_rep2, us_rep2 -> prop

predicate dynamic_invariant7(temp___expr_291: us_rep2,
  temp___is_init_287: bool, temp___skip_constant_288: bool,
  temp___do_toplevel_289: bool, temp___do_typ_inv_290: bool) =
  ((not (temp___skip_constant_288 = true)) -> in_range10(128,
  to_base(temp___expr_291)))

predicate default_initial_assumption1(temp___expr_294: us_rep2,
  temp___skip_top_level_295: bool) =
  ((to_rep1(((temp___expr_294).us_split_discrs2).rec__ada___ada___ada__strings__superbounded__super_string__max_length) = 128) and
  (to_rep(((temp___expr_294).us_split_fields3).rec__ada___ada___ada__strings__superbounded__super_string__current_length1) = 0))

axiom user_eq__def_axiom1 :
  (forall a:us_rep2. forall b:us_rep2 [user_eq13(a, b)]. (user_eq13(a,
  b) = oeq1(of_base(to_base(a)), of_base(to_base(b)))))

 (* File "a-cofuve.ads", line 216, characters 0-0 *)
goal defqtvc : (dynamic_invariant2(fst, true, false, true, true) ->
  (dynamic_invariant1(lst, true, false, true, true) -> (in_range3(offset) ->
  (forall o:bool. ((let o1 = left : us_rep in (let o2 = last(o1) : int in
  ((dynamic_invariant1(o2, true, false, true, true) and
  (o2 = (0 + length(o1)))) and (if (lst <= o2) then (((not (offset <  0)) or
  in_range3(((- 2147483648) - offset))) and
  (o = (if (offset <  0) then (if (((- 2147483648) - offset) <= 1) then true else false) else of_int(1)))) else (o = false))))) ->
  ((o = true) -> ((fst <= lst) -> (let o1 = lst : int in (in_range3(o1) ->
  (let o2 = length(right) : int in ((dynamic_invariant(o2, true, false, true,
  true) and ((0 + o2) <= 2147483647)) -> (let o3 = (0 + o2) : int in
  (in_range3(o3) -> in_range3((o3 - o1)))))))))))))))
