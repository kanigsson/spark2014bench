(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

logic a : int

logic attr__ATTRIBUTE_ADDRESS : int

logic b : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

type unsigned_byte

logic unsigned_byteqtint : unsigned_byte -> int

axiom unsigned_byteqtaxiom :
  (forall i:unsigned_byte. (0 <= unsigned_byteqtint(i)))

axiom unsigned_byteqtaxiom1 :
  (forall i:unsigned_byte. (unsigned_byteqtint(i) <= 255))

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : unsigned_byte, unsigned_byte -> bool

logic dummy1 : unsigned_byte

type unsigned_byte__ref = { unsigned_byte__content : unsigned_byte
}

function unsigned_byte__ref_unsigned_byte__content__projection(a1: unsigned_byte__ref) : unsigned_byte =
  (a1).unsigned_byte__content

predicate dynamic_invariant1(temp___expr_178: int, temp___is_init_174: bool,
  temp___skip_constant_175: bool, temp___do_toplevel_176: bool,
  temp___do_typ_inv_177: bool) = (((temp___is_init_174 = true) or
  (0 <= 255)) -> in_range2(temp___expr_178))

type tunsigned_byteB

logic tunsigned_byteBqtint : tunsigned_byteB -> int

axiom tunsigned_byteBqtaxiom :
  (forall i:tunsigned_byteB. ((- 32768) <= tunsigned_byteBqtint(i)))

axiom tunsigned_byteBqtaxiom1 :
  (forall i:tunsigned_byteB. (tunsigned_byteBqtint(i) <= 32767))

predicate in_range3(x: int) = (((- 32768) <= x) and (x <= 32767))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : tunsigned_byteB, tunsigned_byteB -> bool

logic dummy2 : tunsigned_byteB

type tunsigned_byteB__ref = { tunsigned_byteB__content : tunsigned_byteB
}

function tunsigned_byteB__ref_tunsigned_byteB__content__projection(a1: tunsigned_byteB__ref) : tunsigned_byteB =
  (a1).tunsigned_byteB__content

function to_rep(x: tunsigned_byteB) : int = tunsigned_byteBqtint(x)

logic of_rep : int -> tunsigned_byteB

axiom inversion_axiom :
  (forall x:tunsigned_byteB [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:tunsigned_byteB [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : tunsigned_byteB, tunsigned_byteB -> bool

logic dummy3 : tunsigned_byteB

type t9b__ref = { t9b__content : tunsigned_byteB
}

function t9b__ref_t9b__content__projection(a1: t9b__ref) : tunsigned_byteB =
  (a1).t9b__content

 (* File "arithmetic.adb", line 27, characters 0-0 *)
goal defqtvc :
  (forall r:int. (dynamic_invariant1(a, true, false, true, true) ->
  (dynamic_invariant1(b, true, false, true, true) -> (dynamic_invariant(r,
  false, false, true, true) ->
  (forall r1:int. ((r1 = 0) -> (let temp___207 = b : int in
  (forall i:int. ((i = 1) -> ((andb((if (1 <= i) then true else false),
  (if (i <= temp___207) then true else false)) = true) ->
  (forall temp___loop_entry_211:int. ((temp___loop_entry_211 = b) -> (let o =
  (r1 + a) : int in (in_range1(o) ->
  (forall r2:int. ((r2 = o) -> (in_range1((i * a)) ->
  (forall r3:int. forall i1:int. (((r3 = (i1 * a)) and
  (b = temp___loop_entry_211)) -> ((andb((if (dynamic_invariant(r3, false,
  true, true, true) and dynamic_property(1, b, i1)) then true else false),
  (if ((1 <= i1) and (i1 <= b)) then true else false)) = true) ->
  ((not (i1 = temp___207)) ->
  (forall i2:int. ((i2 = (i1 + 1)) -> (let o1 = (r3 + a) : int in
  (in_range1(o1) ->
  (forall r4:int. ((r4 = o1) -> (in_range1((i2 * a)) -> (r4 = (i2 * a))))))))))))))))))))))))))))))
