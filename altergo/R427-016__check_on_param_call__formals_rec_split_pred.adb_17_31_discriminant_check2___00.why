(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range1(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE1 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type us_split_discrs = { rec__formals_rec_split_pred__rec__d : bool
}

function us_split_discrs_rec__formals_rec_split_pred__rec__d__projection(a: us_split_discrs) : bool =
  (a).rec__formals_rec_split_pred__rec__d

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__formals_rec_split_pred__rec__f : integer;
rec__formals_rec_split_pred__rec__g : integer;
rec__formals_rec_split_pred__rec__h : natural
}

function us_split_fields_rec__formals_rec_split_pred__rec__f__projection(a: us_split_fields) : integer =
  (a).rec__formals_rec_split_pred__rec__f

function us_split_fields_rec__formals_rec_split_pred__rec__g__projection(a: us_split_fields) : integer =
  (a).rec__formals_rec_split_pred__rec__g

function us_split_fields_rec__formals_rec_split_pred__rec__h__projection(a: us_split_fields) : natural =
  (a).rec__formals_rec_split_pred__rec__h

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

predicate formals_rec_split_pred__rec__f__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

predicate formals_rec_split_pred__rec__g__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

predicate formals_rec_split_pred__rec__h__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

function bool_eq3(a: us_rep, b: us_rep) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = to_int(((b).us_split_discrs1).rec__formals_rec_split_pred__rec__d)) and
  (((formals_rec_split_pred__rec__f__pred(a) ->
  (to_rep1(((a).us_split_fields1).rec__formals_rec_split_pred__rec__f) = to_rep1(((b).us_split_fields1).rec__formals_rec_split_pred__rec__f))) and
  (formals_rec_split_pred__rec__g__pred(a) ->
  (to_rep1(((a).us_split_fields1).rec__formals_rec_split_pred__rec__g) = to_rep1(((b).us_split_fields1).rec__formals_rec_split_pred__rec__g)))) and
  (formals_rec_split_pred__rec__h__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__formals_rec_split_pred__rec__h) = to_rep(((b).us_split_fields1).rec__formals_rec_split_pred__rec__h))))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic formals_rec_split_pred__rec__d__first__bit : int

logic formals_rec_split_pred__rec__d__last__bit : int

logic formals_rec_split_pred__rec__d__position : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__d__first__bit)

axiom formals_rec_split_pred__rec__d__last__bit_axiom :
  (formals_rec_split_pred__rec__d__first__bit <  formals_rec_split_pred__rec__d__last__bit)

axiom formals_rec_split_pred__rec__d__position_axiom :
  (0 <= formals_rec_split_pred__rec__d__position)

logic formals_rec_split_pred__rec__f__first__bit : int

logic formals_rec_split_pred__rec__f__last__bit : int

logic formals_rec_split_pred__rec__f__position : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__f__first__bit)

axiom formals_rec_split_pred__rec__f__last__bit_axiom :
  (formals_rec_split_pred__rec__f__first__bit <  formals_rec_split_pred__rec__f__last__bit)

axiom formals_rec_split_pred__rec__f__position_axiom :
  (0 <= formals_rec_split_pred__rec__f__position)

logic formals_rec_split_pred__rec__g__first__bit : int

logic formals_rec_split_pred__rec__g__last__bit : int

logic formals_rec_split_pred__rec__g__position : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__g__first__bit)

axiom formals_rec_split_pred__rec__g__last__bit_axiom :
  (formals_rec_split_pred__rec__g__first__bit <  formals_rec_split_pred__rec__g__last__bit)

axiom formals_rec_split_pred__rec__g__position_axiom :
  (0 <= formals_rec_split_pred__rec__g__position)

logic formals_rec_split_pred__rec__h__first__bit : int

logic formals_rec_split_pred__rec__h__last__bit : int

logic formals_rec_split_pred__rec__h__position : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__h__first__bit)

axiom formals_rec_split_pred__rec__h__last__bit_axiom :
  (formals_rec_split_pred__rec__h__first__bit <  formals_rec_split_pred__rec__h__last__bit)

axiom formals_rec_split_pred__rec__h__position_axiom :
  (0 <= formals_rec_split_pred__rec__h__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type rec____ref = { rec____content : us_rep
}

function rec____ref_rec____content__projection(a: rec____ref) : us_rep =
  (a).rec____content

predicate in_range3(rec__formals_rec_split_pred__rec__d1: bool, a: us_rep) =
  (rec__formals_rec_split_pred__rec__d1 = ((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic formals_rec_split_pred__rec__d__first__bit1 : int

logic formals_rec_split_pred__rec__d__last__bit1 : int

logic formals_rec_split_pred__rec__d__position1 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__d__first__bit1)

axiom formals_rec_split_pred__rec__d__last__bit_axiom1 :
  (formals_rec_split_pred__rec__d__first__bit1 <  formals_rec_split_pred__rec__d__last__bit1)

axiom formals_rec_split_pred__rec__d__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__d__position1)

logic formals_rec_split_pred__rec__f__first__bit1 : int

logic formals_rec_split_pred__rec__f__last__bit1 : int

logic formals_rec_split_pred__rec__f__position1 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__f__first__bit1)

axiom formals_rec_split_pred__rec__f__last__bit_axiom1 :
  (formals_rec_split_pred__rec__f__first__bit1 <  formals_rec_split_pred__rec__f__last__bit1)

axiom formals_rec_split_pred__rec__f__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__f__position1)

logic formals_rec_split_pred__rec__g__first__bit1 : int

logic formals_rec_split_pred__rec__g__last__bit1 : int

logic formals_rec_split_pred__rec__g__position1 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__g__first__bit1)

axiom formals_rec_split_pred__rec__g__last__bit_axiom1 :
  (formals_rec_split_pred__rec__g__first__bit1 <  formals_rec_split_pred__rec__g__last__bit1)

axiom formals_rec_split_pred__rec__g__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__g__position1)

logic formals_rec_split_pred__rec__h__first__bit1 : int

logic formals_rec_split_pred__rec__h__last__bit1 : int

logic formals_rec_split_pred__rec__h__position1 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__h__first__bit1)

axiom formals_rec_split_pred__rec__h__last__bit_axiom1 :
  (formals_rec_split_pred__rec__h__first__bit1 <  formals_rec_split_pred__rec__h__last__bit1)

axiom formals_rec_split_pred__rec__h__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__h__position1)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type constr_rec_2__ref = { constr_rec_2__content : us_rep
}

function constr_rec_2__ref_constr_rec_2__content__projection(a: constr_rec_2__ref) : us_rep =
  (a).constr_rec_2__content

logic i3b : us_rep

logic attr__ATTRIBUTE_ADDRESS : int

predicate dynamic_invariant(temp___expr_199: us_rep,
  temp___is_init_195: bool, temp___skip_constant_196: bool,
  temp___do_toplevel_197: bool, temp___do_typ_inv_198: bool) =
  (((not (temp___skip_constant_196 = true)) -> in_range3(of_int(1),
  temp___expr_199)) and ((temp___do_toplevel_197 = true) ->
  (not (to_rep(((temp___expr_199).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))))

predicate default_initial_assumption(temp___expr_202: us_rep,
  temp___skip_top_level_203: bool) =
  ((((temp___expr_202).us_split_discrs1).rec__formals_rec_split_pred__rec__d = of_int(1)) and
  (((formals_rec_split_pred__rec__f__pred(temp___expr_202) ->
  (to_rep1(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__f) = 1)) and
  (formals_rec_split_pred__rec__g__pred(temp___expr_202) ->
  (to_rep1(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__g) = 1))) and
  (formals_rec_split_pred__rec__h__pred(temp___expr_202) ->
  (to_rep(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 1))))

predicate dynamic_predicate(temp___205: us_rep) =
  (not (to_rep(((temp___205).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range2(temp___expr_18))

predicate dynamic_invariant2(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range(temp___expr_39))

 (* File "formals_rec_split_pred.adb", line 16, characters 0-0 *)
goal defqtvc : (dynamic_invariant(i3b, true, false, false, true) ->
  formals_rec_split_pred__rec__h__pred(i3b))
