(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

logic my_false : unit -> bool

logic my_false__function_guard : bool, unit -> prop

logic attr__ATTRIBUTE_ADDRESS : int

type wrong_scalar

logic wrong_scalarqtint : wrong_scalar -> int

axiom wrong_scalarqtaxiom :
  (forall i:wrong_scalar. ((- 2147483648) <= wrong_scalarqtint(i)))

axiom wrong_scalarqtaxiom1 :
  (forall i:wrong_scalar. (wrong_scalarqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : wrong_scalar, wrong_scalar -> bool

logic dummy : wrong_scalar

type wrong_scalar__ref = { wrong_scalar__content : wrong_scalar
}

function wrong_scalar__ref_wrong_scalar__content__projection(a: wrong_scalar__ref) : wrong_scalar =
  (a).wrong_scalar__content

axiom temp___result_262qtdef : my_false__function_guard(my_false(void), void)

predicate dynamic_invariant(temp___expr_260: int, temp___is_init_256: bool,
  temp___skip_constant_257: bool, temp___do_toplevel_258: bool,
  temp___do_typ_inv_259: bool) = ((((temp___is_init_256 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_260)) and
  ((temp___do_toplevel_258 = true) -> ((temp___is_init_256 = true) ->
  (my_false(void) = true))))

axiom temp___result_267qtdef : my_false__function_guard(my_false(void), void)

predicate dynamic_predicate(temp___265: int) = (my_false(void) = true)

axiom my_false__def_axiom :
  (forall us_void_param:unit [my_false(us_void_param)].
  (not (my_false(us_void_param) = true)))

axiom my_false__def_axiom1 : true

 (* File "init_pred_in_loop.adb", line 175, characters 0-0 *)
goal defqtvc :
  (forall x:int. (dynamic_invariant(x, false, false, true, true) ->
  (forall x1:int. (dynamic_invariant(x1, false, true, true, true) ->
  (my_false__function_guard(my_false(void), void) ->
  (my_false(void) = true))))))
