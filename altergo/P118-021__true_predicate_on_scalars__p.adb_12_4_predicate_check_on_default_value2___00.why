(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

type t_rec1

logic user_eq : t_rec1, t_rec1 -> bool

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic dummy : t_rec1

type t_rec1__ref = { t_rec1__content : t_rec1
}

function t_rec1__ref_t_rec1__content__projection(a: t_rec1__ref) : t_rec1 =
  (a).t_rec1__content

logic attr__ATTRIBUTE_ADDRESS2 : int

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_fields = { rec__p__t_rec2__c : integer
}

function us_split_fields_rec__p__t_rec2__c__projection(a: us_split_fields) : integer =
  (a).rec__p__t_rec2__c

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq1(a: us_rep, b: us_rep) : bool =
  (if (to_rep(((a).us_split_fields1).rec__p__t_rec2__c) = to_rep(((b).us_split_fields1).rec__p__t_rec2__c)) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic p__t_rec2__c__first__bit : int

logic p__t_rec2__c__last__bit : int

logic p__t_rec2__c__position : int

axiom p__t_rec2__c__first__bit_axiom : (0 <= p__t_rec2__c__first__bit)

axiom p__t_rec2__c__last__bit_axiom :
  (p__t_rec2__c__first__bit <  p__t_rec2__c__last__bit)

axiom p__t_rec2__c__position_axiom : (0 <= p__t_rec2__c__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type t_rec2__ref = { t_rec2__content : us_rep
}

function t_rec2__ref_t_rec2__content__projection(a: t_rec2__ref) : us_rep =
  (a).t_rec2__content

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant(temp___expr_220: us_rep,
  temp___is_init_216: bool, temp___skip_constant_217: bool,
  temp___do_toplevel_218: bool, temp___do_typ_inv_219: bool) = true

predicate dynamic_predicate(temp___225: us_rep) = true

type t_bool

predicate in_range1(x: int) = ((0 <= x) and (x <= 1))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq3 : t_bool, t_bool -> bool

logic dummy3 : t_bool

type t_bool__ref = { t_bool__content : t_bool
}

function t_bool__ref_t_bool__content__projection(a: t_bool__ref) : t_bool =
  (a).t_bool__content

predicate dynamic_invariant1(temp___expr_190: int, temp___is_init_186: bool,
  temp___skip_constant_187: bool, temp___do_toplevel_188: bool,
  temp___do_typ_inv_189: bool) = ((((temp___is_init_186 = true) or
  (0 <= 1)) -> in_range1(temp___expr_190)) and
  ((temp___do_toplevel_188 = true) -> ((temp___is_init_186 = true) ->
  ((0 <= temp___expr_190) and (temp___expr_190 <= 1)))))

predicate dynamic_predicate1(temp___194: int) = ((0 <= temp___194) and
  (temp___194 <= 1))

type t_int

logic t_intqtint : t_int -> int

axiom t_intqtaxiom : (forall i:t_int. ((- 2147483648) <= t_intqtint(i)))

axiom t_intqtaxiom1 : (forall i:t_int. (t_intqtint(i) <= 2147483647))

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq4 : t_int, t_int -> bool

logic dummy4 : t_int

type t_int__ref = { t_int__content : t_int
}

function t_int__ref_t_int__content__projection(a: t_int__ref) : t_int =
  (a).t_int__content

predicate dynamic_invariant2(temp___expr_200: int, temp___is_init_196: bool,
  temp___skip_constant_197: bool, temp___do_toplevel_198: bool,
  temp___do_typ_inv_199: bool) = ((((temp___is_init_196 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range2(temp___expr_200)) and
  ((temp___do_toplevel_198 = true) -> ((temp___is_init_196 = true) ->
  (((- 2147483648) <= temp___expr_200) and
  (temp___expr_200 <= 2147483647)))))

predicate dynamic_predicate2(temp___204: int) =
  (((- 2147483648) <= temp___204) and (temp___204 <= 2147483647))

predicate dynamic_invariant3(temp___expr_210: t_rec1,
  temp___is_init_206: bool, temp___skip_constant_207: bool,
  temp___do_toplevel_208: bool, temp___do_typ_inv_209: bool) = true

predicate dynamic_predicate3(temp___214: t_rec1) = true

predicate dynamic_invariant4(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

 (* File "p.adb", line 1, characters 0-0 *)
goal defqtvc :
  (forall b:int. forall j:int. (dynamic_invariant1(b, false, false, true,
  true) -> (dynamic_invariant2(j, false, false, true, true) ->
  (forall usf:t_rec1. dynamic_predicate3(usf)))))
