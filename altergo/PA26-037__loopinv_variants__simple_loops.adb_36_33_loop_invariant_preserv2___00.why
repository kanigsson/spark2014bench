(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

type t1b

logic t1bqtint : t1b -> int

axiom t1bqtaxiom : (forall i:t1b. (1 <= t1bqtint(i)))

axiom t1bqtaxiom1 : (forall i:t1b. (t1bqtint(i) <= 3))

predicate in_range1(x: int) = ((1 <= x) and (x <= 3))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : t1b, t1b -> bool

logic dummy : t1b

type t1b__ref = { t1b__content : t1b
}

function t1b__ref_t1b__content__projection(a: t1b__ref) : t1b =
  (a).t1b__content

type t2b

logic t2bqtint : t2b -> int

axiom t2bqtaxiom : (forall i:t2b. (1 <= t2bqtint(i)))

axiom t2bqtaxiom1 : (forall i:t2b. (t2bqtint(i) <= 10))

predicate in_range2(x: int) = ((1 <= x) and (x <= 10))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : t2b, t2b -> bool

logic dummy1 : t2b

type t2b__ref = { t2b__content : t2b
}

function t2b__ref_t2b__content__projection(a: t2b__ref) : t2b =
  (a).t2b__content

type t3b

logic t3bqtint : t3b -> int

axiom t3bqtaxiom : (forall i:t3b. (1 <= t3bqtint(i)))

axiom t3bqtaxiom1 : (forall i:t3b. (t3bqtint(i) <= 3))

predicate in_range3(x: int) = ((1 <= x) and (x <= 3))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t3b, t3b -> bool

logic dummy2 : t3b

type t3b__ref = { t3b__content : t3b
}

function t3b__ref_t3b__content__projection(a: t3b__ref) : t3b =
  (a).t3b__content

type t4b

logic t4bqtint : t4b -> int

axiom t4bqtaxiom : (forall i:t4b. (1 <= t4bqtint(i)))

axiom t4bqtaxiom1 : (forall i:t4b. (t4bqtint(i) <= 10))

predicate in_range4(x: int) = ((1 <= x) and (x <= 10))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t4b, t4b -> bool

logic dummy3 : t4b

type t4b__ref = { t4b__content : t4b
}

function t4b__ref_t4b__content__projection(a: t4b__ref) : t4b =
  (a).t4b__content

type t5b

logic t5bqtint : t5b -> int

axiom t5bqtaxiom : (forall i:t5b. (1 <= t5bqtint(i)))

axiom t5bqtaxiom1 : (forall i:t5b. (t5bqtint(i) <= 3))

predicate in_range5(x: int) = ((1 <= x) and (x <= 3))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : t5b, t5b -> bool

logic dummy4 : t5b

type t5b__ref = { t5b__content : t5b
}

function t5b__ref_t5b__content__projection(a: t5b__ref) : t5b =
  (a).t5b__content

type t6b

logic t6bqtint : t6b -> int

axiom t6bqtaxiom : (forall i:t6b. (1 <= t6bqtint(i)))

axiom t6bqtaxiom1 : (forall i:t6b. (t6bqtint(i) <= 10))

predicate in_range6(x: int) = ((1 <= x) and (x <= 10))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : t6b, t6b -> bool

logic dummy5 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref_t6b__content__projection(a: t6b__ref) : t6b =
  (a).t6b__content

type t7b

logic t7bqtint : t7b -> int

axiom t7bqtaxiom : (forall i:t7b. (1 <= t7bqtint(i)))

axiom t7bqtaxiom1 : (forall i:t7b. (t7bqtint(i) <= 3))

predicate in_range7(x: int) = ((1 <= x) and (x <= 3))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq6 : t7b, t7b -> bool

logic dummy6 : t7b

type t7b__ref = { t7b__content : t7b
}

function t7b__ref_t7b__content__projection(a: t7b__ref) : t7b =
  (a).t7b__content

type t8b

logic t8bqtint : t8b -> int

axiom t8bqtaxiom : (forall i:t8b. (1 <= t8bqtint(i)))

axiom t8bqtaxiom1 : (forall i:t8b. (t8bqtint(i) <= 10))

predicate in_range8(x: int) = ((1 <= x) and (x <= 10))

function bool_eq8(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq7 : t8b, t8b -> bool

logic dummy7 : t8b

type t8b__ref = { t8b__content : t8b
}

function t8b__ref_t8b__content__projection(a: t8b__ref) : t8b =
  (a).t8b__content

 (* File "simple_loops.adb", line 1, characters 0-0 *)
goal defqtvc :
  (forall prop1:bool.
  (forall prop2:bool.
  ((exists i:int. ((i = 1) and (if (andb((if (1 <= i) then true else false),
   (if (i <= 3) then true else false)) = true) then (exists prop3:bool.
                                                    ((prop3 = of_int(0)) and
                                                    (exists prop4:bool.
                                                    exists j:int.
                                                    ((exists j1:int.
                                                     ((j1 = 1) and
                                                     (if (andb((if (1 <= j1) then true else false),
                                                     (if (j1 <= 10) then true else false)) = true) then 
                                                     (exists prop5:bool.
                                                     ((prop5 = true) and
                                                     ((andb((if in_range2(j) then true else false),
                                                     (if ((1 <= j) and
                                                     (j <= 10)) then true else false)) = true) and
                                                     ((prop4 = of_int(1)) and
                                                     (j = 10))))) else ((prop4 = prop3) and
                                                     (j = j1))))) and
                                                    (exists i1:int.
                                                    ((andb((if in_range1(i1) then true else false),
                                                    (if ((1 <= i1) and
                                                    (i1 <= 3)) then true else false)) = true) and
                                                    (i1 = 3))))))) else (prop2 = prop1)))) ->
  (forall prop3:bool.
  ((exists i:int. ((i = 1) and (if (andb((if (1 <= i) then true else false),
   (if (i <= 3) then true else false)) = true) then (exists prop4:bool.
                                                    ((prop4 = of_int(1)) and
                                                    (exists prop5:bool.
                                                    exists j:int.
                                                    ((exists j1:int.
                                                     ((j1 = 1) and
                                                     (if (andb((if (1 <= j1) then true else false),
                                                     (if (j1 <= 10) then true else false)) = true) then 
                                                     (exists prop6:bool.
                                                     ((prop6 = true) and
                                                     ((andb((if in_range4(j) then true else false),
                                                     (if ((1 <= j) and
                                                     (j <= 10)) then true else false)) = true) and
                                                     ((prop5 = of_int(0)) and
                                                     (j = 10))))) else ((prop5 = prop4) and
                                                     (j = j1))))) and
                                                    (exists i1:int.
                                                    ((andb((if in_range3(i1) then true else false),
                                                    (if ((1 <= i1) and
                                                    (i1 <= 3)) then true else false)) = true) and
                                                    (i1 = 3))))))) else (prop3 = prop2)))) ->
  (forall prop4:bool.
  ((exists i:int. ((i = 1) and (if (andb((if (1 <= i) then true else false),
   (if (i <= 3) then true else false)) = true) then (exists prop5:bool.
                                                    ((prop5 = of_int(1)) and
                                                    (exists prop6:bool.
                                                    exists j:int.
                                                    ((exists j1:int.
                                                     ((j1 = 1) and
                                                     (if (andb((if (1 <= j1) then true else false),
                                                     (if (j1 <= 10) then true else false)) = true) then 
                                                     (exists prop7:bool.
                                                     ((prop7 = true) and
                                                     ((andb((if in_range6(j) then true else false),
                                                     (if ((1 <= j) and
                                                     (j <= 10)) then true else false)) = true) and
                                                     ((prop6 = prop7) and
                                                     (j = 10))))) else ((prop6 = prop5) and
                                                     (j = j1))))) and
                                                    (exists i1:int.
                                                    ((andb((if in_range5(i1) then true else false),
                                                    (if ((1 <= i1) and
                                                    (i1 <= 3)) then true else false)) = true) and
                                                    (i1 = 3))))))) else (prop4 = prop3)))) ->
  (forall i:int. ((i = 1) -> ((andb((if (1 <= i) then true else false),
  (if (i <= 3) then true else false)) = true) ->
  (forall prop5:bool. ((prop5 = of_int(1)) ->
  (forall j:int. ((j = 1) -> ((andb((if (1 <= j) then true else false),
  (if (j <= 10) then true else false)) = true) ->
  (forall prop6:bool. forall j1:int. (((1 <  j1) -> (prop6 = true)) ->
  ((andb((if in_range8(j1) then true else false), (if ((1 <= j1) and
  (j1 <= 10)) then true else false)) = true) ->
  (forall prop7:bool. ((prop7 = prop6) -> ((not (j1 = 10)) ->
  (forall j2:int. ((j2 = (j1 + 1)) -> ((1 <  j2) -> (prop7 = true)))))))))))))))))))))))))
