(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

type t

logic tqtint : t -> int

axiom tqtaxiom : (forall i:t. (0 <= tqtint(i)))

axiom tqtaxiom1 : (forall i:t. (tqtint(i) <= 255))

logic nth : t, int -> bool

axiom nth_out_of_bound :
  (forall x:t. forall n:int. (((n <  0) or (8 <= n)) -> (nth(x, n) = false)))

logic zeros : t

axiom Nth_zeros : (forall n:int. (nth(zeros, n) = false))

logic one : t

logic ones : t

axiom Nth_ones :
  (forall n:int. (((0 <= n) and (n <  8)) -> (nth(ones, n) = true)))

logic bw_and : t, t -> t

axiom Nth_bw_and :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_and(v1, v2), n) = andb(nth(v1, n), nth(v2, n)))))

logic bw_or : t, t -> t

axiom Nth_bw_or :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_or(v1, v2), n) = orb(nth(v1, n), nth(v2, n)))))

logic bw_xor : t, t -> t

axiom Nth_bw_xor :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_xor(v1, v2), n) = xorb(nth(v1, n), nth(v2, n)))))

logic bw_not : t -> t

axiom Nth_bw_not :
  (forall v:t. forall n:int. (((0 <= n) and (n <  8)) -> (nth(bw_not(v),
  n) = notb(nth(v, n)))))

logic lsr : t, int -> t

axiom Lsr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  8) -> (nth(lsr(b, s), n) = nth(b, (n + s)))))))

axiom Lsr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((8 <= (n + s)) -> (nth(lsr(b, s), n) = false)))))

axiom lsr_zeros : (forall x:t. (lsr(x, 0) = x))

logic asr : t, int -> t

axiom Asr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> (((n + s) <  8) -> (nth(asr(b, s), n) = nth(b, (n + s)))))))

axiom Asr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> ((8 <= (n + s)) -> (nth(asr(b, s), n) = nth(b, (8 - 1)))))))

axiom asr_zeros : (forall x:t. (asr(x, 0) = x))

logic lsl : t, int -> t

axiom Lsl_nth_high :
  (forall b:t. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  8))) -> (nth(lsl(b, s), n) = nth(b, (n - s)))))

axiom Lsl_nth_low :
  (forall b:t. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth(lsl(b, s), n) = false)))

axiom lsl_zeros : (forall x:t. (lsl(x, 0) = x))

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> (0 <= (x % y))))

axiom Mod_bound1 :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((x % y) <  abs_int(y))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (0 <= (x / y))))

axiom Div_bound1 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> ((x / y) <= x)))

axiom Mod_1 : (forall x:int. ((x % 1) = 0))

axiom Div_1 : (forall x:int. ((x / 1) = x))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (- 1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((- 1) / y) = (- 1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((- 1) % y)]. ((1 <  y) -> (((- 1) % y) = (y - 1))))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic rotate_right : t, int -> t

axiom Nth_rotate_right :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_right(v, n), i) = nth(v, ((i + n) % 8))))))

logic rotate_left : t, int -> t

axiom Nth_rotate_left :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_left(v, n), i) = nth(v, ((i - n) % 8))))))

logic pow2 : int -> int

axiom Power_0 : (pow2(0) = 1)

axiom Power_s : (forall n:int. ((0 <= n) -> (pow2((n + 1)) = (2 * pow2(n)))))

axiom Power_1 : (pow2(1) = 2)

axiom Power_sum :
  (forall n:int. forall m:int. (((0 <= n) and (0 <= m)) ->
  (pow2((n + m)) = (pow2(n) * pow2(m)))))

axiom pow2pos : (forall i:int. ((0 <= i) -> (0 <  pow2(i))))

axiom pow2_0 : (pow2(0) = 1)

axiom pow2_1 : (pow2(1) = 2)

axiom pow2_2 : (pow2(2) = 4)

axiom pow2_3 : (pow2(3) = 8)

axiom pow2_4 : (pow2(4) = 16)

axiom pow2_5 : (pow2(5) = 32)

axiom pow2_6 : (pow2(6) = 64)

axiom pow2_7 : (pow2(7) = 128)

axiom pow2_8 : (pow2(8) = 256)

axiom pow2_9 : (pow2(9) = 512)

axiom pow2_10 : (pow2(10) = 1024)

axiom pow2_11 : (pow2(11) = 2048)

axiom pow2_12 : (pow2(12) = 4096)

axiom pow2_13 : (pow2(13) = 8192)

axiom pow2_14 : (pow2(14) = 16384)

axiom pow2_15 : (pow2(15) = 32768)

axiom pow2_16 : (pow2(16) = 65536)

axiom pow2_17 : (pow2(17) = 131072)

axiom pow2_18 : (pow2(18) = 262144)

axiom pow2_19 : (pow2(19) = 524288)

axiom pow2_20 : (pow2(20) = 1048576)

axiom pow2_21 : (pow2(21) = 2097152)

axiom pow2_22 : (pow2(22) = 4194304)

axiom pow2_23 : (pow2(23) = 8388608)

axiom pow2_24 : (pow2(24) = 16777216)

axiom pow2_25 : (pow2(25) = 33554432)

axiom pow2_26 : (pow2(26) = 67108864)

axiom pow2_27 : (pow2(27) = 134217728)

axiom pow2_28 : (pow2(28) = 268435456)

axiom pow2_29 : (pow2(29) = 536870912)

axiom pow2_30 : (pow2(30) = 1073741824)

axiom pow2_31 : (pow2(31) = 2147483648)

axiom pow2_32 : (pow2(32) = 4294967296)

axiom pow2_33 : (pow2(33) = 8589934592)

axiom pow2_34 : (pow2(34) = 17179869184)

axiom pow2_35 : (pow2(35) = 34359738368)

axiom pow2_36 : (pow2(36) = 68719476736)

axiom pow2_37 : (pow2(37) = 137438953472)

axiom pow2_38 : (pow2(38) = 274877906944)

axiom pow2_39 : (pow2(39) = 549755813888)

axiom pow2_40 : (pow2(40) = 1099511627776)

axiom pow2_41 : (pow2(41) = 2199023255552)

axiom pow2_42 : (pow2(42) = 4398046511104)

axiom pow2_43 : (pow2(43) = 8796093022208)

axiom pow2_44 : (pow2(44) = 17592186044416)

axiom pow2_45 : (pow2(45) = 35184372088832)

axiom pow2_46 : (pow2(46) = 70368744177664)

axiom pow2_47 : (pow2(47) = 140737488355328)

axiom pow2_48 : (pow2(48) = 281474976710656)

axiom pow2_49 : (pow2(49) = 562949953421312)

axiom pow2_50 : (pow2(50) = 1125899906842624)

axiom pow2_51 : (pow2(51) = 2251799813685248)

axiom pow2_52 : (pow2(52) = 4503599627370496)

axiom pow2_53 : (pow2(53) = 9007199254740992)

axiom pow2_54 : (pow2(54) = 18014398509481984)

axiom pow2_55 : (pow2(55) = 36028797018963968)

axiom pow2_56 : (pow2(56) = 72057594037927936)

axiom pow2_57 : (pow2(57) = 144115188075855872)

axiom pow2_58 : (pow2(58) = 288230376151711744)

axiom pow2_59 : (pow2(59) = 576460752303423488)

axiom pow2_60 : (pow2(60) = 1152921504606846976)

axiom pow2_61 : (pow2(61) = 2305843009213693952)

axiom pow2_62 : (pow2(62) = 4611686018427387904)

axiom pow2_63 : (pow2(63) = 9223372036854775808)

axiom pow2_64 : (pow2(64) = 18446744073709551616)

logic is_signed_positive : t -> prop

logic of_int : int -> t

function to_int(x: t) : int =
  (if is_signed_positive(x) then tqtint(x) else (-(256 - tqtint(x))))

axiom to_uint_extensionality :
  (forall v:t. forall vqt:t. ((tqtint(v) = tqtint(vqt)) -> (v = vqt)))

axiom to_int_extensionality :
  (forall v:t. forall vqt:t. ((to_int(v) = to_int(vqt)) -> (v = vqt)))

predicate uint_in_range(i: int) = ((0 <= i) and (i <= 255))

axiom to_uint_bounds : (forall v:t. (0 <= tqtint(v)))

axiom to_uint_bounds1 : (forall v:t. (tqtint(v) <  256))

axiom to_uint_of_int :
  (forall i:int. (((0 <= i) and (i <  256)) -> (tqtint(of_int(i)) = i)))

logic size_bv : t

axiom to_uint_size_bv : (tqtint(size_bv) = 8)

axiom to_uint_zeros : (tqtint(zeros) = 0)

axiom to_uint_one : (tqtint(one) = 1)

axiom to_uint_ones : (tqtint(ones) = 255)

predicate ult(x: t, y: t) = (tqtint(x) <  tqtint(y))

predicate ule(x: t, y: t) = (tqtint(x) <= tqtint(y))

predicate ugt(x: t, y: t) = (tqtint(y) <  tqtint(x))

predicate uge(x: t, y: t) = (tqtint(y) <= tqtint(x))

predicate slt(v1: t, v2: t) = (to_int(v1) <  to_int(v2))

predicate sle(v1: t, v2: t) = (to_int(v1) <= to_int(v2))

predicate sgt(v1: t, v2: t) = (to_int(v2) <  to_int(v1))

predicate sge(v1: t, v2: t) = (to_int(v2) <= to_int(v1))

axiom positive_is_ge_zeros :
  (forall x:t. (is_signed_positive(x) -> sge(x, zeros)))

axiom positive_is_ge_zeros1 :
  (forall x:t. (sge(x, zeros) -> is_signed_positive(x)))

logic add : t, t -> t

axiom to_uint_add_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) + tqtint(v2)) <  256) ->
  (tqtint(add(v1, v2)) = (tqtint(v1) + tqtint(v2)))))

logic sub : t, t -> t

axiom to_uint_sub_bounded :
  (forall v1:t. forall v2:t. (((0 <= (tqtint(v1) - tqtint(v2))) and
  ((tqtint(v1) - tqtint(v2)) <  256)) -> (tqtint(sub(v1,
  v2)) = (tqtint(v1) - tqtint(v2)))))

logic neg : t -> t

axiom to_uint_neg : (forall v:t. (tqtint(neg(v)) = ((-tqtint(v)) % 256)))

logic mul : t, t -> t

axiom to_uint_mul_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) * tqtint(v2)) <  256) ->
  (tqtint(mul(v1, v2)) = (tqtint(v1) * tqtint(v2)))))

logic udiv : t, t -> t

axiom to_uint_udiv :
  (forall v1:t. forall v2:t. (tqtint(udiv(v1,
  v2)) = (tqtint(v1) / tqtint(v2))))

logic urem : t, t -> t

axiom to_uint_urem :
  (forall v1:t. forall v2:t. (tqtint(urem(v1,
  v2)) = (tqtint(v1) % tqtint(v2))))

logic lsr_bv : t, t -> t

axiom lsr_bv_is_lsr :
  (forall x:t. forall n:t. (lsr_bv(x, n) = lsr(x, tqtint(n))))

axiom to_uint_lsr :
  (forall v:t. forall n:t. (tqtint(lsr_bv(v,
  n)) = (tqtint(v) / pow2(tqtint(n)))))

logic asr_bv : t, t -> t

axiom asr_bv_is_asr :
  (forall x:t. forall n:t. (asr_bv(x, n) = asr(x, tqtint(n))))

logic lsl_bv : t, t -> t

axiom lsl_bv_is_lsl :
  (forall x:t. forall n:t. (lsl_bv(x, n) = lsl(x, tqtint(n))))

axiom to_uint_lsl :
  (forall v:t. forall n:t. (tqtint(lsl_bv(v,
  n)) = ((tqtint(v) * pow2(tqtint(n))) % 256)))

logic rotate_right_bv : t, t -> t

logic rotate_left_bv : t, t -> t

axiom rotate_left_bv_is_rotate_left :
  (forall v:t. forall n:t. (rotate_left_bv(v, n) = rotate_left(v,
  tqtint(n))))

axiom rotate_right_bv_is_rotate_right :
  (forall v:t. forall n:t. (rotate_right_bv(v, n) = rotate_right(v,
  tqtint(n))))

logic nth_bv : t, t -> bool

axiom Nth_bv_is_nth :
  (forall x:t. forall i:t. (nth(x, tqtint(i)) = nth_bv(x, i)))

axiom Nth_bv_is_nth2 :
  (forall x:t. forall i:int. (((0 <= i) and (i <  256)) -> (nth_bv(x,
  of_int(i)) = nth(x, i))))

logic eq_sub_bv : t, t, t, t -> prop

predicate eq_sub(a: t, b: t, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth(a, j) = nth(b, j))))

axiom eq_sub_equiv :
  (forall a:t. forall b:t. forall i:t. forall n:t. (eq_sub(a, b, tqtint(i),
  tqtint(n)) -> eq_sub_bv(a, b, i, n)))

axiom eq_sub_equiv1 :
  (forall a:t. forall b:t. forall i:t. forall n:t. (eq_sub_bv(a, b, i, n) ->
  eq_sub(a, b, tqtint(i), tqtint(n))))

axiom Extensionality :
  (forall x:t. forall y:t [eq_sub(x, y, 0, 8)]. (eq_sub(x, y, 0, 8) ->
  (x = y)))

type t__ref = { t__content : t
}

function bool_eq1(x: t, y: t) : bool = (if (x = y) then true else false)

function bool_ne1(x: t, y: t) : bool =
  (if (not (x = y)) then true else false)

function bool_lt1(x: t, y: t) : bool = (if ult(x, y) then true else false)

function bool_le1(x: t, y: t) : bool = (if ule(x, y) then true else false)

function bool_gt1(x: t, y: t) : bool = (if ugt(x, y) then true else false)

function bool_ge1(x: t, y: t) : bool = (if uge(x, y) then true else false)

logic power : t, int -> t

axiom Power_01 : (forall x:t. (power(x, 0) = one))

axiom Power_11 : (forall x:t. (power(x, 1) = x))

axiom Power_s1 :
  (forall x:t. forall n:int. ((0 <= n) -> (power(x, (n + 1)) = mul(x,
  power(x, n)))))

axiom Power_s_alt :
  (forall x:t. forall n:int. ((0 <  n) -> (power(x, n) = mul(x, power(x,
  (n - 1))))))

axiom Power_sum1 :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n + m)) = mul(power(x, n), power(x, m))))))

axiom Power_mult :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n * m)) = power(power(x, n), m)))))

axiom Power_mult2 :
  (forall x:t. forall y:t. forall n:int. ((0 <= n) -> (power(mul(x, y),
  n) = mul(power(x, n), power(y, n)))))

function bv_min(x: t, y: t) : t = (if ule(x, y) then x else y)

function bv_max(x: t, y: t) : t = (if ule(x, y) then y else x)

function min(x: int, y: int) : int = (if (x <= y) then x else y)

function max(x: int, y: int) : int = (if (x <= y) then y else x)

axiom Min_r : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_l : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Min_comm : (forall x:int. forall y:int. (min(x, y) = min(y, x)))

axiom Max_comm : (forall x:int. forall y:int. (max(x, y) = max(y, x)))

axiom Min_assoc :
  (forall x:int. forall y:int. forall z:int. (min(min(x, y), z) = min(x,
  min(y, z))))

axiom Max_assoc :
  (forall x:int. forall y:int. forall z:int. (max(max(x, y), z) = max(x,
  max(y, z))))

axiom bv_min_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_min(x, y)) = min(tqtint(x),
  tqtint(y))))

axiom bv_max_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_max(x, y)) = max(tqtint(x),
  tqtint(y))))

type t1

logic tqtint1 : t1 -> int

axiom tqtaxiom2 : (forall i:t1. (0 <= tqtint1(i)))

axiom tqtaxiom3 : (forall i:t1. (tqtint1(i) <= 18446744073709551615))

logic nth1 : t1, int -> bool

axiom nth_out_of_bound1 :
  (forall x:t1. forall n:int. (((n <  0) or (64 <= n)) -> (nth1(x,
  n) = false)))

logic zeros1 : t1

axiom Nth_zeros1 : (forall n:int. (nth1(zeros1, n) = false))

logic one1 : t1

logic ones1 : t1

axiom Nth_ones1 :
  (forall n:int. (((0 <= n) and (n <  64)) -> (nth1(ones1, n) = true)))

logic bw_and1 : t1, t1 -> t1

axiom Nth_bw_and1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth1(bw_and1(v1, v2), n) = andb(nth1(v1, n), nth1(v2, n)))))

logic bw_or1 : t1, t1 -> t1

axiom Nth_bw_or1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth1(bw_or1(v1, v2), n) = orb(nth1(v1, n), nth1(v2, n)))))

logic bw_xor1 : t1, t1 -> t1

axiom Nth_bw_xor1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth1(bw_xor1(v1, v2), n) = xorb(nth1(v1, n), nth1(v2, n)))))

logic bw_not1 : t1 -> t1

axiom Nth_bw_not1 :
  (forall v:t1. forall n:int. (((0 <= n) and (n <  64)) -> (nth1(bw_not1(v),
  n) = notb(nth1(v, n)))))

logic lsr1 : t1, int -> t1

axiom Lsr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  64) -> (nth1(lsr1(b, s), n) = nth1(b, (n + s)))))))

axiom Lsr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((64 <= (n + s)) -> (nth1(lsr1(b, s), n) = false)))))

axiom lsr_zeros1 : (forall x:t1. (lsr1(x, 0) = x))

logic asr1 : t1, int -> t1

axiom Asr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  64)) -> (((n + s) <  64) -> (nth1(asr1(b, s), n) = nth1(b,
  (n + s)))))))

axiom Asr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  64)) -> ((64 <= (n + s)) -> (nth1(asr1(b, s), n) = nth1(b,
  (64 - 1)))))))

axiom asr_zeros1 : (forall x:t1. (asr1(x, 0) = x))

logic lsl1 : t1, int -> t1

axiom Lsl_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  64))) -> (nth1(lsl1(b, s), n) = nth1(b, (n - s)))))

axiom Lsl_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth1(lsl1(b, s), n) = false)))

axiom lsl_zeros1 : (forall x:t1. (lsl1(x, 0) = x))

logic rotate_right1 : t1, int -> t1

axiom Nth_rotate_right1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  64)) ->
  ((0 <= n) -> (nth1(rotate_right1(v, n), i) = nth1(v, ((i + n) % 64))))))

logic rotate_left1 : t1, int -> t1

axiom Nth_rotate_left1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  64)) ->
  ((0 <= n) -> (nth1(rotate_left1(v, n), i) = nth1(v, ((i - n) % 64))))))

logic is_signed_positive1 : t1 -> prop

logic of_int1 : int -> t1

function to_int1(x: t1) : int =
  (if is_signed_positive1(x) then tqtint1(x) else (-(18446744073709551616 - tqtint1(x))))

axiom to_uint_extensionality1 :
  (forall v:t1. forall vqt:t1. ((tqtint1(v) = tqtint1(vqt)) -> (v = vqt)))

axiom to_int_extensionality1 :
  (forall v:t1. forall vqt:t1. ((to_int1(v) = to_int1(vqt)) -> (v = vqt)))

predicate uint_in_range1(i: int) = ((0 <= i) and (i <= 18446744073709551615))

axiom to_uint_bounds2 : (forall v:t1. (0 <= tqtint1(v)))

axiom to_uint_bounds3 : (forall v:t1. (tqtint1(v) <  18446744073709551616))

axiom to_uint_of_int1 :
  (forall i:int. (((0 <= i) and (i <  18446744073709551616)) ->
  (tqtint1(of_int1(i)) = i)))

logic size_bv1 : t1

axiom to_uint_size_bv1 : (tqtint1(size_bv1) = 64)

axiom to_uint_zeros1 : (tqtint1(zeros1) = 0)

axiom to_uint_one1 : (tqtint1(one1) = 1)

axiom to_uint_ones1 : (tqtint1(ones1) = 18446744073709551615)

predicate ult1(x: t1, y: t1) = (tqtint1(x) <  tqtint1(y))

predicate ule1(x: t1, y: t1) = (tqtint1(x) <= tqtint1(y))

predicate ugt1(x: t1, y: t1) = (tqtint1(y) <  tqtint1(x))

predicate uge1(x: t1, y: t1) = (tqtint1(y) <= tqtint1(x))

predicate slt1(v1: t1, v2: t1) = (to_int1(v1) <  to_int1(v2))

predicate sle1(v1: t1, v2: t1) = (to_int1(v1) <= to_int1(v2))

predicate sgt1(v1: t1, v2: t1) = (to_int1(v2) <  to_int1(v1))

predicate sge1(v1: t1, v2: t1) = (to_int1(v2) <= to_int1(v1))

axiom positive_is_ge_zeros2 :
  (forall x:t1. (is_signed_positive1(x) -> sge1(x, zeros1)))

axiom positive_is_ge_zeros3 :
  (forall x:t1. (sge1(x, zeros1) -> is_signed_positive1(x)))

logic add1 : t1, t1 -> t1

axiom to_uint_add_bounded1 :
  (forall v1:t1. forall v2:t1.
  (((tqtint1(v1) + tqtint1(v2)) <  18446744073709551616) -> (tqtint1(add1(v1,
  v2)) = (tqtint1(v1) + tqtint1(v2)))))

logic sub1 : t1, t1 -> t1

axiom to_uint_sub_bounded1 :
  (forall v1:t1. forall v2:t1. (((0 <= (tqtint1(v1) - tqtint1(v2))) and
  ((tqtint1(v1) - tqtint1(v2)) <  18446744073709551616)) -> (tqtint1(sub1(v1,
  v2)) = (tqtint1(v1) - tqtint1(v2)))))

logic neg1 : t1 -> t1

axiom to_uint_neg1 :
  (forall v:t1. (tqtint1(neg1(v)) = ((-tqtint1(v)) % 18446744073709551616)))

logic mul1 : t1, t1 -> t1

axiom to_uint_mul_bounded1 :
  (forall v1:t1. forall v2:t1.
  (((tqtint1(v1) * tqtint1(v2)) <  18446744073709551616) -> (tqtint1(mul1(v1,
  v2)) = (tqtint1(v1) * tqtint1(v2)))))

logic udiv1 : t1, t1 -> t1

axiom to_uint_udiv1 :
  (forall v1:t1. forall v2:t1. (tqtint1(udiv1(v1,
  v2)) = (tqtint1(v1) / tqtint1(v2))))

logic urem1 : t1, t1 -> t1

axiom to_uint_urem1 :
  (forall v1:t1. forall v2:t1. (tqtint1(urem1(v1,
  v2)) = (tqtint1(v1) % tqtint1(v2))))

logic lsr_bv1 : t1, t1 -> t1

axiom lsr_bv_is_lsr1 :
  (forall x:t1. forall n:t1. (lsr_bv1(x, n) = lsr1(x, tqtint1(n))))

axiom to_uint_lsr1 :
  (forall v:t1. forall n:t1. (tqtint1(lsr_bv1(v,
  n)) = (tqtint1(v) / pow2(tqtint1(n)))))

logic asr_bv1 : t1, t1 -> t1

axiom asr_bv_is_asr1 :
  (forall x:t1. forall n:t1. (asr_bv1(x, n) = asr1(x, tqtint1(n))))

logic lsl_bv1 : t1, t1 -> t1

axiom lsl_bv_is_lsl1 :
  (forall x:t1. forall n:t1. (lsl_bv1(x, n) = lsl1(x, tqtint1(n))))

axiom to_uint_lsl1 :
  (forall v:t1. forall n:t1. (tqtint1(lsl_bv1(v,
  n)) = ((tqtint1(v) * pow2(tqtint1(n))) % 18446744073709551616)))

logic rotate_right_bv1 : t1, t1 -> t1

logic rotate_left_bv1 : t1, t1 -> t1

axiom rotate_left_bv_is_rotate_left1 :
  (forall v:t1. forall n:t1. (rotate_left_bv1(v, n) = rotate_left1(v,
  tqtint1(n))))

axiom rotate_right_bv_is_rotate_right1 :
  (forall v:t1. forall n:t1. (rotate_right_bv1(v, n) = rotate_right1(v,
  tqtint1(n))))

logic nth_bv1 : t1, t1 -> bool

axiom Nth_bv_is_nth1 :
  (forall x:t1. forall i:t1. (nth1(x, tqtint1(i)) = nth_bv1(x, i)))

axiom Nth_bv_is_nth21 :
  (forall x:t1. forall i:int. (((0 <= i) and (i <  18446744073709551616)) ->
  (nth_bv1(x, of_int1(i)) = nth1(x, i))))

logic eq_sub_bv1 : t1, t1, t1, t1 -> prop

predicate eq_sub1(a: t1, b: t1, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth1(a, j) = nth1(b,
  j))))

axiom eq_sub_equiv2 :
  (forall a:t1. forall b:t1. forall i:t1. forall n:t1. (eq_sub1(a, b,
  tqtint1(i), tqtint1(n)) -> eq_sub_bv1(a, b, i, n)))

axiom eq_sub_equiv3 :
  (forall a:t1. forall b:t1. forall i:t1. forall n:t1. (eq_sub_bv1(a, b, i,
  n) -> eq_sub1(a, b, tqtint1(i), tqtint1(n))))

axiom Extensionality1 :
  (forall x:t1. forall y:t1 [eq_sub1(x, y, 0, 64)]. (eq_sub1(x, y, 0, 64) ->
  (x = y)))

type t__ref1 = { t__content1 : t1
}

function bool_eq2(x: t1, y: t1) : bool = (if (x = y) then true else false)

function bool_ne2(x: t1, y: t1) : bool =
  (if (not (x = y)) then true else false)

function bool_lt2(x: t1, y: t1) : bool = (if ult1(x, y) then true else false)

function bool_le2(x: t1, y: t1) : bool = (if ule1(x, y) then true else false)

function bool_gt2(x: t1, y: t1) : bool = (if ugt1(x, y) then true else false)

function bool_ge2(x: t1, y: t1) : bool = (if uge1(x, y) then true else false)

logic power1 : t1, int -> t1

axiom Power_02 : (forall x:t1. (power1(x, 0) = one1))

axiom Power_12 : (forall x:t1. (power1(x, 1) = x))

axiom Power_s2 :
  (forall x:t1. forall n:int. ((0 <= n) -> (power1(x, (n + 1)) = mul1(x,
  power1(x, n)))))

axiom Power_s_alt1 :
  (forall x:t1. forall n:int. ((0 <  n) -> (power1(x, n) = mul1(x, power1(x,
  (n - 1))))))

axiom Power_sum2 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n + m)) = mul1(power1(x, n), power1(x, m))))))

axiom Power_mult1 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n * m)) = power1(power1(x, n), m)))))

axiom Power_mult21 :
  (forall x:t1. forall y:t1. forall n:int. ((0 <= n) -> (power1(mul1(x, y),
  n) = mul1(power1(x, n), power1(y, n)))))

function bv_min1(x: t1, y: t1) : t1 = (if ule1(x, y) then x else y)

function bv_max1(x: t1, y: t1) : t1 = (if ule1(x, y) then y else x)

axiom bv_min_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_min1(x, y)) = min(tqtint1(x),
  tqtint1(y))))

axiom bv_max_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_max1(x, y)) = max(tqtint1(x),
  tqtint1(y))))

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

type root_component_type

logic root_component_typeqtint : root_component_type -> int

axiom root_component_typeqtaxiom :
  (forall i:root_component_type. (0 <= root_component_typeqtint(i)))

axiom root_component_typeqtaxiom1 :
  (forall i:root_component_type. (root_component_typeqtint(i) <= 2))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : root_component_type, root_component_type -> bool

logic dummy2 : root_component_type

type root_component_type__ref = { root_component_type__content :
root_component_type
}

function root_component_type__ref_root_component_type__content__projection(a: root_component_type__ref) : root_component_type =
  (a).root_component_type__content

function to_rep(x: root_component_type) : int = root_component_typeqtint(x)

logic of_rep : int -> root_component_type

axiom inversion_axiom :
  (forall x:root_component_type [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:root_component_type [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type second_level_component_type

logic second_level_component_typeqtint : second_level_component_type -> int

axiom second_level_component_typeqtaxiom :
  (forall i:second_level_component_type.
  (0 <= second_level_component_typeqtint(i)))

axiom second_level_component_typeqtaxiom1 :
  (forall i:second_level_component_type.
  (second_level_component_typeqtint(i) <= 175))

predicate in_range3(x: int) = ((0 <= x) and (x <= 175))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : second_level_component_type,
  second_level_component_type -> bool

logic dummy3 : second_level_component_type

type second_level_component_type__ref = {
second_level_component_type__content : second_level_component_type
}

function second_level_component_type__ref_second_level_component_type__content__projection(a: second_level_component_type__ref) : second_level_component_type =
  (a).second_level_component_type__content

function to_rep1(x: second_level_component_type) : int =
  second_level_component_typeqtint(x)

logic of_rep1 : int -> second_level_component_type

axiom inversion_axiom1 :
  (forall x:second_level_component_type [to_rep1(x)].
  (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:second_level_component_type [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

type component_type

logic component_typeqtint : component_type -> int

axiom component_typeqtaxiom :
  (forall i:component_type. (0 <= component_typeqtint(i)))

axiom component_typeqtaxiom1 :
  (forall i:component_type. (component_typeqtint(i) <= 2147483647))

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : component_type, component_type -> bool

logic dummy4 : component_type

type component_type__ref = { component_type__content : component_type
}

function component_type__ref_component_type__content__projection(a: component_type__ref) : component_type =
  (a).component_type__content

function to_rep2(x: component_type) : int = component_typeqtint(x)

logic of_rep2 : int -> component_type

axiom inversion_axiom2 :
  (forall x:component_type [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:component_type [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref = { map__content : (int,component_type) farray
}

logic slide : (int,component_type) farray, int,
  int -> (int,component_type) farray

axiom slide_eq :
  (forall a:(int,component_type) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,component_type) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq8(a: (int,component_type) farray, a__first: int,
  a__last: int, b: (int,component_type) farray, b__first: int,
  b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep2((a[temp___idx_155])) = to_rep2((b[((b__first - a__first) + temp___idx_155)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,component_type) farray.
  forall b:(int,component_type) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,component_type) farray.
  forall b:(int,component_type) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,component_type) farray.
  forall b:(int,component_type) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,component_type) farray.
  forall b:(int,component_type) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep2((a[temp___idx_155])) = to_rep2((b[((b__first - a__first) + temp___idx_155)]))))))))

logic dummy5 : (int,component_type) farray

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

logic user_eq5 : (int,component_type) farray,
  (int,component_type) farray -> bool

type other_count_type

logic other_count_typeqtint : other_count_type -> int

axiom other_count_typeqtaxiom :
  (forall i:other_count_type. (0 <= other_count_typeqtint(i)))

axiom other_count_typeqtaxiom1 :
  (forall i:other_count_type. (other_count_typeqtint(i) <= 13))

predicate in_range5(x: int) = ((0 <= x) and (x <= 13))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : other_count_type, other_count_type -> bool

logic dummy6 : other_count_type

type other_count_type__ref = { other_count_type__content : other_count_type
}

function other_count_type__ref_other_count_type__content__projection(a: other_count_type__ref) : other_count_type =
  (a).other_count_type__content

function to_rep3(x: other_count_type) : int = other_count_typeqtint(x)

logic of_rep3 : int -> other_count_type

axiom inversion_axiom3 :
  (forall x:other_count_type [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:other_count_type [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type us_split_fields = {
rec__ada___hermes__oid__object_identifier__root_component :
root_component_type;
rec__ada___hermes__oid__object_identifier__second_level_component :
second_level_component_type;
rec__ada___hermes__oid__object_identifier__other_components :
(int,component_type) farray;
rec__ada___hermes__oid__object_identifier__other_component_count :
other_count_type
}

function us_split_fields_rec__ada___hermes__oid__object_identifier__root_component__projection(a: us_split_fields) : root_component_type =
  (a).rec__ada___hermes__oid__object_identifier__root_component

function us_split_fields_rec__ada___hermes__oid__object_identifier__second_level_component__projection(a: us_split_fields) : second_level_component_type =
  (a).rec__ada___hermes__oid__object_identifier__second_level_component

function us_split_fields_rec__ada___hermes__oid__object_identifier__other_components__projection(a: us_split_fields) : (int,component_type) farray =
  (a).rec__ada___hermes__oid__object_identifier__other_components

function us_split_fields_rec__ada___hermes__oid__object_identifier__other_component_count__projection(a: us_split_fields) : other_count_type =
  (a).rec__ada___hermes__oid__object_identifier__other_component_count

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq10(a: us_rep, b: us_rep) : bool =
  (if (((to_rep(((a).us_split_fields1).rec__ada___hermes__oid__object_identifier__root_component) = to_rep(((b).us_split_fields1).rec__ada___hermes__oid__object_identifier__root_component)) and
  (to_rep1(((a).us_split_fields1).rec__ada___hermes__oid__object_identifier__second_level_component) = to_rep1(((b).us_split_fields1).rec__ada___hermes__oid__object_identifier__second_level_component))) and
  ((bool_eq8(((a).us_split_fields1).rec__ada___hermes__oid__object_identifier__other_components,
  1, 13,
  ((b).us_split_fields1).rec__ada___hermes__oid__object_identifier__other_components,
  1, 13) = true) and
  (to_rep3(((a).us_split_fields1).rec__ada___hermes__oid__object_identifier__other_component_count) = to_rep3(((b).us_split_fields1).rec__ada___hermes__oid__object_identifier__other_component_count)))) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic ada___hermes__oid__object_identifier__root_component__first__bit : int

logic ada___hermes__oid__object_identifier__root_component__last__bit : int

logic ada___hermes__oid__object_identifier__root_component__position : int

axiom ada___hermes__oid__object_identifier__root_component__first__bit_axiom :
  (0 <= ada___hermes__oid__object_identifier__root_component__first__bit)

axiom ada___hermes__oid__object_identifier__root_component__last__bit_axiom :
  (ada___hermes__oid__object_identifier__root_component__first__bit <  ada___hermes__oid__object_identifier__root_component__last__bit)

axiom ada___hermes__oid__object_identifier__root_component__position_axiom :
  (0 <= ada___hermes__oid__object_identifier__root_component__position)

logic ada___hermes__oid__object_identifier__second_level_component__first__bit : int

logic ada___hermes__oid__object_identifier__second_level_component__last__bit : int

logic ada___hermes__oid__object_identifier__second_level_component__position : int

axiom ada___hermes__oid__object_identifier__second_level_component__first__bit_axiom :
  (0 <= ada___hermes__oid__object_identifier__second_level_component__first__bit)

axiom ada___hermes__oid__object_identifier__second_level_component__last__bit_axiom :
  (ada___hermes__oid__object_identifier__second_level_component__first__bit <  ada___hermes__oid__object_identifier__second_level_component__last__bit)

axiom ada___hermes__oid__object_identifier__second_level_component__position_axiom :
  (0 <= ada___hermes__oid__object_identifier__second_level_component__position)

logic ada___hermes__oid__object_identifier__other_components__first__bit : int

logic ada___hermes__oid__object_identifier__other_components__last__bit : int

logic ada___hermes__oid__object_identifier__other_components__position : int

axiom ada___hermes__oid__object_identifier__other_components__first__bit_axiom :
  (0 <= ada___hermes__oid__object_identifier__other_components__first__bit)

axiom ada___hermes__oid__object_identifier__other_components__last__bit_axiom :
  (ada___hermes__oid__object_identifier__other_components__first__bit <  ada___hermes__oid__object_identifier__other_components__last__bit)

axiom ada___hermes__oid__object_identifier__other_components__position_axiom :
  (0 <= ada___hermes__oid__object_identifier__other_components__position)

logic ada___hermes__oid__object_identifier__other_component_count__first__bit : int

logic ada___hermes__oid__object_identifier__other_component_count__last__bit : int

logic ada___hermes__oid__object_identifier__other_component_count__position : int

axiom ada___hermes__oid__object_identifier__other_component_count__first__bit_axiom :
  (0 <= ada___hermes__oid__object_identifier__other_component_count__first__bit)

axiom ada___hermes__oid__object_identifier__other_component_count__last__bit_axiom :
  (ada___hermes__oid__object_identifier__other_component_count__first__bit <  ada___hermes__oid__object_identifier__other_component_count__last__bit)

axiom ada___hermes__oid__object_identifier__other_component_count__position_axiom :
  (0 <= ada___hermes__oid__object_identifier__other_component_count__position)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy7 : us_rep

type object_identifier__ref = { object_identifier__content : us_rep
}

function object_identifier__ref_object_identifier__content__projection(a: object_identifier__ref) : us_rep =
  (a).object_identifier__content

type version_type

logic version_typeqtint : version_type -> int

axiom version_typeqtaxiom :
  (forall i:version_type. (1 <= version_typeqtint(i)))

axiom version_typeqtaxiom1 :
  (forall i:version_type. (version_typeqtint(i) <= 1))

predicate in_range6(x: int) = ((1 <= x) and (x <= 1))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : version_type, version_type -> bool

logic dummy8 : version_type

type version_type__ref = { version_type__content : version_type
}

function version_type__ref_version_type__content__projection(a: version_type__ref) : version_type =
  (a).version_type__content

function to_rep4(x: version_type) : int = version_typeqtint(x)

logic of_rep4 : int -> version_type

axiom inversion_axiom4 :
  (forall x:version_type [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:version_type [to_rep4(x)]. in_range6(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range6(x) ->
  (to_rep4(of_rep4(x)) = x)))

type octet

logic attr__ATTRIBUTE_MODULUS : t

function bool_eq12(x: t, y: t) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> t

logic user_eq9 : octet, octet -> bool

logic dummy9 : octet

type octet__ref = { octet__content : octet
}

function octet__ref_octet__content__projection(a: octet__ref) : octet =
  (a).octet__content

logic to_rep5 : octet -> t

logic of_rep5 : t -> octet

axiom inversion_axiom5 :
  (forall x:octet [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom coerce_axiom5 :
  (forall x:t [to_rep5(of_rep5(x))]. (to_rep5(of_rep5(x)) = x))

function to_int2(x: octet) : int = tqtint(to_rep5(x))

axiom range_int_axiom :
  (forall x:octet [to_int2(x)]. uint_in_range(to_int2(x)))

type map__ref1 = { map__content1 : (int,octet) farray
}

logic slide1 : (int,octet) farray, int, int -> (int,octet) farray

axiom slide_eq1 :
  (forall a:(int,octet) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,octet) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq13(a: (int,octet) farray, a__first: int, a__last: int,
  b: (int,octet) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep5((a[temp___idx_154])) = to_rep5((b[((b__first - a__first) + temp___idx_154)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq13(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq13(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq13(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq13(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep5((a[temp___idx_154])) = to_rep5((b[((b__first - a__first) + temp___idx_154)]))))))))

logic dummy10 : (int,octet) farray

logic value__size2 : int

logic object__size2 : int

logic component__size1 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom2 : (0 <= alignment2)

logic user_eq10 : (int,octet) farray, (int,octet) farray -> bool

type serial_number_type

logic attr__ATTRIBUTE_MODULUS1 : t1

function bool_eq14(x: t1, y: t1) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : t1 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> t1

logic user_eq11 : serial_number_type, serial_number_type -> bool

logic dummy11 : serial_number_type

type serial_number_type__ref = { serial_number_type__content :
serial_number_type
}

function serial_number_type__ref_serial_number_type__content__projection(a: serial_number_type__ref) : serial_number_type =
  (a).serial_number_type__content

logic to_rep6 : serial_number_type -> t1

logic of_rep6 : t1 -> serial_number_type

axiom inversion_axiom6 :
  (forall x:serial_number_type [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom coerce_axiom6 :
  (forall x:t1 [to_rep6(of_rep6(x))]. (to_rep6(of_rep6(x)) = x))

function to_int3(x: serial_number_type) : int = tqtint1(to_rep6(x))

axiom range_int_axiom1 :
  (forall x:serial_number_type [to_int3(x)]. uint_in_range1(to_int3(x)))

logic dummy12 : (int,octet) farray

logic value__size3 : int

logic object__size3 : int

logic component__size2 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom component__size_axiom2 : (0 <= component__size2)

axiom alignment_axiom3 : (0 <= alignment3)

logic user_eq12 : (int,octet) farray, (int,octet) farray -> bool

type us_split_fields2 = { rec__timestamp_messages__timestamp__version :
version_type; rec__timestamp_messages__timestamp__policy : us_rep;
rec__timestamp_messages__timestamp__hash_algorithm : us_rep;
rec__timestamp_messages__timestamp__hashed_message : (int,octet) farray;
rec__timestamp_messages__timestamp__serial_number : serial_number_type;
rec__timestamp_messages__timestamp__generalized_time : (int,octet) farray
}

function us_split_fields_rec__timestamp_messages__timestamp__version__projection(a: us_split_fields2) : version_type =
  (a).rec__timestamp_messages__timestamp__version

function us_split_fields_rec__timestamp_messages__timestamp__policy__projection(a: us_split_fields2) : us_rep =
  (a).rec__timestamp_messages__timestamp__policy

function us_split_fields_rec__timestamp_messages__timestamp__hash_algorithm__projection(a: us_split_fields2) : us_rep =
  (a).rec__timestamp_messages__timestamp__hash_algorithm

function us_split_fields_rec__timestamp_messages__timestamp__hashed_message__projection(a: us_split_fields2) : (int,octet) farray =
  (a).rec__timestamp_messages__timestamp__hashed_message

function us_split_fields_rec__timestamp_messages__timestamp__serial_number__projection(a: us_split_fields2) : serial_number_type =
  (a).rec__timestamp_messages__timestamp__serial_number

function us_split_fields_rec__timestamp_messages__timestamp__generalized_time__projection(a: us_split_fields2) : (int,octet) farray =
  (a).rec__timestamp_messages__timestamp__generalized_time

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function bool_eq15(a: us_rep1, b: us_rep1) : bool =
  (if (((to_rep4(((a).us_split_fields3).rec__timestamp_messages__timestamp__version) = to_rep4(((b).us_split_fields3).rec__timestamp_messages__timestamp__version)) and
  (bool_eq10(((a).us_split_fields3).rec__timestamp_messages__timestamp__policy,
  ((b).us_split_fields3).rec__timestamp_messages__timestamp__policy) = true)) and
  (((bool_eq10(((a).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm,
  ((b).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm) = true) and
  (bool_eq13(((a).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32,
  ((b).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32) = true)) and
  ((to_rep6(((a).us_split_fields3).rec__timestamp_messages__timestamp__serial_number) = to_rep6(((b).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)) and
  (bool_eq13(((a).us_split_fields3).rec__timestamp_messages__timestamp__generalized_time,
  1, 14,
  ((b).us_split_fields3).rec__timestamp_messages__timestamp__generalized_time,
  1, 14) = true)))) then true else false)

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic timestamp_messages__timestamp__version__first__bit : int

logic timestamp_messages__timestamp__version__last__bit : int

logic timestamp_messages__timestamp__version__position : int

axiom timestamp_messages__timestamp__version__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__version__first__bit)

axiom timestamp_messages__timestamp__version__last__bit_axiom :
  (timestamp_messages__timestamp__version__first__bit <  timestamp_messages__timestamp__version__last__bit)

axiom timestamp_messages__timestamp__version__position_axiom :
  (0 <= timestamp_messages__timestamp__version__position)

logic timestamp_messages__timestamp__policy__first__bit : int

logic timestamp_messages__timestamp__policy__last__bit : int

logic timestamp_messages__timestamp__policy__position : int

axiom timestamp_messages__timestamp__policy__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__policy__first__bit)

axiom timestamp_messages__timestamp__policy__last__bit_axiom :
  (timestamp_messages__timestamp__policy__first__bit <  timestamp_messages__timestamp__policy__last__bit)

axiom timestamp_messages__timestamp__policy__position_axiom :
  (0 <= timestamp_messages__timestamp__policy__position)

logic timestamp_messages__timestamp__hash_algorithm__first__bit : int

logic timestamp_messages__timestamp__hash_algorithm__last__bit : int

logic timestamp_messages__timestamp__hash_algorithm__position : int

axiom timestamp_messages__timestamp__hash_algorithm__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__hash_algorithm__first__bit)

axiom timestamp_messages__timestamp__hash_algorithm__last__bit_axiom :
  (timestamp_messages__timestamp__hash_algorithm__first__bit <  timestamp_messages__timestamp__hash_algorithm__last__bit)

axiom timestamp_messages__timestamp__hash_algorithm__position_axiom :
  (0 <= timestamp_messages__timestamp__hash_algorithm__position)

logic timestamp_messages__timestamp__hashed_message__first__bit : int

logic timestamp_messages__timestamp__hashed_message__last__bit : int

logic timestamp_messages__timestamp__hashed_message__position : int

axiom timestamp_messages__timestamp__hashed_message__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__hashed_message__first__bit)

axiom timestamp_messages__timestamp__hashed_message__last__bit_axiom :
  (timestamp_messages__timestamp__hashed_message__first__bit <  timestamp_messages__timestamp__hashed_message__last__bit)

axiom timestamp_messages__timestamp__hashed_message__position_axiom :
  (0 <= timestamp_messages__timestamp__hashed_message__position)

logic timestamp_messages__timestamp__serial_number__first__bit : int

logic timestamp_messages__timestamp__serial_number__last__bit : int

logic timestamp_messages__timestamp__serial_number__position : int

axiom timestamp_messages__timestamp__serial_number__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__serial_number__first__bit)

axiom timestamp_messages__timestamp__serial_number__last__bit_axiom :
  (timestamp_messages__timestamp__serial_number__first__bit <  timestamp_messages__timestamp__serial_number__last__bit)

axiom timestamp_messages__timestamp__serial_number__position_axiom :
  (0 <= timestamp_messages__timestamp__serial_number__position)

logic timestamp_messages__timestamp__generalized_time__first__bit : int

logic timestamp_messages__timestamp__generalized_time__last__bit : int

logic timestamp_messages__timestamp__generalized_time__position : int

axiom timestamp_messages__timestamp__generalized_time__first__bit_axiom :
  (0 <= timestamp_messages__timestamp__generalized_time__first__bit)

axiom timestamp_messages__timestamp__generalized_time__last__bit_axiom :
  (timestamp_messages__timestamp__generalized_time__first__bit <  timestamp_messages__timestamp__generalized_time__last__bit)

axiom timestamp_messages__timestamp__generalized_time__position_axiom :
  (0 <= timestamp_messages__timestamp__generalized_time__position)

logic user_eq13 : us_rep1, us_rep1 -> bool

logic dummy13 : us_rep1

type timestamp__ref = { timestamp__content : us_rep1
}

function timestamp__ref_timestamp__content__projection(a: timestamp__ref) : us_rep1 =
  (a).timestamp__content

logic stamp : us_rep1

logic attr__ATTRIBUTE_ADDRESS : int

function to_rep7(x: integer) : int = integerqtint(x)

logic of_rep7 : int -> integer

axiom inversion_axiom7 :
  (forall x:integer [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom5 : (forall x:integer [to_rep7(x)]. in_range(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range(x) ->
  (to_rep7(of_rep7(x)) = x)))

type t2

logic first : t2 -> integer

logic last : t2 -> integer

logic mk : int, int -> t2

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep7(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  (to_rep7(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (in_range1(low) and in_range1(high)))))

type us_t = { elts : (int,octet) farray; rt : t2
}

function to_array(a: us_t) : (int,octet) farray = (a).elts

function of_array(a: (int,octet) farray, f: int, l: int) : us_t = { elts = a;
  rt = mk(f, l) }

function first1(a: us_t) : int = to_rep7(first((a).rt))

function last1(a: us_t) : int = to_rep7(last((a).rt))

function length1(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size5 : int

logic object__size5 : int

logic component__size3 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom component__size_axiom3 : (0 <= component__size3)

axiom alignment_axiom5 : (0 <= alignment5)

function bool_eq16(x: us_t, y: us_t) : bool = bool_eq13((x).elts,
  to_rep7(first((x).rt)), to_rep7(last((x).rt)), (y).elts,
  to_rep7(first((y).rt)), to_rep7(last((y).rt)))

logic user_eq14 : us_t, us_t -> bool

logic dummy14 : us_t

type octet_array__ref = { octet_array__content : us_t
}

function octet_array__ref_octet_array__content__projection(a: octet_array__ref) : us_t =
  (a).octet_array__content

logic put_oid_value : us_rep -> us_t

logic put_oid_value__function_guard : us_t, us_rep -> prop

predicate dynamic_invariant(temp___expr_191: us_t, temp___is_init_187: bool,
  temp___skip_constant_188: bool, temp___do_toplevel_189: bool,
  temp___do_typ_inv_190: bool) = ((not (temp___skip_constant_188 = true)) ->
  dynamic_property(0, 2147483647, first1(temp___expr_191),
  last1(temp___expr_191)))

axiom put_oid_value__post_axiom :
  (forall value:us_rep [put_oid_value(value)]. (let result =
  put_oid_value(value) : us_t in (put_oid_value__function_guard(result,
  value) -> dynamic_invariant(result, true, false, true, true))))

logic put_octet_string_value : us_t -> us_t

logic put_octet_string_value__function_guard : us_t, us_t -> prop

axiom put_octet_string_value__post_axiom :
  (forall value:us_t [put_octet_string_value(value)].
  (dynamic_invariant(value, true, true, true, true) -> (let result =
  put_octet_string_value(value) : us_t in
  (put_octet_string_value__function_guard(result, value) ->
  dynamic_invariant(result, true, false, true, true)))))

logic message_imprint : us_t

logic attr__ATTRIBUTE_ADDRESS1 : int

logic make_leading_identifier : int, int, int -> t

logic make_leading_identifier__function_guard : t, int, int, int -> prop

logic rliteral : t

axiom rliteral_axiom : (tqtint(rliteral) = 0)

logic rliteral1 : t

axiom rliteral_axiom1 : (tqtint(rliteral1) = 255)

predicate dynamic_invariant1(temp___expr_184: t, temp___is_init_180: bool,
  temp___skip_constant_181: bool, temp___do_toplevel_182: bool,
  temp___do_typ_inv_183: bool) = true

type tag_class_type

predicate in_range7(x: int) = ((0 <= x) and (x <= 3))

function bool_eq17(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq15 : tag_class_type, tag_class_type -> bool

logic dummy15 : tag_class_type

type tag_class_type__ref = { tag_class_type__content : tag_class_type
}

function tag_class_type__ref_tag_class_type__content__projection(a: tag_class_type__ref) : tag_class_type =
  (a).tag_class_type__content

predicate dynamic_invariant2(temp___expr_353: int, temp___is_init_349: bool,
  temp___skip_constant_350: bool, temp___do_toplevel_351: bool,
  temp___do_typ_inv_352: bool) = (((temp___is_init_349 = true) or
  (0 <= 3)) -> in_range7(temp___expr_353))

type structured_flag_type

predicate in_range8(x: int) = ((0 <= x) and (x <= 1))

function bool_eq18(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq16 : structured_flag_type, structured_flag_type -> bool

logic dummy16 : structured_flag_type

type structured_flag_type__ref = { structured_flag_type__content :
structured_flag_type
}

function structured_flag_type__ref_structured_flag_type__content__projection(a: structured_flag_type__ref) : structured_flag_type =
  (a).structured_flag_type__content

predicate dynamic_invariant3(temp___expr_360: int, temp___is_init_356: bool,
  temp___skip_constant_357: bool, temp___do_toplevel_358: bool,
  temp___do_typ_inv_359: bool) = (((temp___is_init_356 = true) or
  (0 <= 1)) -> in_range8(temp___expr_360))

type leading_number_type

predicate in_range9(x: int) = ((0 <= x) and (x <= 34))

function bool_eq19(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq17 : leading_number_type, leading_number_type -> bool

logic dummy17 : leading_number_type

type leading_number_type__ref = { leading_number_type__content :
leading_number_type
}

function leading_number_type__ref_leading_number_type__content__projection(a: leading_number_type__ref) : leading_number_type =
  (a).leading_number_type__content

predicate dynamic_invariant4(temp___expr_367: int, temp___is_init_363: bool,
  temp___skip_constant_364: bool, temp___do_toplevel_365: bool,
  temp___do_typ_inv_366: bool) = (((temp___is_init_363 = true) or
  (0 <= 34)) -> in_range9(temp___expr_367))

axiom make_leading_identifier__post_axiom :
  (forall tag_class:int. forall structured_flag:int. forall tag:int
  [make_leading_identifier(tag_class, structured_flag, tag)].
  (((dynamic_invariant2(tag_class, true, true, true, true) and
  dynamic_invariant3(structured_flag, true, true, true, true)) and
  dynamic_invariant4(tag, true, true, true, true)) -> (let result =
  make_leading_identifier(tag_class, structured_flag, tag) : t in
  (make_leading_identifier__function_guard(result, tag_class,
  structured_flag, tag) -> dynamic_invariant1(result, true, false, true,
  true)))))

predicate dynamic_invariant5(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

logic put_length_value : int -> us_t

logic put_length_value__function_guard : us_t, int -> prop

axiom put_length_value__post_axiom :
  (forall length2:int [put_length_value(length2)].
  (dynamic_invariant5(length2, true, true, true, true) -> (let result =
  put_length_value(length2) : us_t in
  (put_length_value__function_guard(result, length2) ->
  (length1(result) <= 5)))))

axiom put_length_value__post_axiom1 :
  (forall length2:int [put_length_value(length2)].
  (dynamic_invariant5(length2, true, true, true, true) -> (let result =
  put_length_value(length2) : us_t in
  (put_length_value__function_guard(result, length2) ->
  dynamic_invariant(result, true, false, true, true)))))

logic message_imprint_value : us_t

logic attr__ATTRIBUTE_ADDRESS2 : int

predicate dynamic_invariant6(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

logic put_integer_value : int -> us_t

logic put_integer_value__function_guard : us_t, int -> prop

axiom put_integer_value__post_axiom :
  (forall value:int [put_integer_value(value)]. (dynamic_invariant6(value,
  true, true, true, true) -> (let result = put_integer_value(value) : us_t in
  (put_integer_value__function_guard(result, value) ->
  dynamic_invariant(result, true, false, true, true)))))

logic tst_info : us_t

logic attr__ATTRIBUTE_ADDRESS3 : int

logic concat : (int,octet) farray, int, int, (int,octet) farray, int,
  int -> (int,octet) farray

axiom concat_def :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))))))

axiom concat_def1 :
  (forall a:(int,octet) farray. forall b:(int,octet) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((a_last <  i) -> ((concat(a, a_first, a_last, b, b_first,
  b_last)[i]) = (b[((i - a_last) + (b_first - 1))]))))))

logic concat_singleton_left : octet, int, (int,octet) farray, int,
  int -> (int,octet) farray

axiom concat_singleton_left_def :
  (forall a:octet.
  (forall b:(int,octet) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  ((concat_singleton_left(a, a_first, b, b_first, b_last)[a_first]) = a))))

axiom concat_singleton_left_def1 :
  (forall a:octet.
  (forall b:(int,octet) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  (forall i:int [(concat_singleton_left(a, a_first, b, b_first, b_last)[i])].
  ((a_first <  i) -> ((concat_singleton_left(a, a_first, b, b_first,
  b_last)[i]) = (b[((i - a_first) + (b_first - 1))])))))))

logic concat_singleton_right : (int,octet) farray, int, int,
  octet -> (int,octet) farray

axiom concat_singleton_right_def :
  (forall a:(int,octet) farray.
  (forall b:octet.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)]. ((concat_singleton_right(a, a_first, a_last,
  b)[(a_last + 1)]) = b))))

axiom concat_singleton_right_def1 :
  (forall a:(int,octet) farray.
  (forall b:octet.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)].
  (forall i:int [(concat_singleton_right(a, a_first, a_last, b)[i])| (a[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat_singleton_right(a, a_first,
  a_last, b)[i]) = (a[i])))))))

logic concat_singletons : octet, int, octet -> (int,octet) farray

axiom concat_singletons_def :
  (forall a:octet. forall b:octet.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[a_first]) = a)))

axiom concat_singletons_def1 :
  (forall a:octet. forall b:octet.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[(a_first + 1)]) = b)))

logic singleton : octet, int -> (int,octet) farray

axiom singleton_def :
  (forall v:octet.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

type t1s

logic t1sqtint : t1s -> int

axiom t1sqtaxiom : (forall i:t1s. (1 <= t1sqtint(i)))

axiom t1sqtaxiom1 : (forall i:t1s. (t1sqtint(i) <= 32))

predicate in_range10(x: int) = ((1 <= x) and (x <= 32))

function bool_eq20(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq18 : t1s, t1s -> bool

logic dummy18 : t1s

type t1s__ref = { t1s__content : t1s
}

function t1s__ref_t1s__content__projection(a: t1s__ref) : t1s =
  (a).t1s__content

axiom message_imprint__def_axiom :
  put_octet_string_value__function_guard(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32)),
  of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))

axiom message_imprint__def_axiom1 :
  put_oid_value__function_guard(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm),
  ((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)

axiom message_imprint__def_axiom2 :
  (message_imprint = (if (length1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)) = 0) then of_array(to_array(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))),
  first1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))),
  last1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1,
  32)))) else of_array(concat(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)),
  to_array(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))),
  first1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))),
  last1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32)))),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)),
  ((first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)) + (length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm))) + length(first1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32))),
  last1(put_octet_string_value(of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32)))))) - 1))))

axiom message_imprint_value__def_axiom :
  put_length_value__function_guard(put_length_value(length1(message_imprint)),
  length1(message_imprint))

axiom message_imprint_value__def_axiom1 :
  make_leading_identifier__function_guard(make_leading_identifier(0, 1, 15),
  0, 1, 15)

axiom message_imprint_value__def_axiom2 :
  (message_imprint_value = (if (length1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0,
  1, 15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))) = 0) then of_array(to_array(message_imprint),
  first1(message_imprint),
  last1(message_imprint)) else of_array(concat(to_array(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0,
  1, 15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))),
  first1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0, 1,
  15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))),
  last1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0, 1,
  15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))),
  to_array(message_imprint), first1(message_imprint),
  last1(message_imprint)),
  first1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0, 1,
  15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))),
  ((first1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0,
  1, 15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))) + (length(first1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0,
  1, 15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1))),
  last1(of_array(concat_singleton_left(of_rep5(make_leading_identifier(0, 1,
  15)), 0, to_array(put_length_value(length1(message_imprint))),
  first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))), 0,
  ((0 + (1 + length(first1(put_length_value(length1(message_imprint))),
  last1(put_length_value(length1(message_imprint)))))) - 1)))) + length(first1(message_imprint),
  last1(message_imprint)))) - 1))))

axiom tst_info__def_axiom :
  put_integer_value__function_guard(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number))),
  tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))

axiom tst_info__def_axiom1 :
  put_oid_value__function_guard(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy),
  ((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)

axiom tst_info__def_axiom2 :
  put_integer_value__function_guard(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)),
  to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))

axiom tst_info__def_axiom3 :
  (tst_info = (if (length1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))) = 0) then of_array(to_array(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))),
  first1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))),
  last1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number))))) else of_array(concat(to_array((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))),
  first1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))),
  last1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))),
  to_array(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))),
  first1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))),
  last1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number))))),
  first1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))),
  ((first1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))) + (length(first1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1)))),
  last1((if (length1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) = 0) then of_array(to_array(message_imprint_value),
  first1(message_imprint_value),
  last1(message_imprint_value)) else of_array(concat(to_array((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  to_array(message_imprint_value), first1(message_imprint_value),
  last1(message_imprint_value)),
  first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  ((first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))) + (length(first1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1)))),
  last1((if (length1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) = 0) then of_array(to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))) else of_array(concat(to_array(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  to_array(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))),
  first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  ((first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))) + (length(first1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version))),
  last1(put_integer_value(to_rep4(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__version)))) + length(first1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy)),
  last1(put_oid_value(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__policy))))) - 1))))) + length(first1(message_imprint_value),
  last1(message_imprint_value)))) - 1))))) + length(first1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number)))),
  last1(put_integer_value(tqtint1(to_rep6(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__serial_number))))))) - 1))))

predicate dynamic_invariant7(temp___expr_197: int, temp___is_init_193: bool,
  temp___skip_constant_194: bool, temp___do_toplevel_195: bool,
  temp___do_typ_inv_196: bool) = (((temp___is_init_193 = true) or
  (1 <= 1)) -> in_range6(temp___expr_197))

predicate dynamic_invariant8(temp___expr_204: int, temp___is_init_200: bool,
  temp___skip_constant_201: bool, temp___do_toplevel_202: bool,
  temp___do_typ_inv_203: bool) = (((temp___is_init_200 = true) or
  (0 <= 2147483647)) -> in_range4(temp___expr_204))

predicate dynamic_invariant9(temp___expr_211: int, temp___is_init_207: bool,
  temp___skip_constant_208: bool, temp___do_toplevel_209: bool,
  temp___do_typ_inv_210: bool) = (((temp___is_init_207 = true) or
  (0 <= 2)) -> in_range2(temp___expr_211))

predicate dynamic_invariant10(temp___expr_218: int, temp___is_init_214: bool,
  temp___skip_constant_215: bool, temp___do_toplevel_216: bool,
  temp___do_typ_inv_217: bool) = (((temp___is_init_214 = true) or
  (0 <= 175)) -> in_range3(temp___expr_218))

predicate dynamic_invariant11(temp___expr_249: int, temp___is_init_245: bool,
  temp___skip_constant_246: bool, temp___do_toplevel_247: bool,
  temp___do_typ_inv_248: bool) = (((temp___is_init_245 = true) or
  (0 <= 13)) -> in_range5(temp___expr_249))

logic rliteral2 : t1

axiom rliteral_axiom2 : (tqtint1(rliteral2) = 0)

logic rliteral3 : t1

axiom rliteral_axiom3 : (tqtint1(rliteral3) = 18446744073709551615)

predicate dynamic_invariant12(temp___expr_270: t1, temp___is_init_266: bool,
  temp___skip_constant_267: bool, temp___do_toplevel_268: bool,
  temp___do_typ_inv_269: bool) = true

 (* File "timestamp_messages-server.ads", line 19, characters 0-0 *)
goal defqtvc :
  (forall ada___timestamp_messages__server__put_timestamp_value__message_imprint__assume:us_t.
  ((let o =
  of_array(((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hashed_message,
  1, 32) : us_t in (let temp___375 = put_octet_string_value(o) : us_t in
  ((put_octet_string_value__function_guard(temp___375, o) and
  dynamic_invariant(temp___375, true, false, true, true)) and (let o1 =
  ((stamp).us_split_fields3).rec__timestamp_messages__timestamp__hash_algorithm
  : us_rep in (let temp___374 = put_oid_value(o1) : us_t in
  ((put_oid_value__function_guard(temp___374, o1) and
  dynamic_invariant(temp___374, true, false, true, true)) and
  (if (length1(temp___374) = 0) then (ada___timestamp_messages__server__put_timestamp_value__message_imprint__assume = of_array(to_array(temp___375),
  first1(temp___375), last1(temp___375))) else (let o2 =
  ((first1(temp___374) + (length(first1(temp___374),
  last1(temp___374)) + length(first1(temp___375), last1(temp___375)))) - 1)
  : int in (in_range1(o2) and
  (ada___timestamp_messages__server__put_timestamp_value__message_imprint__assume = of_array(concat(to_array(temp___374),
  first1(temp___374), last1(temp___374), to_array(temp___375),
  first1(temp___375), last1(temp___375)), first1(temp___374),
  o2))))))))))) ->
  ((ada___timestamp_messages__server__put_timestamp_value__message_imprint__assume = message_imprint) ->
  (dynamic_invariant(message_imprint, true, false, true, true) -> (let o =
  length1(message_imprint) : int in (in_range1(o) -> (let temp___377 =
  put_length_value(o) : us_t in
  ((put_length_value__function_guard(temp___377, o) and
  (dynamic_invariant(temp___377, true, false, true, true) and
  (length1(temp___377) <= 5))) -> (let temp___376 =
  make_leading_identifier(0, 1, 15) : t in
  ((make_leading_identifier__function_guard(temp___376, 0, 1, 15) and
  dynamic_invariant1(temp___376, true, false, true, true)) ->
  in_range1(((0 + (1 + length(first1(temp___377),
  last1(temp___377)))) - 1))))))))))))
