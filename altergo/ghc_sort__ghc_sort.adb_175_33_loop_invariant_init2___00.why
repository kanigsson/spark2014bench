(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep1(x: natural) : int = naturalqtint(x)

logic of_rep1 : int -> natural

axiom inversion_axiom1 :
  (forall x:natural [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:natural [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

predicate dynamic_invariant(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

function to_rep2(x: positive) : int = positiveqtint(x)

logic of_rep2 : int -> positive

axiom inversion_axiom2 :
  (forall x:positive [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:positive [to_rep2(x)]. in_range3(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range3(x) ->
  (to_rep2(of_rep2(x)) = x)))

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

type map__ref = { map__content : (int,integer) farray
}

logic slide : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq :
  (forall a:(int,integer) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq5(a: (int,integer) farray, a__first: int, a__last: int,
  b: (int,integer) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,integer) farray; rt : t
}

function to_array(a: us_t) : (int,integer) farray = (a).elts

function of_array(a: (int,integer) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep(first((a).rt))

function last1(a: us_t) : int = to_rep(last((a).rt))

function length1(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), (y).elts,
  to_rep(first((y).rt)), to_rep(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type int_array__ref = { int_array__content : us_t
}

function int_array__ref_int_array__content__projection(a: int_array__ref) : us_t =
  (a).int_array__content

type map__ref1 = { map__content1 : (int,positive) farray
}

logic slide1 : (int,positive) farray, int, int -> (int,positive) farray

axiom slide_eq1 :
  (forall a:(int,positive) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,positive) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq7(a: (int,positive) farray, a__first: int, a__last: int,
  b: (int,positive) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep2((a[temp___idx_155])) = to_rep2((b[((b__first - a__first) + temp___idx_155)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,positive) farray. forall b:(int,positive) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,positive) farray. forall b:(int,positive) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,positive) farray. forall b:(int,positive) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,positive) farray. forall b:(int,positive) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep2((a[temp___idx_155])) = to_rep2((b[((b__first - a__first) + temp___idx_155)]))))))))

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first2(mk1(f, l))) = f))))

axiom mk_def3 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last2(mk1(f, l))) = l))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t1 = { elts1 : (int,positive) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,positive) farray = (a).elts1

function of_array1(a: (int,positive) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep(first2((a).rt1))

function last3(a: us_t1) : int = to_rep(last2((a).rt1))

function length2(a: us_t1) : int =
  (if (first3(a) <= last3(a)) then ((last3(a) - first3(a)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq8(x: us_t1, y: us_t1) : bool = bool_eq7((x).elts1,
  to_rep(first2((x).rt1)), to_rep(last2((x).rt1)), (y).elts1,
  to_rep(first2((y).rt1)), to_rep(last2((y).rt1)))

logic user_eq4 : us_t1, us_t1 -> bool

logic dummy4 : us_t1

type cut_points__ref = { cut_points__content : us_t1
}

function cut_points__ref_cut_points__content__projection(a: cut_points__ref) : us_t1 =
  (a).cut_points__content

logic cut1 : us_t -> us_t1

logic cut__function_guard : us_t1, us_t -> prop

predicate dynamic_invariant2(temp___expr_180: us_t1,
  temp___is_init_176: bool, temp___skip_constant_177: bool,
  temp___do_toplevel_178: bool, temp___do_typ_inv_179: bool) =
  ((not (temp___skip_constant_177 = true)) -> dynamic_property1(1,
  2147483647, first3(temp___expr_180), last3(temp___expr_180)))

logic s_reverse : us_t -> us_t

logic s_reverse__function_guard : us_t, us_t -> prop

predicate dynamic_invariant3(temp___expr_171: us_t, temp___is_init_167: bool,
  temp___skip_constant_168: bool, temp___do_toplevel_169: bool,
  temp___do_typ_inv_170: bool) = (((not (temp___skip_constant_168 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_171),
  last1(temp___expr_171))) and ((temp___do_toplevel_169 = true) ->
  ((temp___is_init_167 = true) -> (first1(temp___expr_171) = 1))))

predicate dynamic_predicate(temp___174: us_t) = (first1(temp___174) = 1)

axiom s_reverse__post_axiom :
  (forall s:us_t [s_reverse(s)]. ((dynamic_invariant3(s, true, true, true,
  true) and (length1(s) <  2147483647)) -> (let result = s_reverse(s)
  : us_t in (s_reverse__function_guard(result, s) ->
  (length1(result) = length1(s))))))

axiom s_reverse__post_axiom1 :
  (forall s:us_t [s_reverse(s)]. ((dynamic_invariant3(s, true, true, true,
  true) and (length1(s) <  2147483647)) -> (let result = s_reverse(s)
  : us_t in (s_reverse__function_guard(result, s) ->
  (forall l:int. (((first1(s) <= l) and (l <= last1(s))) ->
  (to_rep((to_array(result)[l])) = to_rep((to_array(s)[((length1(s) - l) + 1)])))))))))

axiom s_reverse__post_axiom2 :
  (forall s:us_t [s_reverse(s)]. ((dynamic_invariant3(s, true, true, true,
  true) and (length1(s) <  2147483647)) -> (let result = s_reverse(s)
  : us_t in (s_reverse__function_guard(result, s) ->
  dynamic_invariant3(result, true, false, true, true)))))

logic s : us_t

logic attr__ATTRIBUTE_ADDRESS : int

type us_main_type

type us_rep = { rec__ghc_sort__int_array_list__is_null_pointer : bool;
rec__ghc_sort__int_array_list__pointer_address : int;
rec__ghc_sort__int_array_list__pointer_value_abstr : us_main_type
}

function us_rep_rec__ghc_sort__int_array_list__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__ghc_sort__int_array_list__is_null_pointer

function us_rep_rec__ghc_sort__int_array_list__pointer_address__projection(a: us_rep) : int =
  (a).rec__ghc_sort__int_array_list__pointer_address

function us_rep_rec__ghc_sort__int_array_list__pointer_value_abstr__projection(a: us_rep) : us_main_type =
  (a).rec__ghc_sort__int_array_list__pointer_value_abstr

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq9(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__ghc_sort__int_array_list__is_null_pointer = (b).rec__ghc_sort__int_array_list__is_null_pointer) and
  ((not ((a).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (((a).rec__ghc_sort__int_array_list__pointer_address = (b).rec__ghc_sort__int_array_list__pointer_address) and
  ((a).rec__ghc_sort__int_array_list__pointer_value_abstr = (b).rec__ghc_sort__int_array_list__pointer_value_abstr)))) then true else false)

logic dummy5 : us_rep

type int_array_list__ref = { int_array_list__content : us_rep
}

function int_array_list__ref_int_array_list__content__projection(a: int_array_list__ref) : us_rep =
  (a).int_array_list__content

logic all_sorted : us_rep -> bool

logic all_sorted__function_guard : bool, us_rep -> prop

type t63b__ref = { t63b__content : us_t
}

function t63b__ref_t63b__content__projection(a: t63b__ref) : us_t =
  (a).t63b__content

type us_split_discrs = { rec__ghc_sort__int_array_list_cell__l : natural
}

function us_split_discrs_rec__ghc_sort__int_array_list_cell__l__projection(a: us_split_discrs) : natural =
  (a).rec__ghc_sort__int_array_list_cell__l

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__ghc_sort__int_array_list_cell__value : us_t;
rec__ghc_sort__int_array_list_cell__next : us_rep
}

function us_split_fields_rec__ghc_sort__int_array_list_cell__value__projection(a: us_split_fields) : us_t =
  (a).rec__ghc_sort__int_array_list_cell__value

function us_split_fields_rec__ghc_sort__int_array_list_cell__next__projection(a: us_split_fields) : us_rep =
  (a).rec__ghc_sort__int_array_list_cell__next

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function bool_eq10(a: us_rep1, b: us_rep1) : bool =
  (if ((to_rep1(((a).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l) = to_rep1(((b).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l)) and
  ((bool_eq6(((a).us_split_fields1).rec__ghc_sort__int_array_list_cell__value,
  ((b).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = true) and
  (bool_eq9(((a).us_split_fields1).rec__ghc_sort__int_array_list_cell__next,
  ((b).us_split_fields1).rec__ghc_sort__int_array_list_cell__next) = true))) then true else false)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic ghc_sort__int_array_list_cell__l__first__bit : int

logic ghc_sort__int_array_list_cell__l__last__bit : int

logic ghc_sort__int_array_list_cell__l__position : int

axiom ghc_sort__int_array_list_cell__l__first__bit_axiom :
  (0 <= ghc_sort__int_array_list_cell__l__first__bit)

axiom ghc_sort__int_array_list_cell__l__last__bit_axiom :
  (ghc_sort__int_array_list_cell__l__first__bit <  ghc_sort__int_array_list_cell__l__last__bit)

axiom ghc_sort__int_array_list_cell__l__position_axiom :
  (0 <= ghc_sort__int_array_list_cell__l__position)

logic ghc_sort__int_array_list_cell__value__first__bit : int

logic ghc_sort__int_array_list_cell__value__last__bit : int

logic ghc_sort__int_array_list_cell__value__position : int

axiom ghc_sort__int_array_list_cell__value__first__bit_axiom :
  (0 <= ghc_sort__int_array_list_cell__value__first__bit)

axiom ghc_sort__int_array_list_cell__value__last__bit_axiom :
  (ghc_sort__int_array_list_cell__value__first__bit <  ghc_sort__int_array_list_cell__value__last__bit)

axiom ghc_sort__int_array_list_cell__value__position_axiom :
  (0 <= ghc_sort__int_array_list_cell__value__position)

logic ghc_sort__int_array_list_cell__next__first__bit : int

logic ghc_sort__int_array_list_cell__next__last__bit : int

logic ghc_sort__int_array_list_cell__next__position : int

axiom ghc_sort__int_array_list_cell__next__first__bit_axiom :
  (0 <= ghc_sort__int_array_list_cell__next__first__bit)

axiom ghc_sort__int_array_list_cell__next__last__bit_axiom :
  (ghc_sort__int_array_list_cell__next__first__bit <  ghc_sort__int_array_list_cell__next__last__bit)

axiom ghc_sort__int_array_list_cell__next__position_axiom :
  (0 <= ghc_sort__int_array_list_cell__next__position)

logic user_eq5 : us_rep1, us_rep1 -> bool

logic dummy6 : us_rep1

type int_array_list_cell__ref = { int_array_list_cell__content : us_rep1
}

function int_array_list_cell__ref_int_array_list_cell__content__projection(a: int_array_list_cell__ref) : us_rep1 =
  (a).int_array_list_cell__content

logic us_open : us_main_type -> us_rep1

logic us_close : us_rep1 -> us_main_type

axiom close_open :
  (forall x:us_main_type [us_open(x)]. (us_close(us_open(x)) = x))

axiom open_close :
  (forall x:us_rep1 [us_close(x)]. (us_open(us_close(x)) = x))

function rec__ghc_sort__int_array_list__pointer_value(a: us_rep) : us_rep1 =
  us_open((a).rec__ghc_sort__int_array_list__pointer_value_abstr)

predicate rec__ghc_sort__int_array_list__pointer_value__pred(a: us_rep) =
  (not ((a).rec__ghc_sort__int_array_list__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__ghc_sort__int_array_list__is_null_pointer = true)

axiom all_sorted__def_axiom :
  (forall l:us_rep [all_sorted(l)].
  (all_sorted__function_guard(all_sorted(l), l) ->
  (forall l1:us_rep.
  all_sorted__function_guard(all_sorted(((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next),
  ((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next))))

axiom all_sorted__def_axiom1 :
  (forall l:us_rep [all_sorted(l)].
  (all_sorted__function_guard(all_sorted(l), l) -> ((all_sorted(l) = true) ->
  ((not (bool_eq9(l, us_null_pointer) = true)) ->
  (forall k:int. (((2 <= k) and
  (k <= to_rep1(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l))) ->
  (to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[(k - 1)])) <= to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[k])))))))))

axiom all_sorted__def_axiom2 :
  (forall l:us_rep [all_sorted(l)].
  (all_sorted__function_guard(all_sorted(l), l) -> ((all_sorted(l) = true) ->
  ((not (bool_eq9(l, us_null_pointer) = true)) ->
  (all_sorted(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next) = true)))))

axiom all_sorted__def_axiom3 :
  (forall l:us_rep [all_sorted(l)].
  (all_sorted__function_guard(all_sorted(l), l) -> (((not (bool_eq9(l,
  us_null_pointer) = true)) ->
  ((forall k:int. (((2 <= k) and
   (k <= to_rep1(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l))) ->
   (to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[(k - 1)])) <= to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[k]))))) and
  (all_sorted(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next) = true))) ->
  (all_sorted(l) = true))))

logic sum_length : us_rep -> int

logic sum_length__function_guard : int, us_rep -> prop

predicate dynamic_invariant4(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

logic sum_length_aux : us_rep -> int

logic sum_length_aux__function_guard : int, us_rep -> prop

logic temp___dynamic_invariant_303 : us_rep, bool, bool, bool, bool -> prop

predicate dynamic_invariant5(temp___expr_298: us_rep,
  temp___is_init_294: bool, temp___skip_constant_295: bool,
  temp___do_toplevel_296: bool, temp___do_typ_inv_297: bool) =
  ((not ((temp___expr_298).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (let temp___299 =
  ((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l
  : natural in (((dynamic_property(1, to_rep1(temp___299),
  first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)) and
  ((first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1) and
  (last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = to_rep1(temp___299)))) and
  (first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1)) and
  temp___dynamic_invariant_303(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_298)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next,
  true, false, true, temp___do_typ_inv_297))))

axiom def_axiom :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307) ->
  ((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  dynamic_property(1,
  to_rep1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l),
  first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value))))))

axiom def_axiom1 :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307) ->
  ((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1)))))

axiom def_axiom2 :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307) ->
  ((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = to_rep1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l))))))

axiom def_axiom3 :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307) ->
  ((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1)))))

axiom def_axiom4 : true

axiom def_axiom5 :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307) ->
  ((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  temp___dynamic_invariant_303(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next,
  true, false, true, temp___do_typ_inv_307)))))

axiom def_axiom6 :
  (forall temp___expr_308:us_rep.
  (forall temp___is_init_304:bool. forall temp___skip_constant_305:bool.
  forall temp___do_toplevel_306:bool. forall temp___do_typ_inv_307:bool
  [temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307)].
  (((not ((temp___expr_308).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (let temp___309 =
  ((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l
  : natural in (((dynamic_property(1, to_rep1(temp___309),
  first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)) and
  ((first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1) and
  (last1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = to_rep1(temp___309)))) and
  (first1(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1)) and
  temp___dynamic_invariant_303(((rec__ghc_sort__int_array_list__pointer_value(temp___expr_308)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next,
  true, false, true, temp___do_typ_inv_307)))) ->
  temp___dynamic_invariant_303(temp___expr_308, temp___is_init_304,
  temp___skip_constant_305, temp___do_toplevel_306, temp___do_typ_inv_307))))

predicate default_initial_assumption(temp___expr_313: us_rep,
  temp___skip_top_level_314: bool) =
  ((temp___expr_313).rec__ghc_sort__int_array_list__is_null_pointer = true)

axiom sum_length__post_axiom :
  (forall l:us_rep [sum_length(l)]. (dynamic_invariant5(l, true, true, true,
  true) -> (let result = sum_length(l) : int in
  (sum_length__function_guard(result, l) -> dynamic_invariant4(result, true,
  false, true, true)))))

axiom sum_length__def_axiom :
  (forall l:us_rep [sum_length(l)]. (dynamic_invariant5(l, true, true, true,
  true) ->
  (forall l1:us_rep. sum_length_aux__function_guard(sum_length_aux(l1), l1))))

axiom sum_length__def_axiom1 :
  (forall l:us_rep [sum_length(l)]. (dynamic_invariant5(l, true, true, true,
  true) -> (sum_length(l) = sum_length_aux(l))))

logic cuts__first : integer

logic cuts__last : integer

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic r79b : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic r80b : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic ss__first : integer

logic ss__last : integer

logic attr__ATTRIBUTE_ADDRESS6 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq6 : integer, integer -> bool

logic dummy7 : integer

type t78b__ref = { t78b__content : integer
}

function t78b__ref_t78b__content__projection(a: t78b__ref) : integer =
  (a).t78b__content

type t82b__ref = { t82b__content : us_t
}

function t82b__ref_t82b__content__projection(a: t82b__ref) : us_t =
  (a).t82b__content

type t85b__ref = { t85b__content : us_t
}

function t85b__ref_t85b__content__projection(a: t85b__ref) : us_t =
  (a).t85b__content

type us_split_fields2 = { rec__ghc_sort__int_array_list_cell__value1 : us_t;
rec__ghc_sort__int_array_list_cell__next1 : us_rep
}

function us_split_fields_rec__ghc_sort__int_array_list_cell__value__3__projection(a: us_split_fields2) : us_t =
  (a).rec__ghc_sort__int_array_list_cell__value1

function us_split_fields_rec__ghc_sort__int_array_list_cell__next__3__projection(a: us_split_fields2) : us_rep =
  (a).rec__ghc_sort__int_array_list_cell__next1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_discrs2 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__3__projection(a: us_rep2) : us_split_discrs =
  (a).us_split_discrs2

function us_rep___split_fields__3__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

function to_base(a: us_rep2) : us_rep1 = { us_split_discrs1 =
  (a).us_split_discrs2; us_split_fields1 = {
  rec__ghc_sort__int_array_list_cell__value =
  of_array(to_array(((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__value1),
  first1(((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__value1),
  last1(((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__value1));
  rec__ghc_sort__int_array_list_cell__next =
  ((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__next1 } }

function of_base(r: us_rep1) : us_rep2 = { us_split_discrs2 =
  (r).us_split_discrs1; us_split_fields3 = {
  rec__ghc_sort__int_array_list_cell__value1 =
  of_array(to_array(((r).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  first1(((r).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((r).us_split_fields1).rec__ghc_sort__int_array_list_cell__value));
  rec__ghc_sort__int_array_list_cell__next1 =
  ((r).us_split_fields1).rec__ghc_sort__int_array_list_cell__next } }

function bool_eq12(a: us_rep2, b: us_rep2) : bool =
  (if ((to_rep1(((a).us_split_discrs2).rec__ghc_sort__int_array_list_cell__l) = to_rep1(((b).us_split_discrs2).rec__ghc_sort__int_array_list_cell__l)) and
  ((bool_eq6(((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__value1,
  ((b).us_split_fields3).rec__ghc_sort__int_array_list_cell__value1) = true) and
  (bool_eq9(((a).us_split_fields3).rec__ghc_sort__int_array_list_cell__next1,
  ((b).us_split_fields3).rec__ghc_sort__int_array_list_cell__next1) = true))) then true else false)

predicate in_range4(rec__ghc_sort__int_array_list_cell__l1: int,
  a: us_rep1) =
  (rec__ghc_sort__int_array_list_cell__l1 = to_rep1(((a).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l))

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic ghc_sort__int_array_list_cell__l__first__bit1 : int

logic ghc_sort__int_array_list_cell__l__last__bit1 : int

logic ghc_sort__int_array_list_cell__l__position1 : int

axiom ghc_sort__int_array_list_cell__l__first__bit_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__l__first__bit1)

axiom ghc_sort__int_array_list_cell__l__last__bit_axiom1 :
  (ghc_sort__int_array_list_cell__l__first__bit1 <  ghc_sort__int_array_list_cell__l__last__bit1)

axiom ghc_sort__int_array_list_cell__l__position_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__l__position1)

logic ghc_sort__int_array_list_cell__value__first__bit1 : int

logic ghc_sort__int_array_list_cell__value__last__bit1 : int

logic ghc_sort__int_array_list_cell__value__position1 : int

axiom ghc_sort__int_array_list_cell__value__first__bit_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__value__first__bit1)

axiom ghc_sort__int_array_list_cell__value__last__bit_axiom1 :
  (ghc_sort__int_array_list_cell__value__first__bit1 <  ghc_sort__int_array_list_cell__value__last__bit1)

axiom ghc_sort__int_array_list_cell__value__position_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__value__position1)

logic ghc_sort__int_array_list_cell__next__first__bit1 : int

logic ghc_sort__int_array_list_cell__next__last__bit1 : int

logic ghc_sort__int_array_list_cell__next__position1 : int

axiom ghc_sort__int_array_list_cell__next__first__bit_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__next__first__bit1)

axiom ghc_sort__int_array_list_cell__next__last__bit_axiom1 :
  (ghc_sort__int_array_list_cell__next__first__bit1 <  ghc_sort__int_array_list_cell__next__last__bit1)

axiom ghc_sort__int_array_list_cell__next__position_axiom1 :
  (0 <= ghc_sort__int_array_list_cell__next__position1)

logic user_eq7 : us_rep2, us_rep2 -> bool

logic dummy8 : us_rep2

type t84b__ref = { t84b__content : us_rep2
}

function t84b__ref_t84b__content__projection(a: t84b__ref) : us_rep2 =
  (a).t84b__content

predicate dynamic_predicate1(temp___391: us_t) = (first1(temp___391) = 1)

predicate dynamic_invariant6(temp___expr_321: us_rep1,
  temp___is_init_317: bool, temp___skip_constant_318: bool,
  temp___do_toplevel_319: bool, temp___do_typ_inv_320: bool) =
  (let temp___322 =
  ((temp___expr_321).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l
  : natural in (((dynamic_property(1, to_rep1(temp___322),
  first1(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)) and
  ((first1(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1) and
  (last1(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = to_rep1(temp___322)))) and
  ((temp___is_init_317 = true) ->
  (first1(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1))) and
  ((not ((((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next).rec__ghc_sort__int_array_list__is_null_pointer = true)) ->
  (let temp___326 =
  ((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l
  : natural in (((dynamic_property(1, to_rep1(temp___326),
  first1(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value),
  last1(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)) and
  ((first1(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1) and
  (last1(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = to_rep1(temp___326)))) and
  (first1(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value) = 1)) and
  temp___dynamic_invariant_303(((rec__ghc_sort__int_array_list__pointer_value(((temp___expr_321).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next,
  true, false, true, temp___do_typ_inv_320))))))

axiom sum_length_aux__def_axiom :
  (forall l:us_rep [sum_length_aux(l)]. ((dynamic_invariant5(l, true, true,
  true, true) and sum_length_aux__function_guard(sum_length_aux(l), l)) ->
  (forall l1:us_rep.
  sum_length_aux__function_guard(sum_length_aux(((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next),
  ((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next))))

axiom sum_length_aux__def_axiom1 :
  (forall l:us_rep [sum_length_aux(l)]. ((dynamic_invariant5(l, true, true,
  true, true) and sum_length_aux__function_guard(sum_length_aux(l), l)) ->
  (forall l1:us_rep.
  sum_length_aux__function_guard(sum_length_aux(((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next),
  ((rec__ghc_sort__int_array_list__pointer_value(l1)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next))))

axiom sum_length_aux__def_axiom2 :
  (forall l:us_rep [sum_length_aux(l)]. ((dynamic_invariant5(l, true, true,
  true, true) and sum_length_aux__function_guard(sum_length_aux(l), l)) ->
  (sum_length_aux(l) = (if (bool_eq9(l,
  us_null_pointer) = true) then 0 else (if (to_rep1(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l) <= (2147483647 - sum_length_aux(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next))) then (to_rep1(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l) + sum_length_aux(((rec__ghc_sort__int_array_list__pointer_value(l)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)) else 2147483647)))))

axiom sum_length_aux__post_axiom :
  (forall l:us_rep [sum_length_aux(l)]. (dynamic_invariant5(l, true, true,
  true, true) -> (let result = sum_length_aux(l) : int in
  (sum_length_aux__function_guard(result, l) -> dynamic_invariant4(result,
  true, false, true, true)))))

predicate dynamic_predicate2(temp___315: us_t) = (first1(temp___315) = 1)

 (* File "ghc_sort.ads", line 52, characters 0-0 *)
goal defqtvc :
  (forall l__pointer_value:us_rep1. forall l__pointer_address:int.
  forall l__is_null_pointer:bool. (dynamic_invariant3(s, true, false, true,
  true) -> ((length1(s) <  2147483646) -> (let o = s : us_t in
  (let ghc_sort__sort__cuts__assume = cut1(o) : us_t1 in
  ((cut__function_guard(ghc_sort__sort__cuts__assume, o) and
  (dynamic_invariant2(ghc_sort__sort__cuts__assume, true, false, true,
  true) and (((((((first3(ghc_sort__sort__cuts__assume) = 1) and
  ((1 <= last3(ghc_sort__sort__cuts__assume)) and
  (last3(ghc_sort__sort__cuts__assume) <= (length1(o) + 1)))) and
  (forall temp___182:int.
  (((first3(ghc_sort__sort__cuts__assume) <= temp___182) and
  (temp___182 <= last3(ghc_sort__sort__cuts__assume))) -> (let c =
  to_rep2((to_array1(ghc_sort__sort__cuts__assume)[temp___182])) : int in
  ((1 <= c) and (c <= (length1(o) + 1))))))) and
  (to_rep2((to_array1(ghc_sort__sort__cuts__assume)[1])) = 1)) and
  (to_rep2((to_array1(ghc_sort__sort__cuts__assume)[last3(ghc_sort__sort__cuts__assume)])) = (length1(o) + 1))) and
  (forall k:int. (((1 <= k) and
  (k <= (last3(ghc_sort__sort__cuts__assume) - 1))) ->
  (to_rep2((to_array1(ghc_sort__sort__cuts__assume)[k])) <  to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])))))) and
  (forall k:int. (((1 <= k) and
  (k <= (last3(ghc_sort__sort__cuts__assume) - 1))) ->
  (((forall l:int.
    ((((to_rep2((to_array1(ghc_sort__sort__cuts__assume)[k])) + 1) <= l) and
    (l <= (to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) - 1))) ->
    (to_rep((to_array(o)[(l - 1)])) <  to_rep((to_array(o)[l]))))) and
  ((to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) = (length1(o) + 1)) or
  (to_rep((to_array(o)[to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)]))])) <= to_rep((to_array(o)[(to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) - 1)]))))) or
  ((forall l:int.
   ((((to_rep2((to_array1(ghc_sort__sort__cuts__assume)[k])) + 1) <= l) and
   (l <= (to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) - 1))) ->
   (to_rep((to_array(o)[l])) <= to_rep((to_array(o)[(l - 1)]))))) and
  ((to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) = (length1(o) + 1)) or
  (to_rep((to_array(o)[(to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)])) - 1)])) <  to_rep((to_array(o)[to_rep2((to_array1(ghc_sort__sort__cuts__assume)[(k + 1)]))]))))))))))) ->
  (forall cuts:(int,positive) farray.
  ((cuts = to_array1(ghc_sort__sort__cuts__assume)) ->
  ((to_rep(cuts__first) = first3(ghc_sort__sort__cuts__assume)) ->
  ((to_rep(cuts__last) = last3(ghc_sort__sort__cuts__assume)) ->
  (dynamic_property1(1, 2147483647, to_rep(cuts__first),
  to_rep(cuts__last)) -> (default_initial_assumption({
  rec__ghc_sort__int_array_list__is_null_pointer = l__is_null_pointer;
  rec__ghc_sort__int_array_list__pointer_address = l__pointer_address;
  rec__ghc_sort__int_array_list__pointer_value_abstr =
  us_close(l__pointer_value) }, false) -> (dynamic_invariant5({
  rec__ghc_sort__int_array_list__is_null_pointer = l__is_null_pointer;
  rec__ghc_sort__int_array_list__pointer_address = l__pointer_address;
  rec__ghc_sort__int_array_list__pointer_value_abstr =
  us_close(l__pointer_value) }, false, false, true, true) ->
  (forall o1:int. ((to_rep(cuts__last) = o1) -> (let o2 = (o1 - 1) : int in
  (in_range1(o2) ->
  (forall c:int. ((c = 1) -> ((andb((if (1 <= c) then true else false),
  (if (c <= o2) then true else false)) = true) -> (let o3 = {
  rec__ghc_sort__int_array_list__is_null_pointer = l__is_null_pointer;
  rec__ghc_sort__int_array_list__pointer_address = l__pointer_address;
  rec__ghc_sort__int_array_list__pointer_value_abstr =
  us_close(l__pointer_value) } : us_rep in (let temp___inv_604 =
  all_sorted(o3) : bool in
  ((forall o4:us_rep.
   all_sorted__function_guard(all_sorted(((rec__ghc_sort__int_array_list__pointer_value(o4)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next),
   ((rec__ghc_sort__int_array_list__pointer_value(o4)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next)) ->
  ((all_sorted__function_guard(temp___inv_604, o3) and
  ((temp___inv_604 = true) <-> ((not (bool_eq9(o3,
  us_null_pointer) = true)) ->
  ((forall k:int. (((2 <= k) and
   (k <= to_rep1(((rec__ghc_sort__int_array_list__pointer_value(o3)).us_split_discrs1).rec__ghc_sort__int_array_list_cell__l))) ->
   (to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(o3)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[(k - 1)])) <= to_rep((to_array(((rec__ghc_sort__int_array_list__pointer_value(o3)).us_split_fields1).rec__ghc_sort__int_array_list_cell__value)[k]))))) and
  (all_sorted(((rec__ghc_sort__int_array_list__pointer_value(o3)).us_split_fields1).rec__ghc_sort__int_array_list_cell__next) = true))))) ->
  ((forall l__pointer_value1:us_rep1. forall l__pointer_address1:int.
   forall l__is_null_pointer1:bool. all_sorted__function_guard(all_sorted({
   rec__ghc_sort__int_array_list__is_null_pointer = l__is_null_pointer1;
   rec__ghc_sort__int_array_list__pointer_address = l__pointer_address1;
   rec__ghc_sort__int_array_list__pointer_value_abstr =
   us_close(l__pointer_value1) }), {
   rec__ghc_sort__int_array_list__is_null_pointer = l__is_null_pointer1;
   rec__ghc_sort__int_array_list__pointer_address = l__pointer_address1;
   rec__ghc_sort__int_array_list__pointer_value_abstr =
   us_close(l__pointer_value1) })) ->
  (all_sorted({ rec__ghc_sort__int_array_list__is_null_pointer =
  l__is_null_pointer; rec__ghc_sort__int_array_list__pointer_address =
  l__pointer_address; rec__ghc_sort__int_array_list__pointer_value_abstr =
  us_close(l__pointer_value) }) = true))))))))))))))))))))))))))
