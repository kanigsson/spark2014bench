(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

logic value : int -> int

logic value__function_guard : int, int -> prop

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

type my_small

logic my_smallqtint : my_small -> int

axiom my_smallqtaxiom : (forall i:my_small. ((- 100) <= my_smallqtint(i)))

axiom my_smallqtaxiom1 : (forall i:my_small. (my_smallqtint(i) <= 100))

predicate in_range2(x: int) = (((- 100) <= x) and (x <= 100))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : my_small, my_small -> bool

logic dummy1 : my_small

type my_small__ref = { my_small__content : my_small
}

function my_small__ref_my_small__content__projection(a: my_small__ref) : my_small =
  (a).my_small__content

predicate dynamic_invariant1(temp___expr_196: int, temp___is_init_192: bool,
  temp___skip_constant_193: bool, temp___do_toplevel_194: bool,
  temp___do_typ_inv_195: bool) = (((temp___is_init_192 = true) or
  ((- 100) <= 100)) -> in_range2(temp___expr_196))

axiom value__post_axiom :
  (forall x:int [value(x)]. (dynamic_invariant(x, true, true, true, true) ->
  (let result = value(x) : int in (value__function_guard(result, x) ->
  dynamic_invariant1(result, true, false, true, true)))))

type map__ref = { map__content : (int,integer) farray
}

logic slide : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq :
  (forall a:(int,integer) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq3(a: (int,integer) farray, a__first: int, a__last: int,
  b: (int,integer) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep((a[temp___idx_157])) = to_rep((b[((b__first - a__first) + temp___idx_157)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep((a[temp___idx_157])) = to_rep((b[((b__first - a__first) + temp___idx_157)]))))))))

type small_index

logic small_indexqtint : small_index -> int

axiom small_indexqtaxiom : (forall i:small_index. (1 <= small_indexqtint(i)))

axiom small_indexqtaxiom1 :
  (forall i:small_index. (small_indexqtint(i) <= 100))

predicate in_range3(x: int) = ((1 <= x) and (x <= 100))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : small_index, small_index -> bool

logic dummy2 : small_index

type small_index__ref = { small_index__content : small_index
}

function small_index__ref_small_index__content__projection(a: small_index__ref) : small_index =
  (a).small_index__content

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,integer) farray; rt : t
}

function to_array(a: us_t) : (int,integer) farray = (a).elts

function of_array(a: (int,integer) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep(first((a).rt))

function last1(a: us_t) : int = to_rep(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq3((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), (y).elts,
  to_rep(first((y).rt)), to_rep(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type small_array__ref = { small_array__content : us_t
}

function small_array__ref_small_array__content__projection(a: small_array__ref) : us_t =
  (a).small_array__content

type array_type__ref = { array_type__content : us_t
}

function array_type__ref_array_type__content__projection(a: array_type__ref) : us_t =
  (a).array_type__content

type array_type__ref1 = { array_type__content1 : us_t
}

function array_type__ref_array_type__content__3__projection(a: array_type__ref1) : us_t =
  (a).array_type__content1

type index_type

logic index_typeqtint : index_type -> int

axiom index_typeqtaxiom : (forall i:index_type. (1 <= index_typeqtint(i)))

axiom index_typeqtaxiom1 : (forall i:index_type. (index_typeqtint(i) <= 100))

predicate in_range4(x: int) = ((1 <= x) and (x <= 100))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : index_type, index_type -> bool

logic dummy4 : index_type

type index_type__ref = { index_type__content : index_type
}

function index_type__ref_index_type__content__3__projection(a: index_type__ref) : index_type =
  (a).index_type__content

type element_out

logic element_outqtint : element_out -> int

axiom element_outqtaxiom :
  (forall i:element_out. ((- 2147483648) <= element_outqtint(i)))

axiom element_outqtaxiom1 :
  (forall i:element_out. (element_outqtint(i) <= 2147483647))

predicate in_range5(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : element_out, element_out -> bool

logic dummy5 : element_out

type element_out__ref = { element_out__content : element_out
}

function element_out__ref_element_out__content__3__projection(a: element_out__ref) : element_out =
  (a).element_out__content

function to_rep1(x: element_out) : int = element_outqtint(x)

logic of_rep1 : int -> element_out

axiom inversion_axiom1 :
  (forall x:element_out [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:element_out [to_rep1(x)]. in_range5(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range5(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref1 = { map__content1 : (int,element_out) farray
}

logic slide1 : (int,element_out) farray, int, int -> (int,element_out) farray

axiom slide_eq1 :
  (forall a:(int,element_out) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,element_out) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq8(a: (int,element_out) farray, a__first: int, a__last: int,
  b: (int,element_out) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_166:int. (((a__first <= temp___idx_166) and
  (temp___idx_166 <= a__last)) ->
  (to_rep1((a[temp___idx_166])) = to_rep1((b[((b__first - a__first) + temp___idx_166)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_166:int. (((a__first <= temp___idx_166) and
  (temp___idx_166 <= a__last)) ->
  (to_rep1((a[temp___idx_166])) = to_rep1((b[((b__first - a__first) + temp___idx_166)]))))))))

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first2(mk1(f, l))) = f))))

axiom mk_def3 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last2(mk1(f, l))) = l))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range4(low) and in_range4(high)))))

type us_t1 = { elts1 : (int,element_out) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,element_out) farray = (a).elts1

function of_array1(a: (int,element_out) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep(first2((a).rt1))

function last3(a: us_t1) : int = to_rep(last2((a).rt1))

function length1(a: us_t1) : int =
  (if (first3(a) <= last3(a)) then ((last3(a) - first3(a)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq9(x: us_t1, y: us_t1) : bool = bool_eq8((x).elts1,
  to_rep(first2((x).rt1)), to_rep(last2((x).rt1)), (y).elts1,
  to_rep(first2((y).rt1)), to_rep(last2((y).rt1)))

logic user_eq6 : us_t1, us_t1 -> bool

logic dummy6 : us_t1

type acc_array__ref = { acc_array__content : us_t1
}

function acc_array__ref_acc_array__content__projection(a: acc_array__ref) : us_t1 =
  (a).acc_array__content

logic fold : us_t, int -> us_t1

logic fold__function_guard : us_t1, us_t, int -> prop

logic in_range6 : us_t, int, int -> bool

logic in_range__function_guard : bool, us_t, int, int -> prop

logic in_range_last : us_t, int -> bool

logic in_range_last__function_guard : bool, us_t, int -> prop

axiom temp___result_165qtdef :
  (forall x:int. value__function_guard(value(x), x))

function add_value(x: int, y: int) : int = (value(x) + y)

logic add_value__function_guard : int, int, int -> prop

predicate dynamic_invariant2(temp___expr_295: int, temp___is_init_291: bool,
  temp___skip_constant_292: bool, temp___do_toplevel_293: bool,
  temp___do_typ_inv_294: bool) = (((temp___is_init_291 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range5(temp___expr_295))

predicate dynamic_invariant3(temp___expr_308: us_t1,
  temp___is_init_304: bool, temp___skip_constant_305: bool,
  temp___do_toplevel_306: bool, temp___do_typ_inv_307: bool) =
  ((not (temp___skip_constant_305 = true)) -> dynamic_property1(1, 100,
  first3(temp___expr_308), last3(temp___expr_308)))

predicate dynamic_invariant4(temp___expr_289: us_t, temp___is_init_285: bool,
  temp___skip_constant_286: bool, temp___do_toplevel_287: bool,
  temp___do_typ_inv_288: bool) = ((not (temp___skip_constant_286 = true)) ->
  dynamic_property(1, 100, first1(temp___expr_289), last1(temp___expr_289)))

axiom fold__post_axiom :
  (forall a:us_t. forall init:int.
  in_range__function_guard(in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)), of_array(to_array(a), first1(a), last1(a)),
  init, first1(a)))

axiom fold__post_axiom1 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) ->
  (forall a1:us_t. forall init1:int.
  in_range__function_guard(in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), init1, first1(a1)), of_array(to_array(a1), first1(a1),
  last1(a1)), init1, first1(a1))))))

axiom fold__post_axiom2 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) ->
  (forall a1:us_t. forall result:us_t1. forall i:int.
  in_range__function_guard(in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), to_rep1((to_array1(result)[(i - 1)])), i),
  of_array(to_array(a1), first1(a1), last1(a1)),
  to_rep1((to_array1(result)[(i - 1)])), i)))))

axiom fold__post_axiom3 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) ->
  (forall a1:us_t. forall result:us_t1.
  in_range_last__function_guard(in_range_last(of_array(to_array(a1),
  first1(a1), last1(a1)), to_rep1((to_array1(result)[last1(a1)]))),
  of_array(to_array(a1), first1(a1), last1(a1)),
  to_rep1((to_array1(result)[last1(a1)])))))))

axiom fold__post_axiom4 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (first3(result) = first1(a)))))))

axiom fold__post_axiom5 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (last3(result) = last1(a)))))))

axiom fold__post_axiom6 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (fold__function_guard(fold(a,
  init), a, init) -> (in_range6(of_array(to_array(a), first1(a), last1(a)),
  init, first1(a)) = true)))))

axiom fold__post_axiom7 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (to_rep1((to_array1(result)[first1(a)])) = add_value(to_rep((to_array(a)[first1(a)])),
  init)))))))

axiom fold__post_axiom8 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (forall i:int. (((first1(a) <= i) and (i <= last1(a))) ->
  ((first1(a) <  i) -> (in_range6(of_array(to_array(a), first1(a), last1(a)),
  to_rep1((to_array1(result)[(i - 1)])), i) = true)))))))))

axiom fold__post_axiom9 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (forall i:int. (((first1(a) <= i) and (i <= last1(a))) ->
  ((first1(a) <  i) ->
  (to_rep1((to_array1(result)[i])) = add_value(to_rep((to_array(a)[i])),
  to_rep1((to_array1(result)[(i - 1)]))))))))))))

axiom fold__post_axiom10 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  (in_range_last(of_array(to_array(a), first1(a), last1(a)),
  to_rep1((to_array1(result)[last1(a)]))) = true))))))

axiom fold__post_axiom11 :
  (forall a:us_t.
  (forall init:int [fold(a, init)]. (((dynamic_invariant4(a, true, true,
  true, true) and dynamic_invariant2(init, true, true, true, true)) and
  ((0 <  length(a)) and (in_range6(of_array(to_array(a), first1(a),
  last1(a)), init, first1(a)) = true))) -> (let result = fold(a, init)
  : us_t1 in (fold__function_guard(result, a, init) ->
  dynamic_invariant3(result, true, false, true, true))))))

logic sum : us_t -> int

logic sum__function_guard : int, us_t -> prop

type array_type__ref2 = { array_type__content2 : us_t
}

function array_type__ref_array_type__content__2__projection(a: array_type__ref2) : us_t =
  (a).array_type__content2

logic fold1 : us_t, int -> int

logic fold__function_guard1 : int, us_t, int -> prop

predicate dynamic_invariant5(temp___expr_230: us_t, temp___is_init_226: bool,
  temp___skip_constant_227: bool, temp___do_toplevel_228: bool,
  temp___do_typ_inv_229: bool) = ((not (temp___skip_constant_227 = true)) ->
  dynamic_property(1, 100, first1(temp___expr_230), last1(temp___expr_230)))

axiom sum__post_axiom :
  (forall a:us_t [sum(a)]. (dynamic_invariant5(a, true, true, true, true) ->
  (let result = sum(a) : int in (sum__function_guard(result, a) ->
  dynamic_invariant(result, true, false, true, true)))))

axiom sum__def_axiom :
  (forall a:us_t [sum(a)]. (dynamic_invariant5(a, true, true, true, true) ->
  (forall a1:us_t. fold__function_guard1(fold1(of_array(to_array(a1),
  first1(a1), last1(a1)), 0), of_array(to_array(a1), first1(a1), last1(a1)),
  0))))

axiom sum__def_axiom1 :
  (forall a:us_t [sum(a)]. (dynamic_invariant5(a, true, true, true, true) ->
  (sum(a) = fold1(of_array(to_array(a), first1(a), last1(a)), 0))))

logic a : us_t

logic attr__ATTRIBUTE_ADDRESS : int

logic c : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type element_out1

logic element_outqtint1 : element_out1 -> int

axiom element_outqtaxiom2 :
  (forall i:element_out1. ((- 100) <= element_outqtint1(i)))

axiom element_outqtaxiom3 :
  (forall i:element_out1. (element_outqtint1(i) <= 100))

predicate in_range7(x: int) = (((- 100) <= x) and (x <= 100))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq7 : element_out1, element_out1 -> bool

logic dummy7 : element_out1

type element_out__ref1 = { element_out__content1 : element_out1
}

function element_out__ref_element_out__content__projection(a1: element_out__ref1) : element_out1 =
  (a1).element_out__content1

predicate dynamic_invariant6(temp___expr_236: int, temp___is_init_232: bool,
  temp___skip_constant_233: bool, temp___do_toplevel_234: bool,
  temp___do_typ_inv_235: bool) = (((temp___is_init_232 = true) or
  ((- 100) <= 100)) -> in_range7(temp___expr_236))

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : integer, integer -> bool

logic dummy8 : integer

type t41s__ref = { t41s__content : integer
}

function t41s__ref_t41s__content__projection(a1: t41s__ref) : integer =
  (a1).t41s__content

predicate dynamic_invariant7(temp___expr_203: int, temp___is_init_199: bool,
  temp___skip_constant_200: bool, temp___do_toplevel_201: bool,
  temp___do_typ_inv_202: bool) = (((temp___is_init_199 = true) or
  (1 <= 100)) -> in_range3(temp___expr_203))

type index_type1

logic index_typeqtint1 : index_type1 -> int

axiom index_typeqtaxiom2 : (forall i:index_type1. (1 <= index_typeqtint1(i)))

axiom index_typeqtaxiom3 :
  (forall i:index_type1. (index_typeqtint1(i) <= 100))

predicate in_range8(x: int) = ((1 <= x) and (x <= 100))

function bool_eq12(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : index_type1, index_type1 -> bool

logic dummy9 : index_type1

type index_type__ref1 = { index_type__content1 : index_type1
}

function index_type__ref_index_type__content__projection(a1: index_type__ref1) : index_type1 =
  (a1).index_type__content1

predicate dynamic_invariant8(temp___expr_210: int, temp___is_init_206: bool,
  temp___skip_constant_207: bool, temp___do_toplevel_208: bool,
  temp___do_typ_inv_209: bool) = (((temp___is_init_206 = true) or
  (1 <= 100)) -> in_range8(temp___expr_210))

axiom in_range__def_axiom :
  (forall a1:us_t.
  (forall x:int. forall i:int [in_range6(a1, x, i)]. ((in_range6(a1, x,
  i) = true) -> (((- 100) * (i - first1(a1))) <= x))))

axiom in_range__def_axiom1 :
  (forall a1:us_t.
  (forall x:int. forall i:int [in_range6(a1, x, i)]. ((in_range6(a1, x,
  i) = true) -> (x <= (100 * (i - first1(a1)))))))

axiom in_range__def_axiom2 :
  (forall a1:us_t.
  (forall x:int. forall i:int [in_range6(a1, x, i)].
  (((((- 100) * (i - first1(a1))) <= x) and
  (x <= (100 * (i - first1(a1))))) -> (in_range6(a1, x, i) = true))))

axiom in_range_last__def_axiom :
  (forall a1:us_t.
  (forall x:int [in_range_last(a1, x)]. ((in_range_last(a1, x) = true) ->
  (((- 100) * length(a1)) <= x))))

axiom in_range_last__def_axiom1 :
  (forall a1:us_t.
  (forall x:int [in_range_last(a1, x)]. ((in_range_last(a1, x) = true) ->
  (x <= (100 * length(a1))))))

axiom in_range_last__def_axiom2 :
  (forall a1:us_t.
  (forall x:int [in_range_last(a1, x)]. (((((- 100) * length(a1)) <= x) and
  (x <= (100 * length(a1)))) -> (in_range_last(a1, x) = true))))

type element_out2

logic element_outqtint2 : element_out2 -> int

axiom element_outqtaxiom4 :
  (forall i:element_out2. ((- 2147483648) <= element_outqtint2(i)))

axiom element_outqtaxiom5 :
  (forall i:element_out2. (element_outqtint2(i) <= 2147483647))

predicate in_range9(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq13(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq10 : element_out2, element_out2 -> bool

logic dummy10 : element_out2

type element_out__ref2 = { element_out__content2 : element_out2
}

function element_out__ref_element_out__content__2__projection(a1: element_out__ref2) : element_out2 =
  (a1).element_out__content2

predicate dynamic_invariant9(temp___expr_268: int, temp___is_init_264: bool,
  temp___skip_constant_265: bool, temp___do_toplevel_266: bool,
  temp___do_typ_inv_267: bool) = (((temp___is_init_264 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range9(temp___expr_268))

predicate dynamic_invariant10(temp___expr_262: us_t,
  temp___is_init_258: bool, temp___skip_constant_259: bool,
  temp___do_toplevel_260: bool, temp___do_typ_inv_261: bool) =
  ((not (temp___skip_constant_259 = true)) -> dynamic_property(1, 100,
  first1(temp___expr_262), last1(temp___expr_262)))

axiom fold__post_axiom12 :
  (forall a1:us_t. forall init:int.
  in_range__function_guard(in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), init, first1(a1)), of_array(to_array(a1), first1(a1),
  last1(a1)), init, first1(a1)))

axiom fold__post_axiom13 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant10(a1, true, true,
  true, true) and dynamic_invariant9(init, true, true, true, true)) and
  ((length(a1) = 0) or (in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), init, first1(a1)) = true))) ->
  (forall a2:us_t. forall init1:int.
  fold__function_guard(fold(of_array(to_array(a2), first1(a2), last1(a2)),
  init1), of_array(to_array(a2), first1(a2), last1(a2)), init1)))))

axiom fold__post_axiom14 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant10(a1, true, true,
  true, true) and dynamic_invariant9(init, true, true, true, true)) and
  ((length(a1) = 0) or (in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), init, first1(a1)) = true))) -> (let result = fold1(a1, init)
  : int in (fold__function_guard1(result, a1, init) ->
  (result = (if (length(a1) = 0) then init else to_rep1((to_array1(fold(of_array(to_array(a1),
  first1(a1), last1(a1)), init))[last1(a1)])))))))))

axiom fold__post_axiom15 :
  (forall a1:us_t.
  (forall init:int [fold1(a1, init)]. (((dynamic_invariant10(a1, true, true,
  true, true) and dynamic_invariant9(init, true, true, true, true)) and
  ((length(a1) = 0) or (in_range6(of_array(to_array(a1), first1(a1),
  last1(a1)), init, first1(a1)) = true))) -> (let result = fold1(a1, init)
  : int in (fold__function_guard1(result, a1, init) ->
  dynamic_invariant9(result, true, false, true, true))))))

predicate dynamic_invariant11(temp___expr_275: int, temp___is_init_271: bool,
  temp___skip_constant_272: bool, temp___do_toplevel_273: bool,
  temp___do_typ_inv_274: bool) = (((temp___is_init_271 = true) or
  (1 <= 100)) -> in_range4(temp___expr_275))

 (* File "spark-higher_order-fold.ads", line 359, characters 0-0 *)
goal defqtvc : (dynamic_invariant5(a, true, false, true, true) ->
  (dynamic_invariant6(c, true, false, true, true) ->
  ((forall o:us_t. in_range__function_guard(in_range6(of_array(to_array(o),
   first1(o), last1(o)), 0, first1(o)), of_array(to_array(o), first1(o),
   last1(o)), 0, first1(o))) ->
  ((forall o:us_t. forall temp___718:us_t1. forall i:int.
   in_range__function_guard(in_range6(of_array(to_array(o), first1(o),
   last1(o)), to_rep1((to_array1(temp___718)[(i - 1)])), i),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[(i - 1)])), i)) ->
  ((forall o:us_t. forall temp___718:us_t1.
   in_range_last__function_guard(in_range_last(of_array(to_array(o),
   first1(o), last1(o)), to_rep1((to_array1(temp___718)[last1(o)]))),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[last1(o)])))) ->
  (fold__function_guard(fold(of_array(to_array(a), first1(a), last1(a)), 0),
  of_array(to_array(a), first1(a), last1(a)), 0) ->
  ((forall k:int. value__function_guard(value(to_rep((to_array(a)[k]))),
   to_rep((to_array(a)[k])))) ->
  ((forall o:us_t. in_range__function_guard(in_range6(of_array(to_array(o),
   first1(o), last1(o)), 0, first1(o)), of_array(to_array(o), first1(o),
   last1(o)), 0, first1(o))) ->
  ((forall o:us_t. forall temp___718:us_t1. forall i:int.
   in_range__function_guard(in_range6(of_array(to_array(o), first1(o),
   last1(o)), to_rep1((to_array1(temp___718)[(i - 1)])), i),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[(i - 1)])), i)) ->
  ((forall o:us_t. forall temp___718:us_t1.
   in_range_last__function_guard(in_range_last(of_array(to_array(o),
   first1(o), last1(o)), to_rep1((to_array1(temp___718)[last1(o)]))),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[last1(o)])))) ->
  (fold__function_guard(fold(of_array(to_array(a), first1(a), last1(a)), 0),
  of_array(to_array(a), first1(a), last1(a)), 0) ->
  ((forall k:int. value__function_guard(value(to_rep((to_array(a)[k]))),
   to_rep((to_array(a)[k])))) ->
  ((forall o:us_t. in_range__function_guard(in_range6(of_array(to_array(o),
   first1(o), last1(o)), 0, first1(o)), of_array(to_array(o), first1(o),
   last1(o)), 0, first1(o))) ->
  ((forall o:us_t. forall temp___718:us_t1. forall i:int.
   in_range__function_guard(in_range6(of_array(to_array(o), first1(o),
   last1(o)), to_rep1((to_array1(temp___718)[(i - 1)])), i),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[(i - 1)])), i)) ->
  ((forall o:us_t. forall temp___718:us_t1.
   in_range_last__function_guard(in_range_last(of_array(to_array(o),
   first1(o), last1(o)), to_rep1((to_array1(temp___718)[last1(o)]))),
   of_array(to_array(o), first1(o), last1(o)),
   to_rep1((to_array1(temp___718)[last1(o)])))) ->
  (fold__function_guard(fold(of_array(to_array(a), first1(a), last1(a)), 0),
  of_array(to_array(a), first1(a), last1(a)), 0) ->
  ((forall k:int. value__function_guard(value(to_rep((to_array(a)[k]))),
   to_rep((to_array(a)[k])))) -> (((let temp___711 = first1(a) : int in
  (let temp___712 = last1(a) : int in
  (exists i:int. ((i = temp___711) and
  ((andb((if (temp___711 <= i) then true else false),
  (if (i <= temp___712) then true else false)) = true) and
  (exists o:int. ((to_rep((to_array(a)[i])) = o) and (let o1 = value(o)
  : int in ((value__function_guard(o1, o) and dynamic_invariant1(o1, true,
  false, true, true)) and
  (exists spark__branch:bool.
  ((spark__branch = (if (o1 = c) then false else true)) and
  ((spark__branch = true) or (let o2 = (i - first1(a)) : int in
  (in_range1(o2) and (let o3 = (c * o2) : int in (in_range1(o3) and
  (in_range1((o3 + c)) and (dynamic_property(1, 100, first1(a), last1(a)) and
  (let o4 = of_array(to_array(a), first1(a), last1(a)) : us_t in
  (let temp___718 = fold(o4, 0) : us_t1 in ((fold__function_guard(temp___718,
  o4, 0) and (dynamic_invariant3(temp___718, true, false, true, true) and
  ((((((first3(temp___718) = first1(o4)) and
  (last3(temp___718) = last1(o4))) and (in_range6(of_array(to_array(o4),
  first1(o4), last1(o4)), 0, first1(o4)) = true)) and
  (to_rep1((to_array1(temp___718)[first1(o4)])) = add_value(to_rep((to_array(o4)[first1(o4)])),
  0))) and
  (forall i1:int. (((first1(o4) <= i1) and (i1 <= last1(o4))) ->
  ((first1(o4) <  i1) -> ((in_range6(of_array(to_array(o4), first1(o4),
  last1(o4)), to_rep1((to_array1(temp___718)[(i1 - 1)])), i1) = true) and
  (to_rep1((to_array1(temp___718)[i1])) = add_value(to_rep((to_array(o4)[i1])),
  to_rep1((to_array1(temp___718)[(i1 - 1)]))))))))) and
  (in_range_last(of_array(to_array(o4), first1(o4), last1(o4)),
  to_rep1((to_array1(temp___718)[last1(o4)]))) = true)))) and
  (((first3(temp___718) <= i) and (i <= last3(temp___718))) and
  (exists o5:int. ((to_rep1((to_array1(temp___718)[i])) = o5) and
  (exists i1:int. (((to_rep1((to_array1(fold(of_array(to_array(a), first1(a),
  last1(a)), 0))[i1])) = ((c * (i1 - first1(a))) + c)) and
  (forall k:int. (((first1(a) <= k) and (k <= i1)) ->
  (value(to_rep((to_array(a)[k]))) = c)))) and
  ((andb((if dynamic_property2(first1(a), last1(a),
  i1) then true else false), (if ((first1(a) <= i1) and
  (i1 <= last1(a))) then true else false)) = true) and
  ((not (i1 = temp___712)) and
  (exists i2:int. ((i2 = (i1 + 1)) and
  (exists o6:int. ((to_rep((to_array(a)[i2])) = o6) and (let o7 = value(o6)
  : int in ((value__function_guard(o7, o6) and dynamic_invariant1(o7, true,
  false, true, true)) and
  (exists spark__branch1:bool.
  ((spark__branch1 = (if (o7 = c) then false else true)) and
  (spark__branch1 = true))))))))))))))))))))))))))))))))))))) or
  (let temp___711 = first1(a) : int in (let temp___712 = last1(a) : int in
  (exists i:int. ((i = temp___711) and
  ((not (andb((if (temp___711 <= i) then true else false),
  (if (i <= temp___712) then true else false)) = true)) or
  (exists o:int. ((to_rep((to_array(a)[i])) = o) and (let o1 = value(o)
  : int in ((value__function_guard(o1, o) and dynamic_invariant1(o1, true,
  false, true, true)) and
  (exists spark__branch:bool.
  ((spark__branch = (if (o1 = c) then false else true)) and
  ((not (spark__branch = true)) and (let o2 = (i - first1(a)) : int in
  (in_range1(o2) and (let o3 = (c * o2) : int in (in_range1(o3) and
  (in_range1((o3 + c)) and (dynamic_property(1, 100, first1(a), last1(a)) and
  (let o4 = of_array(to_array(a), first1(a), last1(a)) : us_t in
  (let temp___718 = fold(o4, 0) : us_t1 in ((fold__function_guard(temp___718,
  o4, 0) and (dynamic_invariant3(temp___718, true, false, true, true) and
  ((((((first3(temp___718) = first1(o4)) and
  (last3(temp___718) = last1(o4))) and (in_range6(of_array(to_array(o4),
  first1(o4), last1(o4)), 0, first1(o4)) = true)) and
  (to_rep1((to_array1(temp___718)[first1(o4)])) = add_value(to_rep((to_array(o4)[first1(o4)])),
  0))) and
  (forall i1:int. (((first1(o4) <= i1) and (i1 <= last1(o4))) ->
  ((first1(o4) <  i1) -> ((in_range6(of_array(to_array(o4), first1(o4),
  last1(o4)), to_rep1((to_array1(temp___718)[(i1 - 1)])), i1) = true) and
  (to_rep1((to_array1(temp___718)[i1])) = add_value(to_rep((to_array(o4)[i1])),
  to_rep1((to_array1(temp___718)[(i1 - 1)]))))))))) and
  (in_range_last(of_array(to_array(o4), first1(o4), last1(o4)),
  to_rep1((to_array1(temp___718)[last1(o4)]))) = true)))) and
  (((first3(temp___718) <= i) and (i <= last3(temp___718))) and
  (exists o5:int. ((to_rep1((to_array1(temp___718)[i])) = o5) and
  (exists i1:int. (((to_rep1((to_array1(fold(of_array(to_array(a), first1(a),
  last1(a)), 0))[i1])) = ((c * (i1 - first1(a))) + c)) and
  (forall k:int. (((first1(a) <= k) and (k <= i1)) ->
  (value(to_rep((to_array(a)[k]))) = c)))) and
  ((andb((if dynamic_property2(first1(a), last1(a),
  i1) then true else false), (if ((first1(a) <= i1) and
  (i1 <= last1(a))) then true else false)) = true) and (i1 = temp___712))))))))))))))))))))))))))))) ->
  ((forall i:int. value__function_guard(value(to_rep((to_array(a)[i]))),
   to_rep((to_array(a)[i])))) ->
  ((forall i:int. (((first1(a) <= i) and (i <= last1(a))) ->
   (value(to_rep((to_array(a)[i]))) = c))) -> (let o = length(a) : int in
  (in_range1(o) -> in_range1((c * o))))))))))))))))))))))))
