(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

logic id : int -> int

logic id__function_guard : int, int -> prop

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

axiom id__post_axiom : (forall x:int [id(x)]. in_range1(id(x)))

type us_split_fields = { rec__test_record_cnt_ex__root__f1 : integer;
rec__ext__ : us_private
}

function us_split_fields_rec__test_record_cnt_ex__root__f1__projection(a: us_split_fields) : integer =
  (a).rec__test_record_cnt_ex__root__f1

function us_split_fields_rec__ext____projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields; attr__tag : int
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep_attr__tag__projection(a: us_rep) : int = (a).attr__tag

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (to_rep(((a).us_split_fields1).rec__test_record_cnt_ex__root__f1) = to_rep(((b).us_split_fields1).rec__test_record_cnt_ex__root__f1)) then true else false)

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic test_record_cnt_ex__root__f1__first__bit : int

logic test_record_cnt_ex__root__f1__last__bit : int

logic test_record_cnt_ex__root__f1__position : int

axiom test_record_cnt_ex__root__f1__first__bit_axiom :
  (0 <= test_record_cnt_ex__root__f1__first__bit)

axiom test_record_cnt_ex__root__f1__last__bit_axiom :
  (test_record_cnt_ex__root__f1__first__bit <  test_record_cnt_ex__root__f1__last__bit)

axiom test_record_cnt_ex__root__f1__position_axiom :
  (0 <= test_record_cnt_ex__root__f1__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : us_rep

type root__ref = { root__content : us_rep
}

function root__ref_root__content__projection(a: root__ref) : us_rep =
  (a).root__content

type us_split_fields2 = { rec__test_record_cnt_ex__nested_1__hidden_1__f2 :
integer; rec__test_record_cnt_ex__root__f11 : integer; rec__ext__1 :
us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_1__hidden_1__f2__projection(a: us_split_fields2) : integer =
  (a).rec__test_record_cnt_ex__nested_1__hidden_1__f2

function us_split_fields_rec__test_record_cnt_ex__root__f1__2__projection(a: us_split_fields2) : integer =
  (a).rec__test_record_cnt_ex__root__f11

function us_split_fields_rec__ext____2__projection(a: us_split_fields2) : us_private =
  (a).rec__ext__1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2; attr__tag1 : int
}

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function us_rep_attr__tag__2__projection(a: us_rep1) : int = (a).attr__tag1

logic hide_ext__ : integer, us_private -> us_private

logic extract__test_record_cnt_ex__nested_1__hidden_1__f2 : us_private -> integer

axiom extract__test_record_cnt_ex__nested_1__hidden_1__f2__conv :
  (forall test_record_cnt_ex__nested_1__hidden_1__f2:integer.
  (forall rec__ext__2:us_private.
  (extract__test_record_cnt_ex__nested_1__hidden_1__f2(hide_ext__(test_record_cnt_ex__nested_1__hidden_1__f2,
  rec__ext__2)) = test_record_cnt_ex__nested_1__hidden_1__f2)))

logic extract__ext__ : us_private -> us_private

function to_base(a: us_rep1) : us_rep = { us_split_fields1 = {
  rec__test_record_cnt_ex__root__f1 =
  ((a).us_split_fields3).rec__test_record_cnt_ex__root__f11; rec__ext__ =
  hide_ext__(((a).us_split_fields3).rec__test_record_cnt_ex__nested_1__hidden_1__f2,
  ((a).us_split_fields3).rec__ext__1) }; attr__tag = (a).attr__tag1 }

function of_base(r: us_rep) : us_rep1 = { us_split_fields3 = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f2 =
  extract__test_record_cnt_ex__nested_1__hidden_1__f2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__root__f11 =
  ((r).us_split_fields1).rec__test_record_cnt_ex__root__f1; rec__ext__1 =
  extract__ext__(((r).us_split_fields1).rec__ext__) }; attr__tag1 =
  (r).attr__tag }

function bool_eq3(a: us_rep1, b: us_rep1) : bool =
  (if ((to_rep(((a).us_split_fields3).rec__test_record_cnt_ex__nested_1__hidden_1__f2) = to_rep(((b).us_split_fields3).rec__test_record_cnt_ex__nested_1__hidden_1__f2)) and
  (to_rep(((a).us_split_fields3).rec__test_record_cnt_ex__root__f11) = to_rep(((b).us_split_fields3).rec__test_record_cnt_ex__root__f11))) then true else false)

logic us_tag1 : int

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic test_record_cnt_ex__nested_1__hidden_1__f2__first__bit : int

logic test_record_cnt_ex__nested_1__hidden_1__f2__last__bit : int

logic test_record_cnt_ex__nested_1__hidden_1__f2__position : int

axiom test_record_cnt_ex__nested_1__hidden_1__f2__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_1__hidden_1__f2__first__bit)

axiom test_record_cnt_ex__nested_1__hidden_1__f2__last__bit_axiom :
  (test_record_cnt_ex__nested_1__hidden_1__f2__first__bit <  test_record_cnt_ex__nested_1__hidden_1__f2__last__bit)

axiom test_record_cnt_ex__nested_1__hidden_1__f2__position_axiom :
  (0 <= test_record_cnt_ex__nested_1__hidden_1__f2__position)

logic test_record_cnt_ex__root__f1__first__bit1 : int

logic test_record_cnt_ex__root__f1__last__bit1 : int

logic test_record_cnt_ex__root__f1__position1 : int

axiom test_record_cnt_ex__root__f1__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__root__f1__first__bit1)

axiom test_record_cnt_ex__root__f1__last__bit_axiom1 :
  (test_record_cnt_ex__root__f1__first__bit1 <  test_record_cnt_ex__root__f1__last__bit1)

axiom test_record_cnt_ex__root__f1__position_axiom1 :
  (0 <= test_record_cnt_ex__root__f1__position1)

logic user_eq2 : us_rep1, us_rep1 -> bool

logic dummy2 : us_rep1

type hidden_1__ref = { hidden_1__content : us_rep1
}

function hidden_1__ref_hidden_1__content__projection(a: hidden_1__ref) : us_rep1 =
  (a).hidden_1__content

logic c : us_rep1

logic attr__ATTRIBUTE_ADDRESS : int

type us_split_fields4 = { rec__test_record_cnt_ex__nested_1__hidden_1__f21 :
integer; rec__test_record_cnt_ex__two_f2__f2 : integer;
rec__test_record_cnt_ex__root__f12 : integer; rec__ext__2 : us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_1__hidden_1__f2__2__projection(a: us_split_fields4) : integer =
  (a).rec__test_record_cnt_ex__nested_1__hidden_1__f21

function us_split_fields_rec__test_record_cnt_ex__two_f2__f2__projection(a: us_split_fields4) : integer =
  (a).rec__test_record_cnt_ex__two_f2__f2

function us_split_fields_rec__test_record_cnt_ex__root__f1__3__projection(a: us_split_fields4) : integer =
  (a).rec__test_record_cnt_ex__root__f12

function us_split_fields_rec__ext____3__projection(a: us_split_fields4) : us_private =
  (a).rec__ext__2

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4; attr__tag2 : int
}

function us_rep___split_fields__3__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function us_rep_attr__tag__3__projection(a: us_rep2) : int = (a).attr__tag2

logic hide_ext__1 : integer, integer, us_private -> us_private

axiom extract__test_record_cnt_ex__nested_1__hidden_1__f2__conv1 :
  (forall test_record_cnt_ex__nested_1__hidden_1__f2:integer.
  forall test_record_cnt_ex__two_f2__f2:integer.
  (forall rec__ext__3:us_private.
  (extract__test_record_cnt_ex__nested_1__hidden_1__f2(hide_ext__1(test_record_cnt_ex__nested_1__hidden_1__f2,
  test_record_cnt_ex__two_f2__f2,
  rec__ext__3)) = test_record_cnt_ex__nested_1__hidden_1__f2)))

logic extract__test_record_cnt_ex__two_f2__f2 : us_private -> integer

axiom extract__test_record_cnt_ex__two_f2__f2__conv :
  (forall test_record_cnt_ex__nested_1__hidden_1__f2:integer.
  forall test_record_cnt_ex__two_f2__f2:integer.
  (forall rec__ext__3:us_private.
  (extract__test_record_cnt_ex__two_f2__f2(hide_ext__1(test_record_cnt_ex__nested_1__hidden_1__f2,
  test_record_cnt_ex__two_f2__f2,
  rec__ext__3)) = test_record_cnt_ex__two_f2__f2)))

logic extract__ext__1 : us_private -> us_private

function to_base1(a: us_rep2) : us_rep = { us_split_fields1 = {
  rec__test_record_cnt_ex__root__f1 =
  ((a).us_split_fields5).rec__test_record_cnt_ex__root__f12; rec__ext__ =
  hide_ext__1(((a).us_split_fields5).rec__test_record_cnt_ex__nested_1__hidden_1__f21,
  ((a).us_split_fields5).rec__test_record_cnt_ex__two_f2__f2,
  ((a).us_split_fields5).rec__ext__2) }; attr__tag = (a).attr__tag2 }

function of_base1(r: us_rep) : us_rep2 = { us_split_fields5 = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f21 =
  extract__test_record_cnt_ex__nested_1__hidden_1__f2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__two_f2__f2 =
  extract__test_record_cnt_ex__two_f2__f2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__root__f12 =
  ((r).us_split_fields1).rec__test_record_cnt_ex__root__f1; rec__ext__2 =
  extract__ext__1(((r).us_split_fields1).rec__ext__) }; attr__tag2 =
  (r).attr__tag }

function bool_eq4(a: us_rep2, b: us_rep2) : bool =
  (if (((to_rep(((a).us_split_fields5).rec__test_record_cnt_ex__nested_1__hidden_1__f21) = to_rep(((b).us_split_fields5).rec__test_record_cnt_ex__nested_1__hidden_1__f21)) and
  (to_rep(((a).us_split_fields5).rec__test_record_cnt_ex__two_f2__f2) = to_rep(((b).us_split_fields5).rec__test_record_cnt_ex__two_f2__f2))) and
  (to_rep(((a).us_split_fields5).rec__test_record_cnt_ex__root__f12) = to_rep(((b).us_split_fields5).rec__test_record_cnt_ex__root__f12))) then true else false)

logic us_tag2 : int

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1 : int

logic test_record_cnt_ex__nested_1__hidden_1__f2__last__bit1 : int

logic test_record_cnt_ex__nested_1__hidden_1__f2__position1 : int

axiom test_record_cnt_ex__nested_1__hidden_1__f2__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1)

axiom test_record_cnt_ex__nested_1__hidden_1__f2__last__bit_axiom1 :
  (test_record_cnt_ex__nested_1__hidden_1__f2__first__bit1 <  test_record_cnt_ex__nested_1__hidden_1__f2__last__bit1)

axiom test_record_cnt_ex__nested_1__hidden_1__f2__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_1__hidden_1__f2__position1)

logic test_record_cnt_ex__two_f2__f2__first__bit : int

logic test_record_cnt_ex__two_f2__f2__last__bit : int

logic test_record_cnt_ex__two_f2__f2__position : int

axiom test_record_cnt_ex__two_f2__f2__first__bit_axiom :
  (0 <= test_record_cnt_ex__two_f2__f2__first__bit)

axiom test_record_cnt_ex__two_f2__f2__last__bit_axiom :
  (test_record_cnt_ex__two_f2__f2__first__bit <  test_record_cnt_ex__two_f2__f2__last__bit)

axiom test_record_cnt_ex__two_f2__f2__position_axiom :
  (0 <= test_record_cnt_ex__two_f2__f2__position)

logic test_record_cnt_ex__root__f1__first__bit2 : int

logic test_record_cnt_ex__root__f1__last__bit2 : int

logic test_record_cnt_ex__root__f1__position2 : int

axiom test_record_cnt_ex__root__f1__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__root__f1__first__bit2)

axiom test_record_cnt_ex__root__f1__last__bit_axiom2 :
  (test_record_cnt_ex__root__f1__first__bit2 <  test_record_cnt_ex__root__f1__last__bit2)

axiom test_record_cnt_ex__root__f1__position_axiom2 :
  (0 <= test_record_cnt_ex__root__f1__position2)

logic user_eq3 : us_rep2, us_rep2 -> bool

logic dummy3 : us_rep2

type two_f2__ref = { two_f2__content : us_rep2
}

function two_f2__ref_two_f2__content__projection(a: two_f2__ref) : us_rep2 =
  (a).two_f2__content

logic x_1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate default_initial_assumption(temp___expr_179: us_rep2,
  temp___skip_top_level_180: bool) = ((temp___expr_179).attr__tag2 = us_tag2)

logic y_1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_split_fields6 = { rec__test_record_cnt_ex__nested_2__hidden_2 :
us_main_type; rec__test_record_cnt_ex__root__f13 : integer; rec__ext__3 :
us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_2__hidden_2__projection(a: us_split_fields6) : us_main_type =
  (a).rec__test_record_cnt_ex__nested_2__hidden_2

function us_split_fields_rec__test_record_cnt_ex__root__f1__4__projection(a: us_split_fields6) : integer =
  (a).rec__test_record_cnt_ex__root__f13

function us_split_fields_rec__ext____4__projection(a: us_split_fields6) : us_private =
  (a).rec__ext__3

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___split_fields__content__4__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_fields7 : us_split_fields6; attr__tag3 : int
}

function us_rep___split_fields__4__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

function us_rep_attr__tag__4__projection(a: us_rep3) : int = (a).attr__tag3

logic hide_ext__2 : us_main_type, us_private -> us_private

logic extract__test_record_cnt_ex__nested_2__hidden_2 : us_private -> us_main_type

axiom extract__test_record_cnt_ex__nested_2__hidden_2__conv :
  (forall test_record_cnt_ex__nested_2__hidden_2:us_main_type.
  (forall rec__ext__4:us_private.
  (extract__test_record_cnt_ex__nested_2__hidden_2(hide_ext__2(test_record_cnt_ex__nested_2__hidden_2,
  rec__ext__4)) = test_record_cnt_ex__nested_2__hidden_2)))

logic extract__ext__2 : us_private -> us_private

function to_base2(a: us_rep3) : us_rep = { us_split_fields1 = {
  rec__test_record_cnt_ex__root__f1 =
  ((a).us_split_fields7).rec__test_record_cnt_ex__root__f13; rec__ext__ =
  hide_ext__2(((a).us_split_fields7).rec__test_record_cnt_ex__nested_2__hidden_2,
  ((a).us_split_fields7).rec__ext__3) }; attr__tag = (a).attr__tag3 }

function of_base2(r: us_rep) : us_rep3 = { us_split_fields7 = {
  rec__test_record_cnt_ex__nested_2__hidden_2 =
  extract__test_record_cnt_ex__nested_2__hidden_2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__root__f13 =
  ((r).us_split_fields1).rec__test_record_cnt_ex__root__f1; rec__ext__3 =
  extract__ext__2(((r).us_split_fields1).rec__ext__) }; attr__tag3 =
  (r).attr__tag }

function bool_eq5(a: us_rep3, b: us_rep3) : bool =
  (if ((us_main_eq(((a).us_split_fields7).rec__test_record_cnt_ex__nested_2__hidden_2,
  ((b).us_split_fields7).rec__test_record_cnt_ex__nested_2__hidden_2) = true) and
  (to_rep(((a).us_split_fields7).rec__test_record_cnt_ex__root__f13) = to_rep(((b).us_split_fields7).rec__test_record_cnt_ex__root__f13))) then true else false)

logic us_tag3 : int

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic test_record_cnt_ex__root__f1__first__bit3 : int

logic test_record_cnt_ex__root__f1__last__bit3 : int

logic test_record_cnt_ex__root__f1__position3 : int

axiom test_record_cnt_ex__root__f1__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__root__f1__first__bit3)

axiom test_record_cnt_ex__root__f1__last__bit_axiom3 :
  (test_record_cnt_ex__root__f1__first__bit3 <  test_record_cnt_ex__root__f1__last__bit3)

axiom test_record_cnt_ex__root__f1__position_axiom3 :
  (0 <= test_record_cnt_ex__root__f1__position3)

logic user_eq4 : us_rep3, us_rep3 -> bool

logic dummy4 : us_rep3

type hidden_2__ref = { hidden_2__content : us_rep3
}

function hidden_2__ref_hidden_2__content__projection(a: hidden_2__ref) : us_rep3 =
  (a).hidden_2__content

logic c1 : us_rep3

logic attr__ATTRIBUTE_ADDRESS3 : int

type us_split_fields8 = { rec__test_record_cnt_ex__nested_2__hidden_21 :
us_main_type; rec__test_record_cnt_ex__hidden_info__f2 : integer;
rec__test_record_cnt_ex__root__f14 : integer; rec__ext__4 : us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_2__hidden_2__2__projection(a: us_split_fields8) : us_main_type =
  (a).rec__test_record_cnt_ex__nested_2__hidden_21

function us_split_fields_rec__test_record_cnt_ex__hidden_info__f2__projection(a: us_split_fields8) : integer =
  (a).rec__test_record_cnt_ex__hidden_info__f2

function us_split_fields_rec__test_record_cnt_ex__root__f1__5__projection(a: us_split_fields8) : integer =
  (a).rec__test_record_cnt_ex__root__f14

function us_split_fields_rec__ext____5__projection(a: us_split_fields8) : us_private =
  (a).rec__ext__4

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___split_fields__content__5__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_fields9 : us_split_fields8; attr__tag4 : int
}

function us_rep___split_fields__5__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

function us_rep_attr__tag__5__projection(a: us_rep4) : int = (a).attr__tag4

logic hide_ext__3 : us_main_type, integer, us_private -> us_private

axiom extract__test_record_cnt_ex__nested_2__hidden_2__conv1 :
  (forall test_record_cnt_ex__nested_2__hidden_2:us_main_type.
  (forall test_record_cnt_ex__hidden_info__f2:integer.
  (forall rec__ext__5:us_private.
  (extract__test_record_cnt_ex__nested_2__hidden_2(hide_ext__3(test_record_cnt_ex__nested_2__hidden_2,
  test_record_cnt_ex__hidden_info__f2,
  rec__ext__5)) = test_record_cnt_ex__nested_2__hidden_2))))

logic extract__test_record_cnt_ex__hidden_info__f2 : us_private -> integer

axiom extract__test_record_cnt_ex__hidden_info__f2__conv :
  (forall test_record_cnt_ex__nested_2__hidden_2:us_main_type.
  (forall test_record_cnt_ex__hidden_info__f2:integer.
  (forall rec__ext__5:us_private.
  (extract__test_record_cnt_ex__hidden_info__f2(hide_ext__3(test_record_cnt_ex__nested_2__hidden_2,
  test_record_cnt_ex__hidden_info__f2,
  rec__ext__5)) = test_record_cnt_ex__hidden_info__f2))))

logic extract__ext__3 : us_private -> us_private

function to_base3(a: us_rep4) : us_rep = { us_split_fields1 = {
  rec__test_record_cnt_ex__root__f1 =
  ((a).us_split_fields9).rec__test_record_cnt_ex__root__f14; rec__ext__ =
  hide_ext__3(((a).us_split_fields9).rec__test_record_cnt_ex__nested_2__hidden_21,
  ((a).us_split_fields9).rec__test_record_cnt_ex__hidden_info__f2,
  ((a).us_split_fields9).rec__ext__4) }; attr__tag = (a).attr__tag4 }

function of_base3(r: us_rep) : us_rep4 = { us_split_fields9 = {
  rec__test_record_cnt_ex__nested_2__hidden_21 =
  extract__test_record_cnt_ex__nested_2__hidden_2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__hidden_info__f2 =
  extract__test_record_cnt_ex__hidden_info__f2(((r).us_split_fields1).rec__ext__);
  rec__test_record_cnt_ex__root__f14 =
  ((r).us_split_fields1).rec__test_record_cnt_ex__root__f1; rec__ext__4 =
  extract__ext__3(((r).us_split_fields1).rec__ext__) }; attr__tag4 =
  (r).attr__tag }

function bool_eq6(a: us_rep4, b: us_rep4) : bool =
  (if (((us_main_eq(((a).us_split_fields9).rec__test_record_cnt_ex__nested_2__hidden_21,
  ((b).us_split_fields9).rec__test_record_cnt_ex__nested_2__hidden_21) = true) and
  (to_rep(((a).us_split_fields9).rec__test_record_cnt_ex__hidden_info__f2) = to_rep(((b).us_split_fields9).rec__test_record_cnt_ex__hidden_info__f2))) and
  (to_rep(((a).us_split_fields9).rec__test_record_cnt_ex__root__f14) = to_rep(((b).us_split_fields9).rec__test_record_cnt_ex__root__f14))) then true else false)

logic us_tag4 : int

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic test_record_cnt_ex__hidden_info__f2__first__bit : int

logic test_record_cnt_ex__hidden_info__f2__last__bit : int

logic test_record_cnt_ex__hidden_info__f2__position : int

axiom test_record_cnt_ex__hidden_info__f2__first__bit_axiom :
  (0 <= test_record_cnt_ex__hidden_info__f2__first__bit)

axiom test_record_cnt_ex__hidden_info__f2__last__bit_axiom :
  (test_record_cnt_ex__hidden_info__f2__first__bit <  test_record_cnt_ex__hidden_info__f2__last__bit)

axiom test_record_cnt_ex__hidden_info__f2__position_axiom :
  (0 <= test_record_cnt_ex__hidden_info__f2__position)

logic test_record_cnt_ex__root__f1__first__bit4 : int

logic test_record_cnt_ex__root__f1__last__bit4 : int

logic test_record_cnt_ex__root__f1__position4 : int

axiom test_record_cnt_ex__root__f1__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__root__f1__first__bit4)

axiom test_record_cnt_ex__root__f1__last__bit_axiom4 :
  (test_record_cnt_ex__root__f1__first__bit4 <  test_record_cnt_ex__root__f1__last__bit4)

axiom test_record_cnt_ex__root__f1__position_axiom4 :
  (0 <= test_record_cnt_ex__root__f1__position4)

logic user_eq5 : us_rep4, us_rep4 -> bool

logic dummy5 : us_rep4

type hidden_info__ref = { hidden_info__content : us_rep4
}

function hidden_info__ref_hidden_info__content__projection(a: hidden_info__ref) : us_rep4 =
  (a).hidden_info__content

logic x_2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS4 : int

predicate default_initial_assumption1(temp___expr_197: us_rep4,
  temp___skip_top_level_198: bool) = ((temp___expr_197).attr__tag4 = us_tag4)

logic y_2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type us_split_discrs = { rec__test_record_cnt_ex__nested_3__complex__b : bool
}

function us_split_discrs_rec__test_record_cnt_ex__nested_3__complex__b__projection(a: us_split_discrs) : bool =
  (a).rec__test_record_cnt_ex__nested_3__complex__b

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields10 = { rec__test_record_cnt_ex__nested_3__complex__g :
integer; rec__test_record_cnt_ex__nested_3__complex__f : integer; rec__ext__5
: us_private
}

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__projection(a: us_split_fields10) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__g

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__projection(a: us_split_fields10) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__f

function us_split_fields_rec__ext____6__projection(a: us_split_fields10) : us_private =
  (a).rec__ext__5

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___split_fields__content__6__projection(a: us_split_fields__ref5) : us_split_fields10 =
  (a).us_split_fields__content5

type us_rep5 = { us_split_discrs1 : us_split_discrs; us_split_fields11 :
us_split_fields10; attr__tag5 : int
}

function us_rep___split_discrs__projection(a: us_rep5) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__6__projection(a: us_rep5) : us_split_fields10 =
  (a).us_split_fields11

function us_rep_attr__tag__6__projection(a: us_rep5) : int = (a).attr__tag5

predicate test_record_cnt_ex__nested_3__complex__f__pred(a: us_rep5) =
  (to_int(((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b) = 1)

function bool_eq7(a: us_rep5, b: us_rep5) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b) = to_int(((b).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)) and
  ((to_rep(((a).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g) = to_rep(((b).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g)) and
  (test_record_cnt_ex__nested_3__complex__f__pred(a) ->
  (to_rep(((a).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f) = to_rep(((b).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f))))) then true else false)

logic us_dispatch_eq1 : us_rep5, us_rep5 -> bool

logic us_tag5 : int

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic test_record_cnt_ex__nested_3__complex__b__first__bit : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit : int

logic test_record_cnt_ex__nested_3__complex__b__position : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__b__first__bit <  test_record_cnt_ex__nested_3__complex__b__last__bit)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position)

logic test_record_cnt_ex__nested_3__complex__g__first__bit : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit : int

logic test_record_cnt_ex__nested_3__complex__g__position : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__g__first__bit <  test_record_cnt_ex__nested_3__complex__g__last__bit)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position)

logic test_record_cnt_ex__nested_3__complex__f__first__bit : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit : int

logic test_record_cnt_ex__nested_3__complex__f__position : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom :
  (test_record_cnt_ex__nested_3__complex__f__first__bit <  test_record_cnt_ex__nested_3__complex__f__last__bit)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position)

logic user_eq6 : us_rep5, us_rep5 -> bool

logic dummy6 : us_rep5

type complex__ref = { complex__content : us_rep5
}

function complex__ref_complex__content__projection(a: complex__ref) : us_rep5 =
  (a).complex__content

logic us_tag6 : int

predicate in_range2(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic test_record_cnt_ex__nested_3__complex__b__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__b__position1 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit1 <  test_record_cnt_ex__nested_3__complex__b__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position1)

logic test_record_cnt_ex__nested_3__complex__f__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__f__position1 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit1 <  test_record_cnt_ex__nested_3__complex__f__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position1)

logic test_record_cnt_ex__nested_3__complex__g__first__bit1 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit1 : int

logic test_record_cnt_ex__nested_3__complex__g__position1 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit1)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom1 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit1 <  test_record_cnt_ex__nested_3__complex__g__last__bit1)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom1 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position1)

logic user_eq7 : us_rep5, us_rep5 -> bool

logic dummy7 : us_rep5

type no_f__ref = { no_f__content : us_rep5
}

function no_f__ref_no_f__content__projection(a: no_f__ref) : us_rep5 =
  (a).no_f__content

logic x : us_rep5

logic attr__ATTRIBUTE_ADDRESS6 : int

logic y : us_rep5

logic attr__ATTRIBUTE_ADDRESS7 : int

logic us_tag7 : int

predicate in_range3(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size7 : int

logic object__size7 : int

logic alignment7 : int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 : (0 <= object__size7)

axiom alignment_axiom7 : (0 <= alignment7)

logic test_record_cnt_ex__nested_3__complex__b__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__b__position2 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit2 <  test_record_cnt_ex__nested_3__complex__b__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position2)

logic test_record_cnt_ex__nested_3__complex__g__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__g__position2 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit2 <  test_record_cnt_ex__nested_3__complex__g__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position2)

logic test_record_cnt_ex__nested_3__complex__f__first__bit2 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit2 : int

logic test_record_cnt_ex__nested_3__complex__f__position2 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit2)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom2 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit2 <  test_record_cnt_ex__nested_3__complex__f__last__bit2)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom2 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position2)

logic user_eq8 : us_rep5, us_rep5 -> bool

logic dummy8 : us_rep5

type f_present__ref = { f_present__content : us_rep5
}

function f_present__ref_f_present__content__projection(a: f_present__ref) : us_rep5 =
  (a).f_present__content

logic w : us_rep5

logic attr__ATTRIBUTE_ADDRESS8 : int

logic z : us_rep5

logic attr__ATTRIBUTE_ADDRESS9 : int

type us_split_fields12 = { rec__test_record_cnt_ex__Tno_fB__g : integer;
rec__test_record_cnt_ex__nested_3__complex__g1 : integer;
rec__test_record_cnt_ex__nested_3__complex__f1 : integer; rec__ext__6 :
us_private
}

function us_split_fields_rec__test_record_cnt_ex__Tno_fB__g__projection(a: us_split_fields12) : integer =
  (a).rec__test_record_cnt_ex__Tno_fB__g

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__2__projection(a: us_split_fields12) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__g1

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__2__projection(a: us_split_fields12) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__f1

function us_split_fields_rec__ext____7__projection(a: us_split_fields12) : us_private =
  (a).rec__ext__6

type us_split_fields__ref6 = { us_split_fields__content6 : us_split_fields12
}

function us_split_fields__ref___split_fields__content__7__projection(a: us_split_fields__ref6) : us_split_fields12 =
  (a).us_split_fields__content6

type us_rep6 = { us_split_discrs2 : us_split_discrs; us_split_fields13 :
us_split_fields12; attr__tag6 : int
}

function us_rep___split_discrs__2__projection(a: us_rep6) : us_split_discrs =
  (a).us_split_discrs2

function us_rep___split_fields__7__projection(a: us_rep6) : us_split_fields12 =
  (a).us_split_fields13

function us_rep_attr__tag__7__projection(a: us_rep6) : int = (a).attr__tag6

logic hide_ext__4 : integer, us_private -> us_private

logic extract__test_record_cnt_ex__Tno_fB__g : us_private -> integer

axiom extract__test_record_cnt_ex__Tno_fB__g__conv :
  (forall test_record_cnt_ex__Tno_fB__g:integer.
  (forall rec__ext__7:us_private.
  (extract__test_record_cnt_ex__Tno_fB__g(hide_ext__4(test_record_cnt_ex__Tno_fB__g,
  rec__ext__7)) = test_record_cnt_ex__Tno_fB__g)))

logic extract__ext__4 : us_private -> us_private

function to_base4(a: us_rep6) : us_rep5 = { us_split_discrs1 =
  (a).us_split_discrs2; us_split_fields11 = {
  rec__test_record_cnt_ex__nested_3__complex__g =
  ((a).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__g1;
  rec__test_record_cnt_ex__nested_3__complex__f =
  ((a).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__f1;
  rec__ext__5 =
  hide_ext__4(((a).us_split_fields13).rec__test_record_cnt_ex__Tno_fB__g,
  ((a).us_split_fields13).rec__ext__6) }; attr__tag5 = (a).attr__tag6 }

function of_base4(r: us_rep5) : us_rep6 = { us_split_discrs2 =
  (r).us_split_discrs1; us_split_fields13 = {
  rec__test_record_cnt_ex__Tno_fB__g =
  extract__test_record_cnt_ex__Tno_fB__g(((r).us_split_fields11).rec__ext__5);
  rec__test_record_cnt_ex__nested_3__complex__g1 =
  ((r).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f1 =
  ((r).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__6 = extract__ext__4(((r).us_split_fields11).rec__ext__5) };
  attr__tag6 = (r).attr__tag5 }

predicate test_record_cnt_ex__nested_3__complex__f__pred1(a: us_rep6) =
  (to_int(((a).us_split_discrs2).rec__test_record_cnt_ex__nested_3__complex__b) = 1)

function bool_eq8(a: us_rep6, b: us_rep6) : bool =
  (if ((to_int(((a).us_split_discrs2).rec__test_record_cnt_ex__nested_3__complex__b) = to_int(((b).us_split_discrs2).rec__test_record_cnt_ex__nested_3__complex__b)) and
  (((to_rep(((a).us_split_fields13).rec__test_record_cnt_ex__Tno_fB__g) = to_rep(((b).us_split_fields13).rec__test_record_cnt_ex__Tno_fB__g)) and
  (to_rep(((a).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__g1) = to_rep(((b).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__g1))) and
  (test_record_cnt_ex__nested_3__complex__f__pred1(a) ->
  (to_rep(((a).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__f1) = to_rep(((b).us_split_fields13).rec__test_record_cnt_ex__nested_3__complex__f1))))) then true else false)

logic us_tag8 : int

predicate in_range4(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size8 : int

logic object__size8 : int

logic alignment8 : int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 : (0 <= object__size8)

axiom alignment_axiom8 : (0 <= alignment8)

logic test_record_cnt_ex__nested_3__complex__b__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__b__position3 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit3 <  test_record_cnt_ex__nested_3__complex__b__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position3)

logic test_record_cnt_ex__nested_3__complex__g__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__g__position3 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit3 <  test_record_cnt_ex__nested_3__complex__g__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position3)

logic test_record_cnt_ex__nested_3__complex__f__first__bit3 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit3 : int

logic test_record_cnt_ex__nested_3__complex__f__position3 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit3)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom3 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit3 <  test_record_cnt_ex__nested_3__complex__f__last__bit3)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom3 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position3)

logic test_record_cnt_ex__Tno_fB__g__first__bit : int

logic test_record_cnt_ex__Tno_fB__g__last__bit : int

logic test_record_cnt_ex__Tno_fB__g__position : int

axiom test_record_cnt_ex__Tno_fB__g__first__bit_axiom :
  (0 <= test_record_cnt_ex__Tno_fB__g__first__bit)

axiom test_record_cnt_ex__Tno_fB__g__last__bit_axiom :
  (test_record_cnt_ex__Tno_fB__g__first__bit <  test_record_cnt_ex__Tno_fB__g__last__bit)

axiom test_record_cnt_ex__Tno_fB__g__position_axiom :
  (0 <= test_record_cnt_ex__Tno_fB__g__position)

logic user_eq9 : us_rep6, us_rep6 -> bool

logic dummy9 : us_rep6

type no_f__ref1 = { no_f__content1 : us_rep6
}

function no_f__ref_no_f__content__2__projection(a: no_f__ref1) : us_rep6 =
  (a).no_f__content1

logic x1 : us_rep6

logic attr__ATTRIBUTE_ADDRESS10 : int

logic y1 : us_rep6

logic attr__ATTRIBUTE_ADDRESS11 : int

type us_split_fields14 = { rec__test_record_cnt_ex__Tf_presentB__h : integer;
rec__test_record_cnt_ex__nested_3__complex__g2 : integer;
rec__test_record_cnt_ex__nested_3__complex__f2 : integer; rec__ext__7 :
us_private
}

function us_split_fields_rec__test_record_cnt_ex__Tf_presentB__h__projection(a: us_split_fields14) : integer =
  (a).rec__test_record_cnt_ex__Tf_presentB__h

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__g__3__projection(a: us_split_fields14) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__g2

function us_split_fields_rec__test_record_cnt_ex__nested_3__complex__f__3__projection(a: us_split_fields14) : integer =
  (a).rec__test_record_cnt_ex__nested_3__complex__f2

function us_split_fields_rec__ext____8__projection(a: us_split_fields14) : us_private =
  (a).rec__ext__7

type us_split_fields__ref7 = { us_split_fields__content7 : us_split_fields14
}

function us_split_fields__ref___split_fields__content__8__projection(a: us_split_fields__ref7) : us_split_fields14 =
  (a).us_split_fields__content7

type us_rep7 = { us_split_discrs3 : us_split_discrs; us_split_fields15 :
us_split_fields14; attr__tag7 : int
}

function us_rep___split_discrs__3__projection(a: us_rep7) : us_split_discrs =
  (a).us_split_discrs3

function us_rep___split_fields__8__projection(a: us_rep7) : us_split_fields14 =
  (a).us_split_fields15

function us_rep_attr__tag__8__projection(a: us_rep7) : int = (a).attr__tag7

logic hide_ext__5 : integer, us_private -> us_private

logic extract__test_record_cnt_ex__Tf_presentB__h : us_private -> integer

axiom extract__test_record_cnt_ex__Tf_presentB__h__conv :
  (forall test_record_cnt_ex__Tf_presentB__h:integer.
  (forall rec__ext__8:us_private.
  (extract__test_record_cnt_ex__Tf_presentB__h(hide_ext__5(test_record_cnt_ex__Tf_presentB__h,
  rec__ext__8)) = test_record_cnt_ex__Tf_presentB__h)))

logic extract__ext__5 : us_private -> us_private

function to_base5(a: us_rep7) : us_rep5 = { us_split_discrs1 =
  (a).us_split_discrs3; us_split_fields11 = {
  rec__test_record_cnt_ex__nested_3__complex__g =
  ((a).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__g2;
  rec__test_record_cnt_ex__nested_3__complex__f =
  ((a).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__f2;
  rec__ext__5 =
  hide_ext__5(((a).us_split_fields15).rec__test_record_cnt_ex__Tf_presentB__h,
  ((a).us_split_fields15).rec__ext__7) }; attr__tag5 = (a).attr__tag7 }

function of_base5(r: us_rep5) : us_rep7 = { us_split_discrs3 =
  (r).us_split_discrs1; us_split_fields15 = {
  rec__test_record_cnt_ex__Tf_presentB__h =
  extract__test_record_cnt_ex__Tf_presentB__h(((r).us_split_fields11).rec__ext__5);
  rec__test_record_cnt_ex__nested_3__complex__g2 =
  ((r).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f2 =
  ((r).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__7 = extract__ext__5(((r).us_split_fields11).rec__ext__5) };
  attr__tag7 = (r).attr__tag5 }

predicate test_record_cnt_ex__nested_3__complex__f__pred2(a: us_rep7) =
  (to_int(((a).us_split_discrs3).rec__test_record_cnt_ex__nested_3__complex__b) = 1)

function bool_eq9(a: us_rep7, b: us_rep7) : bool =
  (if ((to_int(((a).us_split_discrs3).rec__test_record_cnt_ex__nested_3__complex__b) = to_int(((b).us_split_discrs3).rec__test_record_cnt_ex__nested_3__complex__b)) and
  (((to_rep(((a).us_split_fields15).rec__test_record_cnt_ex__Tf_presentB__h) = to_rep(((b).us_split_fields15).rec__test_record_cnt_ex__Tf_presentB__h)) and
  (to_rep(((a).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__g2) = to_rep(((b).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__g2))) and
  (test_record_cnt_ex__nested_3__complex__f__pred2(a) ->
  (to_rep(((a).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__f2) = to_rep(((b).us_split_fields15).rec__test_record_cnt_ex__nested_3__complex__f2))))) then true else false)

logic us_tag9 : int

predicate in_range5(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size9 : int

logic object__size9 : int

logic alignment9 : int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 : (0 <= object__size9)

axiom alignment_axiom9 : (0 <= alignment9)

logic test_record_cnt_ex__nested_3__complex__b__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__b__position4 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit4 <  test_record_cnt_ex__nested_3__complex__b__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position4)

logic test_record_cnt_ex__nested_3__complex__g__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__g__position4 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit4 <  test_record_cnt_ex__nested_3__complex__g__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position4)

logic test_record_cnt_ex__nested_3__complex__f__first__bit4 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit4 : int

logic test_record_cnt_ex__nested_3__complex__f__position4 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit4)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom4 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit4 <  test_record_cnt_ex__nested_3__complex__f__last__bit4)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom4 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position4)

logic test_record_cnt_ex__Tf_presentB__h__first__bit : int

logic test_record_cnt_ex__Tf_presentB__h__last__bit : int

logic test_record_cnt_ex__Tf_presentB__h__position : int

axiom test_record_cnt_ex__Tf_presentB__h__first__bit_axiom :
  (0 <= test_record_cnt_ex__Tf_presentB__h__first__bit)

axiom test_record_cnt_ex__Tf_presentB__h__last__bit_axiom :
  (test_record_cnt_ex__Tf_presentB__h__first__bit <  test_record_cnt_ex__Tf_presentB__h__last__bit)

axiom test_record_cnt_ex__Tf_presentB__h__position_axiom :
  (0 <= test_record_cnt_ex__Tf_presentB__h__position)

logic user_eq10 : us_rep7, us_rep7 -> bool

logic dummy10 : us_rep7

type f_present__ref1 = { f_present__content1 : us_rep7
}

function f_present__ref_f_present__content__2__projection(a: f_present__ref1) : us_rep7 =
  (a).f_present__content1

logic w1 : us_rep7

logic attr__ATTRIBUTE_ADDRESS12 : int

logic z1 : us_rep7

logic attr__ATTRIBUTE_ADDRESS13 : int

predicate default_initial_assumption2(temp___expr_170: us_rep1,
  temp___skip_top_level_171: bool) = ((temp___expr_170).attr__tag1 = us_tag1)

predicate default_initial_assumption3(temp___expr_189: us_rep3,
  temp___skip_top_level_190: bool) = ((temp___expr_189).attr__tag3 = us_tag3)

logic us_tag10 : int

logic value__size10 : int

logic object__size10 : int

logic alignment10 : int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 : (0 <= object__size10)

axiom alignment_axiom10 : (0 <= alignment10)

logic test_record_cnt_ex__nested_3__complex__b__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__b__position5 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit5 <  test_record_cnt_ex__nested_3__complex__b__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position5)

logic test_record_cnt_ex__nested_3__complex__g__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__g__position5 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit5 <  test_record_cnt_ex__nested_3__complex__g__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position5)

logic test_record_cnt_ex__nested_3__complex__f__first__bit5 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit5 : int

logic test_record_cnt_ex__nested_3__complex__f__position5 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit5)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom5 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit5 <  test_record_cnt_ex__nested_3__complex__f__last__bit5)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom5 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position5)

logic user_eq11 : us_rep5, us_rep5 -> bool

logic dummy11 : us_rep5

type tno_fB__ref = { tno_fB__content : us_rep5
}

function tno_fB__ref_tno_fB__content__projection(a: tno_fB__ref) : us_rep5 =
  (a).tno_fB__content

predicate dynamic_invariant1(temp___expr_211: us_rep5,
  temp___is_init_207: bool, temp___skip_constant_208: bool,
  temp___do_toplevel_209: bool, temp___do_typ_inv_210: bool) =
  ((not (temp___skip_constant_208 = true)) -> in_range2(of_int(0),
  temp___expr_211))

predicate default_initial_assumption4(temp___expr_213: us_rep5,
  temp___skip_top_level_214: bool) =
  (((temp___expr_213).attr__tag5 = us_tag6) and
  (((temp___expr_213).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b = of_int(0)))

logic us_tag11 : int

logic value__size11 : int

logic object__size11 : int

logic alignment11 : int

axiom value__size_axiom11 : (0 <= value__size11)

axiom object__size_axiom11 : (0 <= object__size11)

axiom alignment_axiom11 : (0 <= alignment11)

logic test_record_cnt_ex__nested_3__complex__b__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__b__position6 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit6 <  test_record_cnt_ex__nested_3__complex__b__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position6)

logic test_record_cnt_ex__nested_3__complex__g__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__g__position6 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit6 <  test_record_cnt_ex__nested_3__complex__g__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position6)

logic test_record_cnt_ex__nested_3__complex__f__first__bit6 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit6 : int

logic test_record_cnt_ex__nested_3__complex__f__position6 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit6)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom6 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit6 <  test_record_cnt_ex__nested_3__complex__f__last__bit6)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom6 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position6)

logic user_eq12 : us_rep5, us_rep5 -> bool

logic dummy12 : us_rep5

type tf_presentB__ref = { tf_presentB__content : us_rep5
}

function tf_presentB__ref_tf_presentB__content__projection(a: tf_presentB__ref) : us_rep5 =
  (a).tf_presentB__content

predicate dynamic_invariant2(temp___expr_222: us_rep5,
  temp___is_init_218: bool, temp___skip_constant_219: bool,
  temp___do_toplevel_220: bool, temp___do_typ_inv_221: bool) =
  ((not (temp___skip_constant_219 = true)) -> in_range3(of_int(1),
  temp___expr_222))

predicate default_initial_assumption5(temp___expr_224: us_rep5,
  temp___skip_top_level_225: bool) =
  (((temp___expr_224).attr__tag5 = us_tag7) and
  (((temp___expr_224).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b = of_int(1)))

logic us_tag12 : int

predicate in_range6(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size12 : int

logic object__size12 : int

logic alignment12 : int

axiom value__size_axiom12 : (0 <= value__size12)

axiom object__size_axiom12 : (0 <= object__size12)

axiom alignment_axiom12 : (0 <= alignment12)

logic test_record_cnt_ex__nested_3__complex__b__first__bit7 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit7 : int

logic test_record_cnt_ex__nested_3__complex__b__position7 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit7)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom7 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit7 <  test_record_cnt_ex__nested_3__complex__b__last__bit7)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position7)

logic test_record_cnt_ex__nested_3__complex__f__first__bit7 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit7 : int

logic test_record_cnt_ex__nested_3__complex__f__position7 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit7)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom7 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit7 <  test_record_cnt_ex__nested_3__complex__f__last__bit7)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position7)

logic test_record_cnt_ex__nested_3__complex__g__first__bit7 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit7 : int

logic test_record_cnt_ex__nested_3__complex__g__position7 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit7)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom7 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit7 <  test_record_cnt_ex__nested_3__complex__g__last__bit7)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom7 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position7)

logic user_eq13 : us_rep5, us_rep5 -> bool

logic dummy13 : us_rep5

type t3s__ref = { t3s__content : us_rep5
}

function t3s__ref_t3s__content__projection(a: t3s__ref) : us_rep5 =
  (a).t3s__content

logic us_tag13 : int

predicate in_range7(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size13 : int

logic object__size13 : int

logic alignment13 : int

axiom value__size_axiom13 : (0 <= value__size13)

axiom object__size_axiom13 : (0 <= object__size13)

axiom alignment_axiom13 : (0 <= alignment13)

logic test_record_cnt_ex__nested_3__complex__b__first__bit8 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit8 : int

logic test_record_cnt_ex__nested_3__complex__b__position8 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit8)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom8 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit8 <  test_record_cnt_ex__nested_3__complex__b__last__bit8)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position8)

logic test_record_cnt_ex__nested_3__complex__f__first__bit8 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit8 : int

logic test_record_cnt_ex__nested_3__complex__f__position8 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit8)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom8 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit8 <  test_record_cnt_ex__nested_3__complex__f__last__bit8)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position8)

logic test_record_cnt_ex__nested_3__complex__g__first__bit8 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit8 : int

logic test_record_cnt_ex__nested_3__complex__g__position8 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit8)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom8 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit8 <  test_record_cnt_ex__nested_3__complex__g__last__bit8)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom8 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position8)

logic user_eq14 : us_rep5, us_rep5 -> bool

logic dummy14 : us_rep5

type t4s__ref = { t4s__content : us_rep5
}

function t4s__ref_t4s__content__projection(a: t4s__ref) : us_rep5 =
  (a).t4s__content

logic us_tag14 : int

predicate in_range8(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size14 : int

logic object__size14 : int

logic alignment14 : int

axiom value__size_axiom14 : (0 <= value__size14)

axiom object__size_axiom14 : (0 <= object__size14)

axiom alignment_axiom14 : (0 <= alignment14)

logic test_record_cnt_ex__nested_3__complex__b__first__bit9 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit9 : int

logic test_record_cnt_ex__nested_3__complex__b__position9 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit9)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom9 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit9 <  test_record_cnt_ex__nested_3__complex__b__last__bit9)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position9)

logic test_record_cnt_ex__nested_3__complex__g__first__bit9 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit9 : int

logic test_record_cnt_ex__nested_3__complex__g__position9 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit9)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom9 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit9 <  test_record_cnt_ex__nested_3__complex__g__last__bit9)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position9)

logic test_record_cnt_ex__nested_3__complex__f__first__bit9 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit9 : int

logic test_record_cnt_ex__nested_3__complex__f__position9 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit9)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom9 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit9 <  test_record_cnt_ex__nested_3__complex__f__last__bit9)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom9 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position9)

logic user_eq15 : us_rep5, us_rep5 -> bool

logic dummy15 : us_rep5

type t5s__ref = { t5s__content : us_rep5
}

function t5s__ref_t5s__content__projection(a: t5s__ref) : us_rep5 =
  (a).t5s__content

logic us_tag15 : int

predicate in_range9(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size15 : int

logic object__size15 : int

logic alignment15 : int

axiom value__size_axiom15 : (0 <= value__size15)

axiom object__size_axiom15 : (0 <= object__size15)

axiom alignment_axiom15 : (0 <= alignment15)

logic test_record_cnt_ex__nested_3__complex__b__first__bit10 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit10 : int

logic test_record_cnt_ex__nested_3__complex__b__position10 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit10)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom10 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit10 <  test_record_cnt_ex__nested_3__complex__b__last__bit10)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position10)

logic test_record_cnt_ex__nested_3__complex__g__first__bit10 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit10 : int

logic test_record_cnt_ex__nested_3__complex__g__position10 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit10)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom10 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit10 <  test_record_cnt_ex__nested_3__complex__g__last__bit10)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position10)

logic test_record_cnt_ex__nested_3__complex__f__first__bit10 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit10 : int

logic test_record_cnt_ex__nested_3__complex__f__position10 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit10)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom10 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit10 <  test_record_cnt_ex__nested_3__complex__f__last__bit10)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom10 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position10)

logic user_eq16 : us_rep5, us_rep5 -> bool

logic dummy16 : us_rep5

type t6s__ref = { t6s__content : us_rep5
}

function t6s__ref_t6s__content__projection(a: t6s__ref) : us_rep5 =
  (a).t6s__content

logic us_tag16 : int

logic value__size16 : int

logic object__size16 : int

logic alignment16 : int

axiom value__size_axiom16 : (0 <= value__size16)

axiom object__size_axiom16 : (0 <= object__size16)

axiom alignment_axiom16 : (0 <= alignment16)

logic test_record_cnt_ex__nested_3__complex__b__first__bit11 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit11 : int

logic test_record_cnt_ex__nested_3__complex__b__position11 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit11)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom11 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit11 <  test_record_cnt_ex__nested_3__complex__b__last__bit11)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position11)

logic test_record_cnt_ex__Tno_fB__g__first__bit1 : int

logic test_record_cnt_ex__Tno_fB__g__last__bit1 : int

logic test_record_cnt_ex__Tno_fB__g__position1 : int

axiom test_record_cnt_ex__Tno_fB__g__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__Tno_fB__g__first__bit1)

axiom test_record_cnt_ex__Tno_fB__g__last__bit_axiom1 :
  (test_record_cnt_ex__Tno_fB__g__first__bit1 <  test_record_cnt_ex__Tno_fB__g__last__bit1)

axiom test_record_cnt_ex__Tno_fB__g__position_axiom1 :
  (0 <= test_record_cnt_ex__Tno_fB__g__position1)

logic test_record_cnt_ex__nested_3__complex__g__first__bit11 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit11 : int

logic test_record_cnt_ex__nested_3__complex__g__position11 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit11)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom11 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit11 <  test_record_cnt_ex__nested_3__complex__g__last__bit11)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position11)

logic test_record_cnt_ex__nested_3__complex__f__first__bit11 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit11 : int

logic test_record_cnt_ex__nested_3__complex__f__position11 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit11)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom11 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit11 <  test_record_cnt_ex__nested_3__complex__f__last__bit11)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom11 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position11)

logic user_eq17 : us_rep6, us_rep6 -> bool

logic dummy17 : us_rep6

type tno_fB__ref1 = { tno_fB__content1 : us_rep6
}

function tno_fB__ref_tno_fB__content__2__projection(a: tno_fB__ref1) : us_rep6 =
  (a).tno_fB__content1

predicate dynamic_invariant3(temp___expr_233: us_rep6,
  temp___is_init_229: bool, temp___skip_constant_230: bool,
  temp___do_toplevel_231: bool, temp___do_typ_inv_232: bool) =
  ((not (temp___skip_constant_230 = true)) -> in_range4(of_int(0),
  to_base4(temp___expr_233)))

predicate default_initial_assumption6(temp___expr_235: us_rep6,
  temp___skip_top_level_236: bool) =
  (((temp___expr_235).attr__tag6 = us_tag8) and
  (((temp___expr_235).us_split_discrs2).rec__test_record_cnt_ex__nested_3__complex__b = of_int(0)))

logic us_tag17 : int

logic value__size17 : int

logic object__size17 : int

logic alignment17 : int

axiom value__size_axiom17 : (0 <= value__size17)

axiom object__size_axiom17 : (0 <= object__size17)

axiom alignment_axiom17 : (0 <= alignment17)

logic test_record_cnt_ex__nested_3__complex__b__first__bit12 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit12 : int

logic test_record_cnt_ex__nested_3__complex__b__position12 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit12)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom12 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit12 <  test_record_cnt_ex__nested_3__complex__b__last__bit12)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position12)

logic test_record_cnt_ex__Tf_presentB__h__first__bit1 : int

logic test_record_cnt_ex__Tf_presentB__h__last__bit1 : int

logic test_record_cnt_ex__Tf_presentB__h__position1 : int

axiom test_record_cnt_ex__Tf_presentB__h__first__bit_axiom1 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__first__bit1)

axiom test_record_cnt_ex__Tf_presentB__h__last__bit_axiom1 :
  (test_record_cnt_ex__Tf_presentB__h__first__bit1 <  test_record_cnt_ex__Tf_presentB__h__last__bit1)

axiom test_record_cnt_ex__Tf_presentB__h__position_axiom1 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__position1)

logic test_record_cnt_ex__nested_3__complex__g__first__bit12 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit12 : int

logic test_record_cnt_ex__nested_3__complex__g__position12 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit12)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom12 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit12 <  test_record_cnt_ex__nested_3__complex__g__last__bit12)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position12)

logic test_record_cnt_ex__nested_3__complex__f__first__bit12 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit12 : int

logic test_record_cnt_ex__nested_3__complex__f__position12 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit12)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom12 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit12 <  test_record_cnt_ex__nested_3__complex__f__last__bit12)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom12 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position12)

logic user_eq18 : us_rep7, us_rep7 -> bool

logic dummy18 : us_rep7

type tf_presentB__ref1 = { tf_presentB__content1 : us_rep7
}

function tf_presentB__ref_tf_presentB__content__2__projection(a: tf_presentB__ref1) : us_rep7 =
  (a).tf_presentB__content1

predicate dynamic_invariant4(temp___expr_245: us_rep7,
  temp___is_init_241: bool, temp___skip_constant_242: bool,
  temp___do_toplevel_243: bool, temp___do_typ_inv_244: bool) =
  ((not (temp___skip_constant_242 = true)) -> in_range5(of_int(1),
  to_base5(temp___expr_245)))

predicate default_initial_assumption7(temp___expr_247: us_rep7,
  temp___skip_top_level_248: bool) =
  (((temp___expr_247).attr__tag7 = us_tag9) and
  (((temp___expr_247).us_split_discrs3).rec__test_record_cnt_ex__nested_3__complex__b = of_int(1)))

logic us_tag18 : int

predicate in_range10(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size18 : int

logic object__size18 : int

logic alignment18 : int

axiom value__size_axiom18 : (0 <= value__size18)

axiom object__size_axiom18 : (0 <= object__size18)

axiom alignment_axiom18 : (0 <= alignment18)

logic test_record_cnt_ex__nested_3__complex__b__first__bit13 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit13 : int

logic test_record_cnt_ex__nested_3__complex__b__position13 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit13)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom13 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit13 <  test_record_cnt_ex__nested_3__complex__b__last__bit13)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position13)

logic test_record_cnt_ex__nested_3__complex__g__first__bit13 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit13 : int

logic test_record_cnt_ex__nested_3__complex__g__position13 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit13)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom13 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit13 <  test_record_cnt_ex__nested_3__complex__g__last__bit13)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position13)

logic test_record_cnt_ex__nested_3__complex__f__first__bit13 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit13 : int

logic test_record_cnt_ex__nested_3__complex__f__position13 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit13)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom13 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit13 <  test_record_cnt_ex__nested_3__complex__f__last__bit13)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom13 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position13)

logic test_record_cnt_ex__Tno_fB__g__first__bit2 : int

logic test_record_cnt_ex__Tno_fB__g__last__bit2 : int

logic test_record_cnt_ex__Tno_fB__g__position2 : int

axiom test_record_cnt_ex__Tno_fB__g__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__Tno_fB__g__first__bit2)

axiom test_record_cnt_ex__Tno_fB__g__last__bit_axiom2 :
  (test_record_cnt_ex__Tno_fB__g__first__bit2 <  test_record_cnt_ex__Tno_fB__g__last__bit2)

axiom test_record_cnt_ex__Tno_fB__g__position_axiom2 :
  (0 <= test_record_cnt_ex__Tno_fB__g__position2)

logic user_eq19 : us_rep6, us_rep6 -> bool

logic dummy19 : us_rep6

type t7s__ref = { t7s__content : us_rep6
}

function t7s__ref_t7s__content__projection(a: t7s__ref) : us_rep6 =
  (a).t7s__content

logic us_tag19 : int

predicate in_range11(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size19 : int

logic object__size19 : int

logic alignment19 : int

axiom value__size_axiom19 : (0 <= value__size19)

axiom object__size_axiom19 : (0 <= object__size19)

axiom alignment_axiom19 : (0 <= alignment19)

logic test_record_cnt_ex__nested_3__complex__b__first__bit14 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit14 : int

logic test_record_cnt_ex__nested_3__complex__b__position14 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit14)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom14 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit14 <  test_record_cnt_ex__nested_3__complex__b__last__bit14)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position14)

logic test_record_cnt_ex__nested_3__complex__g__first__bit14 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit14 : int

logic test_record_cnt_ex__nested_3__complex__g__position14 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit14)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom14 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit14 <  test_record_cnt_ex__nested_3__complex__g__last__bit14)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position14)

logic test_record_cnt_ex__nested_3__complex__f__first__bit14 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit14 : int

logic test_record_cnt_ex__nested_3__complex__f__position14 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit14)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom14 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit14 <  test_record_cnt_ex__nested_3__complex__f__last__bit14)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom14 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position14)

logic test_record_cnt_ex__Tno_fB__g__first__bit3 : int

logic test_record_cnt_ex__Tno_fB__g__last__bit3 : int

logic test_record_cnt_ex__Tno_fB__g__position3 : int

axiom test_record_cnt_ex__Tno_fB__g__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__Tno_fB__g__first__bit3)

axiom test_record_cnt_ex__Tno_fB__g__last__bit_axiom3 :
  (test_record_cnt_ex__Tno_fB__g__first__bit3 <  test_record_cnt_ex__Tno_fB__g__last__bit3)

axiom test_record_cnt_ex__Tno_fB__g__position_axiom3 :
  (0 <= test_record_cnt_ex__Tno_fB__g__position3)

logic user_eq20 : us_rep6, us_rep6 -> bool

logic dummy20 : us_rep6

type t8s__ref = { t8s__content : us_rep6
}

function t8s__ref_t8s__content__projection(a: t8s__ref) : us_rep6 =
  (a).t8s__content

logic us_tag20 : int

predicate in_range12(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size20 : int

logic object__size20 : int

logic alignment20 : int

axiom value__size_axiom20 : (0 <= value__size20)

axiom object__size_axiom20 : (0 <= object__size20)

axiom alignment_axiom20 : (0 <= alignment20)

logic test_record_cnt_ex__nested_3__complex__b__first__bit15 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit15 : int

logic test_record_cnt_ex__nested_3__complex__b__position15 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit15)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom15 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit15 <  test_record_cnt_ex__nested_3__complex__b__last__bit15)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position15)

logic test_record_cnt_ex__nested_3__complex__g__first__bit15 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit15 : int

logic test_record_cnt_ex__nested_3__complex__g__position15 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit15)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom15 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit15 <  test_record_cnt_ex__nested_3__complex__g__last__bit15)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position15)

logic test_record_cnt_ex__nested_3__complex__f__first__bit15 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit15 : int

logic test_record_cnt_ex__nested_3__complex__f__position15 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit15)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom15 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit15 <  test_record_cnt_ex__nested_3__complex__f__last__bit15)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom15 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position15)

logic test_record_cnt_ex__Tf_presentB__h__first__bit2 : int

logic test_record_cnt_ex__Tf_presentB__h__last__bit2 : int

logic test_record_cnt_ex__Tf_presentB__h__position2 : int

axiom test_record_cnt_ex__Tf_presentB__h__first__bit_axiom2 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__first__bit2)

axiom test_record_cnt_ex__Tf_presentB__h__last__bit_axiom2 :
  (test_record_cnt_ex__Tf_presentB__h__first__bit2 <  test_record_cnt_ex__Tf_presentB__h__last__bit2)

axiom test_record_cnt_ex__Tf_presentB__h__position_axiom2 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__position2)

logic user_eq21 : us_rep7, us_rep7 -> bool

logic dummy21 : us_rep7

type t9s__ref = { t9s__content : us_rep7
}

function t9s__ref_t9s__content__projection(a: t9s__ref) : us_rep7 =
  (a).t9s__content

logic us_tag21 : int

predicate in_range13(rec__test_record_cnt_ex__nested_3__complex__b1: bool,
  a: us_rep5) =
  (rec__test_record_cnt_ex__nested_3__complex__b1 = ((a).us_split_discrs1).rec__test_record_cnt_ex__nested_3__complex__b)

logic value__size21 : int

logic object__size21 : int

logic alignment21 : int

axiom value__size_axiom21 : (0 <= value__size21)

axiom object__size_axiom21 : (0 <= object__size21)

axiom alignment_axiom21 : (0 <= alignment21)

logic test_record_cnt_ex__nested_3__complex__b__first__bit16 : int

logic test_record_cnt_ex__nested_3__complex__b__last__bit16 : int

logic test_record_cnt_ex__nested_3__complex__b__position16 : int

axiom test_record_cnt_ex__nested_3__complex__b__first__bit_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__first__bit16)

axiom test_record_cnt_ex__nested_3__complex__b__last__bit_axiom16 :
  (test_record_cnt_ex__nested_3__complex__b__first__bit16 <  test_record_cnt_ex__nested_3__complex__b__last__bit16)

axiom test_record_cnt_ex__nested_3__complex__b__position_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__b__position16)

logic test_record_cnt_ex__nested_3__complex__g__first__bit16 : int

logic test_record_cnt_ex__nested_3__complex__g__last__bit16 : int

logic test_record_cnt_ex__nested_3__complex__g__position16 : int

axiom test_record_cnt_ex__nested_3__complex__g__first__bit_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__first__bit16)

axiom test_record_cnt_ex__nested_3__complex__g__last__bit_axiom16 :
  (test_record_cnt_ex__nested_3__complex__g__first__bit16 <  test_record_cnt_ex__nested_3__complex__g__last__bit16)

axiom test_record_cnt_ex__nested_3__complex__g__position_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__g__position16)

logic test_record_cnt_ex__nested_3__complex__f__first__bit16 : int

logic test_record_cnt_ex__nested_3__complex__f__last__bit16 : int

logic test_record_cnt_ex__nested_3__complex__f__position16 : int

axiom test_record_cnt_ex__nested_3__complex__f__first__bit_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__first__bit16)

axiom test_record_cnt_ex__nested_3__complex__f__last__bit_axiom16 :
  (test_record_cnt_ex__nested_3__complex__f__first__bit16 <  test_record_cnt_ex__nested_3__complex__f__last__bit16)

axiom test_record_cnt_ex__nested_3__complex__f__position_axiom16 :
  (0 <= test_record_cnt_ex__nested_3__complex__f__position16)

logic test_record_cnt_ex__Tf_presentB__h__first__bit3 : int

logic test_record_cnt_ex__Tf_presentB__h__last__bit3 : int

logic test_record_cnt_ex__Tf_presentB__h__position3 : int

axiom test_record_cnt_ex__Tf_presentB__h__first__bit_axiom3 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__first__bit3)

axiom test_record_cnt_ex__Tf_presentB__h__last__bit_axiom3 :
  (test_record_cnt_ex__Tf_presentB__h__first__bit3 <  test_record_cnt_ex__Tf_presentB__h__last__bit3)

axiom test_record_cnt_ex__Tf_presentB__h__position_axiom3 :
  (0 <= test_record_cnt_ex__Tf_presentB__h__position3)

logic user_eq22 : us_rep7, us_rep7 -> bool

logic dummy22 : us_rep7

type t10s__ref = { t10s__content : us_rep7
}

function t10s__ref_t10s__content__projection(a: t10s__ref) : us_rep7 =
  (a).t10s__content

predicate default_initial_assumption8(temp___expr_162: us_rep,
  temp___skip_top_level_163: bool) = ((temp___expr_162).attr__tag = us_tag)

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 2)

logic rliteral1 : integer

axiom rliteral_axiom1 : (integerqtint(rliteral1) = 1)

axiom c__def_axiom : (c = { us_split_fields3 = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f2 = rliteral;
  rec__test_record_cnt_ex__root__f11 = rliteral1; rec__ext__1 = us_null_ext__
  }; attr__tag1 = us_tag1 })

logic rliteral2 : integer

axiom rliteral_axiom2 : (integerqtint(rliteral2) = 7)

axiom x__def_axiom : (x = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields11 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral2; rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__5 = us_null_ext__ }; attr__tag5 = us_tag12 })

axiom y__def_axiom : id__function_guard(id(7), 7)

axiom y__def_axiom1 : (y = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields11 = { rec__test_record_cnt_ex__nested_3__complex__g =
  of_rep(id(7)); rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__5 = us_null_ext__ }; attr__tag5 = us_tag13 })

logic rliteral3 : integer

axiom rliteral_axiom3 : (integerqtint(rliteral3) = 3)

logic rliteral4 : integer

axiom rliteral_axiom4 : (integerqtint(rliteral4) = 6)

axiom w__def_axiom : (w = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(1) };
  us_split_fields11 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral3; rec__test_record_cnt_ex__nested_3__complex__f = rliteral4;
  rec__ext__5 = us_null_ext__ }; attr__tag5 = us_tag14 })

axiom z__def_axiom : id__function_guard(id(6), 6)

axiom z__def_axiom1 : (z = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(1) };
  us_split_fields11 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral3; rec__test_record_cnt_ex__nested_3__complex__f = of_rep(id(6));
  rec__ext__5 = us_null_ext__ }; attr__tag5 = us_tag15 })

logic rliteral5 : integer

axiom rliteral_axiom5 : (integerqtint(rliteral5) = 8)

axiom x__def_axiom1 : (x1 = of_base4(to_base4({ us_split_discrs2 =
  (x).us_split_discrs1; us_split_fields13 = {
  rec__test_record_cnt_ex__Tno_fB__g = rliteral5;
  rec__test_record_cnt_ex__nested_3__complex__g1 =
  ((x).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f1 =
  ((x).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__6 = us_null_ext__ }; attr__tag6 = us_tag18 })))

axiom y__def_axiom2 : (y1 = of_base4(to_base4({ us_split_discrs2 =
  (y).us_split_discrs1; us_split_fields13 = {
  rec__test_record_cnt_ex__Tno_fB__g = rliteral5;
  rec__test_record_cnt_ex__nested_3__complex__g1 =
  ((y).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f1 =
  ((y).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__6 = us_null_ext__ }; attr__tag6 = us_tag19 })))

axiom w__def_axiom1 : (w1 = of_base5(to_base5({ us_split_discrs3 =
  (w).us_split_discrs1; us_split_fields15 = {
  rec__test_record_cnt_ex__Tf_presentB__h = rliteral5;
  rec__test_record_cnt_ex__nested_3__complex__g2 =
  ((w).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f2 =
  ((w).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__7 = us_null_ext__ }; attr__tag7 = us_tag20 })))

axiom z__def_axiom2 : (z1 = of_base5(to_base5({ us_split_discrs3 =
  (z).us_split_discrs1; us_split_fields15 = {
  rec__test_record_cnt_ex__Tf_presentB__h = rliteral5;
  rec__test_record_cnt_ex__nested_3__complex__g2 =
  ((z).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f2 =
  ((z).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__7 = us_null_ext__ }; attr__tag7 = us_tag21 })))

logic rliteral6 : integer

axiom rliteral_axiom6 : (integerqtint(rliteral6) = 4)

 (* File "test_record_cnt_ex.ads", line 1, characters 0-0 *)
goal defqtvc : (({ us_split_fields3 = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f2 = rliteral;
  rec__test_record_cnt_ex__root__f11 = rliteral1; rec__ext__1 = us_null_ext__
  }; attr__tag1 = us_tag1 } = c) -> (dynamic_invariant1(x, true, false, true,
  true) -> (let temp___279 = { us_split_discrs1 = {
  rec__test_record_cnt_ex__nested_3__complex__b = of_int(0) };
  us_split_fields11 = { rec__test_record_cnt_ex__nested_3__complex__g =
  rliteral2; rec__test_record_cnt_ex__nested_3__complex__f = dummy;
  rec__ext__5 = us_null_ext__ }; attr__tag5 = us_tag12 } : us_rep5 in (({
  us_split_discrs1 = (temp___279).us_split_discrs1; us_split_fields11 =
  (temp___279).us_split_fields11; attr__tag5 = us_tag6 } = x) ->
  (dynamic_invariant1(y, true, false, true, true) ->
  (forall o:integer. ((to_rep(o) = id(7)) -> (let temp___280 = {
  us_split_discrs1 = { rec__test_record_cnt_ex__nested_3__complex__b =
  of_int(0) }; us_split_fields11 = {
  rec__test_record_cnt_ex__nested_3__complex__g = o;
  rec__test_record_cnt_ex__nested_3__complex__f = dummy; rec__ext__5 =
  us_null_ext__ }; attr__tag5 = us_tag13 } : us_rep5 in (({
  us_split_discrs1 = (temp___280).us_split_discrs1; us_split_fields11 =
  (temp___280).us_split_fields11; attr__tag5 = us_tag6 } = y) ->
  (dynamic_invariant2(w, true, false, true, true) -> (let temp___281 = {
  us_split_discrs1 = { rec__test_record_cnt_ex__nested_3__complex__b =
  of_int(1) }; us_split_fields11 = {
  rec__test_record_cnt_ex__nested_3__complex__g = rliteral3;
  rec__test_record_cnt_ex__nested_3__complex__f = rliteral4; rec__ext__5 =
  us_null_ext__ }; attr__tag5 = us_tag14 } : us_rep5 in (({
  us_split_discrs1 = (temp___281).us_split_discrs1; us_split_fields11 =
  (temp___281).us_split_fields11; attr__tag5 = us_tag7 } = w) ->
  (dynamic_invariant2(z, true, false, true, true) ->
  (forall o1:integer. ((to_rep(o1) = id(6)) -> (let temp___282 = {
  us_split_discrs1 = { rec__test_record_cnt_ex__nested_3__complex__b =
  of_int(1) }; us_split_fields11 = {
  rec__test_record_cnt_ex__nested_3__complex__g = rliteral3;
  rec__test_record_cnt_ex__nested_3__complex__f = o1; rec__ext__5 =
  us_null_ext__ }; attr__tag5 = us_tag15 } : us_rep5 in (({
  us_split_discrs1 = (temp___282).us_split_discrs1; us_split_fields11 =
  (temp___282).us_split_fields11; attr__tag5 = us_tag7 } = z) ->
  (forall x_1__split_fields:us_split_fields4. ((x_1__split_fields = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f21 =
  ((c).us_split_fields3).rec__test_record_cnt_ex__nested_1__hidden_1__f2;
  rec__test_record_cnt_ex__two_f2__f2 = rliteral3;
  rec__test_record_cnt_ex__root__f12 =
  ((c).us_split_fields3).rec__test_record_cnt_ex__root__f11; rec__ext__2 =
  us_null_ext__ }) -> ((x_1__attr__tag = us_tag2) -> (let o2 = id(3) : int in
  ((id__function_guard(o2, 3) and dynamic_invariant(o2, true, false, true,
  true)) ->
  (forall o3:integer. ((to_rep(o3) = o2) ->
  (forall y_1__split_fields:us_split_fields4. ((y_1__split_fields = {
  rec__test_record_cnt_ex__nested_1__hidden_1__f21 =
  ((c).us_split_fields3).rec__test_record_cnt_ex__nested_1__hidden_1__f2;
  rec__test_record_cnt_ex__two_f2__f2 = o3;
  rec__test_record_cnt_ex__root__f12 =
  ((c).us_split_fields3).rec__test_record_cnt_ex__root__f11; rec__ext__2 =
  us_null_ext__ }) -> ((y_1__attr__tag = us_tag2) -> ((bool_eq4({
  us_split_fields5 = x_1__split_fields; attr__tag2 = x_1__attr__tag }, {
  us_split_fields5 = y_1__split_fields; attr__tag2 = y_1__attr__tag
  }) = true) ->
  (forall x_2__split_fields:us_split_fields8. ((x_2__split_fields = {
  rec__test_record_cnt_ex__nested_2__hidden_21 =
  ((c1).us_split_fields7).rec__test_record_cnt_ex__nested_2__hidden_2;
  rec__test_record_cnt_ex__hidden_info__f2 = rliteral6;
  rec__test_record_cnt_ex__root__f14 =
  ((c1).us_split_fields7).rec__test_record_cnt_ex__root__f13; rec__ext__4 =
  us_null_ext__ }) -> ((x_2__attr__tag = us_tag4) -> (let o4 = id(4) : int in
  ((id__function_guard(o4, 4) and dynamic_invariant(o4, true, false, true,
  true)) ->
  (forall o5:integer. ((to_rep(o5) = o4) ->
  (forall y_2__split_fields:us_split_fields8. ((y_2__split_fields = {
  rec__test_record_cnt_ex__nested_2__hidden_21 =
  ((c1).us_split_fields7).rec__test_record_cnt_ex__nested_2__hidden_2;
  rec__test_record_cnt_ex__hidden_info__f2 = o5;
  rec__test_record_cnt_ex__root__f14 =
  ((c1).us_split_fields7).rec__test_record_cnt_ex__root__f13; rec__ext__4 =
  us_null_ext__ }) -> ((y_2__attr__tag = us_tag4) -> ((bool_eq6({
  us_split_fields9 = x_2__split_fields; attr__tag4 = x_2__attr__tag }, {
  us_split_fields9 = y_2__split_fields; attr__tag4 = y_2__attr__tag
  }) = true) -> in_range4(of_int(0), to_base4({ us_split_discrs2 =
  (x).us_split_discrs1; us_split_fields13 = {
  rec__test_record_cnt_ex__Tno_fB__g = rliteral5;
  rec__test_record_cnt_ex__nested_3__complex__g1 =
  ((x).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__g;
  rec__test_record_cnt_ex__nested_3__complex__f1 =
  ((x).us_split_fields11).rec__test_record_cnt_ex__nested_3__complex__f;
  rec__ext__6 = us_null_ext__ }; attr__tag6 = us_tag18 })))))))))))))))))))))))))))))))))))))))))
