(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

function to_rep(x: natural) : int = naturalqtint(x)

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref = { map__content : (int,natural) farray
}

logic slide : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq :
  (forall a:(int,natural) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,natural) farray, a__first: int, a__last: int,
  b: (int,natural) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,natural) farray; rt : t
}

function to_array(a: us_t) : (int,natural) farray = (a).elts

function of_array(a: (int,natural) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type nat_array__ref = { nat_array__content : us_t
}

function nat_array__ref_nat_array__content__projection(a: nat_array__ref) : us_t =
  (a).nat_array__content

type t4s__ref = { t4s__content : us_t
}

function t4s__ref_t4s__content__projection(a: t4s__ref) : us_t =
  (a).t4s__content

type us_split_discrs = { rec__static_discr__i_holder__unused : natural;
rec__static_discr__i_holder__c : natural
}

function us_split_discrs_rec__static_discr__i_holder__unused__projection(a: us_split_discrs) : natural =
  (a).rec__static_discr__i_holder__unused

function us_split_discrs_rec__static_discr__i_holder__c__projection(a: us_split_discrs) : natural =
  (a).rec__static_discr__i_holder__c

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__static_discr__i_holder__content : us_t
}

function us_split_fields_rec__static_discr__i_holder__content__projection(a: us_split_fields) : us_t =
  (a).rec__static_discr__i_holder__content

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq6(a: us_rep, b: us_rep) : bool =
  (if (((to_rep(((a).us_split_discrs1).rec__static_discr__i_holder__unused) = to_rep(((b).us_split_discrs1).rec__static_discr__i_holder__unused)) and
  (to_rep(((a).us_split_discrs1).rec__static_discr__i_holder__c) = to_rep(((b).us_split_discrs1).rec__static_discr__i_holder__c))) and
  (bool_eq5(((a).us_split_fields1).rec__static_discr__i_holder__content,
  ((b).us_split_fields1).rec__static_discr__i_holder__content) = true)) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic static_discr__i_holder__unused__first__bit : int

logic static_discr__i_holder__unused__last__bit : int

logic static_discr__i_holder__unused__position : int

axiom static_discr__i_holder__unused__first__bit_axiom :
  (0 <= static_discr__i_holder__unused__first__bit)

axiom static_discr__i_holder__unused__last__bit_axiom :
  (static_discr__i_holder__unused__first__bit <  static_discr__i_holder__unused__last__bit)

axiom static_discr__i_holder__unused__position_axiom :
  (0 <= static_discr__i_holder__unused__position)

logic static_discr__i_holder__c__first__bit : int

logic static_discr__i_holder__c__last__bit : int

logic static_discr__i_holder__c__position : int

axiom static_discr__i_holder__c__first__bit_axiom :
  (0 <= static_discr__i_holder__c__first__bit)

axiom static_discr__i_holder__c__last__bit_axiom :
  (static_discr__i_holder__c__first__bit <  static_discr__i_holder__c__last__bit)

axiom static_discr__i_holder__c__position_axiom :
  (0 <= static_discr__i_holder__c__position)

logic static_discr__i_holder__content__first__bit : int

logic static_discr__i_holder__content__last__bit : int

logic static_discr__i_holder__content__position : int

axiom static_discr__i_holder__content__first__bit_axiom :
  (0 <= static_discr__i_holder__content__first__bit)

axiom static_discr__i_holder__content__last__bit_axiom :
  (static_discr__i_holder__content__first__bit <  static_discr__i_holder__content__last__bit)

axiom static_discr__i_holder__content__position_axiom :
  (0 <= static_discr__i_holder__content__position)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type i_holder__ref = { i_holder__content : us_rep
}

function i_holder__ref_i_holder__content__projection(a: i_holder__ref) : us_rep =
  (a).i_holder__content

type t6s__ref = { t6s__content : us_t
}

function t6s__ref_t6s__content__projection(a: t6s__ref) : us_t =
  (a).t6s__content

type us_split_fields2 = { rec__static_discr__i_holder__content1 : us_t
}

function us_split_fields_rec__static_discr__i_holder__content__2__projection(a: us_split_fields2) : us_t =
  (a).rec__static_discr__i_holder__content1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs2 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__2__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs2

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function to_base(a: us_rep1) : us_rep = { us_split_discrs1 =
  (a).us_split_discrs2; us_split_fields1 = {
  rec__static_discr__i_holder__content =
  of_array(to_array(((a).us_split_fields3).rec__static_discr__i_holder__content1),
  first1(((a).us_split_fields3).rec__static_discr__i_holder__content1),
  last1(((a).us_split_fields3).rec__static_discr__i_holder__content1)) } }

function of_base(r: us_rep) : us_rep1 = { us_split_discrs2 =
  (r).us_split_discrs1; us_split_fields3 = {
  rec__static_discr__i_holder__content1 =
  of_array(to_array(((r).us_split_fields1).rec__static_discr__i_holder__content),
  first1(((r).us_split_fields1).rec__static_discr__i_holder__content),
  last1(((r).us_split_fields1).rec__static_discr__i_holder__content)) } }

function bool_eq7(a: us_rep1, b: us_rep1) : bool =
  (if (((to_rep(((a).us_split_discrs2).rec__static_discr__i_holder__unused) = to_rep(((b).us_split_discrs2).rec__static_discr__i_holder__unused)) and
  (to_rep(((a).us_split_discrs2).rec__static_discr__i_holder__c) = to_rep(((b).us_split_discrs2).rec__static_discr__i_holder__c))) and
  (bool_eq5(((a).us_split_fields3).rec__static_discr__i_holder__content1,
  ((b).us_split_fields3).rec__static_discr__i_holder__content1) = true)) then true else false)

predicate in_range4(rec__static_discr__i_holder__unused1: int,
  rec__static_discr__i_holder__c1: int, a: us_rep) =
  ((rec__static_discr__i_holder__unused1 = to_rep(((a).us_split_discrs1).rec__static_discr__i_holder__unused)) and
  (rec__static_discr__i_holder__c1 = to_rep(((a).us_split_discrs1).rec__static_discr__i_holder__c)))

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic static_discr__i_holder__unused__first__bit1 : int

logic static_discr__i_holder__unused__last__bit1 : int

logic static_discr__i_holder__unused__position1 : int

axiom static_discr__i_holder__unused__first__bit_axiom1 :
  (0 <= static_discr__i_holder__unused__first__bit1)

axiom static_discr__i_holder__unused__last__bit_axiom1 :
  (static_discr__i_holder__unused__first__bit1 <  static_discr__i_holder__unused__last__bit1)

axiom static_discr__i_holder__unused__position_axiom1 :
  (0 <= static_discr__i_holder__unused__position1)

logic static_discr__i_holder__c__first__bit1 : int

logic static_discr__i_holder__c__last__bit1 : int

logic static_discr__i_holder__c__position1 : int

axiom static_discr__i_holder__c__first__bit_axiom1 :
  (0 <= static_discr__i_holder__c__first__bit1)

axiom static_discr__i_holder__c__last__bit_axiom1 :
  (static_discr__i_holder__c__first__bit1 <  static_discr__i_holder__c__last__bit1)

axiom static_discr__i_holder__c__position_axiom1 :
  (0 <= static_discr__i_holder__c__position1)

logic static_discr__i_holder__content__first__bit1 : int

logic static_discr__i_holder__content__last__bit1 : int

logic static_discr__i_holder__content__position1 : int

axiom static_discr__i_holder__content__first__bit_axiom1 :
  (0 <= static_discr__i_holder__content__first__bit1)

axiom static_discr__i_holder__content__last__bit_axiom1 :
  (static_discr__i_holder__content__first__bit1 <  static_discr__i_holder__content__last__bit1)

axiom static_discr__i_holder__content__position_axiom1 :
  (0 <= static_discr__i_holder__content__position1)

logic user_eq5 : us_rep1, us_rep1 -> bool

logic dummy5 : us_rep1

type t5s__ref = { t5s__content : us_rep1
}

function t5s__ref_t5s__content__projection(a: t5s__ref) : us_rep1 =
  (a).t5s__content

type us_split_discrs3 = { rec__static_discr__holder__unused : natural;
rec__static_discr__holder__c : natural
}

function us_split_discrs_rec__static_discr__holder__unused__projection(a: us_split_discrs3) : natural =
  (a).rec__static_discr__holder__unused

function us_split_discrs_rec__static_discr__holder__c__projection(a: us_split_discrs3) : natural =
  (a).rec__static_discr__holder__c

type us_split_discrs__ref1 = { us_split_discrs__content1 : us_split_discrs3
}

function us_split_discrs__ref___split_discrs__content__2__projection(a: us_split_discrs__ref1) : us_split_discrs3 =
  (a).us_split_discrs__content1

type us_split_fields4 = { rec__static_discr__holder__content : us_rep1;
rec__static_discr__holder__length : natural
}

function us_split_fields_rec__static_discr__holder__content__projection(a: us_split_fields4) : us_rep1 =
  (a).rec__static_discr__holder__content

function us_split_fields_rec__static_discr__holder__length__projection(a: us_split_fields4) : natural =
  (a).rec__static_discr__holder__length

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___split_fields__content__3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_discrs4 : us_split_discrs3; us_split_fields5 :
us_split_fields4
}

function us_rep___split_discrs__3__projection(a: us_rep2) : us_split_discrs3 =
  (a).us_split_discrs4

function us_rep___split_fields__3__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function bool_eq8(a: us_rep2, b: us_rep2) : bool =
  (if (((to_rep(((a).us_split_discrs4).rec__static_discr__holder__unused) = to_rep(((b).us_split_discrs4).rec__static_discr__holder__unused)) and
  (to_rep(((a).us_split_discrs4).rec__static_discr__holder__c) = to_rep(((b).us_split_discrs4).rec__static_discr__holder__c))) and
  ((bool_eq7(((a).us_split_fields5).rec__static_discr__holder__content,
  ((b).us_split_fields5).rec__static_discr__holder__content) = true) and
  (to_rep(((a).us_split_fields5).rec__static_discr__holder__length) = to_rep(((b).us_split_fields5).rec__static_discr__holder__length)))) then true else false)

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic static_discr__holder__unused__first__bit : int

logic static_discr__holder__unused__last__bit : int

logic static_discr__holder__unused__position : int

axiom static_discr__holder__unused__first__bit_axiom :
  (0 <= static_discr__holder__unused__first__bit)

axiom static_discr__holder__unused__last__bit_axiom :
  (static_discr__holder__unused__first__bit <  static_discr__holder__unused__last__bit)

axiom static_discr__holder__unused__position_axiom :
  (0 <= static_discr__holder__unused__position)

logic static_discr__holder__c__first__bit : int

logic static_discr__holder__c__last__bit : int

logic static_discr__holder__c__position : int

axiom static_discr__holder__c__first__bit_axiom :
  (0 <= static_discr__holder__c__first__bit)

axiom static_discr__holder__c__last__bit_axiom :
  (static_discr__holder__c__first__bit <  static_discr__holder__c__last__bit)

axiom static_discr__holder__c__position_axiom :
  (0 <= static_discr__holder__c__position)

logic static_discr__holder__content__first__bit : int

logic static_discr__holder__content__last__bit : int

logic static_discr__holder__content__position : int

axiom static_discr__holder__content__first__bit_axiom :
  (0 <= static_discr__holder__content__first__bit)

axiom static_discr__holder__content__last__bit_axiom :
  (static_discr__holder__content__first__bit <  static_discr__holder__content__last__bit)

axiom static_discr__holder__content__position_axiom :
  (0 <= static_discr__holder__content__position)

logic static_discr__holder__length__first__bit : int

logic static_discr__holder__length__last__bit : int

logic static_discr__holder__length__position : int

axiom static_discr__holder__length__first__bit_axiom :
  (0 <= static_discr__holder__length__first__bit)

axiom static_discr__holder__length__last__bit_axiom :
  (static_discr__holder__length__first__bit <  static_discr__holder__length__last__bit)

axiom static_discr__holder__length__position_axiom :
  (0 <= static_discr__holder__length__position)

logic user_eq6 : us_rep2, us_rep2 -> bool

logic dummy6 : us_rep2

type holder__ref = { holder__content : us_rep2
}

function holder__ref_holder__content__projection(a: holder__ref) : us_rep2 =
  (a).holder__content

logic a : us_t

logic attr__ATTRIBUTE_ADDRESS : int

logic e : int

logic attr__ATTRIBUTE_ADDRESS1 : int

type t14b__ref = { t14b__content : us_t
}

function t14b__ref_t14b__content__projection(a1: t14b__ref) : us_t =
  (a1).t14b__content

type us_split_fields6 = { rec__static_discr__i_holder__content2 : us_t
}

function us_split_fields_rec__static_discr__i_holder__content__5__projection(a1: us_split_fields6) : us_t =
  (a1).rec__static_discr__i_holder__content2

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___split_fields__content__8__projection(a1: us_split_fields__ref3) : us_split_fields6 =
  (a1).us_split_fields__content3

type us_rep3 = { us_split_discrs5 : us_split_discrs; us_split_fields7 :
us_split_fields6
}

function us_rep___split_discrs__8__projection(a1: us_rep3) : us_split_discrs =
  (a1).us_split_discrs5

function us_rep___split_fields__8__projection(a1: us_rep3) : us_split_fields6 =
  (a1).us_split_fields7

function to_base1(a1: us_rep3) : us_rep = { us_split_discrs1 =
  (a1).us_split_discrs5; us_split_fields1 = {
  rec__static_discr__i_holder__content =
  of_array(to_array(((a1).us_split_fields7).rec__static_discr__i_holder__content2),
  first1(((a1).us_split_fields7).rec__static_discr__i_holder__content2),
  last1(((a1).us_split_fields7).rec__static_discr__i_holder__content2)) } }

function of_base1(r: us_rep) : us_rep3 = { us_split_discrs5 =
  (r).us_split_discrs1; us_split_fields7 = {
  rec__static_discr__i_holder__content2 =
  of_array(to_array(((r).us_split_fields1).rec__static_discr__i_holder__content),
  first1(((r).us_split_fields1).rec__static_discr__i_holder__content),
  last1(((r).us_split_fields1).rec__static_discr__i_holder__content)) } }

function bool_eq9(a1: us_rep3, b: us_rep3) : bool =
  (if (((to_rep(((a1).us_split_discrs5).rec__static_discr__i_holder__unused) = to_rep(((b).us_split_discrs5).rec__static_discr__i_holder__unused)) and
  (to_rep(((a1).us_split_discrs5).rec__static_discr__i_holder__c) = to_rep(((b).us_split_discrs5).rec__static_discr__i_holder__c))) and
  (bool_eq5(((a1).us_split_fields7).rec__static_discr__i_holder__content2,
  ((b).us_split_fields7).rec__static_discr__i_holder__content2) = true)) then true else false)

predicate in_range5(rec__static_discr__i_holder__unused1: int,
  rec__static_discr__i_holder__c1: int, a1: us_rep) =
  ((rec__static_discr__i_holder__unused1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__unused)) and
  (rec__static_discr__i_holder__c1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__c)))

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic static_discr__i_holder__unused__first__bit2 : int

logic static_discr__i_holder__unused__last__bit2 : int

logic static_discr__i_holder__unused__position2 : int

axiom static_discr__i_holder__unused__first__bit_axiom2 :
  (0 <= static_discr__i_holder__unused__first__bit2)

axiom static_discr__i_holder__unused__last__bit_axiom2 :
  (static_discr__i_holder__unused__first__bit2 <  static_discr__i_holder__unused__last__bit2)

axiom static_discr__i_holder__unused__position_axiom2 :
  (0 <= static_discr__i_holder__unused__position2)

logic static_discr__i_holder__c__first__bit2 : int

logic static_discr__i_holder__c__last__bit2 : int

logic static_discr__i_holder__c__position2 : int

axiom static_discr__i_holder__c__first__bit_axiom2 :
  (0 <= static_discr__i_holder__c__first__bit2)

axiom static_discr__i_holder__c__last__bit_axiom2 :
  (static_discr__i_holder__c__first__bit2 <  static_discr__i_holder__c__last__bit2)

axiom static_discr__i_holder__c__position_axiom2 :
  (0 <= static_discr__i_holder__c__position2)

logic static_discr__i_holder__content__first__bit2 : int

logic static_discr__i_holder__content__last__bit2 : int

logic static_discr__i_holder__content__position2 : int

axiom static_discr__i_holder__content__first__bit_axiom2 :
  (0 <= static_discr__i_holder__content__first__bit2)

axiom static_discr__i_holder__content__last__bit_axiom2 :
  (static_discr__i_holder__content__first__bit2 <  static_discr__i_holder__content__last__bit2)

axiom static_discr__i_holder__content__position_axiom2 :
  (0 <= static_discr__i_holder__content__position2)

logic user_eq7 : us_rep3, us_rep3 -> bool

logic dummy7 : us_rep3

type t13b__ref = { t13b__content : us_rep3
}

function t13b__ref_t13b__content__projection(a1: t13b__ref) : us_rep3 =
  (a1).t13b__content

type us_split_fields8 = { rec__static_discr__holder__content1 : us_rep3;
rec__static_discr__holder__length1 : natural
}

function us_split_fields_rec__static_discr__holder__content__4__projection(a1: us_split_fields8) : us_rep3 =
  (a1).rec__static_discr__holder__content1

function us_split_fields_rec__static_discr__holder__length__4__projection(a1: us_split_fields8) : natural =
  (a1).rec__static_discr__holder__length1

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___split_fields__content__9__projection(a1: us_split_fields__ref4) : us_split_fields8 =
  (a1).us_split_fields__content4

type us_rep4 = { us_split_discrs6 : us_split_discrs3; us_split_fields9 :
us_split_fields8
}

function us_rep___split_discrs__9__projection(a1: us_rep4) : us_split_discrs3 =
  (a1).us_split_discrs6

function us_rep___split_fields__9__projection(a1: us_rep4) : us_split_fields8 =
  (a1).us_split_fields9

function to_base2(a1: us_rep4) : us_rep2 = { us_split_discrs4 =
  (a1).us_split_discrs6; us_split_fields5 = {
  rec__static_discr__holder__content =
  of_base(to_base1(((a1).us_split_fields9).rec__static_discr__holder__content1));
  rec__static_discr__holder__length =
  ((a1).us_split_fields9).rec__static_discr__holder__length1 } }

function of_base2(r: us_rep2) : us_rep4 = { us_split_discrs6 =
  (r).us_split_discrs4; us_split_fields9 = {
  rec__static_discr__holder__content1 =
  of_base1(to_base(((r).us_split_fields5).rec__static_discr__holder__content));
  rec__static_discr__holder__length1 =
  ((r).us_split_fields5).rec__static_discr__holder__length } }

function bool_eq10(a1: us_rep4, b: us_rep4) : bool =
  (if (((to_rep(((a1).us_split_discrs6).rec__static_discr__holder__unused) = to_rep(((b).us_split_discrs6).rec__static_discr__holder__unused)) and
  (to_rep(((a1).us_split_discrs6).rec__static_discr__holder__c) = to_rep(((b).us_split_discrs6).rec__static_discr__holder__c))) and
  ((bool_eq9(((a1).us_split_fields9).rec__static_discr__holder__content1,
  ((b).us_split_fields9).rec__static_discr__holder__content1) = true) and
  (to_rep(((a1).us_split_fields9).rec__static_discr__holder__length1) = to_rep(((b).us_split_fields9).rec__static_discr__holder__length1)))) then true else false)

predicate in_range6(rec__static_discr__holder__unused1: int,
  rec__static_discr__holder__c1: int, a1: us_rep2) =
  ((rec__static_discr__holder__unused1 = to_rep(((a1).us_split_discrs4).rec__static_discr__holder__unused)) and
  (rec__static_discr__holder__c1 = to_rep(((a1).us_split_discrs4).rec__static_discr__holder__c)))

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic static_discr__holder__unused__first__bit1 : int

logic static_discr__holder__unused__last__bit1 : int

logic static_discr__holder__unused__position1 : int

axiom static_discr__holder__unused__first__bit_axiom1 :
  (0 <= static_discr__holder__unused__first__bit1)

axiom static_discr__holder__unused__last__bit_axiom1 :
  (static_discr__holder__unused__first__bit1 <  static_discr__holder__unused__last__bit1)

axiom static_discr__holder__unused__position_axiom1 :
  (0 <= static_discr__holder__unused__position1)

logic static_discr__holder__c__first__bit1 : int

logic static_discr__holder__c__last__bit1 : int

logic static_discr__holder__c__position1 : int

axiom static_discr__holder__c__first__bit_axiom1 :
  (0 <= static_discr__holder__c__first__bit1)

axiom static_discr__holder__c__last__bit_axiom1 :
  (static_discr__holder__c__first__bit1 <  static_discr__holder__c__last__bit1)

axiom static_discr__holder__c__position_axiom1 :
  (0 <= static_discr__holder__c__position1)

logic static_discr__holder__content__first__bit1 : int

logic static_discr__holder__content__last__bit1 : int

logic static_discr__holder__content__position1 : int

axiom static_discr__holder__content__first__bit_axiom1 :
  (0 <= static_discr__holder__content__first__bit1)

axiom static_discr__holder__content__last__bit_axiom1 :
  (static_discr__holder__content__first__bit1 <  static_discr__holder__content__last__bit1)

axiom static_discr__holder__content__position_axiom1 :
  (0 <= static_discr__holder__content__position1)

logic static_discr__holder__length__first__bit1 : int

logic static_discr__holder__length__last__bit1 : int

logic static_discr__holder__length__position1 : int

axiom static_discr__holder__length__first__bit_axiom1 :
  (0 <= static_discr__holder__length__first__bit1)

axiom static_discr__holder__length__last__bit_axiom1 :
  (static_discr__holder__length__first__bit1 <  static_discr__holder__length__last__bit1)

axiom static_discr__holder__length__position_axiom1 :
  (0 <= static_discr__holder__length__position1)

logic user_eq8 : us_rep4, us_rep4 -> bool

logic dummy8 : us_rep4

type my_holder__ref = { my_holder__content : us_rep4
}

function my_holder__ref_my_holder__content__projection(a1: my_holder__ref) : us_rep4 =
  (a1).my_holder__content

predicate dynamic_invariant1(temp___expr_257: us_rep4,
  temp___is_init_253: bool, temp___skip_constant_254: bool,
  temp___do_toplevel_255: bool, temp___do_typ_inv_256: bool) =
  (((not (temp___skip_constant_254 = true)) -> in_range6(last1(a), last1(a),
  to_base2(temp___expr_257))) and (in_range5(last1(a), last1(a),
  to_base1(((temp___expr_257).us_split_fields9).rec__static_discr__holder__content1)) and
  (dynamic_property(1, last1(a),
  first1(((((temp___expr_257).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
  last1(((((temp___expr_257).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)) and
  ((first1(((((temp___expr_257).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2) = 1) and
  (last1(((((temp___expr_257).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2) = last1(a))))))

predicate default_initial_assumption(temp___expr_263: us_rep4,
  temp___skip_top_level_264: bool) =
  (((to_rep(((temp___expr_263).us_split_discrs6).rec__static_discr__holder__unused) = last1(a)) and
  (to_rep(((temp___expr_263).us_split_discrs6).rec__static_discr__holder__c) = last1(a))) and
  (((to_rep(((((temp___expr_263).us_split_fields9).rec__static_discr__holder__content1).us_split_discrs5).rec__static_discr__i_holder__unused) = last1(a)) and
  (to_rep(((((temp___expr_263).us_split_fields9).rec__static_discr__holder__content1).us_split_discrs5).rec__static_discr__i_holder__c) = last1(a))) and
  ((first1(((((temp___expr_263).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2) = 1) and
  (last1(((((temp___expr_263).us_split_fields9).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2) = last1(a)))))

logic current__split_discrs : us_split_discrs3

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

predicate dynamic_invariant2(temp___expr_181: us_t, temp___is_init_177: bool,
  temp___skip_constant_178: bool, temp___do_toplevel_179: bool,
  temp___do_typ_inv_180: bool) = ((not (temp___skip_constant_178 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_181),
  last1(temp___expr_181)))

type t21b__ref = { t21b__content : us_t
}

function t21b__ref_t21b__content__projection(a1: t21b__ref) : us_t =
  (a1).t21b__content

type us_split_fields10 = { rec__static_discr__i_holder__content3 : us_t
}

function us_split_fields_rec__static_discr__i_holder__content__6__projection(a1: us_split_fields10) : us_t =
  (a1).rec__static_discr__i_holder__content3

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___split_fields__content__10__projection(a1: us_split_fields__ref5) : us_split_fields10 =
  (a1).us_split_fields__content5

type us_rep5 = { us_split_discrs7 : us_split_discrs; us_split_fields11 :
us_split_fields10
}

function us_rep___split_discrs__10__projection(a1: us_rep5) : us_split_discrs =
  (a1).us_split_discrs7

function us_rep___split_fields__10__projection(a1: us_rep5) : us_split_fields10 =
  (a1).us_split_fields11

function to_base3(a1: us_rep5) : us_rep = { us_split_discrs1 =
  (a1).us_split_discrs7; us_split_fields1 = {
  rec__static_discr__i_holder__content =
  of_array(to_array(((a1).us_split_fields11).rec__static_discr__i_holder__content3),
  first1(((a1).us_split_fields11).rec__static_discr__i_holder__content3),
  last1(((a1).us_split_fields11).rec__static_discr__i_holder__content3)) } }

function of_base3(r: us_rep) : us_rep5 = { us_split_discrs7 =
  (r).us_split_discrs1; us_split_fields11 = {
  rec__static_discr__i_holder__content3 =
  of_array(to_array(((r).us_split_fields1).rec__static_discr__i_holder__content),
  first1(((r).us_split_fields1).rec__static_discr__i_holder__content),
  last1(((r).us_split_fields1).rec__static_discr__i_holder__content)) } }

function bool_eq11(a1: us_rep5, b: us_rep5) : bool =
  (if (((to_rep(((a1).us_split_discrs7).rec__static_discr__i_holder__unused) = to_rep(((b).us_split_discrs7).rec__static_discr__i_holder__unused)) and
  (to_rep(((a1).us_split_discrs7).rec__static_discr__i_holder__c) = to_rep(((b).us_split_discrs7).rec__static_discr__i_holder__c))) and
  (bool_eq5(((a1).us_split_fields11).rec__static_discr__i_holder__content3,
  ((b).us_split_fields11).rec__static_discr__i_holder__content3) = true)) then true else false)

predicate in_range7(rec__static_discr__i_holder__unused1: int,
  rec__static_discr__i_holder__c1: int, a1: us_rep) =
  ((rec__static_discr__i_holder__unused1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__unused)) and
  (rec__static_discr__i_holder__c1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__c)))

logic value__size6 : int

logic object__size6 : int

logic alignment6 : int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 : (0 <= object__size6)

axiom alignment_axiom6 : (0 <= alignment6)

logic static_discr__i_holder__unused__first__bit3 : int

logic static_discr__i_holder__unused__last__bit3 : int

logic static_discr__i_holder__unused__position3 : int

axiom static_discr__i_holder__unused__first__bit_axiom3 :
  (0 <= static_discr__i_holder__unused__first__bit3)

axiom static_discr__i_holder__unused__last__bit_axiom3 :
  (static_discr__i_holder__unused__first__bit3 <  static_discr__i_holder__unused__last__bit3)

axiom static_discr__i_holder__unused__position_axiom3 :
  (0 <= static_discr__i_holder__unused__position3)

logic static_discr__i_holder__c__first__bit3 : int

logic static_discr__i_holder__c__last__bit3 : int

logic static_discr__i_holder__c__position3 : int

axiom static_discr__i_holder__c__first__bit_axiom3 :
  (0 <= static_discr__i_holder__c__first__bit3)

axiom static_discr__i_holder__c__last__bit_axiom3 :
  (static_discr__i_holder__c__first__bit3 <  static_discr__i_holder__c__last__bit3)

axiom static_discr__i_holder__c__position_axiom3 :
  (0 <= static_discr__i_holder__c__position3)

logic static_discr__i_holder__content__first__bit3 : int

logic static_discr__i_holder__content__last__bit3 : int

logic static_discr__i_holder__content__position3 : int

axiom static_discr__i_holder__content__first__bit_axiom3 :
  (0 <= static_discr__i_holder__content__first__bit3)

axiom static_discr__i_holder__content__last__bit_axiom3 :
  (static_discr__i_holder__content__first__bit3 <  static_discr__i_holder__content__last__bit3)

axiom static_discr__i_holder__content__position_axiom3 :
  (0 <= static_discr__i_holder__content__position3)

logic user_eq9 : us_rep5, us_rep5 -> bool

logic dummy9 : us_rep5

type t20b__ref = { t20b__content : us_rep5
}

function t20b__ref_t20b__content__projection(a1: t20b__ref) : us_rep5 =
  (a1).t20b__content

type us_split_fields12 = { rec__static_discr__holder__content2 : us_rep5;
rec__static_discr__holder__length2 : natural
}

function us_split_fields_rec__static_discr__holder__content__5__projection(a1: us_split_fields12) : us_rep5 =
  (a1).rec__static_discr__holder__content2

function us_split_fields_rec__static_discr__holder__length__5__projection(a1: us_split_fields12) : natural =
  (a1).rec__static_discr__holder__length2

type us_split_fields__ref6 = { us_split_fields__content6 : us_split_fields12
}

function us_split_fields__ref___split_fields__content__11__projection(a1: us_split_fields__ref6) : us_split_fields12 =
  (a1).us_split_fields__content6

type us_rep6 = { us_split_discrs8 : us_split_discrs3; us_split_fields13 :
us_split_fields12
}

function us_rep___split_discrs__11__projection(a1: us_rep6) : us_split_discrs3 =
  (a1).us_split_discrs8

function us_rep___split_fields__11__projection(a1: us_rep6) : us_split_fields12 =
  (a1).us_split_fields13

function to_base4(a1: us_rep6) : us_rep2 = { us_split_discrs4 =
  (a1).us_split_discrs8; us_split_fields5 = {
  rec__static_discr__holder__content =
  of_base(to_base3(((a1).us_split_fields13).rec__static_discr__holder__content2));
  rec__static_discr__holder__length =
  ((a1).us_split_fields13).rec__static_discr__holder__length2 } }

function of_base4(r: us_rep2) : us_rep6 = { us_split_discrs8 =
  (r).us_split_discrs4; us_split_fields13 = {
  rec__static_discr__holder__content2 =
  of_base3(to_base(((r).us_split_fields5).rec__static_discr__holder__content));
  rec__static_discr__holder__length2 =
  ((r).us_split_fields5).rec__static_discr__holder__length } }

function bool_eq12(a1: us_rep6, b: us_rep6) : bool =
  (if (((to_rep(((a1).us_split_discrs8).rec__static_discr__holder__unused) = to_rep(((b).us_split_discrs8).rec__static_discr__holder__unused)) and
  (to_rep(((a1).us_split_discrs8).rec__static_discr__holder__c) = to_rep(((b).us_split_discrs8).rec__static_discr__holder__c))) and
  ((bool_eq11(((a1).us_split_fields13).rec__static_discr__holder__content2,
  ((b).us_split_fields13).rec__static_discr__holder__content2) = true) and
  (to_rep(((a1).us_split_fields13).rec__static_discr__holder__length2) = to_rep(((b).us_split_fields13).rec__static_discr__holder__length2)))) then true else false)

predicate in_range8(rec__static_discr__holder__unused1: int,
  rec__static_discr__holder__c1: int, a1: us_rep2) =
  ((rec__static_discr__holder__unused1 = to_rep(((a1).us_split_discrs4).rec__static_discr__holder__unused)) and
  (rec__static_discr__holder__c1 = to_rep(((a1).us_split_discrs4).rec__static_discr__holder__c)))

logic value__size7 : int

logic object__size7 : int

logic alignment7 : int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 : (0 <= object__size7)

axiom alignment_axiom7 : (0 <= alignment7)

logic static_discr__holder__unused__first__bit2 : int

logic static_discr__holder__unused__last__bit2 : int

logic static_discr__holder__unused__position2 : int

axiom static_discr__holder__unused__first__bit_axiom2 :
  (0 <= static_discr__holder__unused__first__bit2)

axiom static_discr__holder__unused__last__bit_axiom2 :
  (static_discr__holder__unused__first__bit2 <  static_discr__holder__unused__last__bit2)

axiom static_discr__holder__unused__position_axiom2 :
  (0 <= static_discr__holder__unused__position2)

logic static_discr__holder__c__first__bit2 : int

logic static_discr__holder__c__last__bit2 : int

logic static_discr__holder__c__position2 : int

axiom static_discr__holder__c__first__bit_axiom2 :
  (0 <= static_discr__holder__c__first__bit2)

axiom static_discr__holder__c__last__bit_axiom2 :
  (static_discr__holder__c__first__bit2 <  static_discr__holder__c__last__bit2)

axiom static_discr__holder__c__position_axiom2 :
  (0 <= static_discr__holder__c__position2)

logic static_discr__holder__content__first__bit2 : int

logic static_discr__holder__content__last__bit2 : int

logic static_discr__holder__content__position2 : int

axiom static_discr__holder__content__first__bit_axiom2 :
  (0 <= static_discr__holder__content__first__bit2)

axiom static_discr__holder__content__last__bit_axiom2 :
  (static_discr__holder__content__first__bit2 <  static_discr__holder__content__last__bit2)

axiom static_discr__holder__content__position_axiom2 :
  (0 <= static_discr__holder__content__position2)

logic static_discr__holder__length__first__bit2 : int

logic static_discr__holder__length__last__bit2 : int

logic static_discr__holder__length__position2 : int

axiom static_discr__holder__length__first__bit_axiom2 :
  (0 <= static_discr__holder__length__first__bit2)

axiom static_discr__holder__length__last__bit_axiom2 :
  (static_discr__holder__length__first__bit2 <  static_discr__holder__length__last__bit2)

axiom static_discr__holder__length__position_axiom2 :
  (0 <= static_discr__holder__length__position2)

logic user_eq10 : us_rep6, us_rep6 -> bool

logic dummy10 : us_rep6

type t19b__ref = { t19b__content : us_rep6
}

function t19b__ref_t19b__content__projection(a1: t19b__ref) : us_rep6 =
  (a1).t19b__content

type t23b__ref = { t23b__content : us_t
}

function t23b__ref_t23b__content__projection(a1: t23b__ref) : us_t =
  (a1).t23b__content

type us_split_fields14 = { rec__static_discr__i_holder__content4 : us_t
}

function us_split_fields_rec__static_discr__i_holder__content__7__projection(a1: us_split_fields14) : us_t =
  (a1).rec__static_discr__i_holder__content4

type us_split_fields__ref7 = { us_split_fields__content7 : us_split_fields14
}

function us_split_fields__ref___split_fields__content__12__projection(a1: us_split_fields__ref7) : us_split_fields14 =
  (a1).us_split_fields__content7

type us_rep7 = { us_split_discrs9 : us_split_discrs; us_split_fields15 :
us_split_fields14
}

function us_rep___split_discrs__12__projection(a1: us_rep7) : us_split_discrs =
  (a1).us_split_discrs9

function us_rep___split_fields__12__projection(a1: us_rep7) : us_split_fields14 =
  (a1).us_split_fields15

function to_base5(a1: us_rep7) : us_rep = { us_split_discrs1 =
  (a1).us_split_discrs9; us_split_fields1 = {
  rec__static_discr__i_holder__content =
  of_array(to_array(((a1).us_split_fields15).rec__static_discr__i_holder__content4),
  first1(((a1).us_split_fields15).rec__static_discr__i_holder__content4),
  last1(((a1).us_split_fields15).rec__static_discr__i_holder__content4)) } }

function of_base5(r: us_rep) : us_rep7 = { us_split_discrs9 =
  (r).us_split_discrs1; us_split_fields15 = {
  rec__static_discr__i_holder__content4 =
  of_array(to_array(((r).us_split_fields1).rec__static_discr__i_holder__content),
  first1(((r).us_split_fields1).rec__static_discr__i_holder__content),
  last1(((r).us_split_fields1).rec__static_discr__i_holder__content)) } }

function bool_eq13(a1: us_rep7, b: us_rep7) : bool =
  (if (((to_rep(((a1).us_split_discrs9).rec__static_discr__i_holder__unused) = to_rep(((b).us_split_discrs9).rec__static_discr__i_holder__unused)) and
  (to_rep(((a1).us_split_discrs9).rec__static_discr__i_holder__c) = to_rep(((b).us_split_discrs9).rec__static_discr__i_holder__c))) and
  (bool_eq5(((a1).us_split_fields15).rec__static_discr__i_holder__content4,
  ((b).us_split_fields15).rec__static_discr__i_holder__content4) = true)) then true else false)

predicate in_range9(rec__static_discr__i_holder__unused1: int,
  rec__static_discr__i_holder__c1: int, a1: us_rep) =
  ((rec__static_discr__i_holder__unused1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__unused)) and
  (rec__static_discr__i_holder__c1 = to_rep(((a1).us_split_discrs1).rec__static_discr__i_holder__c)))

logic value__size8 : int

logic object__size8 : int

logic alignment8 : int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 : (0 <= object__size8)

axiom alignment_axiom8 : (0 <= alignment8)

logic static_discr__i_holder__unused__first__bit4 : int

logic static_discr__i_holder__unused__last__bit4 : int

logic static_discr__i_holder__unused__position4 : int

axiom static_discr__i_holder__unused__first__bit_axiom4 :
  (0 <= static_discr__i_holder__unused__first__bit4)

axiom static_discr__i_holder__unused__last__bit_axiom4 :
  (static_discr__i_holder__unused__first__bit4 <  static_discr__i_holder__unused__last__bit4)

axiom static_discr__i_holder__unused__position_axiom4 :
  (0 <= static_discr__i_holder__unused__position4)

logic static_discr__i_holder__c__first__bit4 : int

logic static_discr__i_holder__c__last__bit4 : int

logic static_discr__i_holder__c__position4 : int

axiom static_discr__i_holder__c__first__bit_axiom4 :
  (0 <= static_discr__i_holder__c__first__bit4)

axiom static_discr__i_holder__c__last__bit_axiom4 :
  (static_discr__i_holder__c__first__bit4 <  static_discr__i_holder__c__last__bit4)

axiom static_discr__i_holder__c__position_axiom4 :
  (0 <= static_discr__i_holder__c__position4)

logic static_discr__i_holder__content__first__bit4 : int

logic static_discr__i_holder__content__last__bit4 : int

logic static_discr__i_holder__content__position4 : int

axiom static_discr__i_holder__content__first__bit_axiom4 :
  (0 <= static_discr__i_holder__content__first__bit4)

axiom static_discr__i_holder__content__last__bit_axiom4 :
  (static_discr__i_holder__content__first__bit4 <  static_discr__i_holder__content__last__bit4)

axiom static_discr__i_holder__content__position_axiom4 :
  (0 <= static_discr__i_holder__content__position4)

logic user_eq11 : us_rep7, us_rep7 -> bool

logic dummy11 : us_rep7

type t22b__ref = { t22b__content : us_rep7
}

function t22b__ref_t22b__content__projection(a1: t22b__ref) : us_rep7 =
  (a1).t22b__content

predicate dynamic_invariant3(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range3(temp___expr_46))

predicate dynamic_invariant4(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant5(temp___expr_187: us_rep,
  temp___is_init_183: bool, temp___skip_constant_184: bool,
  temp___do_toplevel_185: bool, temp___do_typ_inv_186: bool) =
  (let temp___189 =
  ((temp___expr_187).us_split_discrs1).rec__static_discr__i_holder__c
  : natural in (dynamic_property(1, to_rep(temp___189),
  first1(((temp___expr_187).us_split_fields1).rec__static_discr__i_holder__content),
  last1(((temp___expr_187).us_split_fields1).rec__static_discr__i_holder__content)) and
  ((first1(((temp___expr_187).us_split_fields1).rec__static_discr__i_holder__content) = 1) and
  (last1(((temp___expr_187).us_split_fields1).rec__static_discr__i_holder__content) = to_rep(temp___189)))))

predicate dynamic_invariant6(temp___expr_195: us_rep2,
  temp___is_init_191: bool, temp___skip_constant_192: bool,
  temp___do_toplevel_193: bool, temp___do_typ_inv_194: bool) =
  (let temp___197 =
  ((temp___expr_195).us_split_discrs4).rec__static_discr__holder__c
  : natural in
  (in_range4(to_rep(((temp___expr_195).us_split_discrs4).rec__static_discr__holder__unused),
  to_rep(temp___197),
  to_base(((temp___expr_195).us_split_fields5).rec__static_discr__holder__content)) and
  (dynamic_property(1, to_rep(temp___197),
  first1(((((temp___expr_195).us_split_fields5).rec__static_discr__holder__content).us_split_fields3).rec__static_discr__i_holder__content1),
  last1(((((temp___expr_195).us_split_fields5).rec__static_discr__holder__content).us_split_fields3).rec__static_discr__i_holder__content1)) and
  ((first1(((((temp___expr_195).us_split_fields5).rec__static_discr__holder__content).us_split_fields3).rec__static_discr__i_holder__content1) = 1) and
  (last1(((((temp___expr_195).us_split_fields5).rec__static_discr__holder__content).us_split_fields3).rec__static_discr__i_holder__content1) = to_rep(temp___197))))))

 (* File "static_discr.ads", line 31, characters 0-0 *)
goal defqtvc : (dynamic_invariant2(a, true, false, true, true) ->
  (dynamic_invariant(e, true, false, true, true) -> (((first1(a) = 1) and
  ((0 <= last1(a)) and (last1(a) <= 100))) -> (in_range2(last1(a)) ->
  (in_range2(last1(a)) -> (let o = last1(a) : int in (in_range2(o) ->
  (forall o1:natural. ((to_rep(o1) = o) ->
  ((if (first1(a) <= last1(a)) then ((1 <= last1(a)) and
  ((last1(a) - first1(a)) = (last1(a) - 1))) else (last1(a) <  1)) ->
  (let o2 = last1(a) : int in (in_range2(o2) ->
  (forall o3:natural. ((to_rep(o3) = o2) -> (let o4 = last1(a) : int in
  (in_range2(o4) ->
  (forall o5:natural. ((to_rep(o5) = o4) -> (let o6 = last1(a) : int in
  (in_range2(o6) ->
  (forall o7:natural. ((to_rep(o7) = o6) -> (let o8 = last1(a) : int in
  (in_range2(o8) ->
  (forall o9:natural. ((to_rep(o9) = o8) ->
  (let static_discr__search_array__current__assume = of_base2(to_base4({
  us_split_discrs8 = { rec__static_discr__holder__unused = o9;
  rec__static_discr__holder__c = o7 }; us_split_fields13 = {
  rec__static_discr__holder__content2 = of_base3(to_base5({
  us_split_discrs9 = { rec__static_discr__i_holder__unused = o5;
  rec__static_discr__i_holder__c = o3 }; us_split_fields15 = {
  rec__static_discr__i_holder__content4 = of_array(slide(to_array(a),
  first1(a), 1), 1, last1(a)) } })); rec__static_discr__holder__length2 = o1
  } })) : us_rep4 in
  (forall current__split_fields:us_split_fields8.
  ((current__split_fields = (static_discr__search_array__current__assume).us_split_fields9) ->
  ((current__split_discrs = (static_discr__search_array__current__assume).us_split_discrs6) ->
  (dynamic_invariant1({ us_split_discrs6 = current__split_discrs;
  us_split_fields9 = current__split_fields }, true, false, true, true) ->
  (forall result__:int. ((result__ = 0) -> (dynamic_invariant(result__, true,
  false, true, true) ->
  (forall result__1:int.
  ((exists o10:bool.
   ((if (result__ = 0) then (exists o11:int.
                            ((to_rep((current__split_fields).rec__static_discr__holder__length1) = o11) and
                            (o10 = (if (0 <  o11) then true else false)))) else (o10 = false)) and
   (if (o10 = true) then ((exists o11:int.
                          ((to_rep((current__split_fields).rec__static_discr__holder__length1) = o11) and
                          (exists o12:int.
                          ((to_rep((current__split_fields).rec__static_discr__holder__length1) = o12) and
                          ((not ((if (andb((if (first1(a) <= o12) then true else false),
                          (if (o11 <= last1(a)) then true else false)) = true) then bool_eq4(to_array(a),
                          first1(a), last1(a),
                          to_array((((current__split_fields).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
                          first1((((current__split_fields).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
                          last1((((current__split_fields).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)) else false) = true)) or
                          (exists o13:int.
                          ((to_rep((current__split_fields).rec__static_discr__holder__length1) = o13) and
                          in_range1((o13 + 1))))))))) and
   (exists current__split_fields1:us_split_fields8. exists result__2:int.
   (((((first1(a) <= to_rep((current__split_fields1).rec__static_discr__holder__length1)) and
   (to_rep((current__split_fields1).rec__static_discr__holder__length1) <= last1(a))) and
   (bool_eq4(to_array(a), first1(a), last1(a),
   to_array((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   first1((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   last1((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)) = true)) and
   (forall i:int.
   ((((to_rep((current__split_fields1).rec__static_discr__holder__length1) + 1) <= i) and
   (i <= last1(a))) -> (not (to_rep((to_array(a)[i])) = e))))) and
   ((andb((if (dynamic_invariant(result__2, true, true, true, true) and
   dynamic_invariant1({ us_split_discrs6 = current__split_discrs;
   us_split_fields9 = current__split_fields1 }, true, true, true,
   true)) then true else false), (if ((result__2 = 0) and
   (0 <  to_rep((current__split_fields1).rec__static_discr__holder__length1))) then true else false)) = true) and
   ((to_rep((current__split_discrs).rec__static_discr__holder__unused) = last1(a)) and
   (exists current__split_fields2:us_split_fields8.
   (((((bool_eq4(to_array((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   first1((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   last1((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   to_array((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   first1((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   last1((((current__split_fields1).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)) = true) and
   (to_rep((current__split_fields2).rec__static_discr__holder__length1) <  to_rep((current__split_fields1).rec__static_discr__holder__length1))) and
   (if (result__1 = 0) then (forall i:int.
                            ((((to_rep((current__split_fields2).rec__static_discr__holder__length1) + 1) <= i) and
                            (i <= to_rep((current__split_fields1).rec__static_discr__holder__length1))) ->
                            (not (to_rep((to_array((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)[i])) = e)))) else (((to_rep((current__split_fields2).rec__static_discr__holder__length1) <= result__1) and
   (result__1 <= to_rep((current__split_fields1).rec__static_discr__holder__length1))) and
   (to_rep((to_array((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)[result__1])) = e)))) and
   (dynamic_invariant1({ us_split_discrs6 = current__split_discrs;
   us_split_fields9 = current__split_fields2 }, true, true, true, true) and
   dynamic_invariant(result__1, true, true, true, true))) and
   ((to_rep((current__split_discrs).rec__static_discr__holder__unused) = last1(a)) and
   ((bool_eq4(to_array(a), first1(a), last1(a),
   to_array((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   first1((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2),
   last1((((current__split_fields2).rec__static_discr__holder__content1).us_split_fields7).rec__static_discr__i_holder__content2)) = true) and
   (exists o11:bool.
   ((if (result__1 = 0) then (exists o12:int.
                             ((to_rep((current__split_fields2).rec__static_discr__holder__length1) = o12) and
                             (o11 = (if (0 <  o12) then true else false)))) else (o11 = false)) and
   (not (o11 = true))))))))))))) else (result__1 = result__)))) ->
  (forall static_discr__search_array__result:int.
  ((static_discr__search_array__result = result__1) ->
  ((static_discr__search_array__result <= last1(a)) ->
  ((static_discr__search_array__result = 0) ->
  (forall usf:int. ((andb((if (first1(a) <= usf) then true else false),
  (if (usf <= last1(a)) then true else false)) = true) ->
  (first1(a) <= usf)))))))))))))))))))))))))))))))))))))))))))
