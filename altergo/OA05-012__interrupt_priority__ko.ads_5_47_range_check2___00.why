(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type any_priority

logic any_priorityqtint : any_priority -> int

axiom any_priorityqtaxiom :
  (forall i:any_priority. (0 <= any_priorityqtint(i)))

axiom any_priorityqtaxiom1 :
  (forall i:any_priority. (any_priorityqtint(i) <= 98))

predicate in_range1(x: int) = ((0 <= x) and (x <= 98))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : any_priority, any_priority -> bool

logic dummy1 : any_priority

type any_priority__ref = { any_priority__content : any_priority
}

function any_priority__ref_any_priority__content__projection(a: any_priority__ref) : any_priority =
  (a).any_priority__content

type us_split_discrs = { rec__interrupt_priority__interrupt_needed_1__c :
any_priority
}

function us_split_discrs_rec__interrupt_priority__interrupt_needed_1__c__projection(a: us_split_discrs) : any_priority =
  (a).rec__interrupt_priority__interrupt_needed_1__c

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__interrupt_priority__interrupt_needed_1__i :
integer
}

function us_split_fields_rec__interrupt_priority__interrupt_needed_1__i__projection(a: us_split_fields) : integer =
  (a).rec__interrupt_priority__interrupt_needed_1__i

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function to_rep(x: any_priority) : int = any_priorityqtint(x)

logic of_rep : int -> any_priority

axiom inversion_axiom :
  (forall x:any_priority [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:any_priority [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

predicate in_range2(rec__interrupt_priority__interrupt_needed_1__c1: int,
  a: us_split_discrs) =
  (rec__interrupt_priority__interrupt_needed_1__c1 = to_rep((a).rec__interrupt_priority__interrupt_needed_1__c))

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic interrupt_priority__interrupt_needed_1__c__first__bit : int

logic interrupt_priority__interrupt_needed_1__c__last__bit : int

logic interrupt_priority__interrupt_needed_1__c__position : int

axiom interrupt_priority__interrupt_needed_1__c__first__bit_axiom :
  (0 <= interrupt_priority__interrupt_needed_1__c__first__bit)

axiom interrupt_priority__interrupt_needed_1__c__last__bit_axiom :
  (interrupt_priority__interrupt_needed_1__c__first__bit <  interrupt_priority__interrupt_needed_1__c__last__bit)

axiom interrupt_priority__interrupt_needed_1__c__position_axiom :
  (0 <= interrupt_priority__interrupt_needed_1__c__position)

logic interrupt_priority__interrupt_needed_1__i__first__bit : int

logic interrupt_priority__interrupt_needed_1__i__last__bit : int

logic interrupt_priority__interrupt_needed_1__i__position : int

axiom interrupt_priority__interrupt_needed_1__i__first__bit_axiom :
  (0 <= interrupt_priority__interrupt_needed_1__i__first__bit)

axiom interrupt_priority__interrupt_needed_1__i__last__bit_axiom :
  (interrupt_priority__interrupt_needed_1__i__first__bit <  interrupt_priority__interrupt_needed_1__i__last__bit)

axiom interrupt_priority__interrupt_needed_1__i__position_axiom :
  (0 <= interrupt_priority__interrupt_needed_1__i__position)

logic user_eq2 : us_rep, us_rep -> bool

type interrupt_needed_1__ref = { interrupt_needed_1__content : us_rep
}

function interrupt_needed_1__ref_interrupt_needed_1__content__projection(a: interrupt_needed_1__ref) : us_rep =
  (a).interrupt_needed_1__content

type us_split_fields2 = { rec__interrupt_priority__interrupt_needed_1__i1 :
integer
}

function us_split_fields_rec__interrupt_priority__interrupt_needed_1__i__2__projection(a: us_split_fields2) : integer =
  (a).rec__interrupt_priority__interrupt_needed_1__i1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs2 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___split_discrs__2__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs2

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function to_base(a: us_rep1) : us_rep = { us_split_discrs1 =
  (a).us_split_discrs2; us_split_fields1 = {
  rec__interrupt_priority__interrupt_needed_1__i =
  ((a).us_split_fields3).rec__interrupt_priority__interrupt_needed_1__i1 } }

function of_base(r: us_rep) : us_rep1 = { us_split_discrs2 =
  (r).us_split_discrs1; us_split_fields3 = {
  rec__interrupt_priority__interrupt_needed_1__i1 =
  ((r).us_split_fields1).rec__interrupt_priority__interrupt_needed_1__i } }

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic interrupt_priority__interrupt_needed_1__c__first__bit1 : int

logic interrupt_priority__interrupt_needed_1__c__last__bit1 : int

logic interrupt_priority__interrupt_needed_1__c__position1 : int

axiom interrupt_priority__interrupt_needed_1__c__first__bit_axiom1 :
  (0 <= interrupt_priority__interrupt_needed_1__c__first__bit1)

axiom interrupt_priority__interrupt_needed_1__c__last__bit_axiom1 :
  (interrupt_priority__interrupt_needed_1__c__first__bit1 <  interrupt_priority__interrupt_needed_1__c__last__bit1)

axiom interrupt_priority__interrupt_needed_1__c__position_axiom1 :
  (0 <= interrupt_priority__interrupt_needed_1__c__position1)

logic interrupt_priority__interrupt_needed_1__i__first__bit1 : int

logic interrupt_priority__interrupt_needed_1__i__last__bit1 : int

logic interrupt_priority__interrupt_needed_1__i__position1 : int

axiom interrupt_priority__interrupt_needed_1__i__first__bit_axiom1 :
  (0 <= interrupt_priority__interrupt_needed_1__i__first__bit1)

axiom interrupt_priority__interrupt_needed_1__i__last__bit_axiom1 :
  (interrupt_priority__interrupt_needed_1__i__first__bit1 <  interrupt_priority__interrupt_needed_1__i__last__bit1)

axiom interrupt_priority__interrupt_needed_1__i__position_axiom1 :
  (0 <= interrupt_priority__interrupt_needed_1__i__position1)

logic user_eq3 : us_rep1, us_rep1 -> bool

type tpS__ref = { tpS__content : us_rep1
}

function tpS__ref_tpS__content__projection(a: tpS__ref) : us_rep1 =
  (a).tpS__content

logic p__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS : int

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range(x) ->
  (to_rep1(of_rep1(x)) = x)))

predicate dynamic_invariant(temp___expr_192: us_rep1,
  temp___is_init_188: bool, temp___skip_constant_189: bool,
  temp___do_toplevel_190: bool, temp___do_typ_inv_191: bool) =
  ((not (temp___skip_constant_189 = true)) -> in_range2(0,
  (to_base(temp___expr_192)).us_split_discrs1))

predicate default_initial_assumption(temp___expr_194: us_rep1,
  temp___skip_top_level_195: bool) =
  ((to_rep(((temp___expr_194).us_split_discrs2).rec__interrupt_priority__interrupt_needed_1__c) = 0) and
  (to_rep1(((temp___expr_194).us_split_fields3).rec__interrupt_priority__interrupt_needed_1__i1) = 0))

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

predicate dynamic_invariant2(temp___expr_158: int, temp___is_init_154: bool,
  temp___skip_constant_155: bool, temp___do_toplevel_156: bool,
  temp___do_typ_inv_157: bool) = (((temp___is_init_154 = true) or
  (0 <= 98)) -> in_range1(temp___expr_158))

 (* File "ko.ads", line 4, characters 0-0 *)
goal defqtvc : in_range1(0)
