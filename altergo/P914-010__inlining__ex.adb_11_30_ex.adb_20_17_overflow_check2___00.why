(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

type character

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq3(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic c7b : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic temp___String_Literal_154 : unit -> (int,character) farray

axiom temp___String_Literal_154__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[1])) = 72))

axiom temp___String_Literal_154__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[2])) = 111))

axiom temp___String_Literal_154__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[3])) = 119))

axiom temp___String_Literal_154__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[4])) = 32))

axiom temp___String_Literal_154__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[5])) = 110))

axiom temp___String_Literal_154__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[6])) = 111))

axiom temp___String_Literal_154__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[7])) = 119))

axiom temp___String_Literal_154__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[8])) = 32))

axiom temp___String_Literal_154__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[9])) = 98))

axiom temp___String_Literal_154__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[10])) = 114))

axiom temp___String_Literal_154__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[11])) = 111))

axiom temp___String_Literal_154__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[12])) = 119))

axiom temp___String_Literal_154__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[13])) = 110))

axiom temp___String_Literal_154__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[14])) = 32))

axiom temp___String_Literal_154__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[15])) = 99))

axiom temp___String_Literal_154__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[16])) = 111))

axiom temp___String_Literal_154__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_154(us_void_param)].
  (to_rep((temp___String_Literal_154(us_void_param)[17])) = 119))

predicate dynamic_invariant1(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range2(temp___expr_74))

predicate dynamic_invariant2(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

axiom c7b__def_axiom : (c7b = temp___String_Literal_154(void))

 (* File "ex.adb", line 2, characters 0-0 *)
goal defqtvc :
  (forall the_count:int. (dynamic_invariant(the_count, false, false, true,
  true) ->
  (forall result__:int. ((result__ = 0) -> (dynamic_invariant(result__, true,
  false, true, true) ->
  (forall index:int. ((index = 1) ->
  (forall o:int. ((to_rep((c7b[index])) = o) ->
  (forall spark__branch:bool.
  ((spark__branch = (if (o = 119) then true else false)) ->
  ((spark__branch = true) -> in_range((result__ + 1))))))))))))))
