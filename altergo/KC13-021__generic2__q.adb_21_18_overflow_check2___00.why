(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant1(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq2(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range2(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE2 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> bool

type t1

logic t1qtint : t1 -> int

axiom t1qtaxiom : (forall i:t1. ((- 2147483648) <= t1qtint(i)))

axiom t1qtaxiom1 : (forall i:t1. (t1qtint(i) <= 2147483647))

predicate in_range3(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t1, t1 -> bool

logic dummy2 : t1

type t1__ref = { t1__content : t1
}

function t1__ref_t1__content__projection(a: t1__ref) : t1 = (a).t1__content

function to_rep1(x: t1) : int = t1qtint(x)

logic of_rep1 : int -> t1

axiom inversion_axiom1 :
  (forall x:t1 [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:t1 [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t3

logic t3qtint : t3 -> int

axiom t3qtaxiom : (forall i:t3. (0 <= t3qtint(i)))

axiom t3qtaxiom1 : (forall i:t3. (t3qtint(i) <= 2147483647))

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t3, t3 -> bool

logic dummy3 : t3

type t3__ref = { t3__content : t3
}

function t3__ref_t3__content__projection(a: t3__ref) : t3 = (a).t3__content

function to_rep2(x: t3) : int = t3qtint(x)

logic of_rep2 : int -> t3

axiom inversion_axiom2 :
  (forall x:t3 [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:t3 [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields = { rec__q__p1__r__a : t1; rec__q__p1__r__b : bool;
rec__q__p1__r__c : t3; rec__q__p1__r__d : integer
}

function us_split_fields_rec__q__p1__r__a__projection(a: us_split_fields) : t1 =
  (a).rec__q__p1__r__a

function us_split_fields_rec__q__p1__r__b__projection(a: us_split_fields) : bool =
  (a).rec__q__p1__r__b

function us_split_fields_rec__q__p1__r__c__projection(a: us_split_fields) : t3 =
  (a).rec__q__p1__r__c

function us_split_fields_rec__q__p1__r__d__projection(a: us_split_fields) : integer =
  (a).rec__q__p1__r__d

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq5(a: us_rep, b: us_rep) : bool =
  (if (((to_rep1(((a).us_split_fields1).rec__q__p1__r__a) = to_rep1(((b).us_split_fields1).rec__q__p1__r__a)) and
  (to_int(((a).us_split_fields1).rec__q__p1__r__b) = to_int(((b).us_split_fields1).rec__q__p1__r__b))) and
  ((to_rep2(((a).us_split_fields1).rec__q__p1__r__c) = to_rep2(((b).us_split_fields1).rec__q__p1__r__c)) and
  (to_rep(((a).us_split_fields1).rec__q__p1__r__d) = to_rep(((b).us_split_fields1).rec__q__p1__r__d)))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic q__p1__r__a__first__bit : int

logic q__p1__r__a__last__bit : int

logic q__p1__r__a__position : int

axiom q__p1__r__a__first__bit_axiom : (0 <= q__p1__r__a__first__bit)

axiom q__p1__r__a__last__bit_axiom :
  (q__p1__r__a__first__bit <  q__p1__r__a__last__bit)

axiom q__p1__r__a__position_axiom : (0 <= q__p1__r__a__position)

logic q__p1__r__b__first__bit : int

logic q__p1__r__b__last__bit : int

logic q__p1__r__b__position : int

axiom q__p1__r__b__first__bit_axiom : (0 <= q__p1__r__b__first__bit)

axiom q__p1__r__b__last__bit_axiom :
  (q__p1__r__b__first__bit <  q__p1__r__b__last__bit)

axiom q__p1__r__b__position_axiom : (0 <= q__p1__r__b__position)

logic q__p1__r__c__first__bit : int

logic q__p1__r__c__last__bit : int

logic q__p1__r__c__position : int

axiom q__p1__r__c__first__bit_axiom : (0 <= q__p1__r__c__first__bit)

axiom q__p1__r__c__last__bit_axiom :
  (q__p1__r__c__first__bit <  q__p1__r__c__last__bit)

axiom q__p1__r__c__position_axiom : (0 <= q__p1__r__c__position)

logic q__p1__r__d__first__bit : int

logic q__p1__r__d__last__bit : int

logic q__p1__r__d__position : int

axiom q__p1__r__d__first__bit_axiom : (0 <= q__p1__r__d__first__bit)

axiom q__p1__r__d__last__bit_axiom :
  (q__p1__r__d__first__bit <  q__p1__r__d__last__bit)

axiom q__p1__r__d__position_axiom : (0 <= q__p1__r__d__position)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type r__ref = { r__content : us_rep
}

function r__ref_r__content__projection(a: r__ref) : us_rep = (a).r__content

logic pack : int, bool, int -> us_rep

logic pack__function_guard : us_rep, int, bool, int -> prop

predicate dynamic_invariant2(temp___expr_161: int, temp___is_init_157: bool,
  temp___skip_constant_158: bool, temp___do_toplevel_159: bool,
  temp___do_typ_inv_160: bool) = (((temp___is_init_157 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range3(temp___expr_161))

predicate dynamic_invariant3(temp___expr_168: int, temp___is_init_164: bool,
  temp___skip_constant_165: bool, temp___do_toplevel_166: bool,
  temp___do_typ_inv_167: bool) = (((temp___is_init_164 = true) or
  (0 <= 2147483647)) -> in_range4(temp___expr_168))

logic x1 : bool

logic attr__ATTRIBUTE_ADDRESS : int

logic x2 : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic x3 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

type t2

logic t2qtint : t2 -> int

axiom t2qtaxiom : (forall i:t2. ((- 2147483648) <= t2qtint(i)))

axiom t2qtaxiom1 : (forall i:t2. (t2qtint(i) <= 2147483647))

predicate in_range5(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : t2, t2 -> bool

logic dummy5 : t2

type t2__ref = { t2__content : t2
}

function t2__ref_t2__content__projection(a: t2__ref) : t2 = (a).t2__content

function to_rep3(x: t2) : int = t2qtint(x)

logic of_rep3 : int -> t2

axiom inversion_axiom3 :
  (forall x:t2 [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:t2 [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type t31

logic t3qtint1 : t31 -> int

axiom t3qtaxiom2 : (forall i:t31. (0 <= t3qtint1(i)))

axiom t3qtaxiom3 : (forall i:t31. (t3qtint1(i) <= 2147483647))

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : t31, t31 -> bool

logic dummy6 : t31

type t3__ref1 = { t3__content1 : t31
}

function t3__ref_t3__content__2__projection(a: t3__ref1) : t31 =
  (a).t3__content1

function to_rep4(x: t31) : int = t3qtint1(x)

logic of_rep4 : int -> t31

axiom inversion_axiom4 :
  (forall x:t31 [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:t31 [to_rep4(x)]. in_range6(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range6(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields2 = { rec__q__p2__r__a : bool; rec__q__p2__r__b : t2;
rec__q__p2__r__c : t31; rec__q__p2__r__d : integer
}

function us_split_fields_rec__q__p2__r__a__projection(a: us_split_fields2) : bool =
  (a).rec__q__p2__r__a

function us_split_fields_rec__q__p2__r__b__projection(a: us_split_fields2) : t2 =
  (a).rec__q__p2__r__b

function us_split_fields_rec__q__p2__r__c__projection(a: us_split_fields2) : t31 =
  (a).rec__q__p2__r__c

function us_split_fields_rec__q__p2__r__d__projection(a: us_split_fields2) : integer =
  (a).rec__q__p2__r__d

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___split_fields__content__2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___split_fields__2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function bool_eq8(a: us_rep1, b: us_rep1) : bool =
  (if (((to_int(((a).us_split_fields3).rec__q__p2__r__a) = to_int(((b).us_split_fields3).rec__q__p2__r__a)) and
  (to_rep3(((a).us_split_fields3).rec__q__p2__r__b) = to_rep3(((b).us_split_fields3).rec__q__p2__r__b))) and
  ((to_rep4(((a).us_split_fields3).rec__q__p2__r__c) = to_rep4(((b).us_split_fields3).rec__q__p2__r__c)) and
  (to_rep(((a).us_split_fields3).rec__q__p2__r__d) = to_rep(((b).us_split_fields3).rec__q__p2__r__d)))) then true else false)

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic q__p2__r__a__first__bit : int

logic q__p2__r__a__last__bit : int

logic q__p2__r__a__position : int

axiom q__p2__r__a__first__bit_axiom : (0 <= q__p2__r__a__first__bit)

axiom q__p2__r__a__last__bit_axiom :
  (q__p2__r__a__first__bit <  q__p2__r__a__last__bit)

axiom q__p2__r__a__position_axiom : (0 <= q__p2__r__a__position)

logic q__p2__r__b__first__bit : int

logic q__p2__r__b__last__bit : int

logic q__p2__r__b__position : int

axiom q__p2__r__b__first__bit_axiom : (0 <= q__p2__r__b__first__bit)

axiom q__p2__r__b__last__bit_axiom :
  (q__p2__r__b__first__bit <  q__p2__r__b__last__bit)

axiom q__p2__r__b__position_axiom : (0 <= q__p2__r__b__position)

logic q__p2__r__c__first__bit : int

logic q__p2__r__c__last__bit : int

logic q__p2__r__c__position : int

axiom q__p2__r__c__first__bit_axiom : (0 <= q__p2__r__c__first__bit)

axiom q__p2__r__c__last__bit_axiom :
  (q__p2__r__c__first__bit <  q__p2__r__c__last__bit)

axiom q__p2__r__c__position_axiom : (0 <= q__p2__r__c__position)

logic q__p2__r__d__first__bit : int

logic q__p2__r__d__last__bit : int

logic q__p2__r__d__position : int

axiom q__p2__r__d__first__bit_axiom : (0 <= q__p2__r__d__first__bit)

axiom q__p2__r__d__last__bit_axiom :
  (q__p2__r__d__first__bit <  q__p2__r__d__last__bit)

axiom q__p2__r__d__position_axiom : (0 <= q__p2__r__d__position)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy7 : us_rep1

type r__ref1 = { r__content1 : us_rep1
}

function r__ref_r__content__2__projection(a: r__ref1) : us_rep1 =
  (a).r__content1

logic pack1 : bool, int, int -> us_rep1

logic pack__function_guard1 : us_rep1, bool, int, int -> prop

predicate dynamic_invariant4(temp___expr_186: int, temp___is_init_182: bool,
  temp___skip_constant_183: bool, temp___do_toplevel_184: bool,
  temp___do_typ_inv_185: bool) = (((temp___is_init_182 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range5(temp___expr_186))

predicate dynamic_invariant5(temp___expr_193: int, temp___is_init_189: bool,
  temp___skip_constant_190: bool, temp___do_toplevel_191: bool,
  temp___do_typ_inv_192: bool) = (((temp___is_init_189 = true) or
  (0 <= 2147483647)) -> in_range6(temp___expr_193))

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

 (* File "q.ads", line 11, characters 0-0 *)
goal defqtvc :
  (forall x4:int. (dynamic_invariant(x2, true, false, true, true) ->
  (dynamic_invariant1(x3, true, false, true, true) -> (dynamic_invariant(x4,
  false, false, true, true) -> (let o = x3 : int in (let o1 = x1 : bool in
  (let o2 = x2 : int in (let temp___215 = pack(o2, o1, o) : us_rep in
  (pack__function_guard(temp___215, o2, o1, o) ->
  (forall r1__split_fields:us_split_fields.
  ((r1__split_fields = (temp___215).us_split_fields1) -> (let o3 = x3
  : int in (let o4 = x2 : int in (let o5 = x1 : bool in (let temp___216 =
  pack1(o5, o4, o3) : us_rep1 in (pack__function_guard1(temp___216, o5, o4,
  o3) ->
  (forall r2__split_fields:us_split_fields2.
  ((r2__split_fields = (temp___216).us_split_fields3) ->
  (forall o6:int. ((to_rep((r2__split_fields).rec__q__p2__r__d) = o6) ->
  (forall o7:int. ((to_rep((r1__split_fields).rec__q__p1__r__d) = o7) ->
  in_range((o7 + o6))))))))))))))))))))))))
