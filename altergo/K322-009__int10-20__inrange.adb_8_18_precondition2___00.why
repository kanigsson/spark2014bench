(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range(temp___expr_18))

logic add1 : int, int -> int

logic add1__function_guard : int, int, int -> prop

type int20

logic int20qtint : int20 -> int

axiom int20qtaxiom : (forall i:int20. (1 <= int20qtint(i)))

axiom int20qtaxiom1 : (forall i:int20. (int20qtint(i) <= 20))

predicate in_range1(x: int) = ((1 <= x) and (x <= 20))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : int20, int20 -> bool

logic dummy1 : int20

type int20__ref = { int20__content : int20
}

function int20__ref_int20__content__projection(a: int20__ref) : int20 =
  (a).int20__content

predicate dynamic_invariant1(temp___expr_161: int, temp___is_init_157: bool,
  temp___skip_constant_158: bool, temp___do_toplevel_159: bool,
  temp___do_typ_inv_160: bool) = (((temp___is_init_157 = true) or
  (1 <= 20)) -> in_range1(temp___expr_161))

type int10

logic int10qtint : int10 -> int

axiom int10qtaxiom : (forall i:int10. (1 <= int10qtint(i)))

axiom int10qtaxiom1 : (forall i:int10. (int10qtint(i) <= 10))

predicate in_range2(x: int) = ((1 <= x) and (x <= 10))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : int10, int10 -> bool

logic dummy2 : int10

type int10__ref = { int10__content : int10
}

function int10__ref_int10__content__projection(a: int10__ref) : int10 =
  (a).int10__content

predicate dynamic_invariant2(temp___expr_168: int, temp___is_init_164: bool,
  temp___skip_constant_165: bool, temp___do_toplevel_166: bool,
  temp___do_typ_inv_167: bool) = (((temp___is_init_164 = true) or
  (1 <= 10)) -> in_range2(temp___expr_168))

axiom add1__post_axiom :
  (forall i:int. forall j:int [add1(i, j)]. (((dynamic_invariant1(i, true,
  true, true, true) and dynamic_invariant2(j, true, true, true, true)) and
  (i <= 10)) -> (let result = add1(i, j) : int in
  (add1__function_guard(result, i, j) -> (result <= 20)))))

axiom add1__post_axiom1 :
  (forall i:int. forall j:int [add1(i, j)]. (((dynamic_invariant1(i, true,
  true, true, true) and dynamic_invariant2(j, true, true, true, true)) and
  (i <= 10)) -> (let result = add1(i, j) : int in
  (add1__function_guard(result, i, j) -> dynamic_invariant(result, true,
  false, true, true)))))

logic i : int

logic attr__ATTRIBUTE_ADDRESS : int

logic j : int

logic attr__ATTRIBUTE_ADDRESS1 : int

 (* File "inrange.ads", line 9, characters 0-0 *)
goal defqtvc : (dynamic_invariant1(i, true, false, true, true) ->
  (dynamic_invariant2(j, true, false, true, true) -> (j <= 10)))
