(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type character

predicate in_range(x: int) = ((0 <= x) and (x <= 255))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : character, character -> bool

logic dummy : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

predicate dynamic_invariant(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range(temp___expr_74))

type wide_character

predicate in_range1(x: int) = ((0 <= x) and (x <= 65535))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : wide_character, wide_character -> bool

logic dummy1 : wide_character

type wide_character__ref = { wide_character__content : wide_character
}

function wide_character__ref_wide_character__content__projection(a: wide_character__ref) : wide_character =
  (a).wide_character__content

predicate dynamic_invariant1(temp___expr_81: int, temp___is_init_77: bool,
  temp___skip_constant_78: bool, temp___do_toplevel_79: bool,
  temp___do_typ_inv_80: bool) = (((temp___is_init_77 = true) or
  (0 <= 65535)) -> in_range1(temp___expr_81))

type wide_wide_character

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : wide_wide_character, wide_wide_character -> bool

logic dummy2 : wide_wide_character

type wide_wide_character__ref = { wide_wide_character__content :
wide_wide_character
}

function wide_wide_character__ref_wide_wide_character__content__projection(a: wide_wide_character__ref) : wide_wide_character =
  (a).wide_wide_character__content

predicate dynamic_invariant2(temp___expr_88: int, temp___is_init_84: bool,
  temp___skip_constant_85: bool, temp___do_toplevel_86: bool,
  temp___do_typ_inv_87: bool) = (((temp___is_init_84 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_88))

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

 (* File "chars.ads", line 2, characters 0-0 *)
goal defqtvc :
  (forall x:int. ((x = 65) -> (dynamic_invariant(x, true, false, true,
  true) ->
  (forall y:int. ((y = 97) -> (dynamic_invariant(y, true, false, true,
  true) ->
  (forall wx:int. ((wx = 65) -> (dynamic_invariant1(wx, true, false, true,
  true) ->
  (forall wy:int. ((wy = 97) -> (dynamic_invariant1(wy, true, false, true,
  true) ->
  (forall wwx:int. ((wwx = 65) -> (dynamic_invariant2(wwx, true, false, true,
  true) ->
  (forall wwy:int. ((wwy = 97) -> (dynamic_invariant2(wwy, true, false, true,
  true) ->
  (forall z:bool. ((z = (if (x <  y) then true else false)) ->
  (forall wz:bool. ((wz = (if (wx <  wy) then true else false)) ->
  (forall wwz:bool. ((wwz = (if (wwx <  wwy) then true else false)) ->
  (forall f:int. ((f = 0) -> (dynamic_invariant(f, true, false, true,
  true) ->
  (forall wf:int. ((wf = 0) -> (dynamic_invariant1(wf, true, false, true,
  true) ->
  (forall wwf:int. ((wwf = 0) -> (dynamic_invariant2(wwf, true, false, true,
  true) ->
  (forall chars__doit__result:bool.
  ((chars__doit__result = (if ((if (z = true) then wz else false) = true) then wwz else false)) ->
  (chars__doit__result = true))))))))))))))))))))))))))))))))))))
