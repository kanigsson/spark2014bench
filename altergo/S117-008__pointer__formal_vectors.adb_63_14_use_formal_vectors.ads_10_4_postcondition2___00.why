(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_rep = { rec__use_formal_vectors__element_type__is_null_pointer :
bool; rec__use_formal_vectors__element_type__pointer_address : int;
rec__use_formal_vectors__element_type__pointer_value : integer
}

function us_rep_rec__use_formal_vectors__element_type__is_null_pointer__projection(a: us_rep) : bool =
  (a).rec__use_formal_vectors__element_type__is_null_pointer

function us_rep_rec__use_formal_vectors__element_type__pointer_address__projection(a: us_rep) : int =
  (a).rec__use_formal_vectors__element_type__pointer_address

function us_rep_rec__use_formal_vectors__element_type__pointer_value__projection(a: us_rep) : integer =
  (a).rec__use_formal_vectors__element_type__pointer_value

type us_rep__ref = { us_rep__content : us_rep
}

function us_rep__ref___rep__content__projection(a: us_rep__ref) : us_rep =
  (a).us_rep__content

function bool_eq2(a: us_rep, b: us_rep) : bool =
  (if (((a).rec__use_formal_vectors__element_type__is_null_pointer = (b).rec__use_formal_vectors__element_type__is_null_pointer) and
  ((not ((a).rec__use_formal_vectors__element_type__is_null_pointer = true)) ->
  (((a).rec__use_formal_vectors__element_type__pointer_address = (b).rec__use_formal_vectors__element_type__pointer_address) and
  ((a).rec__use_formal_vectors__element_type__pointer_value = (b).rec__use_formal_vectors__element_type__pointer_value)))) then true else false)

predicate rec__use_formal_vectors__element_type__pointer_value__pred(a: us_rep) =
  (not ((a).rec__use_formal_vectors__element_type__is_null_pointer = true))

logic us_null_pointer : us_rep

axiom us_null_pointer__def_axiom :
  ((us_null_pointer).rec__use_formal_vectors__element_type__is_null_pointer = true)

logic dummy1 : us_rep

type element_type__ref = { element_type__content : us_rep
}

function element_type__ref_element_type__content__projection(a: element_type__ref) : us_rep =
  (a).element_type__content

logic model : us_rep -> int

logic model__function_guard : int, us_rep -> prop

predicate dynamic_invariant(temp___expr_193: us_rep,
  temp___is_init_189: bool, temp___skip_constant_190: bool,
  temp___do_toplevel_191: bool, temp___do_typ_inv_192: bool) =
  (not ((temp___expr_193).rec__use_formal_vectors__element_type__is_null_pointer = true))

predicate default_initial_assumption(temp___expr_194: us_rep,
  temp___skip_top_level_195: bool) =
  ((temp___expr_194).rec__use_formal_vectors__element_type__is_null_pointer = true)

type element_model

logic element_modelqtint : element_model -> int

axiom element_modelqtaxiom :
  (forall i:element_model. ((- 2147483648) <= element_modelqtint(i)))

axiom element_modelqtaxiom1 :
  (forall i:element_model. (element_modelqtint(i) <= 2147483647))

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : element_model, element_model -> bool

logic dummy2 : element_model

type element_model__ref = { element_model__content : element_model
}

function element_model__ref_element_model__content__projection(a: element_model__ref) : element_model =
  (a).element_model__content

predicate dynamic_invariant1(temp___expr_200: int, temp___is_init_196: bool,
  temp___skip_constant_197: bool, temp___do_toplevel_198: bool,
  temp___do_typ_inv_199: bool) = (((temp___is_init_196 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range2(temp___expr_200))

axiom model__post_axiom :
  (forall x:us_rep [model(x)]. (dynamic_invariant(x, true, true, true,
  true) -> (let result = model(x) : int in (model__function_guard(result,
  x) -> dynamic_invariant1(result, true, false, true, true)))))

axiom model__def_axiom :
  (forall x:us_rep [model(x)]. (dynamic_invariant(x, true, true, true,
  true) ->
  (model(x) = to_rep((x).rec__use_formal_vectors__element_type__pointer_value))))

logic dummy3 : us_rep

type element_type__ref1 = { element_type__content1 : us_rep
}

function element_type__ref_element_type__content__2__projection(a: element_type__ref1) : us_rep =
  (a).element_type__content1

type us_rep1 = {
rec__use_formal_vectors__my_vect__element_access__is_null_pointer : bool;
rec__use_formal_vectors__my_vect__element_access__pointer_address : int;
rec__use_formal_vectors__my_vect__element_access__pointer_value : us_rep
}

function us_rep_rec__use_formal_vectors__my_vect__element_access__is_null_pointer__projection(a: us_rep1) : bool =
  (a).rec__use_formal_vectors__my_vect__element_access__is_null_pointer

function us_rep_rec__use_formal_vectors__my_vect__element_access__pointer_address__projection(a: us_rep1) : int =
  (a).rec__use_formal_vectors__my_vect__element_access__pointer_address

function us_rep_rec__use_formal_vectors__my_vect__element_access__pointer_value__projection(a: us_rep1) : us_rep =
  (a).rec__use_formal_vectors__my_vect__element_access__pointer_value

type us_rep__ref1 = { us_rep__content1 : us_rep1
}

function us_rep__ref___rep__content__2__projection(a: us_rep__ref1) : us_rep1 =
  (a).us_rep__content1

function bool_eq4(a: us_rep1, b: us_rep1) : bool =
  (if (((a).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = (b).rec__use_formal_vectors__my_vect__element_access__is_null_pointer) and
  ((not ((a).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)) ->
  (((a).rec__use_formal_vectors__my_vect__element_access__pointer_address = (b).rec__use_formal_vectors__my_vect__element_access__pointer_address) and
  ((a).rec__use_formal_vectors__my_vect__element_access__pointer_value = (b).rec__use_formal_vectors__my_vect__element_access__pointer_value)))) then true else false)

predicate rec__use_formal_vectors__my_vect__element_access__pointer_value__pred(a: us_rep1) =
  (not ((a).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true))

logic us_null_pointer1 : us_rep1

axiom us_null_pointer__def_axiom1 :
  ((us_null_pointer1).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)

logic dummy4 : us_rep1

type name__ref = { name__content : us_rep1
}

function name__ref_name__content__2__projection(a: name__ref) : us_rep1 =
  (a).name__content

predicate dynamic_invariant2(temp___expr_364: us_rep1,
  temp___is_init_360: bool, temp___skip_constant_361: bool,
  temp___do_toplevel_362: bool, temp___do_typ_inv_363: bool) =
  ((not ((temp___expr_364).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)) ->
  (not (((temp___expr_364).rec__use_formal_vectors__my_vect__element_access__pointer_value).rec__use_formal_vectors__element_type__is_null_pointer = true)))

predicate default_initial_assumption1(temp___expr_365: us_rep1,
  temp___skip_top_level_366: bool) =
  ((temp___expr_365).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic dummy5 : us_rep1

type element_access__ref = { element_access__content : us_rep1
}

function element_access__ref_element_access__content__projection(a: element_access__ref) : us_rep1 =
  (a).element_access__content

predicate dynamic_invariant3(temp___expr_225: us_rep1,
  temp___is_init_221: bool, temp___skip_constant_222: bool,
  temp___do_toplevel_223: bool, temp___do_typ_inv_224: bool) =
  ((not ((temp___expr_225).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)) ->
  (not (((temp___expr_225).rec__use_formal_vectors__my_vect__element_access__pointer_value).rec__use_formal_vectors__element_type__is_null_pointer = true)))

predicate default_initial_assumption2(temp___expr_226: us_rep1,
  temp___skip_top_level_227: bool) =
  ((temp___expr_226).rec__use_formal_vectors__my_vect__element_access__is_null_pointer = true)

predicate dynamic_invariant4(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant5(temp___expr_211: us_rep,
  temp___is_init_207: bool, temp___skip_constant_208: bool,
  temp___do_toplevel_209: bool, temp___do_typ_inv_210: bool) =
  (not ((temp___expr_211).rec__use_formal_vectors__element_type__is_null_pointer = true))

predicate default_initial_assumption3(temp___expr_212: us_rep,
  temp___skip_top_level_213: bool) =
  ((temp___expr_212).rec__use_formal_vectors__element_type__is_null_pointer = true)

 (* File "formal_vectors.adb", line 60, characters 0-0 *)
goal defqtvc :
  (forall from__pointer_value:us_rep. forall from__pointer_address:int.
  forall from__is_null_pointer:bool. forall to____pointer_value:us_rep.
  forall to____pointer_address:int. forall to____is_null_pointer:bool.
  (forall from__pointer_value1:us_rep.
  ((from__pointer_value1 = from__pointer_value) ->
  (forall from__is_null_pointer1:bool.
  ((from__is_null_pointer1 = from__is_null_pointer) -> (dynamic_invariant3({
  rec__use_formal_vectors__my_vect__element_access__is_null_pointer =
  from__is_null_pointer;
  rec__use_formal_vectors__my_vect__element_access__pointer_address =
  from__pointer_address;
  rec__use_formal_vectors__my_vect__element_access__pointer_value =
  from__pointer_value }, true, false, true, true) -> (dynamic_invariant3({
  rec__use_formal_vectors__my_vect__element_access__is_null_pointer =
  to____is_null_pointer;
  rec__use_formal_vectors__my_vect__element_access__pointer_address =
  to____pointer_address;
  rec__use_formal_vectors__my_vect__element_access__pointer_value =
  to____pointer_value }, true, false, true, true) -> ((not (bool_eq4({
  rec__use_formal_vectors__my_vect__element_access__is_null_pointer =
  from__is_null_pointer;
  rec__use_formal_vectors__my_vect__element_access__pointer_address =
  from__pointer_address;
  rec__use_formal_vectors__my_vect__element_access__pointer_value =
  from__pointer_value }, us_null_pointer1) = true)) ->
  (forall to____pointer_address1:int. forall to____is_null_pointer1:bool.
  forall use_formal_vectors__my_vect__free__2__x__value:us_rep.
  (dynamic_invariant2({
  rec__use_formal_vectors__my_vect__element_access__is_null_pointer =
  to____is_null_pointer1;
  rec__use_formal_vectors__my_vect__element_access__pointer_address =
  to____pointer_address1;
  rec__use_formal_vectors__my_vect__element_access__pointer_value =
  use_formal_vectors__my_vect__free__2__x__value }, true, true, true,
  true) ->
  (forall to____pointer_value1:us_rep.
  ((to____pointer_value1 = use_formal_vectors__my_vect__free__2__x__value) ->
  (forall to____pointer_address2:int.
  ((to____pointer_address2 = to____pointer_address1) ->
  (forall to____is_null_pointer2:bool.
  ((to____is_null_pointer2 = to____is_null_pointer1) ->
  (forall to____pointer_value2:us_rep.
  ((to____pointer_value2 = from__pointer_value) ->
  (forall to____pointer_address3:int.
  ((to____pointer_address3 = from__pointer_address) ->
  (forall to____is_null_pointer3:bool.
  ((to____is_null_pointer3 = from__is_null_pointer) ->
  (forall from__pointer_value2:us_rep.
  ((from__pointer_value2 = (us_null_pointer1).rec__use_formal_vectors__my_vect__element_access__pointer_value) ->
  (forall from__pointer_address1:int.
  ((from__pointer_address1 = (us_null_pointer1).rec__use_formal_vectors__my_vect__element_access__pointer_address) ->
  (forall from__is_null_pointer2:bool.
  ((from__is_null_pointer2 = (us_null_pointer1).rec__use_formal_vectors__my_vect__element_access__is_null_pointer) ->
  (not (bool_eq4({
  rec__use_formal_vectors__my_vect__element_access__is_null_pointer =
  to____is_null_pointer3;
  rec__use_formal_vectors__my_vect__element_access__pointer_address =
  to____pointer_address3;
  rec__use_formal_vectors__my_vect__element_access__pointer_value =
  to____pointer_value2 }, us_null_pointer1) = true))))))))))))))))))))))))))))))
