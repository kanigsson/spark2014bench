(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic div : int, int -> int

logic mod : int, int -> int

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) -> (x = ((y * div(x,
  y)) + mod(x, y)))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (0 <= div(x, y))))

axiom Div_bound1 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (div(x, y) <= x)))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((-abs_int(y)) <  mod(x,
  y))))

axiom Mod_bound1 :
  (forall x:int. forall y:int. ((not (y = 0)) -> (mod(x, y) <  abs_int(y))))

axiom Div_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (0 <= div(x, y))))

axiom Div_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (0 <  y)) -> (div(x, y) <= 0)))

axiom Mod_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (not (y = 0))) -> (0 <= mod(x,
  y))))

axiom Mod_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (not (y = 0))) -> (mod(x,
  y) <= 0)))

axiom Rounds_toward_zero :
  (forall x:int. forall y:int. ((not (y = 0)) -> (abs_int((div(x,
  y) * y)) <= abs_int(x))))

axiom Div_1 : (forall x:int. (div(x, 1) = x))

axiom Mod_1 : (forall x:int. (mod(x, 1) = 0))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> (div(x, y) = 0)))

axiom Mod_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> (mod(x, y) = x)))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [div(((x * y) + z), x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) -> (div(((x * y) + z),
  x) = (y + div(z, x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [mod(((x * y) + z), x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) -> (mod(((x * y) + z), x) = mod(z,
  x))))

axiom Div_mod1 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound2 :
  (forall x:int. forall y:int. ((not (y = 0)) -> (0 <= (x % y))))

axiom Mod_bound3 :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((x % y) <  abs_int(y))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound2 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> (0 <= (x / y))))

axiom Div_bound3 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) -> ((x / y) <= x)))

axiom Mod_11 : (forall x:int. ((x % 1) = 0))

axiom Div_11 : (forall x:int. ((x / 1) = x))

axiom Div_inf1 :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (- 1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((- 1) / y) = (- 1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((- 1) % y)]. ((1 <  y) -> (((- 1) % y) = (y - 1))))

axiom Div_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

function mod1(x: int, y: int) : int =
  (if (0 <  y) then (x % y) else ((x % y) + y))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

function to_rep1(x: natural) : int = naturalqtint(x)

logic of_rep1 : int -> natural

axiom inversion_axiom1 :
  (forall x:natural [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:natural [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type us_split_discrs = { rec__formals_rec_split_pred__rec__d : bool
}

function us_split_discrs_rec__formals_rec_split_pred__rec__d__projection(a: us_split_discrs) : bool =
  (a).rec__formals_rec_split_pred__rec__d

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___split_discrs__content__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__formals_rec_split_pred__rec__f : integer;
rec__formals_rec_split_pred__rec__g : integer;
rec__formals_rec_split_pred__rec__h : natural
}

function us_split_fields_rec__formals_rec_split_pred__rec__f__projection(a: us_split_fields) : integer =
  (a).rec__formals_rec_split_pred__rec__f

function us_split_fields_rec__formals_rec_split_pred__rec__g__projection(a: us_split_fields) : integer =
  (a).rec__formals_rec_split_pred__rec__g

function us_split_fields_rec__formals_rec_split_pred__rec__h__projection(a: us_split_fields) : natural =
  (a).rec__formals_rec_split_pred__rec__h

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___split_discrs__projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

predicate formals_rec_split_pred__rec__f__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

predicate formals_rec_split_pred__rec__g__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

predicate formals_rec_split_pred__rec__h__pred(a: us_rep) =
  (to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = 1)

function bool_eq3(a: us_rep, b: us_rep) : bool =
  (if ((to_int(((a).us_split_discrs1).rec__formals_rec_split_pred__rec__d) = to_int(((b).us_split_discrs1).rec__formals_rec_split_pred__rec__d)) and
  (((formals_rec_split_pred__rec__f__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__formals_rec_split_pred__rec__f) = to_rep(((b).us_split_fields1).rec__formals_rec_split_pred__rec__f))) and
  (formals_rec_split_pred__rec__g__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__formals_rec_split_pred__rec__g) = to_rep(((b).us_split_fields1).rec__formals_rec_split_pred__rec__g)))) and
  (formals_rec_split_pred__rec__h__pred(a) ->
  (to_rep1(((a).us_split_fields1).rec__formals_rec_split_pred__rec__h) = to_rep1(((b).us_split_fields1).rec__formals_rec_split_pred__rec__h))))) then true else false)

logic value__size : int

logic object__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom alignment_axiom : (0 <= alignment)

logic formals_rec_split_pred__rec__d__first__bit : int

logic formals_rec_split_pred__rec__d__last__bit : int

logic formals_rec_split_pred__rec__d__position : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__d__first__bit)

axiom formals_rec_split_pred__rec__d__last__bit_axiom :
  (formals_rec_split_pred__rec__d__first__bit <  formals_rec_split_pred__rec__d__last__bit)

axiom formals_rec_split_pred__rec__d__position_axiom :
  (0 <= formals_rec_split_pred__rec__d__position)

logic formals_rec_split_pred__rec__f__first__bit : int

logic formals_rec_split_pred__rec__f__last__bit : int

logic formals_rec_split_pred__rec__f__position : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__f__first__bit)

axiom formals_rec_split_pred__rec__f__last__bit_axiom :
  (formals_rec_split_pred__rec__f__first__bit <  formals_rec_split_pred__rec__f__last__bit)

axiom formals_rec_split_pred__rec__f__position_axiom :
  (0 <= formals_rec_split_pred__rec__f__position)

logic formals_rec_split_pred__rec__g__first__bit : int

logic formals_rec_split_pred__rec__g__last__bit : int

logic formals_rec_split_pred__rec__g__position : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__g__first__bit)

axiom formals_rec_split_pred__rec__g__last__bit_axiom :
  (formals_rec_split_pred__rec__g__first__bit <  formals_rec_split_pred__rec__g__last__bit)

axiom formals_rec_split_pred__rec__g__position_axiom :
  (0 <= formals_rec_split_pred__rec__g__position)

logic formals_rec_split_pred__rec__h__first__bit : int

logic formals_rec_split_pred__rec__h__last__bit : int

logic formals_rec_split_pred__rec__h__position : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom :
  (0 <= formals_rec_split_pred__rec__h__first__bit)

axiom formals_rec_split_pred__rec__h__last__bit_axiom :
  (formals_rec_split_pred__rec__h__first__bit <  formals_rec_split_pred__rec__h__last__bit)

axiom formals_rec_split_pred__rec__h__position_axiom :
  (0 <= formals_rec_split_pred__rec__h__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : us_rep

type constr_rec__ref = { constr_rec__content : us_rep
}

function constr_rec__ref_constr_rec__content__projection(a: constr_rec__ref) : us_rep =
  (a).constr_rec__content

logic value__size1 : int

logic object__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic formals_rec_split_pred__rec__d__first__bit1 : int

logic formals_rec_split_pred__rec__d__last__bit1 : int

logic formals_rec_split_pred__rec__d__position1 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__d__first__bit1)

axiom formals_rec_split_pred__rec__d__last__bit_axiom1 :
  (formals_rec_split_pred__rec__d__first__bit1 <  formals_rec_split_pred__rec__d__last__bit1)

axiom formals_rec_split_pred__rec__d__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__d__position1)

logic formals_rec_split_pred__rec__f__first__bit1 : int

logic formals_rec_split_pred__rec__f__last__bit1 : int

logic formals_rec_split_pred__rec__f__position1 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__f__first__bit1)

axiom formals_rec_split_pred__rec__f__last__bit_axiom1 :
  (formals_rec_split_pred__rec__f__first__bit1 <  formals_rec_split_pred__rec__f__last__bit1)

axiom formals_rec_split_pred__rec__f__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__f__position1)

logic formals_rec_split_pred__rec__g__first__bit1 : int

logic formals_rec_split_pred__rec__g__last__bit1 : int

logic formals_rec_split_pred__rec__g__position1 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__g__first__bit1)

axiom formals_rec_split_pred__rec__g__last__bit_axiom1 :
  (formals_rec_split_pred__rec__g__first__bit1 <  formals_rec_split_pred__rec__g__last__bit1)

axiom formals_rec_split_pred__rec__g__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__g__position1)

logic formals_rec_split_pred__rec__h__first__bit1 : int

logic formals_rec_split_pred__rec__h__last__bit1 : int

logic formals_rec_split_pred__rec__h__position1 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom1 :
  (0 <= formals_rec_split_pred__rec__h__first__bit1)

axiom formals_rec_split_pred__rec__h__last__bit_axiom1 :
  (formals_rec_split_pred__rec__h__first__bit1 <  formals_rec_split_pred__rec__h__last__bit1)

axiom formals_rec_split_pred__rec__h__position_axiom1 :
  (0 <= formals_rec_split_pred__rec__h__position1)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type constr_rec_2__ref = { constr_rec_2__content : us_rep
}

function constr_rec_2__ref_constr_rec_2__content__projection(a: constr_rec_2__ref) : us_rep =
  (a).constr_rec_2__content

predicate in_range3(rec__formals_rec_split_pred__rec__d1: bool,
  a: us_split_discrs) =
  (rec__formals_rec_split_pred__rec__d1 = (a).rec__formals_rec_split_pred__rec__d)

logic value__size2 : int

logic object__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic formals_rec_split_pred__rec__d__first__bit2 : int

logic formals_rec_split_pred__rec__d__last__bit2 : int

logic formals_rec_split_pred__rec__d__position2 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom2 :
  (0 <= formals_rec_split_pred__rec__d__first__bit2)

axiom formals_rec_split_pred__rec__d__last__bit_axiom2 :
  (formals_rec_split_pred__rec__d__first__bit2 <  formals_rec_split_pred__rec__d__last__bit2)

axiom formals_rec_split_pred__rec__d__position_axiom2 :
  (0 <= formals_rec_split_pred__rec__d__position2)

logic formals_rec_split_pred__rec__f__first__bit2 : int

logic formals_rec_split_pred__rec__f__last__bit2 : int

logic formals_rec_split_pred__rec__f__position2 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom2 :
  (0 <= formals_rec_split_pred__rec__f__first__bit2)

axiom formals_rec_split_pred__rec__f__last__bit_axiom2 :
  (formals_rec_split_pred__rec__f__first__bit2 <  formals_rec_split_pred__rec__f__last__bit2)

axiom formals_rec_split_pred__rec__f__position_axiom2 :
  (0 <= formals_rec_split_pred__rec__f__position2)

logic formals_rec_split_pred__rec__g__first__bit2 : int

logic formals_rec_split_pred__rec__g__last__bit2 : int

logic formals_rec_split_pred__rec__g__position2 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom2 :
  (0 <= formals_rec_split_pred__rec__g__first__bit2)

axiom formals_rec_split_pred__rec__g__last__bit_axiom2 :
  (formals_rec_split_pred__rec__g__first__bit2 <  formals_rec_split_pred__rec__g__last__bit2)

axiom formals_rec_split_pred__rec__g__position_axiom2 :
  (0 <= formals_rec_split_pred__rec__g__position2)

logic formals_rec_split_pred__rec__h__first__bit2 : int

logic formals_rec_split_pred__rec__h__last__bit2 : int

logic formals_rec_split_pred__rec__h__position2 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom2 :
  (0 <= formals_rec_split_pred__rec__h__first__bit2)

axiom formals_rec_split_pred__rec__h__last__bit_axiom2 :
  (formals_rec_split_pred__rec__h__first__bit2 <  formals_rec_split_pred__rec__h__last__bit2)

axiom formals_rec_split_pred__rec__h__position_axiom2 :
  (0 <= formals_rec_split_pred__rec__h__position2)

logic user_eq4 : us_rep, us_rep -> bool

logic dummy4 : us_rep

type rec____ref = { rec____content : us_rep
}

function rec____ref_rec____content__projection(a: rec____ref) : us_rep =
  (a).rec____content

predicate dynamic_invariant(temp___expr_187: us_rep,
  temp___is_init_183: bool, temp___skip_constant_184: bool,
  temp___do_toplevel_185: bool, temp___do_typ_inv_186: bool) =
  (((not (temp___skip_constant_184 = true)) -> in_range3(of_int(1),
  (temp___expr_187).us_split_discrs1)) and
  ((temp___do_toplevel_185 = true) ->
  (not (to_rep1(((temp___expr_187).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))))

predicate default_initial_assumption(temp___expr_190: us_rep,
  temp___skip_top_level_191: bool) =
  ((((temp___expr_190).us_split_discrs1).rec__formals_rec_split_pred__rec__d = of_int(1)) and
  (((formals_rec_split_pred__rec__f__pred(temp___expr_190) ->
  (to_rep(((temp___expr_190).us_split_fields1).rec__formals_rec_split_pred__rec__f) = 1)) and
  (formals_rec_split_pred__rec__g__pred(temp___expr_190) ->
  (to_rep(((temp___expr_190).us_split_fields1).rec__formals_rec_split_pred__rec__g) = 1))) and
  (formals_rec_split_pred__rec__h__pred(temp___expr_190) ->
  (to_rep1(((temp___expr_190).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 1))))

predicate dynamic_predicate(temp___193: us_rep) =
  (not (to_rep1(((temp___193).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))

predicate dynamic_invariant1(temp___expr_199: us_rep,
  temp___is_init_195: bool, temp___skip_constant_196: bool,
  temp___do_toplevel_197: bool, temp___do_typ_inv_198: bool) =
  (((not (temp___skip_constant_196 = true)) -> in_range3(of_int(1),
  (temp___expr_199).us_split_discrs1)) and
  ((temp___do_toplevel_197 = true) ->
  (not (to_rep1(((temp___expr_199).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))))

predicate default_initial_assumption1(temp___expr_202: us_rep,
  temp___skip_top_level_203: bool) =
  ((((temp___expr_202).us_split_discrs1).rec__formals_rec_split_pred__rec__d = of_int(1)) and
  (((formals_rec_split_pred__rec__f__pred(temp___expr_202) ->
  (to_rep(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__f) = 1)) and
  (formals_rec_split_pred__rec__g__pred(temp___expr_202) ->
  (to_rep(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__g) = 1))) and
  (formals_rec_split_pred__rec__h__pred(temp___expr_202) ->
  (to_rep1(((temp___expr_202).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 1))))

predicate dynamic_predicate1(temp___205: us_rep) =
  (not (to_rep1(((temp___205).us_split_fields1).rec__formals_rec_split_pred__rec__h) = 0))

logic x__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS : int

logic y__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS1 : int

logic u__split_discrs : us_split_discrs

logic attr__ATTRIBUTE_ADDRESS2 : int

logic value__size3 : int

logic object__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic formals_rec_split_pred__rec__d__first__bit3 : int

logic formals_rec_split_pred__rec__d__last__bit3 : int

logic formals_rec_split_pred__rec__d__position3 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom3 :
  (0 <= formals_rec_split_pred__rec__d__first__bit3)

axiom formals_rec_split_pred__rec__d__last__bit_axiom3 :
  (formals_rec_split_pred__rec__d__first__bit3 <  formals_rec_split_pred__rec__d__last__bit3)

axiom formals_rec_split_pred__rec__d__position_axiom3 :
  (0 <= formals_rec_split_pred__rec__d__position3)

logic formals_rec_split_pred__rec__f__first__bit3 : int

logic formals_rec_split_pred__rec__f__last__bit3 : int

logic formals_rec_split_pred__rec__f__position3 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom3 :
  (0 <= formals_rec_split_pred__rec__f__first__bit3)

axiom formals_rec_split_pred__rec__f__last__bit_axiom3 :
  (formals_rec_split_pred__rec__f__first__bit3 <  formals_rec_split_pred__rec__f__last__bit3)

axiom formals_rec_split_pred__rec__f__position_axiom3 :
  (0 <= formals_rec_split_pred__rec__f__position3)

logic formals_rec_split_pred__rec__g__first__bit3 : int

logic formals_rec_split_pred__rec__g__last__bit3 : int

logic formals_rec_split_pred__rec__g__position3 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom3 :
  (0 <= formals_rec_split_pred__rec__g__first__bit3)

axiom formals_rec_split_pred__rec__g__last__bit_axiom3 :
  (formals_rec_split_pred__rec__g__first__bit3 <  formals_rec_split_pred__rec__g__last__bit3)

axiom formals_rec_split_pred__rec__g__position_axiom3 :
  (0 <= formals_rec_split_pred__rec__g__position3)

logic formals_rec_split_pred__rec__h__first__bit3 : int

logic formals_rec_split_pred__rec__h__last__bit3 : int

logic formals_rec_split_pred__rec__h__position3 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom3 :
  (0 <= formals_rec_split_pred__rec__h__first__bit3)

axiom formals_rec_split_pred__rec__h__last__bit_axiom3 :
  (formals_rec_split_pred__rec__h__first__bit3 <  formals_rec_split_pred__rec__h__last__bit3)

axiom formals_rec_split_pred__rec__h__position_axiom3 :
  (0 <= formals_rec_split_pred__rec__h__position3)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type t8b__ref = { t8b__content : us_rep
}

function t8b__ref_t8b__content__projection(a: t8b__ref) : us_rep =
  (a).t8b__content

logic value__size4 : int

logic object__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic formals_rec_split_pred__rec__d__first__bit4 : int

logic formals_rec_split_pred__rec__d__last__bit4 : int

logic formals_rec_split_pred__rec__d__position4 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom4 :
  (0 <= formals_rec_split_pred__rec__d__first__bit4)

axiom formals_rec_split_pred__rec__d__last__bit_axiom4 :
  (formals_rec_split_pred__rec__d__first__bit4 <  formals_rec_split_pred__rec__d__last__bit4)

axiom formals_rec_split_pred__rec__d__position_axiom4 :
  (0 <= formals_rec_split_pred__rec__d__position4)

logic formals_rec_split_pred__rec__f__first__bit4 : int

logic formals_rec_split_pred__rec__f__last__bit4 : int

logic formals_rec_split_pred__rec__f__position4 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom4 :
  (0 <= formals_rec_split_pred__rec__f__first__bit4)

axiom formals_rec_split_pred__rec__f__last__bit_axiom4 :
  (formals_rec_split_pred__rec__f__first__bit4 <  formals_rec_split_pred__rec__f__last__bit4)

axiom formals_rec_split_pred__rec__f__position_axiom4 :
  (0 <= formals_rec_split_pred__rec__f__position4)

logic formals_rec_split_pred__rec__g__first__bit4 : int

logic formals_rec_split_pred__rec__g__last__bit4 : int

logic formals_rec_split_pred__rec__g__position4 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom4 :
  (0 <= formals_rec_split_pred__rec__g__first__bit4)

axiom formals_rec_split_pred__rec__g__last__bit_axiom4 :
  (formals_rec_split_pred__rec__g__first__bit4 <  formals_rec_split_pred__rec__g__last__bit4)

axiom formals_rec_split_pred__rec__g__position_axiom4 :
  (0 <= formals_rec_split_pred__rec__g__position4)

logic formals_rec_split_pred__rec__h__first__bit4 : int

logic formals_rec_split_pred__rec__h__last__bit4 : int

logic formals_rec_split_pred__rec__h__position4 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom4 :
  (0 <= formals_rec_split_pred__rec__h__first__bit4)

axiom formals_rec_split_pred__rec__h__last__bit_axiom4 :
  (formals_rec_split_pred__rec__h__first__bit4 <  formals_rec_split_pred__rec__h__last__bit4)

axiom formals_rec_split_pred__rec__h__position_axiom4 :
  (0 <= formals_rec_split_pred__rec__h__position4)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type t9b__ref = { t9b__content : us_rep
}

function t9b__ref_t9b__content__projection(a: t9b__ref) : us_rep =
  (a).t9b__content

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic formals_rec_split_pred__rec__d__first__bit5 : int

logic formals_rec_split_pred__rec__d__last__bit5 : int

logic formals_rec_split_pred__rec__d__position5 : int

axiom formals_rec_split_pred__rec__d__first__bit_axiom5 :
  (0 <= formals_rec_split_pred__rec__d__first__bit5)

axiom formals_rec_split_pred__rec__d__last__bit_axiom5 :
  (formals_rec_split_pred__rec__d__first__bit5 <  formals_rec_split_pred__rec__d__last__bit5)

axiom formals_rec_split_pred__rec__d__position_axiom5 :
  (0 <= formals_rec_split_pred__rec__d__position5)

logic formals_rec_split_pred__rec__f__first__bit5 : int

logic formals_rec_split_pred__rec__f__last__bit5 : int

logic formals_rec_split_pred__rec__f__position5 : int

axiom formals_rec_split_pred__rec__f__first__bit_axiom5 :
  (0 <= formals_rec_split_pred__rec__f__first__bit5)

axiom formals_rec_split_pred__rec__f__last__bit_axiom5 :
  (formals_rec_split_pred__rec__f__first__bit5 <  formals_rec_split_pred__rec__f__last__bit5)

axiom formals_rec_split_pred__rec__f__position_axiom5 :
  (0 <= formals_rec_split_pred__rec__f__position5)

logic formals_rec_split_pred__rec__g__first__bit5 : int

logic formals_rec_split_pred__rec__g__last__bit5 : int

logic formals_rec_split_pred__rec__g__position5 : int

axiom formals_rec_split_pred__rec__g__first__bit_axiom5 :
  (0 <= formals_rec_split_pred__rec__g__first__bit5)

axiom formals_rec_split_pred__rec__g__last__bit_axiom5 :
  (formals_rec_split_pred__rec__g__first__bit5 <  formals_rec_split_pred__rec__g__last__bit5)

axiom formals_rec_split_pred__rec__g__position_axiom5 :
  (0 <= formals_rec_split_pred__rec__g__position5)

logic formals_rec_split_pred__rec__h__first__bit5 : int

logic formals_rec_split_pred__rec__h__last__bit5 : int

logic formals_rec_split_pred__rec__h__position5 : int

axiom formals_rec_split_pred__rec__h__first__bit_axiom5 :
  (0 <= formals_rec_split_pred__rec__h__first__bit5)

axiom formals_rec_split_pred__rec__h__last__bit_axiom5 :
  (formals_rec_split_pred__rec__h__first__bit5 <  formals_rec_split_pred__rec__h__last__bit5)

axiom formals_rec_split_pred__rec__h__position_axiom5 :
  (0 <= formals_rec_split_pred__rec__h__position5)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy7 : us_rep

type t10b__ref = { t10b__content : us_rep
}

function t10b__ref_t10b__content__projection(a: t10b__ref) : us_rep =
  (a).t10b__content

predicate dynamic_invariant2(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant3(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range2(temp___expr_39))

axiom cdiv_cases :
  (forall n:int. forall d:int [div(n, d)]. ((0 <= n) -> ((0 <  d) -> (div(n,
  d) = (n / d)))))

axiom cdiv_cases1 :
  (forall n:int. forall d:int [div(n, d)]. ((n <= 0) -> ((0 <  d) -> (div(n,
  d) = (-((-n) / d))))))

axiom cdiv_cases2 :
  (forall n:int. forall d:int [div(n, d)]. ((0 <= n) -> ((d <  0) -> (div(n,
  d) = (-(n / (-d)))))))

axiom cdiv_cases3 :
  (forall n:int. forall d:int [div(n, d)]. ((n <= 0) -> ((d <  0) -> (div(n,
  d) = ((-n) / (-d))))))

axiom cmod_cases :
  (forall n:int. forall d:int [mod(n, d)]. ((0 <= n) -> ((0 <  d) -> (mod(n,
  d) = (n % d)))))

axiom cmod_cases1 :
  (forall n:int. forall d:int [mod(n, d)]. ((n <= 0) -> ((0 <  d) -> (mod(n,
  d) = (-((-n) % d))))))

axiom cmod_cases2 :
  (forall n:int. forall d:int [mod(n, d)]. ((0 <= n) -> ((d <  0) -> (mod(n,
  d) = (n % (-d))))))

axiom cmod_cases3 :
  (forall n:int. forall d:int [mod(n, d)]. ((n <= 0) -> ((d <  0) -> (mod(n,
  d) = (-((-n) % (-d)))))))

logic rliteral : integer

axiom rliteral_axiom : (integerqtint(rliteral) = 1)

logic rliteral1 : natural

axiom rliteral_axiom1 : (naturalqtint(rliteral1) = 1)

logic rliteral2 : natural

axiom rliteral_axiom2 : (naturalqtint(rliteral2) = 0)

 (* File "formals_rec_split_pred.adb", line 1, characters 0-0 *)
goal defqtvc :
  (forall x__split_fields:us_split_fields. ((x__split_fields = {
  rec__formals_rec_split_pred__rec__f = rliteral;
  rec__formals_rec_split_pred__rec__g = rliteral;
  rec__formals_rec_split_pred__rec__h = rliteral1 }) -> ((x__split_discrs = {
  rec__formals_rec_split_pred__rec__d = of_int(1) }) -> (let temp___213 = {
  us_split_discrs1 = { rec__formals_rec_split_pred__rec__d = of_int(1) };
  us_split_fields1 = { rec__formals_rec_split_pred__rec__f = rliteral;
  rec__formals_rec_split_pred__rec__g = rliteral;
  rec__formals_rec_split_pred__rec__h = rliteral1 } } : us_rep in
  (dynamic_predicate(temp___213) ->
  (forall y__split_fields:us_split_fields.
  ((y__split_fields = (temp___213).us_split_fields1) ->
  ((y__split_discrs = (temp___213).us_split_discrs1) -> (dynamic_invariant({
  us_split_discrs1 = y__split_discrs; us_split_fields1 = y__split_fields },
  true, false, true, true) -> (let temp___215 = { us_split_discrs1 = {
  rec__formals_rec_split_pred__rec__d = of_int(1) }; us_split_fields1 = {
  rec__formals_rec_split_pred__rec__f = rliteral;
  rec__formals_rec_split_pred__rec__g = rliteral;
  rec__formals_rec_split_pred__rec__h = rliteral1 } } : us_rep in
  (dynamic_predicate(temp___215) ->
  (forall u__split_fields:us_split_fields.
  ((u__split_fields = (temp___215).us_split_fields1) ->
  ((u__split_discrs = (temp___215).us_split_discrs1) -> (dynamic_invariant({
  us_split_discrs1 = u__split_discrs; us_split_fields1 = u__split_fields },
  true, false, true, true) -> (dynamic_predicate({ us_split_discrs1 =
  x__split_discrs; us_split_fields1 = x__split_fields }) ->
  (forall formals_rec_split_pred__p__a__fields:us_split_fields.
  (dynamic_invariant({ us_split_discrs1 = x__split_discrs; us_split_fields1 =
  formals_rec_split_pred__p__a__fields }, true, true, true, true) ->
  (forall x__split_fields1:us_split_fields.
  ((x__split_fields1 = formals_rec_split_pred__p__a__fields) ->
  (forall x__split_fields2:us_split_fields. (dynamic_predicate({
  us_split_discrs1 = x__split_discrs; us_split_fields1 = x__split_fields2
  }) ->
  (forall formals_rec_split_pred__p__a__fields1:us_split_fields.
  (dynamic_invariant({ us_split_discrs1 = x__split_discrs; us_split_fields1 =
  formals_rec_split_pred__p__a__fields1 }, true, true, true, true) ->
  (forall x__split_fields3:us_split_fields.
  ((x__split_fields3 = formals_rec_split_pred__p__a__fields1) ->
  (forall x__split_fields4:us_split_fields. (let temp___224 = {
  us_split_discrs1 = x__split_discrs; us_split_fields1 = x__split_fields4 }
  : us_rep in (dynamic_predicate(temp___224) ->
  (forall formals_rec_split_pred__p__a__fields2:us_split_fields.
  (dynamic_invariant({ us_split_discrs1 = (temp___224).us_split_discrs1;
  us_split_fields1 = formals_rec_split_pred__p__a__fields2 }, true, true,
  true, true) ->
  (forall x__split_fields5:us_split_fields.
  ((x__split_fields5 = formals_rec_split_pred__p__a__fields2) ->
  ((x__split_discrs = (temp___224).us_split_discrs1) ->
  (forall y__split_fields1:us_split_fields. (dynamic_invariant({
  us_split_discrs1 = y__split_discrs; us_split_fields1 = y__split_fields1 },
  true, true, true, true) ->
  (forall formals_rec_split_pred__p2__a__fields:us_split_fields.
  (forall y__split_fields2:us_split_fields.
  ((y__split_fields2 = formals_rec_split_pred__p2__a__fields) ->
  (dynamic_predicate({ us_split_discrs1 = y__split_discrs; us_split_fields1 =
  y__split_fields2 }) ->
  (forall y__split_fields3:us_split_fields. (dynamic_invariant({
  us_split_discrs1 = y__split_discrs; us_split_fields1 = y__split_fields3 },
  true, true, true, true) ->
  (forall formals_rec_split_pred__p2__a__fields1:us_split_fields.
  ((not (to_rep1((formals_rec_split_pred__p2__a__fields1).rec__formals_rec_split_pred__rec__h) = 0)) ->
  (forall y__split_fields4:us_split_fields.
  ((y__split_fields4 = formals_rec_split_pred__p2__a__fields1) ->
  (forall u__split_fields1:us_split_fields. (dynamic_invariant({
  us_split_discrs1 = u__split_discrs; us_split_fields1 = u__split_fields1 },
  true, true, true, true) ->
  (forall formals_rec_split_pred__p2__a__fields2:us_split_fields.
  ((not (to_rep1((formals_rec_split_pred__p2__a__fields2).rec__formals_rec_split_pred__rec__h) = 0)) ->
  (forall u__split_fields2:us_split_fields.
  ((u__split_fields2 = formals_rec_split_pred__p2__a__fields2) ->
  (forall y__split_fields5:us_split_fields. (dynamic_invariant({
  us_split_discrs1 = y__split_discrs; us_split_fields1 = y__split_fields5 },
  true, true, true, true) ->
  (forall o:int.
  ((to_rep((y__split_fields5).rec__formals_rec_split_pred__rec__f) = o) ->
  (forall spark__branch:bool.
  ((spark__branch = (if (o = 0) then true else false)) ->
  ((spark__branch = true) -> dynamic_predicate({ us_split_discrs1 =
  y__split_discrs; us_split_fields1 = { rec__formals_rec_split_pred__rec__f =
  (y__split_fields5).rec__formals_rec_split_pred__rec__f;
  rec__formals_rec_split_pred__rec__g =
  (y__split_fields5).rec__formals_rec_split_pred__rec__g;
  rec__formals_rec_split_pred__rec__h = rliteral2 } }))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
