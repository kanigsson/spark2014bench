(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq4(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

logic attr__ATTRIBUTE_ADDRESS : int

type slot

predicate in_range4(x: int) = ((0 <= x) and (x <= 2))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : slot, slot -> bool

logic dummy4 : slot

type slot__ref = { slot__content : slot
}

function slot__ref_slot__content__projection(a: slot__ref) : slot =
  (a).slot__content

logic to_rep2 : slot -> int

logic of_rep2 : int -> slot

axiom inversion_axiom2 :
  (forall x:slot [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:slot [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref1 = { map__content1 : (int,slot) farray
}

logic slide1 : (int,slot) farray, int, int -> (int,slot) farray

axiom slide_eq1 :
  (forall a:(int,slot) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,slot) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq7(a: (int,slot) farray, a__first: int, a__last: int,
  b: (int,slot) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep2((a[temp___idx_156])) = to_rep2((b[((b__first - a__first) + temp___idx_156)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,slot) farray. forall b:(int,slot) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,slot) farray. forall b:(int,slot) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,slot) farray. forall b:(int,slot) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,slot) farray. forall b:(int,slot) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep2((a[temp___idx_156])) = to_rep2((b[((b__first - a__first) + temp___idx_156)]))))))))

logic dummy5 : (int,slot) farray

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

logic user_eq5 : (int,slot) farray, (int,slot) farray -> bool

type map__ref2 = { map__content2 : (int,(int,slot) farray) farray
}

logic slide2 : (int,(int,slot) farray) farray, int,
  int -> (int,(int,slot) farray) farray

axiom slide_eq2 :
  (forall a:(int,(int,slot) farray) farray.
  (forall first2:int [slide2(a, first2, first2)]. (slide2(a, first2,
  first2) = a)))

axiom slide_def2 :
  (forall a:(int,(int,slot) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq8(a: (int,(int,slot) farray) farray, a__first: int,
  a__last: int, b: (int,(int,slot) farray) farray, b__first: int,
  b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) -> (bool_eq7((a[temp___idx_157]), 1, 3,
  (b[((b__first - a__first) + temp___idx_157)]), 1, 3) = true)))) then true else false)

axiom bool_eq_rev8 :
  (forall a:(int,(int,slot) farray) farray.
  forall b:(int,(int,slot) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev9 :
  (forall a:(int,(int,slot) farray) farray.
  forall b:(int,(int,slot) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev10 :
  (forall a:(int,(int,slot) farray) farray.
  forall b:(int,(int,slot) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev11 :
  (forall a:(int,(int,slot) farray) farray.
  forall b:(int,(int,slot) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) -> (bool_eq7((a[temp___idx_157]), 1, 3,
  (b[((b__first - a__first) + temp___idx_157)]), 1, 3) = true))))))

logic attr__ATTRIBUTE_ADDRESS1 : int

logic num_free_slots : (int,(int,slot) farray) farray -> int

logic num_free_slots__function_guard : int,
  (int,(int,slot) farray) farray -> prop

logic is_full : (int,(int,slot) farray) farray -> bool

logic is_full__function_guard : bool, (int,(int,slot) farray) farray -> prop

axiom is_full__def_axiom :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  num_free_slots__function_guard(num_free_slots(tictactoe__my_board),
  tictactoe__my_board))

axiom is_full__def_axiom1 :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [is_full(tictactoe__my_board)]. ((is_full(tictactoe__my_board) = true) ->
  (num_free_slots(tictactoe__my_board) = 0)))

axiom is_full__def_axiom2 :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [is_full(tictactoe__my_board)].
  ((num_free_slots(tictactoe__my_board) = 0) ->
  (is_full(tictactoe__my_board) = true)))

logic won : (int,(int,slot) farray) farray, us_private -> int

logic won__function_guard : int, (int,(int,slot) farray) farray,
  us_private -> prop

predicate dynamic_invariant(temp___expr_206: int, temp___is_init_202: bool,
  temp___skip_constant_203: bool, temp___do_toplevel_204: bool,
  temp___do_typ_inv_205: bool) = (((temp___is_init_202 = true) or
  (0 <= 2)) -> in_range4(temp___expr_206))

axiom won__post_axiom :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  (forall tictactoe__all_solutions:us_private [won(tictactoe__my_board,
  tictactoe__all_solutions)]. (let result = won(tictactoe__my_board,
  tictactoe__all_solutions) : int in (won__function_guard(result,
  tictactoe__my_board, tictactoe__all_solutions) -> dynamic_invariant(result,
  true, false, true, true)))))

logic line_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic line_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic page_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic page_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic temp___String_Literal_300 : unit -> (int,character) farray

axiom temp___String_Literal_300__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[1])) = 80))

axiom temp___String_Literal_300__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[2])) = 108))

axiom temp___String_Literal_300__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[3])) = 97))

axiom temp___String_Literal_300__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[4])) = 121))

axiom temp___String_Literal_300__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[5])) = 101))

axiom temp___String_Literal_300__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_300(us_void_param)].
  (to_rep((temp___String_Literal_300(us_void_param)[6])) = 114))

logic temp___String_Literal_301 : unit -> (int,character) farray

axiom temp___String_Literal_301__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[1])) = 67))

axiom temp___String_Literal_301__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[2])) = 111))

axiom temp___String_Literal_301__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[3])) = 109))

axiom temp___String_Literal_301__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[4])) = 112))

axiom temp___String_Literal_301__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[5])) = 117))

axiom temp___String_Literal_301__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[6])) = 116))

axiom temp___String_Literal_301__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[7])) = 101))

axiom temp___String_Literal_301__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_301(us_void_param)].
  (to_rep((temp___String_Literal_301(us_void_param)[8])) = 114))

logic temp___String_Literal_306 : unit -> (int,character) farray

axiom temp___String_Literal_306__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[1])) = 82))

axiom temp___String_Literal_306__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[2])) = 101))

axiom temp___String_Literal_306__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[3])) = 97))

axiom temp___String_Literal_306__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[4])) = 108))

axiom temp___String_Literal_306__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[5])) = 108))

axiom temp___String_Literal_306__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[6])) = 121))

axiom temp___String_Literal_306__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[7])) = 44))

axiom temp___String_Literal_306__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[8])) = 32))

axiom temp___String_Literal_306__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[9])) = 108))

axiom temp___String_Literal_306__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[10])) = 111))

axiom temp___String_Literal_306__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[11])) = 115))

axiom temp___String_Literal_306__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[12])) = 105))

axiom temp___String_Literal_306__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[13])) = 110))

axiom temp___String_Literal_306__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[14])) = 103))

axiom temp___String_Literal_306__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[15])) = 32))

axiom temp___String_Literal_306__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[16])) = 97))

axiom temp___String_Literal_306__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[17])) = 103))

axiom temp___String_Literal_306__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[18])) = 97))

axiom temp___String_Literal_306__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[19])) = 105))

axiom temp___String_Literal_306__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[20])) = 110))

axiom temp___String_Literal_306__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[21])) = 115))

axiom temp___String_Literal_306__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[22])) = 116))

axiom temp___String_Literal_306__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[23])) = 32))

axiom temp___String_Literal_306__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[24])) = 116))

axiom temp___String_Literal_306__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[25])) = 105))

axiom temp___String_Literal_306__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[26])) = 99))

axiom temp___String_Literal_306__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[27])) = 32))

axiom temp___String_Literal_306__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[28])) = 116))

axiom temp___String_Literal_306__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[29])) = 97))

axiom temp___String_Literal_306__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[30])) = 99))

axiom temp___String_Literal_306__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[31])) = 32))

axiom temp___String_Literal_306__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[32])) = 116))

axiom temp___String_Literal_306__def_axiom32 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[33])) = 111))

axiom temp___String_Literal_306__def_axiom33 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[34])) = 101))

axiom temp___String_Literal_306__def_axiom34 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[35])) = 63))

axiom temp___String_Literal_306__def_axiom35 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[36])) = 63))

axiom temp___String_Literal_306__def_axiom36 :
  (forall us_void_param:unit [temp___String_Literal_306(us_void_param)].
  (to_rep((temp___String_Literal_306(us_void_param)[37])) = 63))

logic temp___String_Literal_307 : unit -> (int,character) farray

axiom temp___String_Literal_307__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[1])) = 87))

axiom temp___String_Literal_307__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[2])) = 105))

axiom temp___String_Literal_307__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[3])) = 108))

axiom temp___String_Literal_307__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[4])) = 108))

axiom temp___String_Literal_307__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[5])) = 32))

axiom temp___String_Literal_307__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[6])) = 116))

axiom temp___String_Literal_307__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[7])) = 114))

axiom temp___String_Literal_307__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[8])) = 121))

axiom temp___String_Literal_307__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[9])) = 32))

axiom temp___String_Literal_307__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[10])) = 117))

axiom temp___String_Literal_307__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[11])) = 115))

axiom temp___String_Literal_307__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[12])) = 105))

axiom temp___String_Literal_307__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[13])) = 110))

axiom temp___String_Literal_307__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[14])) = 103))

axiom temp___String_Literal_307__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[15])) = 32))

axiom temp___String_Literal_307__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[16])) = 97))

axiom temp___String_Literal_307__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[17])) = 32))

axiom temp___String_Literal_307__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[18])) = 100))

axiom temp___String_Literal_307__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[19])) = 101))

axiom temp___String_Literal_307__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[20])) = 101))

axiom temp___String_Literal_307__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[21])) = 112))

axiom temp___String_Literal_307__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[22])) = 32))

axiom temp___String_Literal_307__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[23])) = 108))

axiom temp___String_Literal_307__def_axiom23 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[24])) = 101))

axiom temp___String_Literal_307__def_axiom24 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[25])) = 97))

axiom temp___String_Literal_307__def_axiom25 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[26])) = 114))

axiom temp___String_Literal_307__def_axiom26 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[27])) = 110))

axiom temp___String_Literal_307__def_axiom27 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[28])) = 105))

axiom temp___String_Literal_307__def_axiom28 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[29])) = 110))

axiom temp___String_Literal_307__def_axiom29 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[30])) = 103))

axiom temp___String_Literal_307__def_axiom30 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[31])) = 32))

axiom temp___String_Literal_307__def_axiom31 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[32])) = 97))

axiom temp___String_Literal_307__def_axiom32 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[33])) = 108))

axiom temp___String_Literal_307__def_axiom33 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[34])) = 103))

axiom temp___String_Literal_307__def_axiom34 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[35])) = 111))

axiom temp___String_Literal_307__def_axiom35 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[36])) = 114))

axiom temp___String_Literal_307__def_axiom36 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[37])) = 105))

axiom temp___String_Literal_307__def_axiom37 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[38])) = 116))

axiom temp___String_Literal_307__def_axiom38 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[39])) = 104))

axiom temp___String_Literal_307__def_axiom39 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[40])) = 109))

axiom temp___String_Literal_307__def_axiom40 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[41])) = 32))

axiom temp___String_Literal_307__def_axiom41 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[42])) = 110))

axiom temp___String_Literal_307__def_axiom42 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[43])) = 101))

axiom temp___String_Literal_307__def_axiom43 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[44])) = 120))

axiom temp___String_Literal_307__def_axiom44 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[45])) = 116))

axiom temp___String_Literal_307__def_axiom45 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[46])) = 32))

axiom temp___String_Literal_307__def_axiom46 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[47])) = 116))

axiom temp___String_Literal_307__def_axiom47 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[48])) = 105))

axiom temp___String_Literal_307__def_axiom48 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[49])) = 109))

axiom temp___String_Literal_307__def_axiom49 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[50])) = 101))

axiom temp___String_Literal_307__def_axiom50 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[51])) = 46))

axiom temp___String_Literal_307__def_axiom51 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[52])) = 46))

axiom temp___String_Literal_307__def_axiom52 :
  (forall us_void_param:unit [temp___String_Literal_307(us_void_param)].
  (to_rep((temp___String_Literal_307(us_void_param)[53])) = 46))

logic temp___String_Literal_308 : unit -> (int,character) farray

axiom temp___String_Literal_308__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[1])) = 87))

axiom temp___String_Literal_308__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[2])) = 104))

axiom temp___String_Literal_308__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[3])) = 97))

axiom temp___String_Literal_308__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[4])) = 116))

axiom temp___String_Literal_308__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[5])) = 39))

axiom temp___String_Literal_308__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[6])) = 115))

axiom temp___String_Literal_308__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[7])) = 32))

axiom temp___String_Literal_308__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[8])) = 116))

axiom temp___String_Literal_308__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[9])) = 104))

axiom temp___String_Literal_308__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[10])) = 101))

axiom temp___String_Literal_308__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[11])) = 32))

axiom temp___String_Literal_308__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[12])) = 111))

axiom temp___String_Literal_308__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[13])) = 116))

axiom temp___String_Literal_308__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[14])) = 104))

axiom temp___String_Literal_308__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[15])) = 101))

axiom temp___String_Literal_308__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[16])) = 114))

axiom temp___String_Literal_308__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[17])) = 32))

axiom temp___String_Literal_308__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[18])) = 107))

axiom temp___String_Literal_308__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[19])) = 105))

axiom temp___String_Literal_308__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[20])) = 110))

axiom temp___String_Literal_308__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[21])) = 100))

axiom temp___String_Literal_308__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_308(us_void_param)].
  (to_rep((temp___String_Literal_308(us_void_param)[22])) = 63))

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range5(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : natural, natural -> bool

logic dummy6 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant2(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range5(temp___expr_39))

predicate dynamic_invariant3(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range2(temp___expr_46))

predicate dynamic_invariant4(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range3(temp___expr_74))

predicate dynamic_invariant5(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

type pos

logic posqtint : pos -> int

axiom posqtaxiom : (forall i:pos. (1 <= posqtint(i)))

axiom posqtaxiom1 : (forall i:pos. (posqtint(i) <= 3))

predicate in_range6(x: int) = ((1 <= x) and (x <= 3))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq7 : pos, pos -> bool

logic dummy7 : pos

type pos__ref = { pos__content : pos
}

function pos__ref_pos__content__projection(a: pos__ref) : pos =
  (a).pos__content

predicate dynamic_invariant6(temp___expr_199: int, temp___is_init_195: bool,
  temp___skip_constant_196: bool, temp___do_toplevel_197: bool,
  temp___do_typ_inv_198: bool) = (((temp___is_init_195 = true) or
  (1 <= 3)) -> in_range6(temp___expr_199))

logic one_free_slot : int, int, (int,(int,slot) farray) farray -> int

logic one_free_slot__function_guard : int, int, int,
  (int,(int,slot) farray) farray -> prop

axiom one_free_slot__post_axiom :
  (forall x:int. forall y:int.
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [one_free_slot(x, y, tictactoe__my_board)]. ((dynamic_invariant6(x, true,
  true, true, true) and dynamic_invariant6(y, true, true, true, true)) ->
  (let result = one_free_slot(x, y, tictactoe__my_board) : int in
  (one_free_slot__function_guard(result, x, y, tictactoe__my_board) ->
  dynamic_invariant1(result, true, false, true, true))))))

axiom one_free_slot__def_axiom :
  (forall x:int. forall y:int.
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [one_free_slot(x, y, tictactoe__my_board)]. ((dynamic_invariant6(x, true,
  true, true, true) and dynamic_invariant6(y, true, true, true, true)) ->
  (one_free_slot(x, y,
  tictactoe__my_board) = (if (to_rep2(((tictactoe__my_board[x])[y])) = 0) then 1 else 0)))))

logic count_free_slots : int, int, (int,(int,slot) farray) farray -> int

logic count_free_slots__function_guard : int, int, int,
  (int,(int,slot) farray) farray -> prop

axiom count_free_slots__post_axiom :
  (forall x:int. forall y:int.
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [count_free_slots(x, y, tictactoe__my_board)]. ((dynamic_invariant6(x,
  true, true, true, true) and dynamic_invariant6(y, true, true, true,
  true)) -> (let result = count_free_slots(x, y, tictactoe__my_board)
  : int in (count_free_slots__function_guard(result, x, y,
  tictactoe__my_board) -> dynamic_invariant1(result, true, false, true,
  true))))))

axiom count_free_slots__def_axiom :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(1, 1, tictactoe__my_board), 1,
  1, tictactoe__my_board))))

axiom count_free_slots__def_axiom1 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(1, 2, tictactoe__my_board), 1,
  2, tictactoe__my_board))))

axiom count_free_slots__def_axiom2 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(1, 3, tictactoe__my_board), 1,
  3, tictactoe__my_board))))

axiom count_free_slots__def_axiom3 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(2, 1, tictactoe__my_board), 2,
  1, tictactoe__my_board))))

axiom count_free_slots__def_axiom4 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(2, 2, tictactoe__my_board), 2,
  2, tictactoe__my_board))))

axiom count_free_slots__def_axiom5 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(2, 3, tictactoe__my_board), 2,
  3, tictactoe__my_board))))

axiom count_free_slots__def_axiom6 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(3, 1, tictactoe__my_board), 3,
  1, tictactoe__my_board))))

axiom count_free_slots__def_axiom7 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(3, 2, tictactoe__my_board), 3,
  2, tictactoe__my_board))))

axiom count_free_slots__def_axiom8 :
  (forall x:int. forall y:int. ((dynamic_invariant6(x, true, true, true,
  true) and dynamic_invariant6(y, true, true, true, true)) ->
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  one_free_slot__function_guard(one_free_slot(3, 3, tictactoe__my_board), 3,
  3, tictactoe__my_board))))

axiom count_free_slots__def_axiom9 :
  (forall x:int. forall y:int.
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [count_free_slots(x, y, tictactoe__my_board)]. ((dynamic_invariant6(x,
  true, true, true, true) and dynamic_invariant6(y, true, true, true,
  true)) -> (count_free_slots(x, y,
  tictactoe__my_board) = ((((one_free_slot(1, 1,
  tictactoe__my_board) + (if (2 <= y) then one_free_slot(1, 2,
  tictactoe__my_board) else 0)) + (if (3 <= y) then one_free_slot(1, 3,
  tictactoe__my_board) else 0)) + (if (2 <= x) then ((one_free_slot(2, 1,
  tictactoe__my_board) + (if (2 <= y) then one_free_slot(2, 2,
  tictactoe__my_board) else 0)) + (if (3 <= y) then one_free_slot(2, 3,
  tictactoe__my_board) else 0)) else 0)) + (if (3 <= x) then ((one_free_slot(3,
  1, tictactoe__my_board) + (if (2 <= y) then one_free_slot(3, 2,
  tictactoe__my_board) else 0)) + (if (3 <= y) then one_free_slot(3, 3,
  tictactoe__my_board) else 0)) else 0))))))

axiom num_free_slots__post_axiom :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [num_free_slots(tictactoe__my_board)]. (let result =
  num_free_slots(tictactoe__my_board) : int in
  (num_free_slots__function_guard(result, tictactoe__my_board) ->
  dynamic_invariant2(result, true, false, true, true))))

axiom num_free_slots__def_axiom :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray.
  count_free_slots__function_guard(count_free_slots(3, 3,
  tictactoe__my_board), 3, 3, tictactoe__my_board))

axiom num_free_slots__def_axiom1 :
  (forall tictactoe__my_board:(int,(int,slot) farray) farray
  [num_free_slots(tictactoe__my_board)].
  (num_free_slots(tictactoe__my_board) = count_free_slots(3, 3,
  tictactoe__my_board)))

type count

logic countqtint : count -> int

axiom countqtaxiom : (forall i:count. (0 <= countqtint(i)))

axiom countqtaxiom1 : (forall i:count. (countqtint(i) <= 2147483647))

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq11(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : count, count -> bool

logic dummy8 : count

type count__ref = { count__content : count
}

function count__ref_count__content__projection(a: count__ref) : count =
  (a).count__content

predicate dynamic_invariant7(temp___expr_167: int, temp___is_init_163: bool,
  temp___skip_constant_164: bool, temp___do_toplevel_165: bool,
  temp___do_typ_inv_166: bool) = (((temp___is_init_163 = true) or
  (0 <= 2147483647)) -> in_range7(temp___expr_167))

axiom line_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant7(line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

axiom page_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant7(page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

 (* File "game.adb", line 4, characters 0-0 *)
goal defqtvc :
  (forall all_solutions:us_private.
  (forall player_turn:bool. ((player_turn = of_int(1)) ->
  (forall my_board:(int,(int,slot) farray) farray.
  ((forall my_board1:(int,(int,slot) farray) farray.
   num_free_slots__function_guard(num_free_slots(my_board1), my_board1)) ->
  ((num_free_slots(my_board) = 9) -> (let o = is_full(my_board) : bool in
  ((forall my_board1:(int,(int,slot) farray) farray.
   num_free_slots__function_guard(num_free_slots(my_board1), my_board1)) ->
  ((is_full__function_guard(o, my_board) and ((o = true) <->
  (num_free_slots(my_board) = 0))) -> (((o = true) or (let o1 = won(my_board,
  all_solutions) : int in (won__function_guard(o1, my_board,
  all_solutions) and dynamic_invariant(o1, true, false, true, true)))) ->
  (((not (o = true)) and (won(my_board, all_solutions) = 0)) ->
  (forall player_turn1:bool. forall my_board1:(int,(int,slot) farray) farray.
  forall standard_in:us_private. forall file_system:us_private.
  forall standard_out:us_private. forall standard_err:us_private.
  forall current_in:us_private. forall current_out:us_private.
  forall current_err:us_private.
  ((forall my_board2:(int,(int,slot) farray) farray.
   is_full__function_guard(is_full(my_board2), my_board2)) ->
  ((forall all_solutions1:us_private.
   forall my_board2:(int,(int,slot) farray) farray.
   won__function_guard(won(my_board2, all_solutions1), my_board2,
   all_solutions1)) ->
  ((andb((if true then true else false),
  (if ((not (is_full(my_board1) = true)) and (won(my_board1,
  all_solutions) = 0)) then true else false)) = true) ->
  (forall spark__branch:bool. ((spark__branch = player_turn1) ->
  ((not (spark__branch = true)) ->
  (forall standard_in1:us_private. forall file_system1:us_private.
  forall standard_out1:us_private. forall standard_err1:us_private.
  forall current_in1:us_private. forall current_out1:us_private.
  forall current_err1:us_private. (((line_length(standard_in, file_system,
  standard_out, standard_err, current_in, current_out,
  current_err) = line_length(standard_in1, file_system1, standard_out1,
  standard_err1, current_in1, current_out1, current_err1)) and
  (page_length(standard_in, file_system, standard_out, standard_err,
  current_in, current_out, current_err) = page_length(standard_in1,
  file_system1, standard_out1, standard_err1, current_in1, current_out1,
  current_err1))) ->
  ((forall my_board2:(int,(int,slot) farray) farray.
   is_full__function_guard(is_full(my_board2), my_board2)) ->
  (not (is_full(my_board1) = true)))))))))))))))))))))))
