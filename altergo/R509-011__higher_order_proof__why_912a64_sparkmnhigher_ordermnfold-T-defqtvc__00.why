(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq(x: bool, y: bool) : bool = (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

function to_rep(x: integer) : int = integerqtint(x)

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

logic first : int

logic last : int

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type my_index__ref = { my_index__content : integer
}

function my_index__ref_my_index__content__projection(a: my_index__ref) : integer =
  (a).my_index__content

type map__ref = { map__content : (int,integer) farray
}

logic slide : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq :
  (forall a:(int,integer) farray.
  (forall first1:int [slide(a, first1, first1)]. (slide(a, first1,
  first1) = a)))

axiom slide_def :
  (forall a:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq3(a: (int,integer) farray, a__first: int, a__last: int,
  b: (int,integer) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep((a[temp___idx_157])) = to_rep((b[((b__first - a__first) + temp___idx_157)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,integer) farray. forall b:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep((a[temp___idx_157])) = to_rep((b[((b__first - a__first) + temp___idx_157)]))))))))

type t

logic first1 : t -> integer

logic last1 : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(first1(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep(last1(mk(f, l))) = l))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property(range_first, range_last, low) and
  dynamic_property(range_first, range_last, high)))))

type us_t = { elts : (int,integer) farray; rt : t
}

function to_array(a: us_t) : (int,integer) farray = (a).elts

function of_array(a: (int,integer) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first2(a: us_t) : int = to_rep(first1((a).rt))

function last2(a: us_t) : int = to_rep(last1((a).rt))

function length(a: us_t) : int =
  (if (first2(a) <= last2(a)) then ((last2(a) - first2(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq4(x: us_t, y: us_t) : bool = bool_eq3((x).elts,
  to_rep(first1((x).rt)), to_rep(last1((x).rt)), (y).elts,
  to_rep(first1((y).rt)), to_rep(last1((y).rt)))

logic user_eq2 : us_t, us_t -> bool

logic dummy2 : us_t

type my_array__ref = { my_array__content : us_t
}

function my_array__ref_my_array__content__projection(a: my_array__ref) : us_t =
  (a).my_array__content

logic ind_prop : us_t, int, int -> bool

logic ind_prop__function_guard : bool, us_t, int, int -> prop

predicate dynamic_invariant(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

logic fst : int

logic attr__ATTRIBUTE_ADDRESS : int

logic lst : int

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate dynamic_invariant1(temp___expr_179: int, temp___is_init_175: bool,
  temp___skip_constant_176: bool, temp___do_toplevel_177: bool,
  temp___do_typ_inv_178: bool) = (((temp___is_init_175 = true) or
  (first <= last)) -> dynamic_property(first, last, temp___expr_179))

axiom first__def_axiom : (first = fst)

axiom last__def_axiom : (last = lst)

predicate dynamic_invariant2(temp___expr_186: us_t, temp___is_init_182: bool,
  temp___skip_constant_183: bool, temp___do_toplevel_184: bool,
  temp___do_typ_inv_185: bool) = ((not (temp___skip_constant_183 = true)) ->
  dynamic_property1(first, last, first2(temp___expr_186),
  last2(temp___expr_186)))

logic final_prop : us_t, int -> bool

logic final_prop__function_guard : bool, us_t, int -> prop

logic f : int, int, int -> int

logic f__function_guard : int, int, int, int -> prop

axiom f__post_axiom :
  (forall x:int. forall k:int. forall i:int [f(x, k, i)].
  (((dynamic_invariant(x, true, true, true, true) and dynamic_invariant1(k,
  true, true, true, true)) and dynamic_invariant(i, true, true, true,
  true)) -> (let result = f(x, k, i) : int in (f__function_guard(result, x,
  k, i) -> dynamic_invariant(result, true, false, true, true)))))

type array_type__ref = { array_type__content : us_t
}

function array_type__ref_array_type__content__5__projection(a: array_type__ref) : us_t =
  (a).array_type__content

logic a : us_t

logic attr__ATTRIBUTE_ADDRESS2 : int

logic init : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic first3 : int

logic last3 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq5(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : integer, integer -> bool

logic dummy3 : integer

type index_type__ref = { index_type__content : integer
}

function index_type__ref_index_type__content__5__projection(a1: index_type__ref) : integer =
  (a1).index_type__content

type element_out

logic element_outqtint : element_out -> int

axiom element_outqtaxiom :
  (forall i:element_out. ((- 2147483648) <= element_outqtint(i)))

axiom element_outqtaxiom1 :
  (forall i:element_out. (element_outqtint(i) <= 2147483647))

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq6(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : element_out, element_out -> bool

logic dummy4 : element_out

type element_out__ref = { element_out__content : element_out
}

function element_out__ref_element_out__content__5__projection(a1: element_out__ref) : element_out =
  (a1).element_out__content

function to_rep1(x: element_out) : int = element_outqtint(x)

logic of_rep1 : int -> element_out

axiom inversion_axiom1 :
  (forall x:element_out [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:element_out [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref1 = { map__content1 : (int,element_out) farray
}

logic slide1 : (int,element_out) farray, int, int -> (int,element_out) farray

axiom slide_eq1 :
  (forall a1:(int,element_out) farray.
  (forall first4:int [slide1(a1, first4, first4)]. (slide1(a1, first4,
  first4) = a1)))

axiom slide_def1 :
  (forall a1:(int,element_out) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a1, old_first, new_first)[i])]. ((slide1(a1,
  old_first, new_first)[i]) = (a1[(i - (new_first - old_first))]))))))

function bool_eq7(a1: (int,element_out) farray, a__first: int, a__last: int,
  b: (int,element_out) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_172:int. (((a__first <= temp___idx_172) and
  (temp___idx_172 <= a__last)) ->
  (to_rep1((a1[temp___idx_172])) = to_rep1((b[((b__first - a__first) + temp___idx_172)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a1:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a1, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a1:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a1, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a1:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a1, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a1:(int,element_out) farray. forall b:(int,element_out) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a1, a__first,
  a__last) = true) ->
  (forall temp___idx_172:int. (((a__first <= temp___idx_172) and
  (temp___idx_172 <= a__last)) ->
  (to_rep1((a1[temp___idx_172])) = to_rep1((b[((b__first - a__first) + temp___idx_172)]))))))))

type t1

logic first4 : t1 -> integer

logic last4 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f1:int. forall l:int [mk1(f1, l)]. (in_range1(f1) ->
  (in_range1(l) -> (to_rep(first4(mk1(f1, l))) = f1))))

axiom mk_def3 :
  (forall f1:int. forall l:int [mk1(f1, l)]. (in_range1(f1) ->
  (in_range1(l) -> (to_rep(last4(mk1(f1, l))) = l))))

predicate dynamic_property3(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property2(range_first, range_last, low) and
  dynamic_property2(range_first, range_last, high)))))

type us_t1 = { elts1 : (int,element_out) farray; rt1 : t1
}

function to_array1(a1: us_t1) : (int,element_out) farray = (a1).elts1

function of_array1(a1: (int,element_out) farray, f1: int, l: int) : us_t1 = {
  elts1 = a1; rt1 = mk1(f1, l) }

function first5(a1: us_t1) : int = to_rep(first4((a1).rt1))

function last5(a1: us_t1) : int = to_rep(last4((a1).rt1))

function length1(a1: us_t1) : int =
  (if (first5(a1) <= last5(a1)) then ((last5(a1) - first5(a1)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq8(x: us_t1, y: us_t1) : bool = bool_eq7((x).elts1,
  to_rep(first4((x).rt1)), to_rep(last4((x).rt1)), (y).elts1,
  to_rep(first4((y).rt1)), to_rep(last4((y).rt1)))

logic user_eq5 : us_t1, us_t1 -> bool

logic dummy5 : us_t1

type acc_array__ref = { acc_array__content : us_t1
}

function acc_array__ref_acc_array__content__2__projection(a1: acc_array__ref) : us_t1 =
  (a1).acc_array__content

logic attr__ATTRIBUTE_ADDRESS4 : int

logic r__first : integer

logic r__last : integer

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

predicate dynamic_invariant3(temp___expr_516: int, temp___is_init_512: bool,
  temp___skip_constant_513: bool, temp___do_toplevel_514: bool,
  temp___do_typ_inv_515: bool) = (((temp___is_init_512 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range2(temp___expr_516))

type trS__ref = { trS__content : us_t1
}

function trS__ref_trS__content__2__projection(a1: trS__ref) : us_t1 =
  (a1).trS__content

type t76s__ref = { t76s__content : us_t1
}

function t76s__ref_t76s__content__projection(a1: t76s__ref) : us_t1 =
  (a1).t76s__content

predicate dynamic_property4(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

function bool_eq9(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : integer, integer -> bool

logic dummy6 : integer

type t77s__ref = { t77s__content : integer
}

function t77s__ref_t77s__content__projection(a1: t77s__ref) : integer =
  (a1).t77s__content

predicate dynamic_invariant4(temp___expr_510: us_t, temp___is_init_506: bool,
  temp___skip_constant_507: bool, temp___do_toplevel_508: bool,
  temp___do_typ_inv_509: bool) = ((not (temp___skip_constant_507 = true)) ->
  dynamic_property1(first, last, first2(temp___expr_510),
  last2(temp___expr_510)))

logic test_higher_order2__my_fold_left_i__acc__fold__R74s__r__aggregate_def : int,
  int, int -> us_t1

logic id : int -> int

logic id__function_guard : int, int -> prop

axiom id__post_axiom :
  (forall x:int [id(x)]. (dynamic_invariant(x, true, true, true, true) ->
  (let result = id(x) : int in (id__function_guard(result, x) ->
  dynamic_invariant(result, true, false, true, true)))))

axiom fst__def_axiom : id__function_guard(id(0), 0)

axiom fst__def_axiom1 : (fst = id(0))

axiom lst__def_axiom : id__function_guard(id(100), 100)

axiom lst__def_axiom1 : (lst = id(100))

predicate dynamic_invariant5(temp___expr_531: us_t1,
  temp___is_init_527: bool, temp___skip_constant_528: bool,
  temp___do_toplevel_529: bool, temp___do_typ_inv_530: bool) =
  ((not (temp___skip_constant_528 = true)) -> dynamic_property3(first3,
  last3, first5(temp___expr_531), last5(temp___expr_531)))

predicate dynamic_invariant6(temp___expr_496: int, temp___is_init_492: bool,
  temp___skip_constant_493: bool, temp___do_toplevel_494: bool,
  temp___do_typ_inv_495: bool) = (((temp___is_init_492 = true) or
  (first3 <= last3)) -> dynamic_property2(first3, last3, temp___expr_496))

axiom first__def_axiom1 : (first3 = fst)

axiom last__def_axiom1 : (last3 = lst)

axiom def_axiom :
  (forall temp___753:int. forall temp___754:int. forall temp___755:int.
  (dynamic_invariant3(temp___753, true, true, true, true) ->
  (dynamic_property3(first3, last3, temp___754, temp___755) ->
  (first5(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__aggregate_def(temp___753,
  temp___754, temp___755)) = temp___754))))

axiom def_axiom1 :
  (forall temp___753:int. forall temp___754:int. forall temp___755:int.
  (dynamic_invariant3(temp___753, true, true, true, true) ->
  (dynamic_property3(first3, last3, temp___754, temp___755) ->
  (last5(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__aggregate_def(temp___753,
  temp___754, temp___755)) = temp___755))))

axiom def_axiom2 :
  (forall temp___753:int. forall temp___754:int. forall temp___755:int.
  (dynamic_invariant3(temp___753, true, true, true, true) ->
  (forall temp___756:int.
  (to_rep1((to_array1(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__aggregate_def(temp___753,
  temp___754, temp___755))[temp___756])) = temp___753))))

predicate dynamic_invariant7(temp___expr_563: us_t1,
  temp___is_init_559: bool, temp___skip_constant_560: bool,
  temp___do_toplevel_561: bool, temp___do_typ_inv_562: bool) =
  ((not (temp___skip_constant_560 = true)) -> (dynamic_property3(first2(a),
  last2(a), first5(temp___expr_563), last5(temp___expr_563)) and
  ((first5(temp___expr_563) = first2(a)) and
  (last5(temp___expr_563) = last2(a)))))

predicate default_initial_assumption(temp___expr_565: us_t1,
  temp___skip_top_level_566: bool) =
  ((first5(temp___expr_565) = first2(a)) and
  (last5(temp___expr_565) = last2(a)))

 (* File "spark-higher_order-fold.ads", line 162, characters 0-0 *)
goal defqtvc : (dynamic_invariant4(a, true, false, true, true) ->
  (dynamic_invariant3(init, true, false, true, true) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
  last2(a)), init, first2(a)), of_array(to_array(a), first2(a), last2(a)),
  init, first2(a)) -> (((0 <  length(a)) and (ind_prop(of_array(to_array(a),
  first2(a), last2(a)), init, first2(a)) = true)) ->
  (forall acc:int. ((acc = init) -> (dynamic_invariant3(acc, true, false,
  true, true) -> (let temp___757 =
  test_higher_order2__my_fold_left_i__acc__fold__R74s__r__aggregate_def(init,
  first2(a), last2(a)) : us_t1 in ((first5(temp___757) = first2(a)) ->
  ((last5(temp___757) = last2(a)) ->
  ((if (first5(temp___757) <= last5(temp___757)) then ((first2(a) <= last2(a)) and
  ((last5(temp___757) - first5(temp___757)) = (last2(a) - first2(a)))) else (last2(a) <  first2(a))) ->
  (let test_higher_order2__my_fold_left_i__acc__fold__R74s__r__assume =
  of_array1(slide1(to_array1(temp___757), first5(temp___757), first2(a)),
  first2(a), last2(a)) : us_t1 in
  (forall r:(int,element_out) farray.
  ((r = to_array1(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__assume)) ->
  ((to_rep(r__first) = first5(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__assume)) ->
  ((to_rep(r__last) = last5(test_higher_order2__my_fold_left_i__acc__fold__R74s__r__assume)) ->
  ((dynamic_property3(first2(a), last2(a), to_rep(r__first),
  to_rep(r__last)) and ((to_rep(r__first) = first2(a)) and
  (to_rep(r__last) = last2(a)))) -> (let temp___760 = first2(a) : int in
  (let temp___761 = last2(a) : int in
  (forall i:int. ((i = temp___760) ->
  ((andb((if (temp___760 <= i) then true else false),
  (if (i <= temp___761) then true else false)) = true) ->
  ((forall acc1:int. forall i1:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
   last2(a)), acc1, i1), of_array(to_array(a), first2(a), last2(a)), acc1,
   i1)) ->
  ((ind_prop(of_array(to_array(a), first2(a), last2(a)), acc, i) = true) ->
  (dynamic_property(first, last, i) ->
  (forall o:int. ((to_rep((to_array(a)[i])) = o) -> (let o1 = f(o, i, acc)
  : int in ((f__function_guard(o1, o, i, acc) and dynamic_invariant(o1, true,
  false, true, true)) ->
  (forall o2:element_out. ((to_rep1(o2) = o1) ->
  (forall r1:(int,element_out) farray. ((r1 = (r[i <- o2])) ->
  ((let temp___778 = first2(a) : int in (dynamic_property(first, last,
  temp___778) and (let o3 = init : int in (let o4 = of_array(to_array(a),
  first2(a), last2(a)) : us_t in (let o5 = ind_prop(o4, o3, temp___778)
  : bool in (ind_prop__function_guard(o5, o4, o3, temp___778) and
  ((not (o5 = true)) or (let o6 = init : int in (let temp___781 = first2(a)
  : int in (dynamic_property(first, last, temp___781) and (let temp___780 =
  first2(a) : int in (((first2(a) <= temp___780) and
  (temp___780 <= last2(a))) and
  (exists o7:int. ((to_rep((to_array(a)[temp___780])) = o7) and (let o8 =
  f(o7, temp___781, o6) : int in ((f__function_guard(o8, o7, temp___781,
  o6) and dynamic_invariant(o8, true, false, true, true)) and
  (let temp___779 = first2(a) : int in (((to_rep(r__first) <= temp___779) and
  (temp___779 <= to_rep(r__last))) and
  (exists o9:int. (to_rep1((r1[temp___779])) = o9)))))))))))))))))))) ->
  (forall acc1:int. forall r2:(int,element_out) farray. forall i1:int.
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
  last2(a)), init, first2(a)), of_array(to_array(a), first2(a), last2(a)),
  init, first2(a)) -> (f__function_guard(f(to_rep((to_array(a)[first2(a)])),
  first2(a), init), to_rep((to_array(a)[first2(a)])), first2(a), init) ->
  ((forall r3:(int,element_out) farray. forall k:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
   last2(a)), to_rep1((r3[(k - 1)])), k), of_array(to_array(a), first2(a),
   last2(a)), to_rep1((r3[(k - 1)])), k)) ->
  ((forall r3:(int,element_out) farray. forall k:int.
   f__function_guard(f(to_rep((to_array(a)[k])), k, to_rep1((r3[(k - 1)]))),
   to_rep((to_array(a)[k])), k, to_rep1((r3[(k - 1)])))) ->
  ((((ind_prop(of_array(to_array(a), first2(a), last2(a)), init,
  first2(a)) = true) and
  (to_rep1((r2[first2(a)])) = f(to_rep((to_array(a)[first2(a)])), first2(a),
  init))) and
  ((forall k:int. (((first2(a) <= k) and (k <= i1)) -> ((first2(a) <  k) ->
   ((ind_prop(of_array(to_array(a), first2(a), last2(a)),
   to_rep1((r2[(k - 1)])), k) = true) and
   (to_rep1((r2[k])) = f(to_rep((to_array(a)[k])), k,
   to_rep1((r2[(k - 1)])))))))) and
  (if (i1 = first2(a)) then (acc1 = init) else (acc1 = to_rep1((r2[(i1 - 1)])))))) ->
  ((andb((if ((dynamic_property4(first2(a), last2(a), i1) and
  dynamic_invariant3(acc1, true, true, true, true)) and
  (forall temp___767:int. (((to_rep(r__first) <= temp___767) and
  (temp___767 <= to_rep(r__last))) -> (((temp___761 <  temp___767) or
  ((temp___767 <  temp___760) or (i1 <  temp___767))) ->
  ((r2[temp___767]) = (r[temp___767])))))) then true else false),
  (if ((first2(a) <= i1) and
  (i1 <= last2(a))) then true else false)) = true) ->
  ((forall acc2:int. forall i2:int. forall o3:us_t.
   f__function_guard(f(to_rep((to_array(o3)[i2])), i2, acc2),
   to_rep((to_array(o3)[i2])), i2, acc2)) ->
  ((forall acc2:int. forall i2:int. forall o3:us_t.
   f__function_guard(f(to_rep((to_array(o3)[i2])), i2, acc2),
   to_rep((to_array(o3)[i2])), i2, acc2)) ->
  ((forall acc2:int. forall i2:int. forall o3:us_t.
   ind_prop__function_guard(ind_prop(of_array(to_array(o3), first2(o3),
   last2(o3)), f(to_rep((to_array(o3)[i2])), i2, acc2), (i2 + 1)),
   of_array(to_array(o3), first2(o3), last2(o3)),
   f(to_rep((to_array(o3)[i2])), i2, acc2), (i2 + 1))) ->
  ((forall acc2:int. forall o3:us_t.
   f__function_guard(f(to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2),
   to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2)) ->
  ((forall acc2:int. forall o3:us_t.
   f__function_guard(f(to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2),
   to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2)) ->
  ((forall acc2:int. forall o3:us_t.
   final_prop__function_guard(final_prop(of_array(to_array(o3), first2(o3),
   last2(o3)), f(to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2)),
   of_array(to_array(o3), first2(o3), last2(o3)),
   f(to_rep((to_array(o3)[last2(o3)])), last2(o3), acc2))) ->
  ((exists spark__branch:bool.
   ((spark__branch = (if (i1 = last2(a)) then false else true)) and
   (if (spark__branch = true) then (dynamic_property2(first3, last3, i1) and
   (let o3 = a : us_t in (ind_prop(of_array(to_array(o3), first2(o3),
   last2(o3)), f(to_rep((to_array(o3)[i1])), i1, acc1),
   (i1 + 1)) = true))) else (let o3 = a : us_t in
   (final_prop(of_array(to_array(o3), first2(o3), last2(o3)),
   f(to_rep((to_array(o3)[last2(o3)])), last2(o3), acc1)) = true))))) ->
  (forall o3:int. ((to_rep1((r2[i1])) = o3) ->
  (forall acc2:int. ((acc2 = o3) -> ((not (i1 = temp___761)) ->
  (forall i2:int. ((i2 = (i1 + 1)) ->
  ((forall acc3:int. forall i3:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
   last2(a)), acc3, i3), of_array(to_array(a), first2(a), last2(a)), acc3,
   i3)) ->
  ((ind_prop(of_array(to_array(a), first2(a), last2(a)), acc2, i2) = true) ->
  (dynamic_property(first, last, i2) ->
  (forall o4:int. ((to_rep((to_array(a)[i2])) = o4) -> (let o5 = f(o4, i2,
  acc2) : int in ((f__function_guard(o5, o4, i2, acc2) and
  dynamic_invariant(o5, true, false, true, true)) ->
  (forall o6:element_out. ((to_rep1(o6) = o5) ->
  (forall r3:(int,element_out) farray. ((r3 = (r2[i2 <- o6])) ->
  ((let temp___778 = first2(a) : int in (dynamic_property(first, last,
  temp___778) and (let o7 = init : int in (let o8 = of_array(to_array(a),
  first2(a), last2(a)) : us_t in (let o9 = ind_prop(o8, o7, temp___778)
  : bool in (ind_prop__function_guard(o9, o8, o7, temp___778) and
  ((not (o9 = true)) or (let o10 = init : int in (let temp___781 = first2(a)
  : int in (dynamic_property(first, last, temp___781) and (let temp___780 =
  first2(a) : int in (((first2(a) <= temp___780) and
  (temp___780 <= last2(a))) and
  (exists o11:int. ((to_rep((to_array(a)[temp___780])) = o11) and (let o12 =
  f(o11, temp___781, o10) : int in ((f__function_guard(o12, o11, temp___781,
  o10) and dynamic_invariant(o12, true, false, true, true)) and
  (let temp___779 = first2(a) : int in (((to_rep(r__first) <= temp___779) and
  (temp___779 <= to_rep(r__last))) and
  (exists o13:int. (to_rep1((r3[temp___779])) = o13)))))))))))))))))))) ->
  (ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
  last2(a)), init, first2(a)), of_array(to_array(a), first2(a), last2(a)),
  init, first2(a)) -> (f__function_guard(f(to_rep((to_array(a)[first2(a)])),
  first2(a), init), to_rep((to_array(a)[first2(a)])), first2(a), init) ->
  (((ind_prop(of_array(to_array(a), first2(a), last2(a)), init,
  first2(a)) = true) and
  (to_rep1((r3[first2(a)])) = f(to_rep((to_array(a)[first2(a)])), first2(a),
  init))) ->
  (forall k:int. (((first2(a) <= k) and (k <= i2)) -> ((first2(a) <  k) ->
  ((forall r4:(int,element_out) farray. forall k1:int.
   ind_prop__function_guard(ind_prop(of_array(to_array(a), first2(a),
   last2(a)), to_rep1((r4[(k1 - 1)])), k1), of_array(to_array(a), first2(a),
   last2(a)), to_rep1((r4[(k1 - 1)])), k1)) ->
  (ind_prop(of_array(to_array(a), first2(a), last2(a)),
  to_rep1((r3[(k - 1)])), k) = true)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
