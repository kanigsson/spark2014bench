(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type long_integer

logic long_integerqtint : long_integer -> int

axiom long_integerqtaxiom :
  (forall i:long_integer. ((- 9223372036854775808) <= long_integerqtint(i)))

axiom long_integerqtaxiom1 :
  (forall i:long_integer. (long_integerqtint(i) <= 9223372036854775807))

predicate in_range(x: int) = (((- 9223372036854775808) <= x) and
  (x <= 9223372036854775807))

function bool_eq(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : long_integer, long_integer -> bool

logic dummy : long_integer

type long_integer__ref = { long_integer__content : long_integer
}

function long_integer__ref_long_integer__content__projection(a: long_integer__ref) : long_integer =
  (a).long_integer__content

type natural

logic naturalqtint : natural -> int

axiom naturalqtaxiom : (forall i:natural. (0 <= naturalqtint(i)))

axiom naturalqtaxiom1 : (forall i:natural. (naturalqtint(i) <= 2147483647))

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq1(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref_natural__content__projection(a: natural__ref) : natural =
  (a).natural__content

predicate dynamic_invariant(temp___expr_39: int, temp___is_init_35: bool,
  temp___skip_constant_36: bool, temp___do_toplevel_37: bool,
  temp___do_typ_inv_38: bool) = (((temp___is_init_35 = true) or
  (0 <= 2147483647)) -> in_range1(temp___expr_39))

logic x : unit -> int

logic x__function_guard : int, unit -> prop

axiom x__post_axiom :
  (forall us_void_param:unit [x(us_void_param)]. (let result =
  x(us_void_param) : int in (x__function_guard(result, us_void_param) ->
  dynamic_invariant(result, true, false, true, true))))

axiom x__def_axiom :
  (forall us_void_param:unit [x(us_void_param)]. (x(us_void_param) = 14))

predicate dynamic_invariant1(temp___expr_25: int, temp___is_init_21: bool,
  temp___skip_constant_22: bool, temp___do_toplevel_23: bool,
  temp___do_typ_inv_24: bool) = (((temp___is_init_21 = true) or
  ((- 9223372036854775808) <= 9223372036854775807)) ->
  in_range(temp___expr_25))

 (* File "test.ads", line 5, characters 0-0 *)
goal defqtvc : (let temp___157 = x(void) : int in
  ((x__function_guard(temp___157, void) and (dynamic_invariant(temp___157,
  true, false, true, true) and (temp___157 = 14))) ->
  in_range((2 ** temp___157))))
