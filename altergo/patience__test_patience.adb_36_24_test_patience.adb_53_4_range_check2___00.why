(* this is a prelude for Alt-Ergo integer arithmetic *)
type string

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type us_fixed__ref = { us_fixed__content : int }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function us_fixed__ref___projection(a: us_fixed__ref) : int =
  (a).us_fixed__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) -> (x = y))))

axiom bool_eq_axiom1 :
  (forall x:int. (forall y:int. ((x = y) -> (bool_eq(x, y) = true))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) -> (not (x = y)))))

axiom bool_ne_axiom1 :
  (forall x:int. (forall y:int. ((not (x = y)) -> (bool_ne(x, y) = true))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) -> (x <  y))))

axiom bool_lt_axiom1 :
  (forall x:int. (forall y:int. ((x <  y) -> (bool_lt(x, y) = true))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) -> (x <= y))))

axiom bool_int__le_axiom1 :
  (forall x:int. (forall y:int. ((x <= y) -> (bool_le(x, y) = true))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) -> (y <  x))))

axiom bool_gt_axiom1 :
  (forall x:int. (forall y:int. ((y <  x) -> (bool_gt(x, y) = true))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) -> (y <= x))))

axiom bool_ge_axiom1 :
  (forall x:int. (forall y:int. ((y <= x) -> (bool_ge(x, y) = true))))

function length(x: int, y: int) : int =
  (if (x <= y) then ((y - x) + 1) else 0)

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

function bool_eq1(x: bool, y: bool) : bool =
  (if (x = y) then true else false)

function to_int(b: bool) : int = (if (b = true) then 1 else 0)

function of_int(i: int) : bool = (if (i = 0) then false else true)

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

logic integerqtint : integer -> int

axiom integerqtaxiom :
  (forall i:integer. ((- 2147483648) <= integerqtint(i)))

axiom integerqtaxiom1 : (forall i:integer. (integerqtint(i) <= 2147483647))

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

function bool_eq2(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref_integer__content__projection(a: integer__ref) : integer =
  (a).integer__content

type positive

logic positiveqtint : positive -> int

axiom positiveqtaxiom : (forall i:positive. (1 <= positiveqtint(i)))

axiom positiveqtaxiom1 :
  (forall i:positive. (positiveqtint(i) <= 2147483647))

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

function bool_eq3(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref_positive__content__projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

function bool_eq4(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref_character__content__projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq5(a: (int,character) farray, a__first: int, a__last: int,
  b: (int,character) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))) then true else false)

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev2 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev3 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))))

function to_rep1(x: integer) : int = integerqtint(x)

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first(mk(f, l))) = f))))

axiom mk_def1 :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last(mk(f, l))) = l))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

function length1(a: us_t) : int =
  (if (first1(a) <= last1(a)) then ((last1(a) - first1(a)) + 1) else 0)

logic value__size : int

logic object__size : int

logic component__size : int

logic alignment : int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (0 <= object__size)

axiom component__size_axiom : (0 <= component__size)

axiom alignment_axiom : (0 <= alignment)

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : us_t

type string____ref = { string____content : us_t
}

function string____ref_string____content__projection(a: string____ref) : us_t =
  (a).string____content

logic to_string : us_image, int -> us_t

logic from_string : us_t -> us_image

axiom to_string__first :
  (forall x:us_image.
  (forall s:int [to_string(x, s)]. (first1(to_string(x, s)) = 1)))

axiom to_string__length :
  (forall x:us_image.
  (forall s:int [to_string(x, s)]. ((0 <= s) -> (length1(to_string(x,
  s)) <= s))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))))))

axiom concat_def1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((a_last <  i) -> ((concat(a, a_first, a_last, b, b_first,
  b_last)[i]) = (b[((i - a_last) + (b_first - 1))]))))))

logic concat_singleton_left : character, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_singleton_left_def :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  ((concat_singleton_left(a, a_first, b, b_first, b_last)[a_first]) = a))))

axiom concat_singleton_left_def1 :
  (forall a:character.
  (forall b:(int,character) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  (forall i:int [(concat_singleton_left(a, a_first, b, b_first, b_last)[i])].
  ((a_first <  i) -> ((concat_singleton_left(a, a_first, b, b_first,
  b_last)[i]) = (b[((i - a_first) + (b_first - 1))])))))))

logic concat_singleton_right : (int,character) farray, int, int,
  character -> (int,character) farray

axiom concat_singleton_right_def :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)]. ((concat_singleton_right(a, a_first, a_last,
  b)[(a_last + 1)]) = b))))

axiom concat_singleton_right_def1 :
  (forall a:(int,character) farray.
  (forall b:character.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)].
  (forall i:int [(concat_singleton_right(a, a_first, a_last, b)[i])| (a[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat_singleton_right(a, a_first,
  a_last, b)[i]) = (a[i])))))))

logic concat_singletons : character, int, character -> (int,character) farray

axiom concat_singletons_def :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[a_first]) = a)))

axiom concat_singletons_def1 :
  (forall a:character. forall b:character.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  ((concat_singletons(a, a_first, b)[(a_first + 1)]) = b)))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

type card

logic cardqtint : card -> int

axiom cardqtaxiom : (forall i:card. (1 <= cardqtint(i)))

axiom cardqtaxiom1 : (forall i:card. (cardqtint(i) <= 52))

predicate in_range4(x: int) = ((1 <= x) and (x <= 52))

function bool_eq7(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : card, card -> bool

logic dummy4 : card

type card__ref = { card__content : card
}

function card__ref_card__content__projection(a: card__ref) : card =
  (a).card__content

function to_rep2(x: card) : int = cardqtint(x)

logic of_rep2 : int -> card

axiom inversion_axiom2 :
  (forall x:card [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:card [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref1 = { map__content1 : (int,card) farray
}

logic slide1 : (int,card) farray, int, int -> (int,card) farray

axiom slide_eq1 :
  (forall a:(int,card) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,card) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq8(a: (int,card) farray, a__first: int, a__last: int,
  b: (int,card) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep2((a[temp___idx_156])) = to_rep2((b[((b__first - a__first) + temp___idx_156)])))))) then true else false)

axiom bool_eq_rev4 :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev5 :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev6 :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev7 :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep2((a[temp___idx_156])) = to_rep2((b[((b__first - a__first) + temp___idx_156)]))))))))

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def2 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(first2(mk1(f, l))) = f))))

axiom mk_def3 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  (to_rep1(last2(mk1(f, l))) = l))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t1 = { elts1 : (int,card) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,card) farray = (a).elts1

function of_array1(a: (int,card) farray, f: int, l: int) : us_t1 = { elts1 =
  a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep1(first2((a).rt1))

function last3(a: us_t1) : int = to_rep1(last2((a).rt1))

function length2(a: us_t1) : int =
  (if (first3(a) <= last3(a)) then ((last3(a) - first3(a)) + 1) else 0)

logic value__size1 : int

logic object__size1 : int

logic component__size1 : int

logic alignment1 : int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (0 <= object__size1)

axiom component__size_axiom1 : (0 <= component__size1)

axiom alignment_axiom1 : (0 <= alignment1)

function bool_eq9(x: us_t1, y: us_t1) : bool = bool_eq8((x).elts1,
  to_rep1(first2((x).rt1)), to_rep1(last2((x).rt1)), (y).elts1,
  to_rep1(first2((y).rt1)), to_rep1(last2((y).rt1)))

logic user_eq5 : us_t1, us_t1 -> bool

logic dummy5 : us_t1

type cardstack__ref = { cardstack__content : us_t1
}

function cardstack__ref_cardstack__content__projection(a: cardstack__ref) : us_t1 =
  (a).cardstack__content

logic line_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic line_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

logic page_length : us_private, us_private, us_private, us_private,
  us_private, us_private, us_private -> int

logic page_length__function_guard : int, us_private, us_private, us_private,
  us_private, us_private, us_private, us_private -> prop

type cardindex

logic cardindexqtint : cardindex -> int

axiom cardindexqtaxiom : (forall i:cardindex. ((- 1) <= cardindexqtint(i)))

axiom cardindexqtaxiom1 : (forall i:cardindex. (cardindexqtint(i) <= 100))

predicate in_range5(x: int) = (((- 1) <= x) and (x <= 100))

function bool_eq10(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : cardindex, cardindex -> bool

logic dummy6 : cardindex

type cardindex__ref = { cardindex__content : cardindex
}

function cardindex__ref_cardindex__content__projection(a: cardindex__ref) : cardindex =
  (a).cardindex__content

function to_rep3(x: cardindex) : int = cardindexqtint(x)

logic of_rep3 : int -> cardindex

axiom inversion_axiom3 :
  (forall x:cardindex [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:cardindex [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

logic dummy7 : (int,card) farray

logic value__size2 : int

logic object__size2 : int

logic component__size2 : int

logic alignment2 : int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (0 <= object__size2)

axiom component__size_axiom2 : (0 <= component__size2)

axiom alignment_axiom2 : (0 <= alignment2)

logic user_eq7 : (int,card) farray, (int,card) farray -> bool

type map__ref2 = { map__content2 : (int,cardindex) farray
}

logic slide2 : (int,cardindex) farray, int, int -> (int,cardindex) farray

axiom slide_eq2 :
  (forall a:(int,cardindex) farray.
  (forall first4:int [slide2(a, first4, first4)]. (slide2(a, first4,
  first4) = a)))

axiom slide_def2 :
  (forall a:(int,cardindex) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq11(a: (int,cardindex) farray, a__first: int, a__last: int,
  b: (int,cardindex) farray, b__first: int, b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep3((a[temp___idx_157])) = to_rep3((b[((b__first - a__first) + temp___idx_157)])))))) then true else false)

axiom bool_eq_rev8 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev9 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev10 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev11 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq11(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_157:int. (((a__first <= temp___idx_157) and
  (temp___idx_157 <= a__last)) ->
  (to_rep3((a[temp___idx_157])) = to_rep3((b[((b__first - a__first) + temp___idx_157)]))))))))

logic dummy8 : (int,cardindex) farray

logic value__size3 : int

logic object__size3 : int

logic component__size3 : int

logic alignment3 : int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (0 <= object__size3)

axiom component__size_axiom3 : (0 <= component__size3)

axiom alignment_axiom3 : (0 <= alignment3)

logic user_eq8 : (int,cardindex) farray, (int,cardindex) farray -> bool

type map__ref3 = { map__content3 : (int,(int,cardindex) farray) farray
}

logic slide3 : (int,(int,cardindex) farray) farray, int,
  int -> (int,(int,cardindex) farray) farray

axiom slide_eq3 :
  (forall a:(int,(int,cardindex) farray) farray.
  (forall first4:int [slide3(a, first4, first4)]. (slide3(a, first4,
  first4) = a)))

axiom slide_def3 :
  (forall a:(int,(int,cardindex) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

function bool_eq12(a: (int,(int,cardindex) farray) farray, a__first: int,
  a__last: int, b: (int,(int,cardindex) farray) farray, b__first: int,
  b__last: int) : bool =
  (if ((if (a__first <= a__last) then ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first))) else (b__last <  b__first)) and
  (forall temp___idx_158:int. (((a__first <= temp___idx_158) and
  (temp___idx_158 <= a__last)) -> (bool_eq11((a[temp___idx_158]), 0, 99,
  (b[((b__first - a__first) + temp___idx_158)]), 0, 99) = true)))) then true else false)

axiom bool_eq_rev12 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) -> (b__first <= b__last)))))

axiom bool_eq_rev13 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((a__first <= a__last) ->
  ((a__last - a__first) = (b__last - b__first))))))

axiom bool_eq_rev14 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((not (a__first <= a__last)) ->
  (b__last <  b__first)))))

axiom bool_eq_rev15 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) ->
  (forall temp___idx_158:int. (((a__first <= temp___idx_158) and
  (temp___idx_158 <= a__last)) -> (bool_eq11((a[temp___idx_158]), 0, 99,
  (b[((b__first - a__first) + temp___idx_158)]), 0, 99) = true))))))

logic dummy9 : (int,(int,cardindex) farray) farray

logic value__size4 : int

logic object__size4 : int

logic component__size4 : int

logic alignment4 : int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 : (0 <= object__size4)

axiom component__size_axiom4 : (0 <= component__size4)

axiom alignment_axiom4 : (0 <= alignment4)

logic user_eq9 : (int,(int,cardindex) farray) farray,
  (int,(int,cardindex) farray) farray -> bool

type us_split_fields = { rec__patience__state__numelts : cardindex;
rec__patience__state__values : (int,card) farray;
rec__patience__state__numstacks : cardindex; rec__patience__state__stacksizes
: (int,cardindex) farray; rec__patience__state__stacks :
(int,(int,cardindex) farray) farray; rec__patience__state__posstack :
(int,cardindex) farray; rec__patience__state__posheight :
(int,cardindex) farray; rec__patience__state__preds : (int,cardindex) farray
}

function us_split_fields_rec__patience__state__numelts__projection(a: us_split_fields) : cardindex =
  (a).rec__patience__state__numelts

function us_split_fields_rec__patience__state__values__projection(a: us_split_fields) : (int,card) farray =
  (a).rec__patience__state__values

function us_split_fields_rec__patience__state__numstacks__projection(a: us_split_fields) : cardindex =
  (a).rec__patience__state__numstacks

function us_split_fields_rec__patience__state__stacksizes__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__stacksizes

function us_split_fields_rec__patience__state__stacks__projection(a: us_split_fields) : (int,(int,cardindex) farray) farray =
  (a).rec__patience__state__stacks

function us_split_fields_rec__patience__state__posstack__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__posstack

function us_split_fields_rec__patience__state__posheight__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__posheight

function us_split_fields_rec__patience__state__preds__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__preds

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___split_fields__content__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___split_fields__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function bool_eq13(a: us_rep, b: us_rep) : bool =
  (if (((to_rep3(((a).us_split_fields1).rec__patience__state__numelts) = to_rep3(((b).us_split_fields1).rec__patience__state__numelts)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__values, 0, 99,
  ((b).us_split_fields1).rec__patience__state__values, 0, 99) = true)) and
  ((((to_rep3(((a).us_split_fields1).rec__patience__state__numstacks) = to_rep3(((b).us_split_fields1).rec__patience__state__numstacks)) and
  (bool_eq11(((a).us_split_fields1).rec__patience__state__stacksizes, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacksizes, 0,
  99) = true)) and
  (bool_eq12(((a).us_split_fields1).rec__patience__state__stacks, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacks, 0, 99) = true)) and
  (((bool_eq11(((a).us_split_fields1).rec__patience__state__posstack, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posstack, 0, 99) = true) and
  (bool_eq11(((a).us_split_fields1).rec__patience__state__posheight, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posheight, 0, 99) = true)) and
  (bool_eq11(((a).us_split_fields1).rec__patience__state__preds, 0, 99,
  ((b).us_split_fields1).rec__patience__state__preds, 0,
  99) = true)))) then true else false)

logic value__size5 : int

logic object__size5 : int

logic alignment5 : int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (0 <= object__size5)

axiom alignment_axiom5 : (0 <= alignment5)

logic patience__state__numelts__first__bit : int

logic patience__state__numelts__last__bit : int

logic patience__state__numelts__position : int

axiom patience__state__numelts__first__bit_axiom :
  (0 <= patience__state__numelts__first__bit)

axiom patience__state__numelts__last__bit_axiom :
  (patience__state__numelts__first__bit <  patience__state__numelts__last__bit)

axiom patience__state__numelts__position_axiom :
  (0 <= patience__state__numelts__position)

logic patience__state__values__first__bit : int

logic patience__state__values__last__bit : int

logic patience__state__values__position : int

axiom patience__state__values__first__bit_axiom :
  (0 <= patience__state__values__first__bit)

axiom patience__state__values__last__bit_axiom :
  (patience__state__values__first__bit <  patience__state__values__last__bit)

axiom patience__state__values__position_axiom :
  (0 <= patience__state__values__position)

logic patience__state__numstacks__first__bit : int

logic patience__state__numstacks__last__bit : int

logic patience__state__numstacks__position : int

axiom patience__state__numstacks__first__bit_axiom :
  (0 <= patience__state__numstacks__first__bit)

axiom patience__state__numstacks__last__bit_axiom :
  (patience__state__numstacks__first__bit <  patience__state__numstacks__last__bit)

axiom patience__state__numstacks__position_axiom :
  (0 <= patience__state__numstacks__position)

logic patience__state__stacksizes__first__bit : int

logic patience__state__stacksizes__last__bit : int

logic patience__state__stacksizes__position : int

axiom patience__state__stacksizes__first__bit_axiom :
  (0 <= patience__state__stacksizes__first__bit)

axiom patience__state__stacksizes__last__bit_axiom :
  (patience__state__stacksizes__first__bit <  patience__state__stacksizes__last__bit)

axiom patience__state__stacksizes__position_axiom :
  (0 <= patience__state__stacksizes__position)

logic patience__state__stacks__first__bit : int

logic patience__state__stacks__last__bit : int

logic patience__state__stacks__position : int

axiom patience__state__stacks__first__bit_axiom :
  (0 <= patience__state__stacks__first__bit)

axiom patience__state__stacks__last__bit_axiom :
  (patience__state__stacks__first__bit <  patience__state__stacks__last__bit)

axiom patience__state__stacks__position_axiom :
  (0 <= patience__state__stacks__position)

logic patience__state__posstack__first__bit : int

logic patience__state__posstack__last__bit : int

logic patience__state__posstack__position : int

axiom patience__state__posstack__first__bit_axiom :
  (0 <= patience__state__posstack__first__bit)

axiom patience__state__posstack__last__bit_axiom :
  (patience__state__posstack__first__bit <  patience__state__posstack__last__bit)

axiom patience__state__posstack__position_axiom :
  (0 <= patience__state__posstack__position)

logic patience__state__posheight__first__bit : int

logic patience__state__posheight__last__bit : int

logic patience__state__posheight__position : int

axiom patience__state__posheight__first__bit_axiom :
  (0 <= patience__state__posheight__first__bit)

axiom patience__state__posheight__last__bit_axiom :
  (patience__state__posheight__first__bit <  patience__state__posheight__last__bit)

axiom patience__state__posheight__position_axiom :
  (0 <= patience__state__posheight__position)

logic patience__state__preds__first__bit : int

logic patience__state__preds__last__bit : int

logic patience__state__preds__position : int

axiom patience__state__preds__first__bit_axiom :
  (0 <= patience__state__preds__first__bit)

axiom patience__state__preds__last__bit_axiom :
  (patience__state__preds__first__bit <  patience__state__preds__last__bit)

axiom patience__state__preds__position_axiom :
  (0 <= patience__state__preds__position)

logic user_eq10 : us_rep, us_rep -> bool

logic dummy10 : us_rep

type state__ref = { state__content : us_rep
}

function state__ref_state__content__projection(a: state__ref) : us_rep =
  (a).state__content

logic input__first : integer

logic input__last : integer

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic inv : us_rep -> bool

logic inv__function_guard : bool, us_rep -> prop

logic playgame : us_t1 -> us_rep

logic playgame__function_guard : us_rep, us_t1 -> prop

logic c60b : us_rep

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

predicate dynamic_invariant(temp___expr_218: int, temp___is_init_214: bool,
  temp___skip_constant_215: bool, temp___do_toplevel_216: bool,
  temp___do_typ_inv_217: bool) = (((temp___is_init_214 = true) or
  ((- 1) <= 100)) -> in_range5(temp___expr_218))

type tcardarrayD1

logic tcardarrayD1qtint : tcardarrayD1 -> int

axiom tcardarrayD1qtaxiom :
  (forall i:tcardarrayD1. (0 <= tcardarrayD1qtint(i)))

axiom tcardarrayD1qtaxiom1 :
  (forall i:tcardarrayD1. (tcardarrayD1qtint(i) <= 99))

predicate in_range6(x: int) = ((0 <= x) and (x <= 99))

function bool_eq14(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq11 : tcardarrayD1, tcardarrayD1 -> bool

logic dummy11 : tcardarrayD1

type tcardarrayD1__ref = { tcardarrayD1__content : tcardarrayD1
}

function tcardarrayD1__ref_tcardarrayD1__content__projection(a: tcardarrayD1__ref) : tcardarrayD1 =
  (a).tcardarrayD1__content

type tindexarrayD1

logic tindexarrayD1qtint : tindexarrayD1 -> int

axiom tindexarrayD1qtaxiom :
  (forall i:tindexarrayD1. (0 <= tindexarrayD1qtint(i)))

axiom tindexarrayD1qtaxiom1 :
  (forall i:tindexarrayD1. (tindexarrayD1qtint(i) <= 99))

predicate in_range7(x: int) = ((0 <= x) and (x <= 99))

function bool_eq15(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq12 : tindexarrayD1, tindexarrayD1 -> bool

logic dummy12 : tindexarrayD1

type tindexarrayD1__ref = { tindexarrayD1__content : tindexarrayD1
}

function tindexarrayD1__ref_tindexarrayD1__content__projection(a: tindexarrayD1__ref) : tindexarrayD1 =
  (a).tindexarrayD1__content

type t48b

logic t48bqtint : t48b -> int

axiom t48bqtaxiom : (forall i:t48b. (1 <= t48bqtint(i)))

axiom t48bqtaxiom1 : (forall i:t48b. (t48bqtint(i) <= 7))

predicate in_range8(x: int) = ((1 <= x) and (x <= 7))

function bool_eq16(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq13 : t48b, t48b -> bool

logic dummy13 : t48b

type t48b__ref = { t48b__content : t48b
}

function t48b__ref_t48b__content__projection(a: t48b__ref) : t48b =
  (a).t48b__content

logic test_patience__input__aggregate_def : int, int, int, int, int, int,
  int -> (int,card) farray

logic temp___String_Literal_425 : unit -> (int,character) farray

axiom temp___String_Literal_425__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[1])) = 84))

axiom temp___String_Literal_425__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[2])) = 101))

axiom temp___String_Literal_425__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[3])) = 115))

axiom temp___String_Literal_425__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[4])) = 116))

axiom temp___String_Literal_425__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[5])) = 32))

axiom temp___String_Literal_425__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[6])) = 111))

axiom temp___String_Literal_425__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[7])) = 102))

axiom temp___String_Literal_425__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[8])) = 32))

axiom temp___String_Literal_425__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[9])) = 97))

axiom temp___String_Literal_425__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[10])) = 32))

axiom temp___String_Literal_425__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[11])) = 112))

axiom temp___String_Literal_425__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[12])) = 97))

axiom temp___String_Literal_425__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[13])) = 116))

axiom temp___String_Literal_425__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[14])) = 105))

axiom temp___String_Literal_425__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[15])) = 101))

axiom temp___String_Literal_425__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[16])) = 110))

axiom temp___String_Literal_425__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[17])) = 99))

axiom temp___String_Literal_425__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[18])) = 101))

axiom temp___String_Literal_425__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[19])) = 32))

axiom temp___String_Literal_425__def_axiom19 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[20])) = 103))

axiom temp___String_Literal_425__def_axiom20 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[21])) = 97))

axiom temp___String_Literal_425__def_axiom21 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[22])) = 109))

axiom temp___String_Literal_425__def_axiom22 :
  (forall us_void_param:unit [temp___String_Literal_425(us_void_param)].
  (to_rep((temp___String_Literal_425(us_void_param)[23])) = 101))

logic temp___String_Literal_426 : unit -> (int,character) farray

axiom temp___String_Literal_426__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[1])) = 45))

axiom temp___String_Literal_426__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[2])) = 45))

axiom temp___String_Literal_426__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[3])) = 45))

axiom temp___String_Literal_426__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[4])) = 45))

axiom temp___String_Literal_426__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[5])) = 45))

axiom temp___String_Literal_426__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[6])) = 45))

axiom temp___String_Literal_426__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[7])) = 45))

axiom temp___String_Literal_426__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_426(us_void_param)].
  (to_rep((temp___String_Literal_426(us_void_param)[8])) = 45))

logic temp___String_Literal_427 : unit -> (int,character) farray

axiom temp___String_Literal_427__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[1])) = 67))

axiom temp___String_Literal_427__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[2])) = 97))

axiom temp___String_Literal_427__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[3])) = 114))

axiom temp___String_Literal_427__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[4])) = 100))

axiom temp___String_Literal_427__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[5])) = 83))

axiom temp___String_Literal_427__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[6])) = 116))

axiom temp___String_Literal_427__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[7])) = 97))

axiom temp___String_Literal_427__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[8])) = 99))

axiom temp___String_Literal_427__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[9])) = 107))

axiom temp___String_Literal_427__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[10])) = 32))

axiom temp___String_Literal_427__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[11])) = 40))

axiom temp___String_Literal_427__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[12])) = 102))

axiom temp___String_Literal_427__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[13])) = 105))

axiom temp___String_Literal_427__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[14])) = 114))

axiom temp___String_Literal_427__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[15])) = 115))

axiom temp___String_Literal_427__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[16])) = 116))

axiom temp___String_Literal_427__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_427(us_void_param)].
  (to_rep((temp___String_Literal_427(us_void_param)[17])) = 61))

logic temp___String_Literal_430 : unit -> (int,character) farray

axiom temp___String_Literal_430__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_430(us_void_param)].
  (to_rep((temp___String_Literal_430(us_void_param)[1])) = 41))

axiom temp___String_Literal_430__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_430(us_void_param)].
  (to_rep((temp___String_Literal_430(us_void_param)[2])) = 32))

axiom temp___String_Literal_430__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_430(us_void_param)].
  (to_rep((temp___String_Literal_430(us_void_param)[3])) = 61))

axiom temp___String_Literal_430__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_430(us_void_param)].
  (to_rep((temp___String_Literal_430(us_void_param)[4])) = 32))

logic temp___String_Literal_435 : unit -> (int,character) farray

axiom temp___String_Literal_435__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_435(us_void_param)].
  (to_rep((temp___String_Literal_435(us_void_param)[1])) = 32))

logic temp___String_Literal_438 : unit -> (int,character) farray

logic temp___String_Literal_439 : unit -> (int,character) farray

axiom temp___String_Literal_439__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[1])) = 45))

axiom temp___String_Literal_439__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[2])) = 45))

axiom temp___String_Literal_439__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[3])) = 45))

axiom temp___String_Literal_439__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[4])) = 45))

axiom temp___String_Literal_439__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[5])) = 45))

axiom temp___String_Literal_439__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[6])) = 45))

axiom temp___String_Literal_439__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[7])) = 45))

axiom temp___String_Literal_439__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_439(us_void_param)].
  (to_rep((temp___String_Literal_439(us_void_param)[8])) = 45))

logic temp___String_Literal_441 : unit -> (int,character) farray

axiom temp___String_Literal_441__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[1])) = 45))

axiom temp___String_Literal_441__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[2])) = 45))

axiom temp___String_Literal_441__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[3])) = 45))

axiom temp___String_Literal_441__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[4])) = 45))

axiom temp___String_Literal_441__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[5])) = 45))

axiom temp___String_Literal_441__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[6])) = 45))

axiom temp___String_Literal_441__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[7])) = 45))

axiom temp___String_Literal_441__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_441(us_void_param)].
  (to_rep((temp___String_Literal_441(us_void_param)[8])) = 45))

logic temp___String_Literal_442 : unit -> (int,character) farray

axiom temp___String_Literal_442__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[1])) = 78))

axiom temp___String_Literal_442__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[2])) = 117))

axiom temp___String_Literal_442__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[3])) = 109))

axiom temp___String_Literal_442__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[4])) = 98))

axiom temp___String_Literal_442__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[5])) = 101))

axiom temp___String_Literal_442__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[6])) = 114))

axiom temp___String_Literal_442__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[7])) = 32))

axiom temp___String_Literal_442__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[8])) = 111))

axiom temp___String_Literal_442__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[9])) = 102))

axiom temp___String_Literal_442__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[10])) = 32))

axiom temp___String_Literal_442__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[11])) = 101))

axiom temp___String_Literal_442__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[12])) = 108))

axiom temp___String_Literal_442__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[13])) = 116))

axiom temp___String_Literal_442__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[14])) = 115))

axiom temp___String_Literal_442__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[15])) = 32))

axiom temp___String_Literal_442__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[16])) = 61))

axiom temp___String_Literal_442__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_442(us_void_param)].
  (to_rep((temp___String_Literal_442(us_void_param)[17])) = 32))

logic temp___String_Literal_445 : unit -> (int,character) farray

axiom temp___String_Literal_445__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[1])) = 67))

axiom temp___String_Literal_445__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[2])) = 97))

axiom temp___String_Literal_445__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[3])) = 114))

axiom temp___String_Literal_445__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[4])) = 100))

axiom temp___String_Literal_445__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[5])) = 32))

axiom temp___String_Literal_445__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[6])) = 118))

axiom temp___String_Literal_445__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[7])) = 97))

axiom temp___String_Literal_445__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[8])) = 108))

axiom temp___String_Literal_445__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[9])) = 117))

axiom temp___String_Literal_445__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[10])) = 101))

axiom temp___String_Literal_445__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[11])) = 115))

axiom temp___String_Literal_445__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[12])) = 32))

axiom temp___String_Literal_445__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_445(us_void_param)].
  (to_rep((temp___String_Literal_445(us_void_param)[13])) = 61))

logic temp___String_Literal_448 : unit -> (int,character) farray

axiom temp___String_Literal_448__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_448(us_void_param)].
  (to_rep((temp___String_Literal_448(us_void_param)[1])) = 32))

logic temp___String_Literal_452 : unit -> (int,character) farray

logic temp___String_Literal_453 : unit -> (int,character) farray

axiom temp___String_Literal_453__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[1])) = 78))

axiom temp___String_Literal_453__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[2])) = 117))

axiom temp___String_Literal_453__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[3])) = 109))

axiom temp___String_Literal_453__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[4])) = 98))

axiom temp___String_Literal_453__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[5])) = 101))

axiom temp___String_Literal_453__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[6])) = 114))

axiom temp___String_Literal_453__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[7])) = 32))

axiom temp___String_Literal_453__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[8])) = 111))

axiom temp___String_Literal_453__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[9])) = 102))

axiom temp___String_Literal_453__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[10])) = 32))

axiom temp___String_Literal_453__def_axiom10 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[11])) = 115))

axiom temp___String_Literal_453__def_axiom11 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[12])) = 116))

axiom temp___String_Literal_453__def_axiom12 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[13])) = 97))

axiom temp___String_Literal_453__def_axiom13 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[14])) = 99))

axiom temp___String_Literal_453__def_axiom14 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[15])) = 107))

axiom temp___String_Literal_453__def_axiom15 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[16])) = 115))

axiom temp___String_Literal_453__def_axiom16 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[17])) = 32))

axiom temp___String_Literal_453__def_axiom17 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[18])) = 61))

axiom temp___String_Literal_453__def_axiom18 :
  (forall us_void_param:unit [temp___String_Literal_453(us_void_param)].
  (to_rep((temp___String_Literal_453(us_void_param)[19])) = 32))

logic temp___String_Literal_459 : unit -> (int,character) farray

axiom temp___String_Literal_459__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[1])) = 83))

axiom temp___String_Literal_459__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[2])) = 116))

axiom temp___String_Literal_459__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[3])) = 97))

axiom temp___String_Literal_459__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[4])) = 99))

axiom temp___String_Literal_459__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[5])) = 107))

axiom temp___String_Literal_459__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_459(us_void_param)].
  (to_rep((temp___String_Literal_459(us_void_param)[6])) = 32))

logic temp___String_Literal_462 : unit -> (int,character) farray

axiom temp___String_Literal_462__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[1])) = 32))

axiom temp___String_Literal_462__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[2])) = 104))

axiom temp___String_Literal_462__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[3])) = 97))

axiom temp___String_Literal_462__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[4])) = 115))

axiom temp___String_Literal_462__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[5])) = 32))

axiom temp___String_Literal_462__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[6])) = 115))

axiom temp___String_Literal_462__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[7])) = 105))

axiom temp___String_Literal_462__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[8])) = 122))

axiom temp___String_Literal_462__def_axiom8 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[9])) = 101))

axiom temp___String_Literal_462__def_axiom9 :
  (forall us_void_param:unit [temp___String_Literal_462(us_void_param)].
  (to_rep((temp___String_Literal_462(us_void_param)[10])) = 32))

logic temp___String_Literal_468 : unit -> (int,character) farray

axiom temp___String_Literal_468__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_468(us_void_param)].
  (to_rep((temp___String_Literal_468(us_void_param)[1])) = 32))

axiom temp___String_Literal_468__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_468(us_void_param)].
  (to_rep((temp___String_Literal_468(us_void_param)[2])) = 58))

logic temp___String_Literal_475 : unit -> (int,character) farray

axiom temp___String_Literal_475__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_475(us_void_param)].
  (to_rep((temp___String_Literal_475(us_void_param)[1])) = 32))

logic temp___String_Literal_478 : unit -> (int,character) farray

axiom temp___String_Literal_478__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_478(us_void_param)].
  (to_rep((temp___String_Literal_478(us_void_param)[1])) = 32))

axiom temp___String_Literal_478__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_478(us_void_param)].
  (to_rep((temp___String_Literal_478(us_void_param)[2])) = 61))

axiom temp___String_Literal_478__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_478(us_void_param)].
  (to_rep((temp___String_Literal_478(us_void_param)[3])) = 62))

logic temp___String_Literal_487 : unit -> (int,character) farray

logic temp___String_Literal_488 : unit -> (int,character) farray

axiom temp___String_Literal_488__def_axiom :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[1])) = 45))

axiom temp___String_Literal_488__def_axiom1 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[2])) = 45))

axiom temp___String_Literal_488__def_axiom2 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[3])) = 45))

axiom temp___String_Literal_488__def_axiom3 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[4])) = 45))

axiom temp___String_Literal_488__def_axiom4 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[5])) = 45))

axiom temp___String_Literal_488__def_axiom5 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[6])) = 45))

axiom temp___String_Literal_488__def_axiom6 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[7])) = 45))

axiom temp___String_Literal_488__def_axiom7 :
  (forall us_void_param:unit [temp___String_Literal_488(us_void_param)].
  (to_rep((temp___String_Literal_488(us_void_param)[8])) = 45))

predicate dynamic_invariant1(temp___expr_18: int, temp___is_init_14: bool,
  temp___skip_constant_15: bool, temp___do_toplevel_16: bool,
  temp___do_typ_inv_17: bool) = (((temp___is_init_14 = true) or
  ((- 2147483648) <= 2147483647)) -> in_range1(temp___expr_18))

predicate dynamic_invariant2(temp___expr_46: int, temp___is_init_42: bool,
  temp___skip_constant_43: bool, temp___do_toplevel_44: bool,
  temp___do_typ_inv_45: bool) = (((temp___is_init_42 = true) or
  (1 <= 2147483647)) -> in_range2(temp___expr_46))

predicate dynamic_invariant3(temp___expr_74: int, temp___is_init_70: bool,
  temp___skip_constant_71: bool, temp___do_toplevel_72: bool,
  temp___do_typ_inv_73: bool) = (((temp___is_init_70 = true) or
  (0 <= 255)) -> in_range3(temp___expr_74))

predicate dynamic_invariant4(temp___expr_96: us_t, temp___is_init_92: bool,
  temp___skip_constant_93: bool, temp___do_toplevel_94: bool,
  temp___do_typ_inv_95: bool) = ((not (temp___skip_constant_93 = true)) ->
  dynamic_property(1, 2147483647, first1(temp___expr_96),
  last1(temp___expr_96)))

predicate dynamic_invariant5(temp___expr_193: int, temp___is_init_189: bool,
  temp___skip_constant_190: bool, temp___do_toplevel_191: bool,
  temp___do_typ_inv_192: bool) = (((temp___is_init_189 = true) or
  (1 <= 52)) -> in_range4(temp___expr_193))

logic rliteral : card

axiom rliteral_axiom : (cardqtint(rliteral) = 9)

logic rliteral1 : card

axiom rliteral_axiom1 : (cardqtint(rliteral1) = 7)

logic rliteral2 : card

axiom rliteral_axiom2 : (cardqtint(rliteral2) = 10)

logic rliteral3 : card

axiom rliteral_axiom3 : (cardqtint(rliteral3) = 5)

logic rliteral4 : card

axiom rliteral_axiom4 : (cardqtint(rliteral4) = 4)

axiom def_axiom :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[1]) = rliteral)))

axiom def_axiom1 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[2]) = rliteral1)))

axiom def_axiom2 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[3]) = rliteral2)))

axiom def_axiom3 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[4]) = rliteral)))

axiom def_axiom4 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[5]) = rliteral3)))

axiom def_axiom5 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[6]) = rliteral4)))

axiom def_axiom6 :
  (forall temp___414:int. forall temp___415:int. forall temp___416:int.
  forall temp___417:int. forall temp___418:int. forall temp___419:int.
  forall temp___420:int. (((dynamic_invariant5(temp___414, true, true, true,
  true) and dynamic_invariant5(temp___415, true, true, true, true)) and
  (((dynamic_invariant5(temp___416, true, true, true, true) and
  dynamic_invariant5(temp___417, true, true, true, true)) and
  dynamic_invariant5(temp___418, true, true, true, true)) and
  (dynamic_invariant5(temp___419, true, true, true, true) and
  dynamic_invariant5(temp___420, true, true, true, true)))) ->
  ((test_patience__input__aggregate_def(temp___414, temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420)[7]) = rliteral2)))

type count

logic countqtint : count -> int

axiom countqtaxiom : (forall i:count. (0 <= countqtint(i)))

axiom countqtaxiom1 : (forall i:count. (countqtint(i) <= 2147483647))

predicate in_range9(x: int) = ((0 <= x) and (x <= 2147483647))

function bool_eq17(x: int, y: int) : bool = (if (x = y) then true else false)

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq14 : count, count -> bool

logic dummy14 : count

type count__ref = { count__content : count
}

function count__ref_count__content__projection(a: count__ref) : count =
  (a).count__content

predicate dynamic_invariant6(temp___expr_165: int, temp___is_init_161: bool,
  temp___skip_constant_162: bool, temp___do_toplevel_163: bool,
  temp___do_typ_inv_164: bool) = (((temp___is_init_161 = true) or
  (0 <= 2147483647)) -> in_range9(temp___expr_165))

axiom line_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant6(line_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

axiom page_length__post_axiom :
  (forall ada___ada__text_io__standard_in:us_private.
  forall ada___ada__text_io__file_system:us_private.
  forall ada___ada__text_io__standard_out:us_private.
  forall ada___ada__text_io__standard_err:us_private.
  forall ada___ada__text_io__current_in:us_private.
  forall ada___ada__text_io__current_out:us_private.
  forall ada___ada__text_io__current_err:us_private
  [page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err)].
  dynamic_invariant6(page_length(ada___ada__text_io__standard_in,
  ada___ada__text_io__file_system, ada___ada__text_io__standard_out,
  ada___ada__text_io__standard_err, ada___ada__text_io__current_in,
  ada___ada__text_io__current_out, ada___ada__text_io__current_err), true,
  false, true, true))

predicate dynamic_invariant7(temp___expr_200: us_t1,
  temp___is_init_196: bool, temp___skip_constant_197: bool,
  temp___do_toplevel_198: bool, temp___do_typ_inv_199: bool) =
  ((not (temp___skip_constant_197 = true)) -> dynamic_property1(1,
  2147483647, first3(temp___expr_200), last3(temp___expr_200)))

axiom inv__def_axiom :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (0 <= to_rep3(((s).us_split_fields1).rec__patience__state__numstacks))))

axiom inv__def_axiom1 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) <= to_rep3(((s).us_split_fields1).rec__patience__state__numelts))))

axiom inv__def_axiom2 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) <= 100)))

axiom inv__def_axiom3 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  ((to_rep3(((s).us_split_fields1).rec__patience__state__numelts) = 0) or
  (0 <  to_rep3(((s).us_split_fields1).rec__patience__state__numstacks)))))

axiom inv__def_axiom4 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (1 <= to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])))))))

axiom inv__def_axiom5 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) <= to_rep3(((s).us_split_fields1).rec__patience__state__numelts))))))

axiom inv__def_axiom6 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (0 <= to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j])))))))))

axiom inv__def_axiom7 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j])) <  to_rep3(((s).us_split_fields1).rec__patience__state__numelts))))))))

axiom inv__def_axiom8 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (0 <= to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])))))))

axiom inv__def_axiom9 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])) <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))))))

axiom inv__def_axiom10 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (0 <= to_rep3((((s).us_split_fields1).rec__patience__state__posheight[i])))))))

axiom inv__def_axiom11 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__posheight[i])) <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))])) - 1))))))

axiom inv__def_axiom12 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))])[to_rep3((((s).us_split_fields1).rec__patience__state__posheight[i]))])) = i)))))

axiom inv__def_axiom13 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall ist:int. (((0 <= ist) and
  (ist <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall ip:int. (((0 <= ip) and
  (ip <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[ist])) - 1))) ->
  (ist = to_rep3((((s).us_split_fields1).rec__patience__state__posstack[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[ist])[ip]))])))))))))

axiom inv__def_axiom14 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall ist:int. (((0 <= ist) and
  (ist <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall ip:int. (((0 <= ip) and
  (ip <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[ist])) - 1))) ->
  (ip = to_rep3((((s).us_split_fields1).rec__patience__state__posheight[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[ist])[ip]))])))))))))

axiom inv__def_axiom15 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and
  (k <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j])) <  to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[k])))))))))))

axiom inv__def_axiom16 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and
  (k <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[k]))])) <= to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j]))])))))))))))

axiom inv__def_axiom17 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  ((- 1) <= to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])))))))

axiom inv__def_axiom18 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))))))

axiom inv__def_axiom19 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  i)))))

axiom inv__def_axiom20 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  ((to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  0) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])) = 0))))))

axiom inv__def_axiom21 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  ((not (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  0)) ->
  (to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3((((s).us_split_fields1).rec__patience__state__preds[i]))])) <  to_rep2((((s).us_split_fields1).rec__patience__state__values[i]))))))))

axiom inv__def_axiom22 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  ((not (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  0)) ->
  (0 <  to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))))))))

axiom inv__def_axiom23 :
  (forall s:us_rep [inv(s)]. ((inv(s) = true) ->
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  ((not (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  0)) ->
  (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[to_rep3((((s).us_split_fields1).rec__patience__state__preds[i]))])) = (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])) - 1)))))))

axiom inv__def_axiom24 :
  (forall s:us_rep [inv(s)].
  (((((((((((0 <= to_rep3(((s).us_split_fields1).rec__patience__state__numstacks)) and
  (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) <= to_rep3(((s).us_split_fields1).rec__patience__state__numelts))) and
  (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) <= 100)) and
  ((to_rep3(((s).us_split_fields1).rec__patience__state__numelts) = 0) or
  (0 <  to_rep3(((s).us_split_fields1).rec__patience__state__numstacks)))) and
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (((1 <= to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i]))) and
  (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) <= to_rep3(((s).us_split_fields1).rec__patience__state__numelts))) and
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  ((0 <= to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j]))) and
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j])) <  to_rep3(((s).us_split_fields1).rec__patience__state__numelts))))))))) and
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (((let temp___362 =
  to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))
  : int in ((0 <= temp___362) and
  (temp___362 <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1)))) and
  (let temp___364 =
  to_rep3((((s).us_split_fields1).rec__patience__state__posheight[i]))
  : int in ((0 <= temp___364) and
  (temp___364 <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))])) - 1))))) and
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i]))])[to_rep3((((s).us_split_fields1).rec__patience__state__posheight[i]))])) = i))))) and
  (forall ist:int. (((0 <= ist) and
  (ist <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall ip:int. (((0 <= ip) and
  (ip <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[ist])) - 1))) ->
  ((ist = to_rep3((((s).us_split_fields1).rec__patience__state__posstack[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[ist])[ip]))]))) and
  (ip = to_rep3((((s).us_split_fields1).rec__patience__state__posheight[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[ist])[ip]))]))))))))) and
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and
  (k <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j])) <  to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[k])))))))))) and
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall j:int. (((0 <= j) and
  (j <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and
  (k <= (to_rep3((((s).us_split_fields1).rec__patience__state__stacksizes[i])) - 1))) ->
  (to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[k]))])) <= to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3(((((s).us_split_fields1).rec__patience__state__stacks[i])[j]))])))))))))) and
  (forall i:int. (((0 <= i) and
  (i <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1))) ->
  (((let temp___393 =
  to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) : int in
  (((- 1) <= temp___393) and
  (temp___393 <= (to_rep3(((s).us_split_fields1).rec__patience__state__numelts) - 1)))) and
  (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  i)) and
  (if (to_rep3((((s).us_split_fields1).rec__patience__state__preds[i])) <  0) then (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])) = 0) else (((to_rep2((((s).us_split_fields1).rec__patience__state__values[to_rep3((((s).us_split_fields1).rec__patience__state__preds[i]))])) <  to_rep2((((s).us_split_fields1).rec__patience__state__values[i]))) and
  (0 <  to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])))) and
  (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[to_rep3((((s).us_split_fields1).rec__patience__state__preds[i]))])) = (to_rep3((((s).us_split_fields1).rec__patience__state__posstack[i])) - 1)))))))) ->
  (inv(s) = true)))

 (* File "test_patience.adb", line 5, characters 0-0 *)
goal defqtvc :
  (forall standard_in:us_private. forall file_system:us_private.
  forall standard_out:us_private. forall standard_err:us_private.
  forall current_in:us_private. forall current_out:us_private.
  forall current_err:us_private. (let test_patience__input__assume =
  of_array1(test_patience__input__aggregate_def(9, 7, 10, 9, 5, 4, 10), 1, 7)
  : us_t1 in
  (forall input:(int,card) farray.
  ((input = to_array1(test_patience__input__assume)) ->
  ((to_rep1(input__first) = first3(test_patience__input__assume)) ->
  ((to_rep1(input__last) = last3(test_patience__input__assume)) ->
  (dynamic_property1(1, 2147483647, to_rep1(input__first),
  to_rep1(input__last)) ->
  (forall standard_in1:us_private. forall file_system1:us_private.
  forall standard_out1:us_private. forall standard_err1:us_private.
  forall current_in1:us_private. forall current_out1:us_private.
  forall current_err1:us_private. (((line_length(standard_in, file_system,
  standard_out, standard_err, current_in, current_out,
  current_err) = line_length(standard_in1, file_system1, standard_out1,
  standard_err1, current_in1, current_out1, current_err1)) and
  (page_length(standard_in, file_system, standard_out, standard_err,
  current_in, current_out, current_err) = page_length(standard_in1,
  file_system1, standard_out1, standard_err1, current_in1, current_out1,
  current_err1))) ->
  (forall standard_in2:us_private. forall file_system2:us_private.
  forall standard_out2:us_private. forall standard_err2:us_private.
  forall current_in2:us_private. forall current_out2:us_private.
  forall current_err2:us_private. (((line_length(standard_in1, file_system1,
  standard_out1, standard_err1, current_in1, current_out1,
  current_err1) = line_length(standard_in2, file_system2, standard_out2,
  standard_err2, current_in2, current_out2, current_err2)) and
  (page_length(standard_in1, file_system1, standard_out1, standard_err1,
  current_in1, current_out1, current_err1) = page_length(standard_in2,
  file_system2, standard_out2, standard_err2, current_in2, current_out2,
  current_err2))) ->
  ((exists o:int. ((to_rep1(input__first) = o) and (let temp___429 =
   to_string(attr__ATTRIBUTE_IMAGE1(o), 12) : us_t in (let o1 =
   ((1 + (length(1, 17) + length(first1(temp___429),
   last1(temp___429)))) - 1) : int in (in_range2(o1) and (let temp___431 =
   of_array(concat(temp___String_Literal_427(void), 1, 17,
   to_array(temp___429), first1(temp___429), last1(temp___429)), 1, o1)
   : us_t in ((length1(temp___431) = 0) or
   in_range2(((first1(temp___431) + (length(first1(temp___431),
   last1(temp___431)) + length(1, 4))) - 1))))))))) ->
  (forall standard_in3:us_private. forall file_system3:us_private.
  forall standard_out3:us_private. forall standard_err3:us_private.
  forall current_in3:us_private. forall current_out3:us_private.
  forall current_err3:us_private. (((line_length(standard_in2, file_system2,
  standard_out2, standard_err2, current_in2, current_out2,
  current_err2) = line_length(standard_in3, file_system3, standard_out3,
  standard_err3, current_in3, current_out3, current_err3)) and
  (page_length(standard_in2, file_system2, standard_out2, standard_err2,
  current_in2, current_out2, current_err2) = page_length(standard_in3,
  file_system3, standard_out3, standard_err3, current_in3, current_out3,
  current_err3))) ->
  (forall standard_in4:us_private. forall file_system4:us_private.
  forall standard_out4:us_private. forall standard_err4:us_private.
  forall current_in4:us_private. forall current_out4:us_private.
  forall current_err4:us_private.
  ((exists temp___433:int. ((to_rep1(input__first) = temp___433) and
   (exists temp___434:int. ((to_rep1(input__last) = temp___434) and
   (exists i:int. ((i = temp___433) and
   (if (andb((if (temp___433 <= i) then true else false),
   (if (i <= temp___434) then true else false)) = true) then (exists standard_in5:us_private.
                                                             exists file_system5:us_private.
                                                             exists standard_out5:us_private.
                                                             exists standard_err5:us_private.
                                                             exists current_in5:us_private.
                                                             exists current_out5:us_private.
                                                             exists current_err5:us_private.
                                                             exists i1:int.
                                                             (((to_rep1(input__first) <= i1) and
                                                             (i1 <= to_rep1(input__last))) and
                                                             (((to_rep1(input__first) <= i1) and
                                                             (i1 <= to_rep1(input__last))) and
                                                             (exists o:int.
                                                             ((to_rep2((input[i1])) = o) and
                                                             (let temp___437 =
                                                             to_string(attr__ATTRIBUTE_IMAGE4(o),
                                                             5) : us_t in
                                                             (in_range2(((1 + (length(1,
                                                             1) + length(first1(temp___437),
                                                             last1(temp___437)))) - 1)) and
                                                             (((line_length(standard_in5,
                                                             file_system5,
                                                             standard_out5,
                                                             standard_err5,
                                                             current_in5,
                                                             current_out5,
                                                             current_err5) = line_length(standard_in4,
                                                             file_system4,
                                                             standard_out4,
                                                             standard_err4,
                                                             current_in4,
                                                             current_out4,
                                                             current_err4)) and
                                                             (page_length(standard_in5,
                                                             file_system5,
                                                             standard_out5,
                                                             standard_err5,
                                                             current_in5,
                                                             current_out5,
                                                             current_err5) = page_length(standard_in4,
                                                             file_system4,
                                                             standard_out4,
                                                             standard_err4,
                                                             current_in4,
                                                             current_out4,
                                                             current_err4))) and
                                                             (i1 = temp___434))))))))) else (((((((standard_in4 = standard_in3) and
   (file_system4 = file_system3)) and (standard_out4 = standard_out3)) and
   (standard_err4 = standard_err3)) and (current_in4 = current_in3)) and
   (current_out4 = current_out3)) and (current_err4 = current_err3))))))))) ->
  (forall standard_in5:us_private. forall file_system5:us_private.
  forall standard_out5:us_private. forall standard_err5:us_private.
  forall current_in5:us_private. forall current_out5:us_private.
  forall current_err5:us_private. (((line_length(standard_in4, file_system4,
  standard_out4, standard_err4, current_in4, current_out4,
  current_err4) = line_length(standard_in5, file_system5, standard_out5,
  standard_err5, current_in5, current_out5, current_err5)) and
  (page_length(standard_in4, file_system4, standard_out4, standard_err4,
  current_in4, current_out4, current_err4) = page_length(standard_in5,
  file_system5, standard_out5, standard_err5, current_in5, current_out5,
  current_err5))) ->
  (forall standard_in6:us_private. forall file_system6:us_private.
  forall standard_out6:us_private. forall standard_err6:us_private.
  forall current_in6:us_private. forall current_out6:us_private.
  forall current_err6:us_private. (((line_length(standard_in5, file_system5,
  standard_out5, standard_err5, current_in5, current_out5,
  current_err5) = line_length(standard_in6, file_system6, standard_out6,
  standard_err6, current_in6, current_out6, current_err6)) and
  (page_length(standard_in5, file_system5, standard_out5, standard_err5,
  current_in5, current_out5, current_err5) = page_length(standard_in6,
  file_system6, standard_out6, standard_err6, current_in6, current_out6,
  current_err6))) ->
  (forall o:int. ((to_rep1(input__last) = o) ->
  (forall o1:int. ((to_rep1(input__first) = o1) -> (let o2 = of_array1(input,
  o1, o) : us_t1 in (let temp___440 = playgame(o2) : us_rep in
  ((forall temp___4401:us_rep. inv__function_guard(inv(temp___4401),
   temp___4401)) ->
  ((playgame__function_guard(temp___440, o2) and (inv(temp___440) = true)) ->
  (forall s__split_fields:us_split_fields.
  ((s__split_fields = (temp___440).us_split_fields1) -> (({
  us_split_fields1 = s__split_fields } = c60b) ->
  (forall standard_in7:us_private. forall file_system7:us_private.
  forall standard_out7:us_private. forall standard_err7:us_private.
  forall current_in7:us_private. forall current_out7:us_private.
  forall current_err7:us_private. (((line_length(standard_in6, file_system6,
  standard_out6, standard_err6, current_in6, current_out6,
  current_err6) = line_length(standard_in7, file_system7, standard_out7,
  standard_err7, current_in7, current_out7, current_err7)) and
  (page_length(standard_in6, file_system6, standard_out6, standard_err6,
  current_in6, current_out6, current_err6) = page_length(standard_in7,
  file_system7, standard_out7, standard_err7, current_in7, current_out7,
  current_err7))) ->
  (forall o3:int.
  ((to_rep3(((c60b).us_split_fields1).rec__patience__state__numelts) = o3) ->
  (let temp___444 = to_string(attr__ATTRIBUTE_IMAGE5(o3), 12) : us_t in
  (in_range2(((1 + (length(1, 17) + length(first1(temp___444),
  last1(temp___444)))) - 1)) ->
  (forall standard_in8:us_private. forall file_system8:us_private.
  forall standard_out8:us_private. forall standard_err8:us_private.
  forall current_in8:us_private. forall current_out8:us_private.
  forall current_err8:us_private. (((line_length(standard_in7, file_system7,
  standard_out7, standard_err7, current_in7, current_out7,
  current_err7) = line_length(standard_in8, file_system8, standard_out8,
  standard_err8, current_in8, current_out8, current_err8)) and
  (page_length(standard_in7, file_system7, standard_out7, standard_err7,
  current_in7, current_out7, current_err7) = page_length(standard_in8,
  file_system8, standard_out8, standard_err8, current_in8, current_out8,
  current_err8))) ->
  (forall standard_in9:us_private. forall file_system9:us_private.
  forall standard_out9:us_private. forall standard_err9:us_private.
  forall current_in9:us_private. forall current_out9:us_private.
  forall current_err9:us_private. (((line_length(standard_in8, file_system8,
  standard_out8, standard_err8, current_in8, current_out8,
  current_err8) = line_length(standard_in9, file_system9, standard_out9,
  standard_err9, current_in9, current_out9, current_err9)) and
  (page_length(standard_in8, file_system8, standard_out8, standard_err8,
  current_in8, current_out8, current_err8) = page_length(standard_in9,
  file_system9, standard_out9, standard_err9, current_in9, current_out9,
  current_err9))) ->
  (forall standard_in10:us_private. forall file_system10:us_private.
  forall standard_out10:us_private. forall standard_err10:us_private.
  forall current_in10:us_private. forall current_out10:us_private.
  forall current_err10:us_private.
  ((exists o4:int.
   ((to_rep3(((c60b).us_split_fields1).rec__patience__state__numelts) = o4) and
   (let temp___447 = (o4 - 1) : int in
   (exists i:int. ((i = 0) and (if (andb((if (0 <= i) then true else false),
   (if (i <= temp___447) then true else false)) = true) then (exists standard_in11:us_private.
                                                             exists file_system11:us_private.
                                                             exists standard_out11:us_private.
                                                             exists standard_err11:us_private.
                                                             exists current_in11:us_private.
                                                             exists current_out11:us_private.
                                                             exists current_err11:us_private.
                                                             exists i1:int.
                                                             (((0 <= i1) and
                                                             (i1 <= (to_rep3(((c60b).us_split_fields1).rec__patience__state__numelts) - 1))) and
                                                             (exists o5:int.
                                                             ((to_rep2((((c60b).us_split_fields1).rec__patience__state__values[i1])) = o5) and
                                                             (let temp___451 =
                                                             to_string(attr__ATTRIBUTE_IMAGE4(o5),
                                                             5) : us_t in
                                                             (in_range2(((1 + (length(1,
                                                             1) + length(first1(temp___451),
                                                             last1(temp___451)))) - 1)) and
                                                             (((line_length(standard_in11,
                                                             file_system11,
                                                             standard_out11,
                                                             standard_err11,
                                                             current_in11,
                                                             current_out11,
                                                             current_err11) = line_length(standard_in10,
                                                             file_system10,
                                                             standard_out10,
                                                             standard_err10,
                                                             current_in10,
                                                             current_out10,
                                                             current_err10)) and
                                                             (page_length(standard_in11,
                                                             file_system11,
                                                             standard_out11,
                                                             standard_err11,
                                                             current_in11,
                                                             current_out11,
                                                             current_err11) = page_length(standard_in10,
                                                             file_system10,
                                                             standard_out10,
                                                             standard_err10,
                                                             current_in10,
                                                             current_out10,
                                                             current_err10))) and
                                                             (i1 = temp___447)))))))) else (((((((standard_in10 = standard_in9) and
   (file_system10 = file_system9)) and (standard_out10 = standard_out9)) and
   (standard_err10 = standard_err9)) and (current_in10 = current_in9)) and
   (current_out10 = current_out9)) and (current_err10 = current_err9)))))))) ->
  (forall standard_in11:us_private. forall file_system11:us_private.
  forall standard_out11:us_private. forall standard_err11:us_private.
  forall current_in11:us_private. forall current_out11:us_private.
  forall current_err11:us_private. (((line_length(standard_in10,
  file_system10, standard_out10, standard_err10, current_in10, current_out10,
  current_err10) = line_length(standard_in11, file_system11, standard_out11,
  standard_err11, current_in11, current_out11, current_err11)) and
  (page_length(standard_in10, file_system10, standard_out10, standard_err10,
  current_in10, current_out10, current_err10) = page_length(standard_in11,
  file_system11, standard_out11, standard_err11, current_in11, current_out11,
  current_err11))) ->
  (forall o4:int.
  ((to_rep3(((c60b).us_split_fields1).rec__patience__state__numstacks) = o4) ->
  (let temp___455 = to_string(attr__ATTRIBUTE_IMAGE5(o4), 12) : us_t in
  (in_range2(((1 + (length(1, 19) + length(first1(temp___455),
  last1(temp___455)))) - 1)) ->
  (forall standard_in12:us_private. forall file_system12:us_private.
  forall standard_out12:us_private. forall standard_err12:us_private.
  forall current_in12:us_private. forall current_out12:us_private.
  forall current_err12:us_private. (((line_length(standard_in11,
  file_system11, standard_out11, standard_err11, current_in11, current_out11,
  current_err11) = line_length(standard_in12, file_system12, standard_out12,
  standard_err12, current_in12, current_out12, current_err12)) and
  (page_length(standard_in11, file_system11, standard_out11, standard_err11,
  current_in11, current_out11, current_err11) = page_length(standard_in12,
  file_system12, standard_out12, standard_err12, current_in12, current_out12,
  current_err12))) ->
  (forall o5:int.
  ((to_rep3(((c60b).us_split_fields1).rec__patience__state__numstacks) = o5) ->
  (forall i:int. ((i = 0) -> ((andb((if (0 <= i) then true else false),
  (if (i <= (o5 - 1)) then true else false)) = true) ->
  (forall standard_in13:us_private. forall file_system13:us_private.
  forall standard_out13:us_private. forall standard_err13:us_private.
  forall current_in13:us_private. forall current_out13:us_private.
  forall current_err13:us_private. forall i1:int. forall idx:int.
  (((0 <= i1) and
  (i1 <= (to_rep3(((c60b).us_split_fields1).rec__patience__state__numstacks) - 1))) ->
  (forall o6:int.
  ((to_rep3((((c60b).us_split_fields1).rec__patience__state__stacksizes[i1])) = o6) ->
  (forall size:int. ((size = o6) -> (dynamic_invariant(size, true, false,
  true, true) -> (dynamic_invariant(idx, false, false, true, true) ->
  ((exists temp___469:us_t.
   ((exists o7:int.
    ((to_rep3((((c60b).us_split_fields1).rec__patience__state__stacksizes[i1])) = o7) and
    (let temp___467 = to_string(attr__ATTRIBUTE_IMAGE5(o7), 12) : us_t in
    (exists temp___466:us_t. ((let temp___464 =
    temp___String_Literal_462(void) : (int,character) farray in
    (let temp___461 = to_string(attr__ATTRIBUTE_IMAGE5(i1), 12) : us_t in
    (let o8 = ((1 + (length(1, 6) + length(first1(temp___461),
    last1(temp___461)))) - 1) : int in (in_range2(o8) and (let temp___463 =
    of_array(concat(temp___String_Literal_459(void), 1, 6,
    to_array(temp___461), first1(temp___461), last1(temp___461)), 1, o8)
    : us_t in
    (if (length1(temp___463) = 0) then (temp___466 = of_array(temp___464, 1,
    10)) else (let o9 = ((first1(temp___463) + (length(first1(temp___463),
    last1(temp___463)) + length(1, 10))) - 1) : int in (in_range2(o9) and
    (temp___466 = of_array(concat(to_array(temp___463), first1(temp___463),
    last1(temp___463), temp___464, 1, 10), first1(temp___463),
    o9)))))))))) and
    (if (length1(temp___466) = 0) then (temp___469 = of_array(to_array(temp___467),
    first1(temp___467), last1(temp___467))) else (let o8 =
    ((first1(temp___466) + (length(first1(temp___466),
    last1(temp___466)) + length(first1(temp___467), last1(temp___467)))) - 1)
    : int in (in_range2(o8) and
    (temp___469 = of_array(concat(to_array(temp___466), first1(temp___466),
    last1(temp___466), to_array(temp___467), first1(temp___467),
    last1(temp___467)), first1(temp___466), o8)))))))))) and
   ((length1(temp___469) = 0) or
   in_range2(((first1(temp___469) + (length(first1(temp___469),
   last1(temp___469)) + length(1, 2))) - 1))))) ->
  (forall standard_in14:us_private. forall file_system14:us_private.
  forall standard_out14:us_private. forall standard_err14:us_private.
  forall current_in14:us_private. forall current_out14:us_private.
  forall current_err14:us_private. (((line_length(standard_in13,
  file_system13, standard_out13, standard_err13, current_in13, current_out13,
  current_err13) = line_length(standard_in14, file_system14, standard_out14,
  standard_err14, current_in14, current_out14, current_err14)) and
  (page_length(standard_in13, file_system13, standard_out13, standard_err13,
  current_in13, current_out13, current_err13) = page_length(standard_in14,
  file_system14, standard_out14, standard_err14, current_in14, current_out14,
  current_err14))) ->
  (forall o7:int.
  ((to_rep3((((c60b).us_split_fields1).rec__patience__state__stacksizes[i1])) = o7) ->
  (forall j:int. ((j = 0) -> ((andb((if (0 <= j) then true else false),
  (if (j <= (o7 - 1)) then true else false)) = true) ->
  (forall idx1:int. forall j1:int. ((andb((if dynamic_invariant(idx1, false,
  true, true, true) then true else false), (if ((0 <= j1) and
  (j1 <= (to_rep3((((c60b).us_split_fields1).rec__patience__state__stacksizes[i1])) - 1))) then true else false)) = true) ->
  (((0 <= j1) and (j1 <= 99)) ->
  (forall o8:int.
  ((to_rep3(((((c60b).us_split_fields1).rec__patience__state__stacks[i1])[j1])) = o8) ->
  (forall idx2:int. ((idx2 = o8) -> (((0 <= idx2) and (idx2 <= 99)) ->
  (forall o9:int.
  ((to_rep2((((c60b).us_split_fields1).rec__patience__state__values[idx2])) = o9) ->
  (let temp___477 = to_string(attr__ATTRIBUTE_IMAGE5(idx2), 12) : us_t in
  in_range2(((1 + (length(1, 1) + length(first1(temp___477),
  last1(temp___477)))) - 1)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
